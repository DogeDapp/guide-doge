{"version":3,"sources":["webpack:///node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack:///node_modules/@babel/runtime/helpers/classCallCheck.js","webpack:///node_modules/@babel/runtime/helpers/createClass.js","webpack:///node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack:///node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack:///node_modules/@babel/runtime/helpers/slicedToArray.js","webpack:///node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///node_modules/automation-events/build/es5/bundle.js","webpack:///node_modules/standardized-audio-context/build/es2019/constants.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/abort-error.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/get-backup-native-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-audio-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-delay-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-gain-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/render-automation.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/window.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js","webpack:///node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/globals.js","webpack:///node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js","webpack:///node_modules/standardized-audio-context/build/es2019/guards/audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/guards/delay-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js","webpack:///node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js","webpack:///node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/analyser-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/analyser-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-context-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-destination-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-listener.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-descriptor.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node-event-map.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-event-map.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/automation.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/base-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/channel-merger-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/channel-splitter-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/common-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/common-offline-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/convolver-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/convolver-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/delay-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/delay-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/gain-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/gain-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/index.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-destination-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/minimal-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context-event-map.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-node-faker.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-worklet-node-faker.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/native-constant-source-node-faker.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/native-convolver-node-faker.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/native-iir-filter-node-faker.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/native-panner-node-faker.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/native-stereo-panner-node-faker.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/native-wave-shaper-node-faker.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-completion-event.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/panner-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/panner-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-constraints.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/read-only-map.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/interfaces/worklet-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/module.js","webpack:///node_modules/standardized-audio-context/build/es2019/read-only-map.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/abort-error-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/active-input-connection.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/any-audio-buffer.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/any-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-buffer-store.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-context-latency-category.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-context-state.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-node-connections-store.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-node-connections.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-node-output-connection.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-node-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-node-store.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-param-audio-node-store.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-param-connections-store.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-param-connections.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-param-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-param-map.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-param-output-connection.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-param-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-param-store.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/auxiliary-gain-node-store.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/biquad-filter-type.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/cache-test-result-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/cache-test-result-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/channel-count-mode.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/channel-interpretation.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/context-store.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/context.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/cycle-counters.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/data-clone-error-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/decode-error-callback.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/decode-success-callback.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/detect-cycles-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/detect-cycles-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/distance-model-type.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/encoding-error-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/error-event-handler.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/evaluate-audio-worklet-global-scope-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/evaluate-source-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/evaluate-source-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/event-handler.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/event-target-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/event-target-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/fetch-source-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/fetch-source-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-audio-node-connections-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-audio-param-connections-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-backup-native-context-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-backup-native-context-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-native-audio-node-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-native-audio-param-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-native-context-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-native-context-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/get-value-for-key-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/index-size-error-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/index.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/insert-element-in-set-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/internal-state-event-listener.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/invalid-access-error-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/invalid-state-error-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-active-audio-node-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-dc-curve-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-native-context-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-native-context-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-part-of-a-cycle-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-secure-context-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/monitor-connections-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/monitor-connections-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-analyser-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-listener.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-param-map.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-param.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-options.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-faker-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-convolver-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-delay-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-event-target.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-gain-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-panner-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/not-supported-error-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/offline-audio-context-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/oscillator-type.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/output-connection.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/over-sample-type.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/overwrite-accessors-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/panning-model-type.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/passive-audio-node-input-connection.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/passive-audio-param-input-connection.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/render-automation-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/render-automation-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/start-rendering-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-constructor-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-consecutive-calls-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-duration-parameter-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-offset-clamping-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-stop-method-nullified-buffer-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-context-close-method-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-context-options-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-node-connect-method-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-start-method-consecutive-calls-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-stop-method-consecutive-calls-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-stop-method-negative-parameters-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-is-secure-context-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-offline-audio-context-current-time-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/typed-array.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/unknown-error-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-node-store.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-nodes.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/window-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-factory.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-function.js","webpack:///node_modules/standardized-audio-context/build/es2019/types/wrap-event-listener-function.js","webpack:///node_modules/tone/build/esm/classes.js","webpack:///node_modules/tone/build/esm/component/analysis/Analyser.js","webpack:///node_modules/tone/build/esm/component/analysis/DCMeter.js","webpack:///node_modules/tone/build/esm/component/analysis/FFT.js","webpack:///node_modules/tone/build/esm/component/analysis/Follower.js","webpack:///node_modules/tone/build/esm/component/analysis/Meter.js","webpack:///node_modules/tone/build/esm/component/analysis/MeterBase.js","webpack:///node_modules/tone/build/esm/component/analysis/Waveform.js","webpack:///node_modules/tone/build/esm/component/channel/Channel.js","webpack:///node_modules/tone/build/esm/component/channel/CrossFade.js","webpack:///node_modules/tone/build/esm/component/channel/Merge.js","webpack:///node_modules/tone/build/esm/component/channel/MidSideMerge.js","webpack:///node_modules/tone/build/esm/component/channel/MidSideSplit.js","webpack:///node_modules/tone/build/esm/component/channel/MultibandSplit.js","webpack:///node_modules/tone/build/esm/component/channel/PanVol.js","webpack:///node_modules/tone/build/esm/component/channel/Panner.js","webpack:///node_modules/tone/build/esm/component/channel/Panner3D.js","webpack:///node_modules/tone/build/esm/component/channel/Recorder.js","webpack:///node_modules/tone/build/esm/component/channel/Solo.js","webpack:///node_modules/tone/build/esm/component/channel/Split.js","webpack:///node_modules/tone/build/esm/component/channel/Volume.js","webpack:///node_modules/tone/build/esm/component/dynamics/Compressor.js","webpack:///node_modules/tone/build/esm/component/dynamics/Gate.js","webpack:///node_modules/tone/build/esm/component/dynamics/Limiter.js","webpack:///node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js","webpack:///node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js","webpack:///node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js","webpack:///node_modules/tone/build/esm/component/envelope/Envelope.js","webpack:///node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js","webpack:///node_modules/tone/build/esm/component/filter/Convolver.js","webpack:///node_modules/tone/build/esm/component/filter/EQ3.js","webpack:///node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js","webpack:///node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js","webpack:///node_modules/tone/build/esm/component/filter/Filter.js","webpack:///node_modules/tone/build/esm/component/filter/LowpassCombFilter.js","webpack:///node_modules/tone/build/esm/component/filter/OnePoleFilter.js","webpack:///node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js","webpack:///node_modules/tone/build/esm/component/index.js","webpack:///node_modules/tone/build/esm/core/Global.js","webpack:///node_modules/tone/build/esm/core/Tone.js","webpack:///node_modules/tone/build/esm/core/clock/Clock.js","webpack:///node_modules/tone/build/esm/core/clock/TickParam.js","webpack:///node_modules/tone/build/esm/core/clock/TickSignal.js","webpack:///node_modules/tone/build/esm/core/clock/TickSource.js","webpack:///node_modules/tone/build/esm/core/clock/Ticker.js","webpack:///node_modules/tone/build/esm/core/clock/Transport.js","webpack:///node_modules/tone/build/esm/core/clock/TransportEvent.js","webpack:///node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js","webpack:///node_modules/tone/build/esm/core/context/AudioContext.js","webpack:///node_modules/tone/build/esm/core/context/BaseContext.js","webpack:///node_modules/tone/build/esm/core/context/Context.js","webpack:///node_modules/tone/build/esm/core/context/ContextInitialization.js","webpack:///node_modules/tone/build/esm/core/context/Delay.js","webpack:///node_modules/tone/build/esm/core/context/Destination.js","webpack:///node_modules/tone/build/esm/core/context/DummyContext.js","webpack:///node_modules/tone/build/esm/core/context/Gain.js","webpack:///node_modules/tone/build/esm/core/context/Listener.js","webpack:///node_modules/tone/build/esm/core/context/Offline.js","webpack:///node_modules/tone/build/esm/core/context/OfflineContext.js","webpack:///node_modules/tone/build/esm/core/context/Param.js","webpack:///node_modules/tone/build/esm/core/context/ToneAudioBuffer.js","webpack:///node_modules/tone/build/esm/core/context/ToneAudioBuffers.js","webpack:///node_modules/tone/build/esm/core/context/ToneAudioNode.js","webpack:///node_modules/tone/build/esm/core/context/ToneWithContext.js","webpack:///node_modules/tone/build/esm/core/index.js","webpack:///node_modules/tone/build/esm/core/type/Conversions.js","webpack:///node_modules/tone/build/esm/core/type/Frequency.js","webpack:///node_modules/tone/build/esm/core/type/Midi.js","webpack:///node_modules/tone/build/esm/core/type/Ticks.js","webpack:///node_modules/tone/build/esm/core/type/Time.js","webpack:///node_modules/tone/build/esm/core/type/TimeBase.js","webpack:///node_modules/tone/build/esm/core/type/TransportTime.js","webpack:///node_modules/tone/build/esm/core/type/Units.js","webpack:///node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js","webpack:///node_modules/tone/build/esm/core/util/Debug.js","webpack:///node_modules/tone/build/esm/core/util/Decorator.js","webpack:///node_modules/tone/build/esm/core/util/Defaults.js","webpack:///node_modules/tone/build/esm/core/util/Draw.js","webpack:///node_modules/tone/build/esm/core/util/Emitter.js","webpack:///node_modules/tone/build/esm/core/util/Interface.js","webpack:///node_modules/tone/build/esm/core/util/IntervalTimeline.js","webpack:///node_modules/tone/build/esm/core/util/Math.js","webpack:///node_modules/tone/build/esm/core/util/StateTimeline.js","webpack:///node_modules/tone/build/esm/core/util/Timeline.js","webpack:///node_modules/tone/build/esm/core/util/TimelineValue.js","webpack:///node_modules/tone/build/esm/core/util/TypeCheck.js","webpack:///node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js","webpack:///node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js","webpack:///node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js","webpack:///node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js","webpack:///node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js","webpack:///node_modules/tone/build/esm/effect/AutoFilter.js","webpack:///node_modules/tone/build/esm/effect/AutoPanner.js","webpack:///node_modules/tone/build/esm/effect/AutoWah.js","webpack:///node_modules/tone/build/esm/effect/BitCrusher.js","webpack:///node_modules/tone/build/esm/effect/BitCrusher.worklet.js","webpack:///node_modules/tone/build/esm/effect/Chebyshev.js","webpack:///node_modules/tone/build/esm/effect/Chorus.js","webpack:///node_modules/tone/build/esm/effect/Distortion.js","webpack:///node_modules/tone/build/esm/effect/Effect.js","webpack:///node_modules/tone/build/esm/effect/FeedbackDelay.js","webpack:///node_modules/tone/build/esm/effect/FeedbackEffect.js","webpack:///node_modules/tone/build/esm/effect/Freeverb.js","webpack:///node_modules/tone/build/esm/effect/FrequencyShifter.js","webpack:///node_modules/tone/build/esm/effect/JCReverb.js","webpack:///node_modules/tone/build/esm/effect/LFOEffect.js","webpack:///node_modules/tone/build/esm/effect/MidSideEffect.js","webpack:///node_modules/tone/build/esm/effect/Phaser.js","webpack:///node_modules/tone/build/esm/effect/PingPongDelay.js","webpack:///node_modules/tone/build/esm/effect/PitchShift.js","webpack:///node_modules/tone/build/esm/effect/Reverb.js","webpack:///node_modules/tone/build/esm/effect/StereoEffect.js","webpack:///node_modules/tone/build/esm/effect/StereoFeedbackEffect.js","webpack:///node_modules/tone/build/esm/effect/StereoWidener.js","webpack:///node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js","webpack:///node_modules/tone/build/esm/effect/Tremolo.js","webpack:///node_modules/tone/build/esm/effect/Vibrato.js","webpack:///node_modules/tone/build/esm/effect/index.js","webpack:///node_modules/tone/build/esm/event/Loop.js","webpack:///node_modules/tone/build/esm/event/Part.js","webpack:///node_modules/tone/build/esm/event/Pattern.js","webpack:///node_modules/tone/build/esm/event/PatternGenerator.js","webpack:///node_modules/tone/build/esm/event/Sequence.js","webpack:///node_modules/tone/build/esm/event/ToneEvent.js","webpack:///node_modules/tone/build/esm/event/index.js","webpack:///node_modules/tone/build/esm/index.js","webpack:///node_modules/tone/build/esm/instrument/AMSynth.js","webpack:///node_modules/tone/build/esm/instrument/DuoSynth.js","webpack:///node_modules/tone/build/esm/instrument/FMSynth.js","webpack:///node_modules/tone/build/esm/instrument/Instrument.js","webpack:///node_modules/tone/build/esm/instrument/MembraneSynth.js","webpack:///node_modules/tone/build/esm/instrument/MetalSynth.js","webpack:///node_modules/tone/build/esm/instrument/ModulationSynth.js","webpack:///node_modules/tone/build/esm/instrument/MonoSynth.js","webpack:///node_modules/tone/build/esm/instrument/Monophonic.js","webpack:///node_modules/tone/build/esm/instrument/NoiseSynth.js","webpack:///node_modules/tone/build/esm/instrument/PluckSynth.js","webpack:///node_modules/tone/build/esm/instrument/PolySynth.js","webpack:///node_modules/tone/build/esm/instrument/Sampler.js","webpack:///node_modules/tone/build/esm/instrument/Synth.js","webpack:///node_modules/tone/build/esm/instrument/index.js","webpack:///node_modules/tone/build/esm/signal/Abs.js","webpack:///node_modules/tone/build/esm/signal/Add.js","webpack:///node_modules/tone/build/esm/signal/AudioToGain.js","webpack:///node_modules/tone/build/esm/signal/GainToAudio.js","webpack:///node_modules/tone/build/esm/signal/GreaterThan.js","webpack:///node_modules/tone/build/esm/signal/GreaterThanZero.js","webpack:///node_modules/tone/build/esm/signal/Multiply.js","webpack:///node_modules/tone/build/esm/signal/Negate.js","webpack:///node_modules/tone/build/esm/signal/Pow.js","webpack:///node_modules/tone/build/esm/signal/Scale.js","webpack:///node_modules/tone/build/esm/signal/ScaleExp.js","webpack:///node_modules/tone/build/esm/signal/Signal.js","webpack:///node_modules/tone/build/esm/signal/SignalOperator.js","webpack:///node_modules/tone/build/esm/signal/Subtract.js","webpack:///node_modules/tone/build/esm/signal/SyncedSignal.js","webpack:///node_modules/tone/build/esm/signal/ToneConstantSource.js","webpack:///node_modules/tone/build/esm/signal/WaveShaper.js","webpack:///node_modules/tone/build/esm/signal/Zero.js","webpack:///node_modules/tone/build/esm/signal/index.js","webpack:///node_modules/tone/build/esm/source/Noise.js","webpack:///node_modules/tone/build/esm/source/OneShotSource.js","webpack:///node_modules/tone/build/esm/source/Source.js","webpack:///node_modules/tone/build/esm/source/UserMedia.js","webpack:///node_modules/tone/build/esm/source/buffer/GrainPlayer.js","webpack:///node_modules/tone/build/esm/source/buffer/Player.js","webpack:///node_modules/tone/build/esm/source/buffer/Players.js","webpack:///node_modules/tone/build/esm/source/buffer/ToneBufferSource.js","webpack:///node_modules/tone/build/esm/source/index.js","webpack:///node_modules/tone/build/esm/source/oscillator/AMOscillator.js","webpack:///node_modules/tone/build/esm/source/oscillator/FMOscillator.js","webpack:///node_modules/tone/build/esm/source/oscillator/FatOscillator.js","webpack:///node_modules/tone/build/esm/source/oscillator/LFO.js","webpack:///node_modules/tone/build/esm/source/oscillator/OmniOscillator.js","webpack:///node_modules/tone/build/esm/source/oscillator/Oscillator.js","webpack:///node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js","webpack:///node_modules/tone/build/esm/source/oscillator/PWMOscillator.js","webpack:///node_modules/tone/build/esm/source/oscillator/PulseOscillator.js","webpack:///node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js","webpack:///node_modules/tone/build/esm/version.js","webpack:///src/components/line-chart-audification/line-chart-audification.component.ts","webpack:///src/components/line-chart-audification/line-chart-audification.component.html","webpack:///src/components/line-chart-audification/line-chart-audification.module.ts","webpack:///src/components/screen-reader/screen-reader.component.ts","webpack:///src/components/screen-reader/screen-reader.component.html","webpack:///src/components/screen-reader/screen-reader.module.ts","webpack:///src/models/melody/melody.model.ts","webpack:///src/utils/comparators.ts"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","module","exports","_arrayWithHoles","isArray","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_iterableToArrayLimit","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","_nonIterableRest","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_slicedToArray","arrayLikeToArray","_unsupportedIterableToArray","o","minLen","n","toString","call","slice","constructor","name","from","test","global","factory","hasOwnProperty","createExtendedExponentialRampToValueAutomationEvent","endTime","insertTime","type","createExtendedLinearRampToValueAutomationEvent","createSetValueAutomationEvent","startTime","createSetValueCurveAutomationEvent","values","duration","getTargetValueAtTime","time","valueAtStartTime","_ref","timeConstant","Math","exp","isExponentialRampToValueAutomationEvent","automationEvent","isLinearRampToValueAutomationEvent","isAnyRampToValueAutomationEvent","isSetValueAutomationEvent","isSetValueCurveAutomationEvent","getValueOfAutomationEventAtIndexAtTime","automationEvents","index","defaultValue","getEndTimeAndValueOfPreviousAutomationEvent","currentAutomationEvent","nextAutomationEvent","isCancelAndHoldAutomationEvent","isCancelScheduledValuesAutomationEvent","getEventTime","cancelTime","getExponentialRampValueAtTime","pow","getLinearRampValueAtTime","interpolateValue","theoreticIndex","lowerIndex","floor","upperIndex","ceil","getValueCurveValueAtTime","isSetTargetAutomationEvent","AutomationEventList","_automationEvents","_currenTime","_defaultValue","add","eventTime","findIndex","removedAutomationEvent","lastAutomationEvent","Error","startValue","truncatedAutomationEvent","getValue","Float32Array","_index","previousAutomationEvent","persistentAutomationEvent","splice","flush","remainingAutomationEvents","firstRemainingAutomationEvent","unshift","_getEndTimeAndValueOf","_getEndTimeAndValueOf2","_getEndTimeAndValueOf3","_getEndTimeAndValueOf4","_startTime","_value","createCancelAndHoldAutomationEvent","createCancelScheduledValuesAutomationEvent","createExponentialRampToValueAutomationEvent","createLinearRampToValueAutomationEvent","createSetTargetAutomationEvent","MOST_NEGATIVE_SINGLE_FLOAT","MOST_POSITIVE_SINGLE_FLOAT","createAbortError","DOMException","code","createAddAudioNodeConnections","audioNodeConnectionsStore","audioNode","audioNodeRenderer","nativeAudioNode","activeInputs","numberOfInputs","Set","set","outputs","passiveInputs","WeakMap","renderer","createAddAudioParamConnections","audioParamConnectionsStore","audioParam","audioParamRenderer","verifyParameterDescriptors","parameterDescriptors","verifyProcessorCtor","processorCtor","createAddAudioWorkletModule","createNotSupportedError","evaluateSource","exposeCurrentFrameAndCurrentTime","fetchSource","getBackupNativeContext","getNativeContext","ongoingRequests","resolvedRequests","window","context","moduleURL","options","credentials","nativeContext","absoluteUrl","URL","location","href","audioWorklet","then","source","importStatements","sourceWithoutImportStatements","wrappedSource","blob","Blob","url","createObjectURL","backupNativeContext","nativeContextOrBackupNativeContext","addModule","revokeObjectURL","resolvedRequestsOfContext","get","has","Promise","resolve","ongoingRequestsOfContext","promiseOfOngoingRequest","promise","evaluateAudioWorkletGlobalScope","_AWGS","pop","SyntaxError","currentTime","sampleRate","trim","nodeNameToProcessorConstructorMap","Map","rslvdRqstsFCntxt","ngngRqstsFCntxt","createAddSilentConnection","createNativeGainNode","nativeAudioScheduledSourceNode","nativeGainNode","channelCount","channelCountMode","channelInterpretation","gain","connect","destination","disconnect","removeEventListener","addEventListener","createAddUnrenderedAudioWorkletNode","getUnrenderedAudioWorkletNodes","audioWorkletNode","DEFAULT_OPTIONS","fftSize","maxDecibels","minDecibels","smoothingTimeConstant","createAnalyserNodeConstructor","audionNodeConstructor","createAnalyserNodeRenderer","createIndexSizeError","createNativeAnalyserNode","isNativeOfflineAudioContext","mergedOptions","nativeAnalyserNode","analyserNodeRenderer","_nativeAnalyserNode","array","getByteFrequencyData","getByteTimeDomainData","getFloatFrequencyData","getFloatTimeDomainData","frequencyBinCount","createAnalyserNodeRendererFactory","getNativeAudioNode","renderInputsOfAudioNode","renderedNativeAnalyserNodes","createAnalyserNode","proxy","nativeOfflineAudioContext","trace","nativeAnalyserNodeIsOwnedByContext","render","renderedNativeAnalyserNode","numberOfChannels","createAudioBufferConstructor","audioBufferStore","cacheTestResult","nativeAudioBufferConstructor","nativeOfflineAudioContextConstructor","testNativeAudioBufferConstructorSupport","wrapAudioBufferCopyChannelMethods","wrapAudioBufferCopyChannelMethodsOutOfBounds","audioBuffer","createBuffer","copyFromChannel","hasInstance","getPrototypeOf","AudioBuffer","buffer","loop","loopEnd","loopStart","playbackRate","createAudioBufferSourceNodeConstructor","audioNodeConstructor","createAudioBufferSourceNodeRenderer","createAudioParam","createInvalidStateError","createNativeAudioBufferSourceNode","wrapEventListener","nativeAudioBufferSourceNode","isOffline","audioBufferSourceNodeRenderer","_audioBufferSourceNodeRenderer","_isBufferNullified","_isBufferSet","_nativeAudioBufferSourceNode","_onended","_playbackRate","when","offset","start","resetInternalStateToPassive","setTimeout","stop","getChannelData","fill","wrappedListener","onended","nativeOnEnded","createAudioBufferSourceNodeRendererFactory","connectAudioParam","renderAutomation","renderedNativeAudioBufferSourceNodes","createAudioBufferSourceNode","nativeAudioBufferSourceNodeIsOwnedByContext","renderedNativeAudioBufferSourceNode","createAudioContextConstructor","baseAudioContextConstructor","createUnknownError","mediaElementAudioSourceNodeConstructor","mediaStreamAudioDestinationNodeConstructor","mediaStreamAudioSourceNodeConstructor","mediaStreamTrackAudioSourceNodeConstructor","nativeAudioContextConstructor","nativeAudioContext","latencyHint","_baseLatency","baseLatency","max","min","round","_nativeAudioContext","_state","state","revokeState","close","mediaElement","mediaStream","mediaStreamTrack","reject","resolvePromise","resume","suspend","createAudioDestinationNodeConstructor","createAudioDestinationNodeRenderer","createNativeAudioDestinationNode","nativeAudioDestinationNode","audioDestinationNodeRenderer","_isNodeOfNativeOfflineAudioContext","_nativeAudioDestinationNode","maxChannelCount","nativeAudioDestinationNodePromise","createAudioDestinationNode","createAudioListenerFactory","createNativeChannelMergerNode","createNativeConstantSourceNode","createNativeScriptProcessorNode","nativeListener","listener","createFakeAudioParams","channelMergerNode","scriptProcessorNode","createFakeAudioParam","input","constantSourceNode","lastOrientation","lastPosition","onaudioprocess","inputBuffer","orientation","some","setOrientation","positon","setPosition","forwardX","forwardY","forwardZ","positionX","positionY","positionZ","upX","upY","upZ","addActiveInputConnectionToAudioNode","ignoreDuplicates","output","eventListener","activeInputConnection","addActiveInputConnectionToAudioParam","deleteActiveInputConnectionToAudioNode","deleteActiveInputConnectionToAudioParam","addPassiveInputConnectionToAudioNode","passiveInputConnections","passiveInputConnection","addPassiveInputConnectionToAudioParam","deletePassiveInputConnectionToAudioNode","matchingConnection","size","deletePassiveInputConnectionToAudioParam","addConnectionToAudioNodeOfAudioContext","eventListeners","isActive","nativeDestinationAudioNode","nativeSourceAudioNode","partialConnection","outputConnection","addConnectionToAudioNodeOfOfflineAudioContext","addConnectionToAudioParamOfAudioContext","nativeAudioParam","addConnectionToAudioParamOfOfflineAudioContext","deleteActiveInputConnection","activeInputConnections","deleteInputConnectionOfAudioNode","deleteInputConnectionOfAudioParam","deleteInputsOfAudioNode","deleteInputsOfAudioParam","deleteAnyConnection","audioNodeConnectionsOfSource","destinations","clear","deleteConnectionAtOutput","deleteConnectionToDestination","filter","map","createAudioNodeConstructor","addAudioNodeConnections","auxiliaryGainNodeStore","createIncrementCycleCounter","createInvalidAccessError","decrementCycleCounter","detectCycles","eventTargetConstructor","isNativeAudioContext","isNativeAudioNode","isNativeAudioParam","_context","_nativeAudioNode","numberOfOutputs","connection","auxiliaryGainNodes","createGain","isNewConnectionToAudioNode","cycles","isNewConnectionToAudioParam","destinationOrOutput","createAudioParamFactory","addAudioParamConnections","audioParamAudioNodeStore","audioParamStore","createAudioParamRenderer","isAudioParamOfOfflineAudioContext","maxValue","minValue","automationEventList","setValueAtTime","cancelAndHoldAtTime","previousLastEvent","currentLastEvent","cancelScheduledValues","exponentialRampToValueAtTime","linearRampToValueAtTime","setValueCurveAtTime","setTargetAtTime","firstSample","lastSample","numberOfInterpolatedValues","interpolatedValues","timeOfLastSample","replay","outputChannelCount","parameterData","processorOptions","createChannelCount","sanitizedOptions","createAudioWorkletNodeConstructor","addUnrenderedAudioWorkletNode","createAudioWorkletNodeRenderer","createNativeAudioWorkletNode","nativeAudioWorkletNodeConstructor","processorConstructor","nativeAudioWorkletNode","audioWorkletNodeRenderer","parameters","forEach","nm","_nativeAudioWorkletNode","_onprocessorerror","_parameters","onprocessorerror","nativeOnProcessorError","port","processBuffer","renderedBuffer","numberOfInputChannels","numberOfOutputChannels","reduce","sum","processedBuffer","audioNodeConnections","audioWorkletProcessor","inputs","keys","prmtrs","j","k","byteLength","potentiallyEmptyInputs","activeSourceFlag","process","outputChannelSplitterNodeOutput","error","dispatchEvent","ErrorEvent","createAudioWorkletNodeRendererFactory","connectMultipleOutputs","createNativeChannelSplitterNode","deleteUnrenderedAudioWorkletNode","disconnectMultipleOutputs","renderNativeOfflineAudioContext","renderedNativeAudioNodes","processedBufferPromise","createAudioNode","nativeOutputNodes","nativeAudioWorkletNodeIsOwnedByContext","outputChannelSplitterNode","outputChannelMergerNodes","outputGainNode","bind","numberOfParameters","renderBuffer","partialOfflineAudioContext","gainNodes","inputChannelSplitterNodes","all","constantSourceNodes","inputChannelMergerNode","entries","gainNode","audioBufferSourceNode","outputChannelMergerNode","renderedNativeAudioWorkletNodeOrGainNode","createBaseAudioContextConstructor","addAudioWorkletModule","analyserNodeConstructor","audioBufferConstructor","audioBufferSourceNodeConstructor","biquadFilterNodeConstructor","channelMergerNodeConstructor","channelSplitterNodeConstructor","constantSourceNodeConstructor","convolverNodeConstructor","decodeAudioData","delayNodeConstructor","dynamicsCompressorNodeConstructor","gainNodeConstructor","iIRFilterNodeConstructor","minimalBaseAudioContextConstructor","oscillatorNodeConstructor","pannerNodeConstructor","periodicWaveConstructor","stereoPannerNodeConstructor","waveShaperNodeConstructor","_nativeContext","_audioWorklet","maxDelayTime","feedforward","feedback","real","imag","constraints","disableNormalization","audioData","successCallback","errorCallback","Q","detune","frequency","createBiquadFilterNodeConstructor","createBiquadFilterNodeRenderer","createNativeBiquadFilterNode","nativeBiquadFilterNode","biquadFilterNodeRenderer","_Q","_detune","log2","_frequency","_gain","log10","_nativeBiquadFilterNode","frequencyHz","magResponse","phaseResponse","getFrequencyResponse","createBiquadFilterNodeRendererFactory","renderedNativeBiquadFilterNodes","createBiquadFilterNode","nativeBiquadFilterNodeIsOwnedByContext","renderedNativeBiquadFilterNode","createCacheTestResult","ongoingTests","testResults","tester","cachedTestResult","ongoingTest","synchronousTestResult","finalTestResult","createChannelMergerNodeConstructor","createChannelMergerNodeRenderer","nativeChannelMergerNode","channelMergerNodeRenderer","createChannelMergerNodeRendererFactory","nativeAudioNodeIsOwnedByContext","renderedNativeAudioNode","createChannelSplitterNodeConstructor","createChannelSplitterNodeRenderer","nativeChannelSplitterNode","channelSplitterNodeRenderer","createChannelSplitterNodeRendererFactory","createConnectAudioParam","renderInputsOfAudioParam","createConnectMultipleOutputs","outputAudioNodes","outputAudioNode","createConnectedNativeAudioBufferSourceNodeFactory","nativeAudioBuffer","createConstantSourceNodeConstructor","createConstantSourceNodeRendererFactory","nativeConstantSourceNode","constantSourceNodeRenderer","_constantSourceNodeRenderer","_nativeConstantSourceNode","_offset","renderedNativeConstantSourceNodes","createConstantSourceNode","nativeConstantSourceNodeIsOwnedByContext","renderedNativeConstantSourceNode","createConvertNumberToUnsignedLong","unit32Array","createConvolverNodeConstructor","createConvolverNodeRenderer","createNativeConvolverNode","nativeConvolverNode","convolverNodeRenderer","_nativeConvolverNode","normalize","createConvolverNodeRendererFactory","renderedNativeConvolverNodes","createConvolverNode","nativeConvolverNodeIsOwnedByContext","renderedNativeConvolverNode","createCreateNativeOfflineAudioContext","createDataCloneError","createDecodeAudioData","createEncodingError","detachedArrayBuffers","isNativeContext","testAudioBufferCopyChannelMethodsOutOfBoundsSupport","testPromiseSupport","anyContext","complete","fail","createDecrementCycleCounter","connectNativeAudioNodeToNativeAudioNode","cycleCounters","getAudioNodeConnections","getNativeAudioParam","isActiveAudioNode","count","cycleCounter","nativeDestinationAudioParam","delayTime","createDelayNodeConstructor","createDelayNodeRenderer","createNativeDelayNode","nativeDelayNode","delayNodeRenderer","_delayTime","createDelayNodeRendererFactory","renderedNativeDelayNodes","createDelayNode","nativeDelayNodeIsOwnedByContext","renderedNativeDelayNode","createDeleteUnrenderedAudioWorkletNode","createDetectCycles","getValueForKey","chain","nextLink","includes","mergedCycles","nestedCycles","concat","getOutputAudioNodeAtIndex","createDisconnectMultipleOutputs","attack","knee","ratio","release","threshold","createDynamicsCompressorNodeConstructor","createDynamicsCompressorNodeRenderer","createNativeDynamicsCompressorNode","nativeDynamicsCompressorNode","dynamicsCompressorNodeRenderer","_attack","_knee","_nativeDynamicsCompressorNode","_ratio","_release","_threshold","previousChannelCount","reduction","createDynamicsCompressorNodeRendererFactory","renderedNativeDynamicsCompressorNodes","createDynamicsCompressorNode","nativeDynamicsCompressorNodeIsOwnedByContext","renderedNativeDynamicsCompressorNode","createEvaluateSource","head","document","script","createElement","originalOnErrorHandler","onerror","removeErrorEventListenerAndRevokeUrl","message","src","lineno","colno","onload","appendChild","createEventTargetConstructor","_nativeEventTarget","_listeners","wrappedEventListener","event","createExposeCurrentFrameAndCurrentTime","fn","defineProperties","currentFrame","createFetchSource","fetch","response","ok","text","createGainNodeConstructor","createGainNodeRenderer","gainNodeRenderer","createGainNodeRendererFactory","renderedNativeGainNodes","createGainNode","nativeGainNodeIsOwnedByContext","renderedNativeGainNode","createGetAudioNodeRenderer","createGetAudioParamRenderer","getAudioParamConnections","audioParamConnections","createGetBackupNativeContext","bckpNtveCntxt","createGetNativeContext","contextStore","createGetUnrenderedAudioWorkletNodes","unrenderedAudioWorkletNodeStore","unrenderedAudioWorkletNodes","createIIRFilterNodeConstructor","createNativeIIRFilterNode","createIIRFilterNodeRenderer","nativeIIRFilterNode","iirFilterNodeRenderer","_nativeIIRFilterNode","filterFullBuffer","feedbackLength","feedforwardLength","minLength","bufferLength","xBuffer","yBuffer","filteredBuffer","createIIRFilterNodeRendererFactory","createNativeAudioNode","filteredBufferPromise","nativeIIRFilterNodeIsOwnedByContext","createIIRFilter","ntvCntxt","createIncrementCycleCounterFactory","disconnectNativeAudioNodeFromNativeAudioNode","createIsAnyAudioContext","anything","createIsAnyAudioNode","audioNodeStore","createIsAnyAudioParam","createIsAnyOfflineAudioContext","createIsNativeAudioContext","createIsNativeAudioNode","AudioNode","createIsNativeAudioParam","AudioParam","createIsNativeContext","createIsNativeOfflineAudioContext","createIsSecureContext","isSecureContext","createIsSupportedPromise","testAudioBufferCopyChannelMethodsSubarraySupport","testAudioContextCloseMethodSupport","testAudioContextDecodeAudioDataMethodTypeErrorSupport","testAudioContextOptionsSupport","testAudioNodeConnectMethodSupport","testAudioWorkletProcessorNoOutputsSupport","testChannelMergerNodeChannelCountSupport","testConstantSourceNodeAccurateSchedulingSupport","testConvolverNodeBufferReassignabilitySupport","testIsSecureContextSupport","testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","testStereoPannerNodeDefaultValueSupport","testTransferablesSupport","results","every","result","createMediaElementAudioSourceNodeConstructor","createNativeMediaElementAudioSourceNode","nativeMediaElementAudioSourceNode","_mediaElement","_nativeMediaElementAudioSourceNode","createMediaStreamAudioDestinationNodeConstructor","createNativeMediaStreamAudioDestinationNode","nativeMediaStreamAudioDestinationNode","_nativeMediaStreamAudioDestinationNode","stream","createMediaStreamAudioSourceNodeConstructor","createNativeMediaStreamAudioSourceNode","nativeMediaStreamAudioSourceNode","_nativeMediaStreamAudioSourceNode","createMediaStreamTrackAudioSourceNodeConstructor","createNativeMediaStreamTrackAudioSourceNode","nativeMediaStreamTrackAudioSourceNode","createMinimalAudioContextConstructor","createMinimalBaseAudioContextConstructor","audioDestinationNodeConstructor","createAudioListener","_destination","_listener","_onstatechange","onstatechange","nativeOnStateChange","createMinimalOfflineAudioContextConstructor","createNativeOfflineAudioContext","startRendering","delayStateChangeEvent","stopImmediatePropagation","_waitForThePromiseToSettle","_length","_nativeOfflineAudioContext","createMonitorConnections","insertElementInSet","whenConnected","whenDisconnected","connections","wasDisconnected","wasConnected","apply","isDisconnected","createNativeAnalyserNodeFactory","createAnalyser","createNativeAudioBufferConstructor","createNativeAudioBufferSourceNodeFactory","addSilentConnection","testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","testAudioBufferSourceNodeStartMethodDurationParameterSupport","testAudioBufferSourceNodeStartMethodOffsetClampingSupport","testAudioBufferSourceNodeStopMethodNullifiedBufferSupport","testAudioScheduledSourceNodeStartMethodNegativeParametersSupport","testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","testAudioScheduledSourceNodeStopMethodNegativeParametersSupport","wrapAudioBufferSourceNodeStartMethodOffsetClampling","wrapAudioBufferSourceNodeStopMethodNullifiedBuffer","wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","createBufferSource","createNativeAudioContextConstructor","AudioContext","webkitAudioContext","createNativeAudioDestinationNodeFactory","overwriteAccessors","isNodeOfNativeOfflineAudioContext","createNativeAudioNodeFactory","factoryFunction","createNativeAudioWorkletNodeConstructor","AudioWorkletNode","createNativeAudioWorkletNodeFactory","createNativeAudioWorkletNodeFaker","monitorConnections","patchedEventListeners","args","unpatchedEventListener","handleEvent","patchedEventListener","createNativeAudioWorkletNodeFakerFactory","messageChannel","MessageChannel","bufferSize","parameterMap","nativeAudioWorkletNodeFaker","_","port2","port1","onmessage","audioWorkletProcessorPromise","dWrkltPrcssr","disconnectOutputsGraph","outputBuffer","isConnected","disconnectFakeGraph","connectFakeGraph","createNativeBiquadFilterNodeFactory","createBiquadFilter","createNativeChannelMergerNodeFactory","wrapChannelMergerNode","createChannelMerger","createNativeChannelSplitterNodeFactory","createChannelSplitter","createNativeConstantSourceNodeFactory","createNativeConstantSourceNodeFaker","createConstantSource","createNativeConstantSourceNodeFakerFactory","audioNodeOptions","channelData","nativeConstantSourceNodeFaker","createNativeConvolverNodeFactory","createNativeConvolverNodeFaker","createConvolver","createNativeConvolverNodeFakerFactory","convolverNode","nativeConvolverNodeFaker","createNativeDelayNodeFactory","createDelay","createNativeDynamicsCompressorNodeFactory","createDynamicsCompressor","createNativeGainNodeFactory","createNativeIIRFilterNodeFactory","createNativeIIRFilterNodeFaker","divide","a","b","denominator","multiply","evaluatePolynomial","coefficient","z","createNativeIIRFilterNodeFakerFactory","bufferIndexes","xBuffers","yBuffers","nyquist","nativeIIRFilterNodeFaker","omega","PI","cos","sin","numerator","sqrt","atan2","createNativeMediaElementAudioSourceNodeFactory","ntvDCntxt","createMediaElementSource","createNativeMediaStreamAudioDestinationNodeFactory","createMediaStreamDestination","createNativeMediaStreamAudioSourceNodeFactory","audioStreamTracks","getAudioTracks","filteredAudioStreamTracks","sort","id","createMediaStreamSource","MediaStream","createNativeMediaStreamTrackAudioSourceNodeFactory","createMediaStreamTrackSource","kind","createNativeOfflineAudioContextConstructor","OfflineAudioContext","webkitOfflineAudioContext","createNativeOscillatorNodeFactory","nativeOscillatorNode","createOscillator","periodicWave","setPeriodicWave","createNativePannerNodeFactory","createNativePannerNodeFaker","nativePannerNode","createPanner","orientationX","createNativePannerNodeFakerFactory","createNativeWaveShaperNode","coneInnerAngle","coneOuterAngle","coneOuterGain","distanceModel","maxDistance","orientationY","orientationZ","panningModel","refDistance","rolloffFactor","pannerNode","SINGLE_CHANNEL_OPTIONS","inputGainNode","orientationXGainNode","orientationYGainNode","orientationZGainNode","positionXGainNode","positionYGainNode","positionZGainNode","waveShaperNode","curve","oversample","nativePannerNodeFaker","RangeError","createNativePeriodicWaveFactory","wrappedImag","wrappedReal","createPeriodicWave","createNativeScriptProcessorNodeFactory","createScriptProcessor","createNativeStereoPannerNodeFactory","createNativeStereoPannerNodeFaker","createStereoPanner","nativeStereoPannerNode","createNativeStereoPannerNodeFakerFactory","CURVE_SIZE","DC_CURVE","HALF_PI","SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS","buildInternalGraphForMono","panGainNode","leftWaveShaperCurve","rightWaveShaperCurve","x","leftGainNode","leftWaveShaperNode","panWaveShaperNode","rightGainNode","rightWaveShaperNode","connectGraph","disconnectGraph","buildInternalGraphForStereo","leftInputForLeftOutputWaveShaperCurve","leftInputForRightOutputWaveShaperCurve","rightInputForLeftOutputWaveShaperCurve","rightInputForRightOutputWaveShaperCurve","centerIndex","channelSplitterNode","leftInputForLeftOutputGainNode","leftInputForLeftOutputWaveShaperNode","leftInputForRightOutputGainNode","leftInputForRightOutputWaveShaperNode","rightInputForLeftOutputGainNode","rightInputForLeftOutputWaveShaperNode","rightInputForRightOutputGainNode","rightInputForRightOutputWaveShaperNode","buildInternalGraph","pan","nativeStereoPannerNodeFakerFactory","createNativeWaveShaperNodeFactory","createConnectedNativeAudioBufferSourceNode","createNativeWaveShaperNodeFaker","isDCCurve","nativeWaveShaperNode","createWaveShaper","disconnectNativeAudioBufferSourceNode","createNativeWaveShaperNodeFakerFactory","negativeWaveShaperNode","positiveWaveShaperNode","invertGainNode","revertGainNode","unmodifiedCurve","nativeWaveShaperNodeFaker","curveLength","negativeCurve","positiveCurve","createOfflineAudioContextConstructor","c","createOscillatorNodeConstructor","createNativeOscillatorNode","createOscillatorNodeRenderer","oscillatorNodeRenderer","_nativeOscillatorNode","_oscillatorNodeRenderer","createOscillatorNodeRendererFactory","renderedNativeOscillatorNodes","createOscillatorNode","nativeOscillatorNodeIsOwnedByContext","renderedNativeOscillatorNode","createPannerNodeConstructor","createNativePannerNode","createPannerNodeRenderer","pannerNodeRenderer","_nativePannerNode","_orientationX","_orientationY","_orientationZ","_positionX","_positionY","_positionZ","createPannerNodeRendererFactory","renderedBufferPromise","commonAudioNodeOptions","commonNativePannerNodeOptions","nativePannerNodeIsOwnedByContext","nativeConstantSourceNodes","channelDatas","gateGainNode","partialPannerNode","renderedNativeGainNodeOrNativePannerNode","createPeriodicWaveConstructor","createNativePeriodicWave","periodicWaveStore","PeriodicWave","createRenderAutomation","getAudioParamRenderer","createRenderInputsOfAudioNode","getAudioNodeRenderer","isPartOfACycle","nextTrace","allRenderingPromises","renderingPromises","createRenderInputsOfAudioParam","createRenderNativeOfflineAudioContext","testOfflineAudioContextCurrentTimeSupport","isOfflineAudioContextCurrentTimeSupported","oncomplete","createStartRendering","createStereoPannerNodeConstructor","createNativeStereoPannerNode","createStereoPannerNodeRenderer","stereoPannerNodeRenderer","_pan","createStereoPannerNodeRendererFactory","renderedNativeStereoPannerNodes","createStereoPannerNode","nativeStereoPannerNodeIsOwnedByContext","renderedNativeStereoPannerNode","createTestAudioBufferConstructorSupport","createTestAudioBufferCopyChannelMethodsSubarraySupport","copyToChannel","createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport","createTestAudioBufferSourceNodeStartMethodDurationParameterSupport","offlineAudioContext","createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport","createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport","createTestAudioContextCloseMethodSupport","audioContext","isAudioContextClosable","createTestAudioContextDecodeAudioDataMethodTypeErrorSupport","isPending","createTestAudioContextOptionsSupport","createTestAudioNodeConnectMethodSupport","isSupported","createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport","createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport","createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport","createTestAudioWorkletProcessorNoOutputsSupport","isCallingProcess","createTestChannelMergerNodeChannelCountSupport","createTestConstantSourceNodeAccurateSchedulingSupport","Number","POSITIVE_INFINITY","createTestConvolverNodeBufferReassignabilitySupport","createTestIsSecureContextSupport","createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport","createTestOfflineAudioContextCurrentTimeSupport","createTestStereoPannerNodeDefaultValueSupport","stereoPanner","createWaveShaperNodeConstructor","createWaveShaperNodeRenderer","waveShaperNodeRenderer","_isCurveNullified","_nativeWaveShaperNode","createWaveShaperNodeRendererFactory","renderedNativeWaveShaperNodes","createWaveShaperNode","nativeWaveShaperNodeIsOwnedByContext","renderedNativeWaveShaperNode","createWindow","createWrapAudioBufferCopyChannelMethodsOutOfBounds","convertNumberToUnsignedLong","channelNumberAsNumber","bufferOffsetAsNumber","bufferOffset","channelNumber","createWrapAudioBufferCopyChannelMethods","audioBufferLength","destinationLength","sourceLength","createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer","nullifiedBuffer","createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls","disconnectGainNode","isStopped","createWrapChannelMergerNode","monitorConnectionsFunction","ACTIVE_AUDIO_NODE_STORE","WeakSet","AUDIO_NODE_CONNECTIONS_STORE","AUDIO_NODE_STORE","AUDIO_PARAM_CONNECTIONS_STORE","AUDIO_PARAM_STORE","BACKUP_NATIVE_CONTEXT_STORE","CONTEXT_STORE","EVENT_LISTENERS","CYCLE_COUNTERS","NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS","NODE_TO_PROCESSOR_MAPS","isAudioNodeOutputConnection","isAudioNode","audioNodeOrAudioParam","isAudioWorkletNode","isDelayNode","isNativeAudioNodeFaker","nativeAudioNodeOrNativeAudioNodeFaker","nativeAudioNodeOrAudioParam","assignNativeAudioNodeAudioParamValue","assignNativeAudioNodeOption","option","assignNativeAudioNodeOptions","cloneAudioWorkletNodeOptions","audioWorkletNodeOptions","data","onmessageerror","postMessage","computeBufferSize","fakeNativeDestinationAudioNode","parent","slicedInput","BYTES_PER_ELEMENT","createAudioWorkletProcessorPromise","clonedAudioWorkletNodeOptions","createAudioWorkletProcessor","nodeToProcessorMap","createNestedArrays","y","arrays","deleteEventListenerOfAudioNode","detachArrayBuffer","arrayBuffer","filterBuffer","bufferIndex","inputLength","getAudioWorkletProcessor","getEventListenersOfAudioNode","element","predicate","lmnt","interceptConnections","original","interceptor","handler","construct","isConstructible","constructible","Proxy","isOwnedByContext","isPassiveAudioNode","isValidLatencyHint","object","property","createGetter","createSetter","getOwnPropertyDescriptor","pickElementFromSet","matchingElements","matchingElement","setInternalStateToActive","setInternalStateToPassiveWhenNecessary","setInternalStateToPassive","IMPORT_STATEMENT_REGEX","splitImportStatements","replace","match","unresolvedUrl","importStatementWithResolvedUrl","join","testAnalyserNodeGetFloatTimeDomainDataMethodSupport","testAudioNodeDisconnectMethodSupport","analyzer","dummy","ones","chnnlDt","sample","testClonabilityOfAudioWorkletNodeOptions","uint32Array","Uint32Array","ArrayBuffer","visitEachAudioNodeOnce","visitor","counts","cycle","wrapAnalyserNodeGetFloatTimeDomainDataMethod","byteTimeDomainData","Uint8Array","wrapAudioBufferGetChannelDataMethod","channel","wrapAudioBufferSourceNodeStartMethodConsecutiveCalls","isScheduled","wrapAudioBufferSourceNodeStartMethodDurationParameter","stopTime","actualStartTime","durationInBufferTime","wrapAudioBufferSourceNodeStartMethodOffsetClamping","clampedOffset","wrapAudioNodeDisconnectMethod","returnValue","connectionsToDestination","filteredConnections","wrapAudioScheduledSourceNodeStartMethodNegativeParameters","wrapAudioScheduledSourceNodeStopMethodNegativeParameters","wrapChannelSplitterNode","currentTarget","wrapIIRFilterNodeGetFrequencyResponseMethod","createConstantSourceNodeRenderer","audioContextConstructor","audioWorkletNodeConstructor","minimalAudioContextConstructor","minimalOfflineAudioContextConstructor","offlineAudioContextConstructor","isAnyAudioContext","isAnyAudioNode","isAnyAudioParam","isAnyOfflineAudioContext","ReadOnlyMap","_map","callback","thisArg","Analyser","getDefaults","arguments","_analysers","_buffers","_split","channels","analyser","_type","dispose","val","assign","smoothing","DCMeter","_analyser","FFT","normalRange","v","Follower","_abs","_lowpass","toSeconds","_smoothing","Meter","_rms","aValues","channelValues","vals","totalSquared","total","current","rms","MeterBase","Waveform","Channel","_solo","solo","_panVol","volume","mute","buses","bus","_getBus","sendKnob","units","muted","CrossFade","_panner","_g2a","_internalChannels","fade","getConstant","Merge","_merger","MidSideMerge","mid","side","_left","_leftMult","SQRT1_2","_right","_rightMult","_merge","fan","addend","subtrahend","MidSideSplit","_midAdd","_sideSubtract","MultibandSplit","low","_lowMidFilter","high","lowFrequency","highFrequency","PanVol","_volume","Panner","param","Panner3D","Recorder","supported","_stream","_recorder","MediaRecorder","mimeType","startPromise","handleStart","dataPromise","handleData","e","pause","Reflect","Solo","_allSolos","_soloed","_isSoloed","_noSolos","_removeSolo","_addSolo","_updateSolo","Split","_splitter","Volume","_unmutedVolume","Infinity","Compressor","_compressor","convert","Gate","_follower","_gt","_gate","thresh","smoothingTime","Limiter","MidSideCompressor","_midSideSplit","_midSideMerge","MultibandCompressor","AmplitudeEnvelope","_gainNode","_sig","Envelope","decay","sustain","attackCurve","releaseCurve","decayCurve","direction","curveName","EnvelopeCurves","curveDef","velocity","log","originalAttack","currentValue","getValueAtTime","attackRate","remainingDistance","sampleTime","_attackCurve","linearRampTo","targetRampTo","decayValue","decayStart","_decayCurve","exponentialApproachValueAtTime","_releaseCurve","triggerAttack","triggerRelease","after","outputNumber","inputNumber","attackPortion","envelopeDuration","sustainTime","totalDuration","clone","toDestination","triggerAttackRelease","now","_getCurve","_setCurve","curveLen","cosineCurve","rippleCurve","rippleCurveFreq","sineWave","stairsCurve","steps","sineCurve","bounceCurve","freq","abs","invertCurve","out","reverseCurve","reverse","bounce","In","Out","cosine","exponential","linear","ripple","sine","step","FrequencyEnvelope","_octaves","octaves","_baseFrequency","toFrequency","baseFrequency","_exponent","exponent","_scale","Convolver","_convolver","_buffer","loaded","load","buff","norm","EQ3","_multibandSplit","_lowGain","_midGain","_highGain","FeedbackCombFilter","_dummyParam","swappable","resonance","node","setParam","workletName","feedbackCombFilter","Filter","_filters","rolloff","totalResponse","freqValues","magValues","phaseValues","filterClone","types","indexOf","_rolloff","rolloffNum","parseInt","possibilities","cascadingCount","LowpassCombFilter","_combFilter","dampening","fq","OnePoleFilter","_createFilter","oldFilter","_filter","t","a0","b1","disposed","blockTime","PhaseShiftAllpass","offset90","allpassBank1Values","allpassBank2Values","_bank0","_createAllPassFilterBank","_bank1","_oneSampleDelay","bankValues","nodes","coefficients","f","dummyContext","globalContext","getContext","setContext","TONE_SILENCE_LOGGING","prefix","printString","console","Tone","debug","_wasDisposed","TONE_DEBUG_CLASS","version","Clock","_lastUpdate","_boundLoop","_loop","_tickSource","setStateAtTime","on","computedTime","emit","cancel","getSecondsAtTime","ticks","setTicksAtTime","tick","before","getTimeOfTick","getTicksAtTime","currentTick","forEachBetween","forEachTickBetween","off","seconds","s","mixin","TickParam","_events","_multiplier","multiplier","_fromType","constant","setRampPoint","computedValue","prevEvent","segments","segTime","rampVal","_exponentialApproach","_toType","previousEvent","ticksUntilTime","_getTicksUntilEvent","computedVal","segmentDur","_exponentialInterpolate","val0","val1","onTheLineEvent","getAfter","delta","sol1","sol2","_initialValue","getDurationOfTicks","computedDuration","startTicks","endTicks","m","currentVal","TickSignal","_param","_constantSource","ticksToTime","timeToTicks","TickSource","_tickOffset","stopEvent","getLastState","tmpEvent","lastState","elapsedTicks","periodStartTime","offsetEvent","remove","elapsedSeconds","absoluteTicks","lastStateEvent","maxStartTime","ticksAtStart","diff","nextTickTime","getStateAtTime","Ticker","updateInterval","_callback","_updateInterval","_createClock","toFixed","blobUrl","worker","Worker","_worker","_timeout","_createTimeout","_createWorker","clearTimeout","terminate","_disposeClock","interval","Transport","_loopStart","_loopEnd","_scheduledEvents","_timeline","_repeatedEvents","_syncedSignals","_swingAmount","_ppq","ppq","_clock","_processTick","_bindClockEvents","bpm","_timeSignature","timeSignature","_swingTicks","tickTime","progress","amount","forEachAtTime","invoke","toTicks","_addEvent","once","eventId","item","timeline","computedAfter","forEachFrom","offsetTicks","startPosition","endPosition","subdivision","transportPos","remainingTicks","signal","computedFreq","PPQ","ratioSignal","initial","syncedSignal","timeSig","toNotation","toBarsBeatsSixteenths","swing","swingSubdivision","transport","TransportEvent","opts","_eventId","_once","TransportRepeatEvent","_currentId","_nextId","_nextTick","_boundRestart","_restart","valueOf","_interval","_createEvents","scheduleOnce","createAudioContext","createOfflineAudioContext","theWindow","self","hasAudioContext","createAudioWorkletNode","BaseContext","Context","_constants","_timeouts","_timeoutIds","_initialized","_workletModules","_ticker","clockSource","_timeoutLoop","_setLatencyHint","lookAhead","feedForward","rawContext","promises","hint","lookAheadValue","_latencyHint","firstEvent","peek","shift","timeout","intervalFn","initialize","l","_transport","_draw","d","notifyNewContext","onContextInit","cb","initializeContext","ctx","notifyCloseContext","onContextClose","closeContext","Delay","maxDelayInSeconds","maxDelay","_maxDelay","_delayNode","Destination","DummyContext","_numberOfChannels","_sampleRate","_numberOfInputs","_numberOfOutputs","_maxDelayTime","_feedForward","_feedback","_real","_imag","_constraints","_audioData","_name","_options","_url","_fn","_id","_val","Gain","Listener","Offline","originalContext","bufferPromise","OfflineContext","_currentTime","_duration","asynchronous","yieldEvery","workletsAreReady","_renderClock","Param","overridden","_minOutput","_swappable","_minValue","_maxValue","arg","_is","numericValue","isFinite","JSON","stringify","_assertRange","previous","getBefore","previousVal","beforeValue","_linearInterpolate","rampTime","scaling","startingValue","valueAtTime","exponentialRampTo","nextEvent","subdivisions","forEachAfter","t0","v0","v1","t1","ToneAudioBuffer","_reversed","_reverse","doneLoading","downloads","isMultidimensional","multiChannelArray","chanNum","fromArray","toArray","outputArray","numChannels","channelArray","ret","end","startSamples","endSamples","retBuffer","subarray","rev","matches","extensions","split","extension","ext","supportsType","baseUrl","endsWith","canPlayType","ToneAudioBuffers","_loadingCount","urls","_bufferLoaded","ToneAudioNode","nodeList","_isAudioNode","_getInternalNodes","outputNum","inputNum","connectSeries","_getChannelProperties","_setChannelProperties","first","prev","srcNode","dstNode","ToneWithContext","defaultContext","defaults","attribute","member","_getPartialProperties","equalPowerScale","percent","piFactor","dbToGain","db","gainToDb","LN10","intervalToFrequencyRatio","A4","getA4","setA4","ftom","ftomf","mtof","midi","FrequencyClass","defaultUnits","regexp","method","note","pitch","octave","noteToScaleIndex","toLowerCase","noteNumber","tr","q","_beatsToUnits","_getTimeSignature","parseFloat","intervals","transpose","noteName","scaleIndexToNote","quarterTime","quarters","_getPPQ","_getBpm","beats","cbb","cx","dbb","dx","ebb","eb","ex","fbb","fb","fx","gbb","gb","g","gx","abb","ab","ax","bbb","bb","bx","Frequency","MidiClass","toMidi","Midi","TicksClass","Ticks","TimeClass","capture","_now","quantize","quantTo","_secondsToUnits","nextSubdivision","subdiv","multiple","ideal","testNotations","power","closest","closestSeconds","notation","notationSeconds","measures","sixteenths","sixteenthString","Time","TimeBaseClass","_units","_expressions","_getExpressions","hz","_frequencyToUnits","_ticksToUnits","dot","scalar","number","samples","fromType","_noArg","typeName","quantity","expr","matching","TransportTimeClass","TransportTime","isAudioParam","isOfflineAudioContext","isAudioContext","isAudioBuffer","assert","statement","assertRange","gte","lte","assertContextRunning","warn","defaultLogger","setLogger","logger","range","valueMap","propertyKey","newValue","timeRange","noCopy","deepMerge","sources","deepEquals","arrayA","arrayB","optionsFromArguments","argsArray","objKey","partOfDefaults","getDefaultsFromInstance","defaultArg","given","fallback","omitFromObject","obj","omit","prop","Draw","expiration","anticipation","_boundDrawLoop","_drawLoop","_animationFrame","requestAnimationFrame","cancelAnimationFrame","draw","Emitter","events","eventName","boundCallback","eventList","constr","readOnly","str","noOp","IntervalTimeline","_root","IntervalNode","insert","updateHeight","updateMax","_rebalance","search","_removeNode","replacement","isLeftChild","left","right","_setRoot","_replaceNodeInParent","balance","getBalance","temp","pivotNode","_rotateLeft","_rotateRight","allNodes","traverse","searchAfter","height","point","EPSILON","GT","GTE","EQ","LT","clamp","StateTimeline","_initial","_search","Timeline","memory","increasing","lastValue","beginning","midPoint","testEvent","lowerBound","upperBound","_iterate","TimelineValue","initialValue","isUndef","isDefined","isFunction","isNumber","isObject","isBoolean","isString","isNote","delayLine","singleIOProcess","ToneAudioWorklet","workletOptions","_audioWorkletName","_dummyGain","_worklet","onReady","toneAudioWorkletProcessor","workletContext","addToWorklet","classOrFunction","registerProcessor","classDesc","processor","getWorkletGlobalScope","AutoFilter","connectEffect","_lfo","oct","AutoPanner","AutoWah","follower","_sweepRange","_inputBoost","_bandpass","_peaking","effectSend","effectReturn","_setSweepRange","sensitivity","baseFreq","BitCrusher","_bitCrusherWorklet","BitCrusherWorklet","bits","bitCrusherWorklet","Chebyshev","_shaper","_order","order","degree","memo","_getCoefficient","setMap","oversampling","Chorus","_depth","depth","_lfoL","_lfoR","phase","_delayNodeL","_delayNodeR","connectEffectLeft","connectEffectRight","spread","sync","unsync","deviation","wet","Distortion","_distortion","distortion","deg","Effect","_dryWet","effect","FeedbackDelay","FeedbackEffect","_feedbackGain","combFilterTunings","allpassFilterFrequencies","Freeverb","_combFilters","_allpassFiltersL","_allpassFiltersR","roomSize","allpassL","allpassR","lfpf","al","ar","cf","FrequencyShifter","_sine","_cosine","_sineMultiply","_cosineMultiply","_negate","_add","_phaseShifter","factor","immediate","combFilterDelayTimes","combFilterResonances","allpassFilterFreqs","JCReverb","_allpassFilters","_feedbackCombFilters","_scaleRoomSize","allpass","fbcf","apf","LFOEffect","amplitude","MidSideEffect","_midSend","_sideSend","_midReturn","_sideReturn","Phaser","_filtersL","_makeFilters","stages","_filtersR","connectToFreq","filters","PingPongDelay","_leftDelay","_rightDelay","_rightPreDelay","_feedbackL","PitchShift","_delayA","_lfoA","_delayB","_lfoB","_crossFade","_crossFadeLFO","_feedbackDelay","_pitch","_windowSize","windowSize","Reverb","ready","_decay","_preDelay","preDelay","generate","previousReady","noiseL","noiseR","merge","renderPromise","StereoEffect","StereoFeedbackEffect","_feedbackR","_feedbackSplit","_feedbackMerge","StereoWidener","width","_twoTimesWidthMid","_twoTimesWidthSide","_midMult","connectEffectMid","_oneMinusWidth","_sideMult","connectEffectSide","StereoXFeedbackEffect","Tremolo","_amplitudeL","_amplitudeR","syncSignal","unsyncSignal","Vibrato","Loop","_event","_tick","probability","iterations","rate","humanize","variation","prob","iters","Part","computedOffset","_forEach","_startNote","startOffset","_getLoopDuration","timeInTicks","at","_restartEvent","stateEvent","attr","_startOffset","_probability","_setAll","_humanize","_testLoopBoundries","Pattern","_values","_pattern","pattern","upPatternGen","downPatternGen","infiniteGen","alternatingGenerator","jumpUp","jumpDown","randomGen","randomOnce","randomWalk","PatternGenerator","clampToArraySize","gen","directionUp","stepIndex","randomIndex","random","copy","randVal","Sequence","_part","_seqCallback","_eventsArray","_subdivision","_indexTime","_createSequence","_eventsUpdated","_rescheduleSequence","sequence","eventOffset","ToneEvent","_rescheduleEvents","startTick","scheduleRepeat","schedule","reschedulTime","lastEvent","loopDuration","Buffer","Buffers","BufferSource","AMSynth","_modulationScale","_carrier","harmonicity","_modulator","_modulationNode","DuoSynth","voice0","onsilence","voice1","_vibrato","vibratoRate","_vibratoGain","vibratoAmount","envelope","_triggerEnvelopeAttack","_triggerEnvelopeRelease","filterEnvelope","FMSynth","modulationIndex","Instrument","_synced","_original_triggerAttack","_original_triggerRelease","_syncMethod","timePosition","originalMethod","MembraneSynth","portamento","pitchDecay","hertz","maxNote","oscillator","inharmRatios","MetalSynth","_oscillators","_freqMultipliers","_amplitude","_highpass","osc","modulationType","onstop","mult","_filterFreqScaler","freqMult","ModulationSynth","modulation","modulationEnvelope","MonoSynth","computedAttack","computedDecay","Monophonic","setNote","computedFrequency","getLevelAtTime","portTime","NoiseSynth","noise","PluckSynth","_noise","attackNoise","_lfcf","delayAmount","PolySynth","_availableVoices","_activeVoices","_voices","_gcTimeout","_averageActiveVoices","voice","maxPolyphony","_dummyVoice","_getNextAvailableVoice","setInterval","_collectGarbage","activeVoiceIndex","_makeVoiceAvailable","activeVoices","firstAvail","notes","midiNote","released","find","_triggerAttack","_triggerRelease","_scheduleEvent","durationSeconds","clearInterval","Sampler","_activeSources","urlMap","MAX_INTERVAL","difference","_findClosest","closestNote","fadeIn","fadeOut","Synth","Abs","mapping","Add","override","_sum","AudioToGain","_norm","GainToAudio","GreaterThan","_subtract","_gtz","comparator","GreaterThanZero","_thresh","Multiply","_mult","Negate","_multiply","Pow","_exponentScaler","_expFunc","Scale","_min","_max","_setRange","ScaleExp","_exp","Signal","connectSignal","rampTo","SignalOperator","Subtract","_neg","SyncedSignal","_lastVal","_onTick","_syncedCallback","_anchorValue","ToneConstantSource","_source","_startGain","WaveShaper","normalized","isOverSampleType","Zero","Noise","_fadeIn","_fadeOut","_noiseBuffers","_stop","_start","BUFFER_LENGTH","NUM_CHANNELS","_noiseCache","brown","pink","white","channelNum","lastOut","b0","b2","b3","b4","b5","b6","OneShotSource","_stopTime","_curve","fadeInTime","_stopGain","cancelStop","fadeOutTime","additionalTail","_stopSource","Source","_scheduled","_syncedStart","_syncedStop","_clampToCurrentTime","restart","sched","getNextState","UserMedia","labelOrId","enumerateDevices","devices","_device","device","label","deviceId","audio","echoCancellation","noiseSuppression","mozNoiseSuppression","navigator","mediaDevices","getUserMedia","mediaStreamNode","_mediaStream","track","active","groupId","allDevices","GrainPlayer","grainSize","_grainSize","_overlap","overlap","_onstop","Player","_onload","autostart","origDuration","_onSourceEnd","implicitEnd","Players","_players","player","playing","ToneBufferSource","_sourceStarted","_sourceStopped","computedDur","AMOscillator","baseType","partialCount","partials","FMOscillator","FatOscillator","_spread","_phase","_partials","_partialCount","LFO","_stoppedValue","_clampValue","_oscillator","_amplitudeGain","_stoppedSignal","_zeros","_a2g","_scaler","syncFrequency","unsyncFrequency","getInitialValue","currentMin","currentMax","OmniOscillatorSourceMap","am","fat","fm","pulse","pwm","OmniOscillator","oscType","_sourceType","OscConstructor","oldOsc","sourceType","p","substr","_createNewOscillator","_getOscType","sType","mType","modulationFrequency","Oscillator","_wave","oscProps","_periodicWaveCache","description","periodicWaveSize","partial","exec","_getRealImaginary","twoPi","testPositions","_inverseFFT","isBasicType","cache","_getCachedPeriodicWave","wave","fullPartials","generateWaveform","PWMOscillator","_pulse","carrierType","PulseOscillator","_widthGate","_triangle","ToneOscillatorNode","LineChartAudificationComponent","host","zone","destroy$","tabindex","resumeTimeoutId","handleSeek","data$","pipe","subscribe","datum","domain","date","melody","lowestPitch","highestPitch","noteDuration","run","activeDatum","$event","preventDefault","stopPropagation","shiftKey","repeat","resumeMelody","readOutDomain","readOutRange","readOutMeasure","datumIndex","seekTo","readOutCurrentDatum","pauseMelody","reversed","readBefore","delay","readAfter","screenReaderComponent","readOut","DOMAIN","RANGE","measureNames","currentDatumIndex","ACTIVE_DATUM","INSTRUCTIONS","selector","templateUrl","styleUrls","LineChartAudificationModule","A11yComponent","declarations","imports","ScreenReaderComponent","repetitionDelay","liveText","readOutTimeoutId","repetitive","ScreenReaderModule","Melody","frequencyRange","onSeek","synth","inclusive","timeoutId","minFrequency","maxFrequency","minKeyNumber","getKeyNumber","maxKeyNumber","frequencies","keyNumber","getFrequency","isPlaying","playNextNote","isEnded","nextDatumIndex","reverseDatumIndex","ascendingNumber","descendingNumber","ascendingDate","getTime","descendingDate"],"mappings":"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AN;AACH;;AACD,iBAAOolB,oBAAoB,CAAC/hB,IAArB,CAA0B6sB,mBAA1B,EAA+CjL,WAA/C,EAA4DC,WAA5D,EAAyEC,aAAzE,CAAP;AACH,SALD;AAMH,OAP0C,CAOxC+K,mBAAmB,CAAC9K,oBAPoB,CAA3C;AAQH,KATM,C,CAUP;;;;;;;;;;;;;;;qGCXA;;;;;;;;;;;;;;wGCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;oGCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;qGCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;sGCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;kGCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;mGCAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;qGCAA;;;;;;;;;;;;;;mGCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;sGCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;kGCAA;;;;;;;;;;;;;;qGCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;iGCAA;;;;;;;;;;;;;;oGCAA;;;;;;;;;;;;;;sGCAA;;;;;;;;;;;;;;ymFA;;;;;;;;;;;;;;;oHCnFA;;;;;;;;;;;;;;uHCAA;;;;;;;;;;;;;;wHCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;wHCAA;;;;;;;;;;;;;;2HCAA;;;;;;;;;;;;;;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;;;;;;;;;;;;oGCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;qGCAA;;;;;;;;;;;;;;0HCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;uHCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;wGCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;wGCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;wGCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;qGCAA;;;;;;;;;;;;;;kGCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;qGCAA;;;;;;;;;;;;;;iGCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;mGCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;0HCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;0HCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;oGCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;oGCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;uHCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;2HCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;6HCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;mICAA;;;;;;;;;;;;;;sICAA;;;;;;;;;;;;;;+HCAA;;;;;;;;;;;;;;wHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;4HCAA;;;;;;;;;;;;;;qHCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;+FCAA;;;;;;;;;;;;;;gGCAA;;;;;;;;;;;;;;2FCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;uHCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;uHCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;0HCAA;;;;;;;;;;;;;;2HCAA;;;;;;;;;;;;;;iGCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;uGCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;wGCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;2HCAA;;;;;;;;;;;;;;4HCAA;;;;;;;;;;;;;;uGCAA;;;;;;;;;;;;;;wGCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;qHCAA;;;;;;;;;;;;;;wICAA;;;;;;;;;;;;;;qGCAA;;;;;;;;;;;;;;4HCAA;;;;;;;;;;;;;;qHCAA;;;;;;;;;;;;;;gICAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;wGCAA;;;;;;;;;;;;;;qGCAA;;;;;;;;;;;;;;2HCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;gGCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;2HCAA;;;;;;;;;;;;;;4HCAA;;;;;;;;;;;;;;sGCAA;;;;;;;;;;;;;;uGCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;uGCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;0HCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;uHCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;uHCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;ygYA;;;;;;;;;;;;;;;8GChYA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;qGCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;uHCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;iICAA;;;;;;;;;;;;;;0HCAA;;;;;;;;;;;;;;qICAA;;;;;;;;;;;;;;8HCAA;;;;;;;;;;;;;;gICAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;qICAA;;;;;;;;;;;;;;8HCAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;6HCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;gICAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;sGCAA;;;;;;;;;;;;;;uHCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;6HCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;qGCAA;;;;;;;;;;;;;;wHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;sGCAA;;;;;;;;;;;;;;4HCAA;;;;;;;;;;;;;;qHCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;uGCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;mGCAA;;;;;;;;;;;;;;uGCAA;;;;;;;;;;;;;;oGCAA;;;;;;;;;;;;;;4HCAA;;;;;;;;;;;;;;qHCAA;;;;;;;;;;;;;;wHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;6HCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;sGCAA;;;;;;;;;;;;;;wHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;2HCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;0HCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;+HCAA;;;;;;;;;;;;;;wHCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;iGCAA;;;;;;;;;;;;;;qHCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;0HCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;uGCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;mGCAA;;;;;;;;;;;;;;8HCAA;;;;;;;;;;;;;;uHCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;qGCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;kGCAA;;;;;;;;;;;;;;qHCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;0HCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;uGCAA;;;;;;;;;;;;;;mICAA;;;;;;;;;;;;;;4HCAA;;;;;;;;;;;;;;qHCAA;;;;;;;;;;;;;;uICAA;;;;;;;;;;;;;;gICAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;kICAA;;;;;;;;;;;;;;2HCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;uICAA;;;;;;;;;;;;;;gICAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;+HCAA;;;;;;;;;;;;;;wHCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;wGCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;uHCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;oGCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;sGCAA;;;;;;;;;;;;;;2HCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;wHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;6HCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;2HCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;wGCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;wHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;kGCAA;;;;;;;;;;;;;;oGCAA;;;;;;;;;;;;;;kGCAA;;;;;;;;;;;;;;8GCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;oGCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;2GCAA;;;;;;;;;;;;;;4GCAA;;;;;;;;;;;;;;kHCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;0HCAA;;;;;;;;;;;;;;2HCAA;;;;;;;;;;;;;;yGCAA;;;;;;;;;;;;;;0GCAA;;;;;;;;;;;;;;sHCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;0HCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;4HCAA;;;;;;;;;;;;;;2ICAA;;;;;;;;;;;;;;sJCAA;;;;;;;;;;;;;;uJCAA;;;;;;;;;;;;;;oJCAA;;;;;;;;;;;;;;oJCAA;;;;;;;;;;;;;;6HCAA;;;;;;;;;;;;;;gJCAA;;;;;;;;;;;;;;yHCAA;;;;;;;;;;;;;;4HCAA;;;;;;;;;;;;;;yJCAA;;;;;;;;;;;;;;wJCAA;;;;;;;;;;;;;;0JCAA;;;;;;;;;;;;;;oICAA;;;;;;;;;;;;;;mICAA;;;;;;;;;;;;;;0ICAA;;;;;;;;;;;;;;wICAA;;;;;;;;;;;;;;qHCAA;;;;;;;;;;;;;;qJCAA;;;;;;;;;;;;;;oICAA;;;;;;;;;;;;;;kICAA;;;;;;;;;;;;;;8FCAA;;;;;;;;;;;;;;uGCAA;;;;;;;;;;;;;;mHCAA;;;;;;;;;;;;;;+GCAA;;;;;;;;;;;;;;oHCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;wHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;iGCAA;;;;;;;;;;;;;;4HCAA;;;;;;;;;;;;;;6HCAA;;;;;;;;;;;;;;uICAA;;;;;;;;;;;;;;wICAA;;;;;;;;;;;;;;8ICAA;;;;;;;;;;;;;;6ICAA;;;;;;;;;;;;;;8ICAA;;;;;;;;;;;;;;iJCAA;;;;;;;;;;;;;;kJCAA;;;;;;;;;;;;;;gHCAA;;;;;;;;;;;;;;iHCAA;;;;;;;;;;;;;;6GCAA;;;;;;;;;;;;;;;;;ACAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;A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AAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAA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A;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;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","file":"components-line-chart-audification-line-chart-audification-module-es5.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@babel/runtime/helpers/slicedToArray'), require('@babel/runtime/helpers/classCallCheck'), require('@babel/runtime/helpers/createClass')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@babel/runtime/helpers/slicedToArray', '@babel/runtime/helpers/classCallCheck', '@babel/runtime/helpers/createClass'], factory) :\n    (global = global || self, factory(global.automationEvents = {}, global._slicedToArray, global._classCallCheck, global._createClass));\n}(this, (function (exports, _slicedToArray, _classCallCheck, _createClass) { 'use strict';\n\n    _slicedToArray = _slicedToArray && Object.prototype.hasOwnProperty.call(_slicedToArray, 'default') ? _slicedToArray['default'] : _slicedToArray;\n    _classCallCheck = _classCallCheck && Object.prototype.hasOwnProperty.call(_classCallCheck, 'default') ? _classCallCheck['default'] : _classCallCheck;\n    _createClass = _createClass && Object.prototype.hasOwnProperty.call(_createClass, 'default') ? _createClass['default'] : _createClass;\n\n    var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {\n      return {\n        endTime: endTime,\n        insertTime: insertTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {\n      return {\n        startTime: startTime,\n        type: 'setValue',\n        value: value\n      };\n    };\n\n    var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {\n      return {\n        duration: duration,\n        startTime: startTime,\n        type: 'setValueCurve',\n        values: values\n      };\n    };\n\n    var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {\n      var startTime = _ref.startTime,\n          target = _ref.target,\n          timeConstant = _ref.timeConstant;\n      return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);\n    };\n\n    var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'exponentialRampToValue';\n    };\n\n    var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'linearRampToValue';\n    };\n\n    var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {\n      return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);\n    };\n\n    var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValue';\n    };\n\n    var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setValueCurve';\n    };\n\n    var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {\n      var automationEvent = automationEvents[index];\n      return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);\n    };\n\n    var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {\n      return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];\n    };\n\n    var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelAndHold';\n    };\n\n    var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {\n      return automationEvent.type === 'cancelScheduledValues';\n    };\n\n    var getEventTime = function getEventTime(automationEvent) {\n      if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n        return automationEvent.cancelTime;\n      }\n\n      if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {\n        return automationEvent.endTime;\n      }\n\n      return automationEvent.startTime;\n    };\n\n    var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n\n      if (valueAtStartTime === value) {\n        return value;\n      }\n\n      if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {\n        return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));\n      }\n\n      return 0;\n    };\n\n    var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {\n      var endTime = _ref.endTime,\n          value = _ref.value;\n      return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);\n    };\n\n    var interpolateValue = function interpolateValue(values, theoreticIndex) {\n      var lowerIndex = Math.floor(theoreticIndex);\n      var upperIndex = Math.ceil(theoreticIndex);\n\n      if (lowerIndex === upperIndex) {\n        return values[lowerIndex];\n      }\n\n      return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];\n    };\n\n    var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {\n      var duration = _ref.duration,\n          startTime = _ref.startTime,\n          values = _ref.values;\n      var theoreticIndex = (time - startTime) / duration * (values.length - 1);\n      return interpolateValue(values, theoreticIndex);\n    };\n\n    var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {\n      return automationEvent.type === 'setTarget';\n    };\n\n    var AutomationEventList = /*#__PURE__*/function () {\n      function AutomationEventList(defaultValue) {\n        _classCallCheck(this, AutomationEventList);\n\n        this._automationEvents = [];\n        this._currenTime = 0;\n        this._defaultValue = defaultValue;\n      }\n\n      _createClass(AutomationEventList, [{\n        key: Symbol.iterator,\n        value: function value() {\n          return this._automationEvents[Symbol.iterator]();\n        }\n      }, {\n        key: \"add\",\n        value: function add(automationEvent) {\n          var eventTime = getEventTime(automationEvent);\n\n          if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {\n            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) >= eventTime;\n            });\n\n            var removedAutomationEvent = this._automationEvents[index];\n\n            if (index !== -1) {\n              this._automationEvents = this._automationEvents.slice(0, index);\n            }\n\n            if (isCancelAndHoldAutomationEvent(automationEvent)) {\n              var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n              if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {\n                if (isSetTargetAutomationEvent(lastAutomationEvent)) {\n                  throw new Error('The internal list is malformed.');\n                }\n\n                var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);\n                var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;\n                var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);\n                var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);\n\n                this._automationEvents.push(truncatedAutomationEvent);\n              }\n\n              if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {\n                this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));\n              }\n\n              if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {\n                this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);\n              }\n            }\n          } else {\n            var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n              return getEventTime(currentAutomationEvent) > eventTime;\n            });\n\n            var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];\n\n            if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {\n              return false;\n            }\n\n            var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;\n\n            if (_index === -1) {\n              this._automationEvents.push(persistentAutomationEvent);\n            } else {\n              if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {\n                return false;\n              }\n\n              this._automationEvents.splice(_index, 0, persistentAutomationEvent);\n            }\n          }\n\n          return true;\n        }\n      }, {\n        key: \"flush\",\n        value: function flush(time) {\n          var index = this._automationEvents.findIndex(function (currentAutomationEvent) {\n            return getEventTime(currentAutomationEvent) > time;\n          });\n\n          if (index > 1) {\n            var remainingAutomationEvents = this._automationEvents.slice(index - 1);\n\n            var firstRemainingAutomationEvent = remainingAutomationEvents[0];\n\n            if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {\n              remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));\n            }\n\n            this._automationEvents = remainingAutomationEvents;\n          }\n        }\n      }, {\n        key: \"getValue\",\n        value: function getValue(time) {\n          if (this._automationEvents.length === 0) {\n            return this._defaultValue;\n          }\n\n          var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];\n\n          var index = this._automationEvents.findIndex(function (automationEvent) {\n            return getEventTime(automationEvent) > time;\n          });\n\n          var nextAutomationEvent = this._automationEvents[index];\n          var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];\n\n          if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {\n            return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {\n            if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {\n              return getValueCurveValueAtTime(time, currentAutomationEvent);\n            }\n\n            return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];\n          }\n\n          if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {\n            return currentAutomationEvent.value;\n          }\n\n          if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2),\n                startTime = _getEndTimeAndValueOf2[0],\n                value = _getEndTimeAndValueOf2[1];\n\n            return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);\n          }\n\n          if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {\n            var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),\n                _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2),\n                _startTime = _getEndTimeAndValueOf4[0],\n                _value = _getEndTimeAndValueOf4[1];\n\n            return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);\n          }\n\n          return this._defaultValue;\n        }\n      }]);\n\n      return AutomationEventList;\n    }();\n\n    var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelAndHold'\n      };\n    };\n\n    var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {\n      return {\n        cancelTime: cancelTime,\n        type: 'cancelScheduledValues'\n      };\n    };\n\n    var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'exponentialRampToValue',\n        value: value\n      };\n    };\n\n    var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {\n      return {\n        endTime: endTime,\n        type: 'linearRampToValue',\n        value: value\n      };\n    };\n\n    var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {\n      return {\n        startTime: startTime,\n        target: target,\n        timeConstant: timeConstant,\n        type: 'setTarget'\n      };\n    };\n\n    exports.AutomationEventList = AutomationEventList;\n    exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;\n    exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;\n    exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;\n    exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;\n    exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;\n    exports.createSetValueAutomationEvent = createSetValueAutomationEvent;\n    exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","export const MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;\nexport const MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT;\n//# sourceMappingURL=/build/es2019/constants.js.map","export const createAbortError = () => {\n    try {\n        return new DOMException('', 'AbortError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 20;\n        err.name = 'AbortError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/abort-error.js.map","export const createAddAudioNodeConnections = (audioNodeConnectionsStore) => {\n    return (audioNode, audioNodeRenderer, nativeAudioNode) => {\n        const activeInputs = [];\n        for (let i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {\n            activeInputs.push(new Set());\n        }\n        audioNodeConnectionsStore.set(audioNode, {\n            activeInputs,\n            outputs: new Set(),\n            passiveInputs: new WeakMap(),\n            renderer: audioNodeRenderer\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-audio-node-connections.js.map","export const createAddAudioParamConnections = (audioParamConnectionsStore) => {\n    return (audioParam, audioParamRenderer) => {\n        audioParamConnectionsStore.set(audioParam, { activeInputs: new Set(), passiveInputs: new WeakMap(), renderer: audioParamRenderer });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-audio-param-connections.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { isConstructible } from '../helpers/is-constructible';\nimport { splitImportStatements } from '../helpers/split-import-statements';\nconst verifyParameterDescriptors = (parameterDescriptors) => {\n    if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {\n        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');\n    }\n};\nconst verifyProcessorCtor = (processorCtor) => {\n    if (!isConstructible(processorCtor)) {\n        throw new TypeError('The given value for processorCtor should be a constructor.');\n    }\n    if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {\n        throw new TypeError('The given value for processorCtor should have a prototype.');\n    }\n};\nexport const createAddAudioWorkletModule = (createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getBackupNativeContext, getNativeContext, ongoingRequests, resolvedRequests, window) => {\n    return (context, moduleURL, options = { credentials: 'omit' }) => {\n        const nativeContext = getNativeContext(context);\n        const absoluteUrl = (new URL(moduleURL, window.location.href)).toString();\n        // Bug #59: Only Chrome & Opera do implement the audioWorklet property.\n        if (nativeContext.audioWorklet !== undefined) {\n            return fetchSource(moduleURL)\n                .then((source) => {\n                const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n                /*\n                 * Bug #170: Chrome and Opera do call process() with an array with empty channelData for each input if no input is\n                 * connected.\n                 *\n                 * This is the unminified version of the code used below:\n                 *\n                 * ```js\n                 * `${ importStatements };\n                 * ((registerProcessor) => {${ sourceWithoutImportStatements }\n                 * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {\n                 *\n                 *     process (inputs, outputs, parameters) {\n                 *         return super.process(\n                 *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),\n                 *             outputs,\n                 *             parameters\n                 *         );\n                 *     }\n                 *\n                 * }))`\n                 * ```\n                 */\n                const wrappedSource = `${importStatements};(registerProcessor=>{${sourceWithoutImportStatements}\n})((n,p)=>registerProcessor(n,class extends p{process(i,o,p){return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))`; // tslint:disable-line:max-line-length\n                const blob = new Blob([wrappedSource], { type: 'application/javascript; charset=utf-8' });\n                const url = URL.createObjectURL(blob);\n                const backupNativeContext = getBackupNativeContext(nativeContext);\n                const nativeContextOrBackupNativeContext = (backupNativeContext !== null) ? backupNativeContext : nativeContext;\n                return nativeContextOrBackupNativeContext.audioWorklet\n                    .addModule(url, options)\n                    .then(() => URL.revokeObjectURL(url))\n                    // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n                    .catch((err) => {\n                    URL.revokeObjectURL(url);\n                    if (err.code === undefined || err.name === 'SyntaxError') {\n                        err.code = 12;\n                    }\n                    throw err;\n                });\n            });\n        }\n        const resolvedRequestsOfContext = resolvedRequests.get(context);\n        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {\n            return Promise.resolve();\n        }\n        const ongoingRequestsOfContext = ongoingRequests.get(context);\n        if (ongoingRequestsOfContext !== undefined) {\n            const promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);\n            if (promiseOfOngoingRequest !== undefined) {\n                return promiseOfOngoingRequest;\n            }\n        }\n        const promise = fetchSource(moduleURL)\n            .then((source) => {\n            const [importStatements, sourceWithoutImportStatements] = splitImportStatements(source, absoluteUrl);\n            /*\n             * This is the unminified version of the code used below:\n             *\n             * ```js\n             * ${ importStatements };\n             * ((a, b) => {\n             *     (a[b] = a[b] || [ ]).push(\n             *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {\n             *             ${ sourceWithoutImportStatements }\n             *         }\n             *     );\n             * })(window, '_AWGS');\n             * ```\n             */\n            // tslint:disable-next-line:max-line-length\n            const wrappedSource = `${importStatements};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${sourceWithoutImportStatements}\n})})(window,'_AWGS')`;\n            // @todo Evaluating the given source code is a possible security problem.\n            return evaluateSource(wrappedSource);\n        })\n            .then(() => {\n            const evaluateAudioWorkletGlobalScope = window._AWGS.pop();\n            if (evaluateAudioWorkletGlobalScope === undefined) {\n                throw new SyntaxError();\n            }\n            exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => evaluateAudioWorkletGlobalScope(class AudioWorkletProcessor {\n            }, undefined, (name, processorCtor) => {\n                if (name.trim() === '') {\n                    throw createNotSupportedError();\n                }\n                const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n                if (nodeNameToProcessorConstructorMap !== undefined) {\n                    if (nodeNameToProcessorConstructorMap.has(name)) {\n                        throw createNotSupportedError();\n                    }\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    nodeNameToProcessorConstructorMap.set(name, processorCtor);\n                }\n                else {\n                    verifyProcessorCtor(processorCtor);\n                    verifyParameterDescriptors(processorCtor.parameterDescriptors);\n                    NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.set(nativeContext, new Map([[name, processorCtor]]));\n                }\n            }, nativeContext.sampleRate, undefined, undefined));\n        })\n            .catch((err) => {\n            if (err.code === undefined || err.name === 'SyntaxError') {\n                err.code = 12;\n            }\n            throw err;\n        });\n        if (ongoingRequestsOfContext === undefined) {\n            ongoingRequests.set(context, new Map([[moduleURL, promise]]));\n        }\n        else {\n            ongoingRequestsOfContext.set(moduleURL, promise);\n        }\n        promise\n            .then(() => {\n            const rslvdRqstsFCntxt = resolvedRequests.get(context);\n            if (rslvdRqstsFCntxt === undefined) {\n                resolvedRequests.set(context, new Set([moduleURL]));\n            }\n            else {\n                rslvdRqstsFCntxt.add(moduleURL);\n            }\n        })\n            .catch(() => { }) // tslint:disable-line:no-empty\n            // @todo Use finally when it becomes available in all supported browsers.\n            .then(() => {\n            const ngngRqstsFCntxt = ongoingRequests.get(context);\n            if (ngngRqstsFCntxt !== undefined) {\n                ngngRqstsFCntxt.delete(moduleURL);\n            }\n        });\n        return promise;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-audio-worklet-module.js.map","export const createAddSilentConnection = (createNativeGainNode) => {\n    return (nativeContext, nativeAudioScheduledSourceNode) => {\n        const nativeGainNode = createNativeGainNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete', gain: 0 });\n        nativeAudioScheduledSourceNode\n            .connect(nativeGainNode)\n            /*\n             * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n             * used here to make sure to connect the right destination.\n             */\n            .connect(nativeGainNode.context.destination);\n        const disconnect = () => {\n            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);\n            nativeAudioScheduledSourceNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-silent-connection.js.map","export const createAddUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext)\n            .add(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/add-unrendered-audio-worklet-node.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    fftSize: 2048,\n    maxDecibels: -30,\n    minDecibels: -100,\n    smoothingTimeConstant: 0.8\n};\nexport const createAnalyserNodeConstructor = (audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class AnalyserNode extends audionNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);\n            const analyserNodeRenderer = ((isNativeOfflineAudioContext(nativeContext))\n                ? createAnalyserNodeRenderer()\n                : null);\n            super(context, false, nativeAnalyserNode, analyserNodeRenderer);\n            this._nativeAnalyserNode = nativeAnalyserNode;\n        }\n        get fftSize() {\n            return this._nativeAnalyserNode.fftSize;\n        }\n        set fftSize(value) {\n            this._nativeAnalyserNode.fftSize = value;\n        }\n        get frequencyBinCount() {\n            return this._nativeAnalyserNode.frequencyBinCount;\n        }\n        get maxDecibels() {\n            return this._nativeAnalyserNode.maxDecibels;\n        }\n        set maxDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const maxDecibels = this._nativeAnalyserNode.maxDecibels;\n            this._nativeAnalyserNode.maxDecibels = value;\n            if (!(value > this._nativeAnalyserNode.minDecibels)) {\n                this._nativeAnalyserNode.maxDecibels = maxDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get minDecibels() {\n            return this._nativeAnalyserNode.minDecibels;\n        }\n        set minDecibels(value) {\n            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n            const minDecibels = this._nativeAnalyserNode.minDecibels;\n            this._nativeAnalyserNode.minDecibels = value;\n            if (!(this._nativeAnalyserNode.maxDecibels > value)) {\n                this._nativeAnalyserNode.minDecibels = minDecibels;\n                throw createIndexSizeError();\n            }\n        }\n        get smoothingTimeConstant() {\n            return this._nativeAnalyserNode.smoothingTimeConstant;\n        }\n        set smoothingTimeConstant(value) {\n            this._nativeAnalyserNode.smoothingTimeConstant = value;\n        }\n        getByteFrequencyData(array) {\n            this._nativeAnalyserNode.getByteFrequencyData(array);\n        }\n        getByteTimeDomainData(array) {\n            this._nativeAnalyserNode.getByteTimeDomainData(array);\n        }\n        getFloatFrequencyData(array) {\n            this._nativeAnalyserNode.getFloatFrequencyData(array);\n        }\n        getFloatTimeDomainData(array) {\n            this._nativeAnalyserNode.getFloatTimeDomainData(array);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/analyser-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAnalyserNodeRendererFactory = (createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAnalyserNodes = new WeakMap();\n        const createAnalyserNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAnalyserNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAnalyserNodeIsOwnedByContext = isOwnedByContext(nativeAnalyserNode, nativeOfflineAudioContext);\n            if (!nativeAnalyserNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAnalyserNode.channelCount,\n                    channelCountMode: nativeAnalyserNode.channelCountMode,\n                    channelInterpretation: nativeAnalyserNode.channelInterpretation,\n                    fftSize: nativeAnalyserNode.fftSize,\n                    maxDecibels: nativeAnalyserNode.maxDecibels,\n                    minDecibels: nativeAnalyserNode.minDecibels,\n                    smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant\n                };\n                nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);\n            return nativeAnalyserNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAnalyserNode !== undefined) {\n                    return Promise.resolve(renderedNativeAnalyserNode);\n                }\n                return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/analyser-node-renderer-factory.js.map","import { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from '../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createAudioBufferConstructor = (audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    let nativeOfflineAudioContext = null;\n    return class AudioBuffer {\n        constructor(options) {\n            if (nativeOfflineAudioContextConstructor === null) {\n                throw new Error('Missing the native OfflineAudioContext constructor.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            if (nativeOfflineAudioContext === null) {\n                nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n            }\n            /*\n             * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the\n             * factory function. But since Firefox also supports the constructor everything should be fine.\n             */\n            const audioBuffer = (nativeAudioBufferConstructor !== null &&\n                cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport)) ?\n                new nativeAudioBufferConstructor({ length, numberOfChannels, sampleRate }) :\n                nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate);\n            // Bug #99: Safari does not throw an error when the numberOfChannels is zero.\n            if (audioBuffer.numberOfChannels === 0) {\n                throw createNotSupportedError();\n            }\n            // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n            // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n            if (typeof audioBuffer.copyFromChannel !== 'function') {\n                wrapAudioBufferCopyChannelMethods(audioBuffer);\n                wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n            }\n            else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n            }\n            audioBufferStore.add(audioBuffer);\n            /*\n             * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native\n             * (Offline)AudioContexts.\n             */\n            return audioBuffer;\n        }\n        static [Symbol.hasInstance](instance) {\n            return (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype)\n                || (audioBufferStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-buffer-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    // Bug #149: Safari does not yet support the detune AudioParam.\n    loop: false,\n    loopEnd: 0,\n    loopStart: 0,\n    playbackRate: 1\n};\nexport const createAudioBufferSourceNodeConstructor = (audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class AudioBufferSourceNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const audioBufferSourceNodeRenderer = ((isOffline)\n                ? createAudioBufferSourceNodeRenderer()\n                : null);\n            super(context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);\n            this._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;\n            this._isBufferNullified = false;\n            this._isBufferSet = (options.buffer !== null && options.buffer !== undefined);\n            this._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;\n            this._onended = null;\n            // Bug #73: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._playbackRate = createAudioParam(this, isOffline, nativeAudioBufferSourceNode.playbackRate, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeAudioBufferSourceNode.buffer;\n        }\n        set buffer(value) {\n            // Bug #71: Edge does not allow to set the buffer to null.\n            try {\n                this._nativeAudioBufferSourceNode.buffer = value;\n            }\n            catch (err) {\n                if (value !== null || err.code !== 17) {\n                    throw err;\n                }\n                // This will modify the buffer in place. Luckily that works in Edge and has the same effect as setting the buffer to null.\n                if (this._nativeAudioBufferSourceNode.buffer !== null) {\n                    const buffer = this._nativeAudioBufferSourceNode.buffer;\n                    const numberOfChannels = buffer.numberOfChannels;\n                    for (let i = 0; i < numberOfChannels; i += 1) {\n                        buffer\n                            .getChannelData(i)\n                            .fill(0);\n                    }\n                    this._isBufferNullified = true;\n                }\n            }\n            // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.\n            if (value !== null) {\n                if (this._isBufferSet) {\n                    throw createInvalidStateError();\n                }\n                this._isBufferSet = true;\n            }\n        }\n        get loop() {\n            return this._nativeAudioBufferSourceNode.loop;\n        }\n        set loop(value) {\n            this._nativeAudioBufferSourceNode.loop = value;\n        }\n        get loopEnd() {\n            return this._nativeAudioBufferSourceNode.loopEnd;\n        }\n        set loopEnd(value) {\n            this._nativeAudioBufferSourceNode.loopEnd = value;\n        }\n        get loopStart() {\n            return this._nativeAudioBufferSourceNode.loopStart;\n        }\n        set loopStart(value) {\n            this._nativeAudioBufferSourceNode.loopStart = value;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = (typeof value === 'function') ? wrapEventListener(this, value) : null;\n            this._nativeAudioBufferSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeAudioBufferSourceNode.onended;\n            this._onended = (nativeOnEnded !== null && nativeOnEnded === wrappedListener)\n                ? value\n                : nativeOnEnded;\n        }\n        get playbackRate() {\n            return this._playbackRate;\n        }\n        start(when = 0, offset = 0, duration) {\n            this._nativeAudioBufferSourceNode.start(when, offset, duration);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.start = (duration === undefined) ? [when, offset] : [when, offset, duration];\n            }\n            else {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => setInternalStateToPassive(this), 1000);\n                };\n                this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeAudioBufferSourceNode.stop(when);\n            if (this._audioBufferSourceNodeRenderer !== null) {\n                this._audioBufferSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-buffer-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createAudioBufferSourceNodeRendererFactory = (connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioBufferSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createAudioBufferSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeAudioBufferSourceNodeIsOwnedByContext = isOwnedByContext(nativeAudioBufferSourceNode, nativeOfflineAudioContext);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeAudioBufferSourceNode.buffer,\n                    channelCount: nativeAudioBufferSourceNode.channelCount,\n                    channelCountMode: nativeAudioBufferSourceNode.channelCountMode,\n                    channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,\n                    // Bug #149: Safari does not yet support the detune AudioParam.\n                    loop: nativeAudioBufferSourceNode.loop,\n                    loopEnd: nativeAudioBufferSourceNode.loopEnd,\n                    loopStart: nativeAudioBufferSourceNode.loopStart,\n                    playbackRate: nativeAudioBufferSourceNode.playbackRate.value\n                };\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeAudioBufferSourceNode.start(...start);\n                }\n                if (stop !== null) {\n                    nativeAudioBufferSourceNode.stop(stop);\n                }\n            }\n            renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);\n            if (!nativeAudioBufferSourceNodeIsOwnedByContext) {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            else {\n                // Bug #149: Safari does not yet support the detune AudioParam.\n                await connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);\n            return nativeAudioBufferSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioBufferSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioBufferSourceNode);\n                }\n                return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-buffer-source-node-renderer-factory.js.map","import { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createAudioContextConstructor = (baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) => {\n    return class AudioContext extends baseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency = (typeof nativeAudioContext.baseLatency === 'number')\n                ? nativeAudioContext.baseLatency\n                : (latencyHint === 'balanced')\n                    ? (512 / sampleRate)\n                    : (latencyHint === 'interactive' || latencyHint === undefined)\n                        ? (256 / sampleRate)\n                        : (latencyHint === 'playback')\n                            ? (1024 / sampleRate)\n                            /*\n                             * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                             * ScriptProcessorNode.\n                             */\n                            : ((Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate);\n            this._nativeAudioContext = nativeAudioContext;\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually changes\n             * to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return (this._state !== null) ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext\n                    .close()\n                    .then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close();\n            /*\n             * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n             * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));\n             */\n        }\n        createMediaElementSource(mediaElement) {\n            return new mediaElementAudioSourceNodeConstructor(this, { mediaElement });\n        }\n        createMediaStreamDestination() {\n            return new mediaStreamAudioDestinationNodeConstructor(this);\n        }\n        createMediaStreamSource(mediaStream) {\n            return new mediaStreamAudioSourceNodeConstructor(this, { mediaStream });\n        }\n        createMediaStreamTrackSource(mediaStreamTrack) {\n            return new mediaStreamTrackAudioSourceNodeConstructor(this, { mediaStreamTrack });\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this\n                                .resume()\n                                .then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext\n                .resume()\n                .catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext\n                .suspend()\n                .catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-context-constructor.js.map","export const createAudioDestinationNodeConstructor = (audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) => {\n    return class AudioDestinationNode extends audioNodeConstructor {\n        constructor(context, channelCount) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);\n            const audioDestinationNodeRenderer = ((isOffline)\n                ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode)\n                : null);\n            super(context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);\n            this._isNodeOfNativeOfflineAudioContext = isOffline;\n            this._nativeAudioDestinationNode = nativeAudioDestinationNode;\n        }\n        get channelCount() {\n            return this._nativeAudioDestinationNode.channelCount;\n        }\n        set channelCount(value) {\n            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.\n            // Bug #54: Firefox does throw an IndexSizeError.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            // Bug #47: The AudioDestinationNode in Edge and Safari do not initialize the maxChannelCount property correctly.\n            if (value > this._nativeAudioDestinationNode.maxChannelCount) {\n                throw createIndexSizeError();\n            }\n            this._nativeAudioDestinationNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioDestinationNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            // Bug #53: No browser does throw an exception yet.\n            if (this._isNodeOfNativeOfflineAudioContext) {\n                throw createInvalidStateError();\n            }\n            this._nativeAudioDestinationNode.channelCountMode = value;\n        }\n        get maxChannelCount() {\n            return this._nativeAudioDestinationNode.maxChannelCount;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-destination-node-constructor.js.map","export const createAudioDestinationNodeRenderer = (renderInputsOfAudioNode) => {\n    let nativeAudioDestinationNodePromise = null;\n    const createAudioDestinationNode = async (proxy, nativeOfflineAudioContext, trace) => {\n        const nativeAudioDestinationNode = nativeOfflineAudioContext.destination;\n        await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);\n        return nativeAudioDestinationNode;\n    };\n    return {\n        render(proxy, nativeOfflineAudioContext, trace) {\n            if (nativeAudioDestinationNodePromise === null) {\n                nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);\n            }\n            return nativeAudioDestinationNodePromise;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-destination-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nexport const createAudioListenerFactory = (createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) => {\n    return (context, nativeContext) => {\n        const nativeListener = nativeContext.listener;\n        // Bug #117: Only Chrome & Opera support the new interface already.\n        const createFakeAudioParams = () => {\n            const channelMergerNode = createNativeChannelMergerNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'speakers', numberOfInputs: 9 });\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);\n            const createFakeAudioParam = (input, value) => {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete', offset: value });\n                constantSourceNode.connect(channelMergerNode, 0, input);\n                // @todo This should be stopped when the context is closed.\n                constantSourceNode.start();\n                Object.defineProperty(constantSourceNode.offset, 'defaultValue', {\n                    get() {\n                        return value;\n                    }\n                });\n                /*\n                 * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n                 * minValue for GainNodes.\n                 */\n                return createAudioParam({ context }, isOffline, constantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            };\n            let lastOrientation = [0, 0, -1, 0, 1, 0];\n            let lastPosition = [0, 0, 0];\n            scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n                const orientation = [\n                    inputBuffer.getChannelData(0)[0],\n                    inputBuffer.getChannelData(1)[0],\n                    inputBuffer.getChannelData(2)[0],\n                    inputBuffer.getChannelData(3)[0],\n                    inputBuffer.getChannelData(4)[0],\n                    inputBuffer.getChannelData(5)[0]\n                ];\n                if (orientation.some((value, index) => (value !== lastOrientation[index]))) {\n                    nativeListener.setOrientation(...orientation); // tslint:disable-line:deprecation\n                    lastOrientation = orientation;\n                }\n                const positon = [\n                    inputBuffer.getChannelData(6)[0],\n                    inputBuffer.getChannelData(7)[0],\n                    inputBuffer.getChannelData(8)[0]\n                ];\n                if (positon.some((value, index) => (value !== lastPosition[index]))) {\n                    nativeListener.setPosition(...positon); // tslint:disable-line:deprecation\n                    lastPosition = positon;\n                }\n            };\n            channelMergerNode.connect(scriptProcessorNode);\n            return {\n                forwardX: createFakeAudioParam(0, 0),\n                forwardY: createFakeAudioParam(1, 0),\n                forwardZ: createFakeAudioParam(2, -1),\n                positionX: createFakeAudioParam(6, 0),\n                positionY: createFakeAudioParam(7, 0),\n                positionZ: createFakeAudioParam(8, 0),\n                upX: createFakeAudioParam(3, 0),\n                upY: createFakeAudioParam(4, 1),\n                upZ: createFakeAudioParam(5, 0)\n            };\n        };\n        const { forwardX, forwardY, forwardZ, positionX, positionY, positionZ, upX, upY, upZ } = (nativeListener.forwardX === undefined)\n            ? createFakeAudioParams()\n            : nativeListener;\n        return {\n            get forwardX() {\n                return forwardX;\n            },\n            get forwardY() {\n                return forwardY;\n            },\n            get forwardZ() {\n                return forwardZ;\n            },\n            get positionX() {\n                return positionX;\n            },\n            get positionY() {\n                return positionY;\n            },\n            get positionZ() {\n                return positionZ;\n            },\n            get upX() {\n                return upX;\n            },\n            get upY() {\n                return upY;\n            },\n            get upZ() {\n                return upZ;\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-listener-factory.js.map","import { AUDIO_NODE_STORE, EVENT_LISTENERS } from '../globals';\nimport { isAudioNode } from '../guards/audio-node';\nimport { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nimport { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { connectNativeAudioNodeToNativeAudioNode } from '../helpers/connect-native-audio-node-to-native-audio-node';\nimport { deleteEventListenerOfAudioNode } from '../helpers/delete-event-listeners-of-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from '../helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from '../helpers/get-audio-param-connections';\nimport { getEventListenersOfAudioNode } from '../helpers/get-event-listeners-of-audio-node';\nimport { getNativeAudioNode } from '../helpers/get-native-audio-node';\nimport { getNativeAudioParam } from '../helpers/get-native-audio-param';\nimport { getValueForKey } from '../helpers/get-value-for-key';\nimport { insertElementInSet } from '../helpers/insert-element-in-set';\nimport { isActiveAudioNode } from '../helpers/is-active-audio-node';\nimport { isPartOfACycle } from '../helpers/is-part-of-a-cycle';\nimport { isPassiveAudioNode } from '../helpers/is-passive-audio-node';\nimport { pickElementFromSet } from '../helpers/pick-element-from-set';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassiveWhenNecessary } from '../helpers/set-internal-state-to-passive-when-necessary';\nimport { testAudioNodeDisconnectMethodSupport } from '../helpers/test-audio-node-disconnect-method-support';\nimport { visitEachAudioNodeOnce } from '../helpers/visit-each-audio-node-once';\nimport { wrapAudioNodeDisconnectMethod } from '../helpers/wrap-audio-node-disconnect-method';\nconst addActiveInputConnectionToAudioNode = (activeInputs, source, [output, input, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs[input], [source, output, eventListener], (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output), ignoreDuplicates);\n};\nconst addActiveInputConnectionToAudioParam = (activeInputs, source, [output, eventListener], ignoreDuplicates) => {\n    insertElementInSet(activeInputs, [source, output, eventListener], (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output), ignoreDuplicates);\n};\nconst deleteActiveInputConnectionToAudioNode = (activeInputs, source, output, input) => {\n    return pickElementFromSet(activeInputs[input], (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output));\n};\nconst deleteActiveInputConnectionToAudioParam = (activeInputs, source, output) => {\n    return pickElementFromSet(activeInputs, (activeInputConnection) => (activeInputConnection[0] === source && activeInputConnection[1] === output));\n};\nconst addPassiveInputConnectionToAudioNode = (passiveInputs, input, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, input, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, input, eventListener], (passiveInputConnection) => (passiveInputConnection[0] === output && passiveInputConnection[1] === input), ignoreDuplicates);\n    }\n};\nconst addPassiveInputConnectionToAudioParam = (passiveInputs, [source, output, eventListener], ignoreDuplicates) => {\n    const passiveInputConnections = passiveInputs.get(source);\n    if (passiveInputConnections === undefined) {\n        passiveInputs.set(source, new Set([[output, eventListener]]));\n    }\n    else {\n        insertElementInSet(passiveInputConnections, [output, eventListener], (passiveInputConnection) => (passiveInputConnection[0] === output), ignoreDuplicates);\n    }\n};\nconst deletePassiveInputConnectionToAudioNode = (passiveInputs, source, output, input) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => (passiveInputConnection[0] === output && passiveInputConnection[1] === input));\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\nconst deletePassiveInputConnectionToAudioParam = (passiveInputs, source, output) => {\n    const passiveInputConnections = getValueForKey(passiveInputs, source);\n    const matchingConnection = pickElementFromSet(passiveInputConnections, (passiveInputConnection) => (passiveInputConnection[0] === output));\n    if (passiveInputConnections.size === 0) {\n        passiveInputs.delete(source);\n    }\n    return matchingConnection;\n};\nconst addConnectionToAudioNodeOfAudioContext = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = ((isActive) => {\n        const nativeDestinationAudioNode = getNativeAudioNode(destination);\n        const nativeSourceAudioNode = getNativeAudioNode(source);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n            addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n            }\n            if (isPassiveAudioNode(destination)) {\n                setInternalStateToActive(destination);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);\n            addPassiveInputConnectionToAudioNode(passiveInputs, input, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);\n            }\n            if (isActiveAudioNode(destination)) {\n                setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n            }\n        }\n    });\n    if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input), true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst addConnectionToAudioNodeOfOfflineAudioContext = (source, destination, output, input) => {\n    const { outputs } = getAudioNodeConnections(source);\n    if (insertElementInSet(outputs, [destination, output, input], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input), true)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, null], true);\n        return true;\n    }\n    return false;\n};\nconst addConnectionToAudioParamOfAudioContext = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const { outputs } = getAudioNodeConnections(source);\n    const eventListeners = getEventListenersOfAudioNode(source);\n    const eventListener = ((isActive) => {\n        const nativeAudioNode = getNativeAudioNode(source);\n        const nativeAudioParam = getNativeAudioParam(destination);\n        if (isActive) {\n            const partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n            addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                nativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }\n        else {\n            const partialConnection = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);\n            addPassiveInputConnectionToAudioParam(passiveInputs, partialConnection, false);\n            if (!isPartOfACycle(source)) {\n                nativeAudioNode.disconnect(nativeAudioParam, output);\n            }\n        }\n    });\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output), true)) {\n        eventListeners.add(eventListener);\n        if (isActiveAudioNode(source)) {\n            addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);\n        }\n        else {\n            addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);\n        }\n        return true;\n    }\n    return false;\n};\nconst addConnectionToAudioParamOfOfflineAudioContext = (source, destination, output) => {\n    const { outputs } = getAudioNodeConnections(source);\n    if (insertElementInSet(outputs, [destination, output], (outputConnection) => (outputConnection[0] === destination && outputConnection[1] === output), true)) {\n        const { activeInputs } = getAudioParamConnections(destination);\n        addActiveInputConnectionToAudioParam(activeInputs, source, [output, null], true);\n        return true;\n    }\n    return false;\n};\nconst deleteActiveInputConnection = (activeInputConnections, source, output) => {\n    for (const activeInputConnection of activeInputConnections) {\n        if (activeInputConnection[0] === source && activeInputConnection[1] === output) {\n            activeInputConnections.delete(activeInputConnection);\n            return activeInputConnection;\n        }\n    }\n    return null;\n};\nconst deleteInputConnectionOfAudioNode = (source, destination, output, input) => {\n    const { activeInputs, passiveInputs } = getAudioNodeConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);\n        return [passiveInputConnection[2], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputConnectionOfAudioParam = (source, destination, output) => {\n    const { activeInputs, passiveInputs } = getAudioParamConnections(destination);\n    const activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);\n    if (activeInputConnection === null) {\n        const passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);\n        return [passiveInputConnection[1], false];\n    }\n    return [activeInputConnection[2], true];\n};\nconst deleteInputsOfAudioNode = (source, destination, output, input) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioNode(source, destination, output, input);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isPartOfACycle(source)) {\n            disconnectNativeAudioNodeFromNativeAudioNode(getNativeAudioNode(source), getNativeAudioNode(destination), output, input);\n        }\n    }\n    if (isActiveAudioNode(destination)) {\n        const { activeInputs } = getAudioNodeConnections(destination);\n        setInternalStateToPassiveWhenNecessary(destination, activeInputs);\n    }\n};\nconst deleteInputsOfAudioParam = (source, destination, output) => {\n    const [listener, isActive] = deleteInputConnectionOfAudioParam(source, destination, output);\n    if (listener !== null) {\n        deleteEventListenerOfAudioNode(source, listener);\n        if (isActive && !isPartOfACycle(source)) {\n            getNativeAudioNode(source)\n                .disconnect(getNativeAudioParam(destination), output);\n        }\n    }\n};\nconst deleteAnyConnection = (source) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, ...outputConnection);\n        }\n        destinations.push(outputConnection[0]);\n    }\n    audioNodeConnectionsOfSource.outputs.clear();\n    return destinations;\n};\nconst deleteConnectionAtOutput = (source, output) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    const destinations = [];\n    for (const outputConnection of audioNodeConnectionsOfSource.outputs) {\n        if (outputConnection[1] === output) {\n            if (isAudioNodeOutputConnection(outputConnection)) {\n                deleteInputsOfAudioNode(source, ...outputConnection);\n            }\n            else {\n                deleteInputsOfAudioParam(source, ...outputConnection);\n            }\n            destinations.push(outputConnection[0]);\n            audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        }\n    }\n    return destinations;\n};\nconst deleteConnectionToDestination = (source, destination, output, input) => {\n    const audioNodeConnectionsOfSource = getAudioNodeConnections(source);\n    return Array\n        .from(audioNodeConnectionsOfSource.outputs)\n        .filter((outputConnection) => (outputConnection[0] === destination\n        && (output === undefined || outputConnection[1] === output)\n        && (input === undefined || outputConnection[2] === input)))\n        .map((outputConnection) => {\n        if (isAudioNodeOutputConnection(outputConnection)) {\n            deleteInputsOfAudioNode(source, ...outputConnection);\n        }\n        else {\n            deleteInputsOfAudioParam(source, ...outputConnection);\n        }\n        audioNodeConnectionsOfSource.outputs.delete(outputConnection);\n        return outputConnection[0];\n    });\n};\nexport const createAudioNodeConstructor = (addAudioNodeConnections, auxiliaryGainNodeStore, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) => {\n    return class AudioNode extends eventTargetConstructor {\n        constructor(context, isActive, nativeAudioNode, audioNodeRenderer) {\n            super(nativeAudioNode);\n            this._context = context;\n            this._nativeAudioNode = nativeAudioNode;\n            const nativeContext = getNativeContext(context);\n            // Bug #12: Safari does not support to disconnect a specific destination.\n            if (isNativeAudioContext(nativeContext) && true !== cacheTestResult(testAudioNodeDisconnectMethodSupport, () => {\n                return testAudioNodeDisconnectMethodSupport(nativeContext);\n            })) {\n                wrapAudioNodeDisconnectMethod(nativeAudioNode);\n            }\n            AUDIO_NODE_STORE.set(this, nativeAudioNode);\n            EVENT_LISTENERS.set(this, new Set());\n            if (isActive) {\n                setInternalStateToActive(this);\n            }\n            addAudioNodeConnections(this, audioNodeRenderer, nativeAudioNode);\n        }\n        get channelCount() {\n            return this._nativeAudioNode.channelCount;\n        }\n        set channelCount(value) {\n            this._nativeAudioNode.channelCount = value;\n        }\n        get channelCountMode() {\n            return this._nativeAudioNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            this._nativeAudioNode.channelCountMode = value;\n        }\n        get channelInterpretation() {\n            return this._nativeAudioNode.channelInterpretation;\n        }\n        set channelInterpretation(value) {\n            this._nativeAudioNode.channelInterpretation = value;\n        }\n        get context() {\n            return this._context;\n        }\n        get numberOfInputs() {\n            return this._nativeAudioNode.numberOfInputs;\n        }\n        get numberOfOutputs() {\n            return this._nativeAudioNode.numberOfOutputs;\n        }\n        connect(destination, output = 0, input = 0) {\n            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.\n            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n            const nativeContext = getNativeContext(this._context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {\n                throw createInvalidAccessError();\n            }\n            if (isAudioNode(destination)) {\n                const nativeDestinationAudioNode = getNativeAudioNode(destination);\n                try {\n                    const connection = connectNativeAudioNodeToNativeAudioNode(this._nativeAudioNode, nativeDestinationAudioNode, output, input);\n                    if (isOffline || isPassiveAudioNode(this)) {\n                        this._nativeAudioNode.disconnect(...connection);\n                    }\n                    else if (isPassiveAudioNode(destination)) {\n                        setInternalStateToActive(destination);\n                    }\n                    // An AudioWorklet needs a connection because it otherwise may truncate the input array.\n                    // @todo Count the number of connections which depend on this auxiliary GainNode to know when it can be removed again.\n                    if (isAudioWorkletNode(destination)) {\n                        const auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeDestinationAudioNode);\n                        if (auxiliaryGainNodes === undefined) {\n                            const nativeGainNode = nativeContext.createGain();\n                            nativeGainNode.connect(connection[0], 0, connection[2]);\n                            auxiliaryGainNodeStore.set(nativeDestinationAudioNode, new Map([[input, nativeGainNode]]));\n                        }\n                        else if (auxiliaryGainNodes.get(input) === undefined) {\n                            const nativeGainNode = nativeContext.createGain();\n                            nativeGainNode.connect(connection[0], 0, connection[2]);\n                            auxiliaryGainNodes.set(input, nativeGainNode);\n                        }\n                    }\n                }\n                catch (err) {\n                    // Bug #41: Only Chrome, Firefox and Opera throw the correct exception by now.\n                    if (err.code === 12) {\n                        throw createInvalidAccessError();\n                    }\n                    throw err;\n                }\n                const isNewConnectionToAudioNode = isOffline\n                    ? addConnectionToAudioNodeOfOfflineAudioContext(this, destination, output, input)\n                    : addConnectionToAudioNodeOfAudioContext(this, destination, output, input);\n                // Bug #164: Only Firefox detects cycles so far.\n                if (isNewConnectionToAudioNode) {\n                    const cycles = detectCycles([this], destination);\n                    visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n                }\n                return destination;\n            }\n            const nativeAudioParam = getNativeAudioParam(destination);\n            /*\n             * Bug #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an\n             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify\n             * Safari.\n             */\n            if (nativeAudioParam.name === 'playbackRate') {\n                throw createNotSupportedError();\n            }\n            try {\n                this._nativeAudioNode.connect(nativeAudioParam, output);\n                if (isOffline || isPassiveAudioNode(this)) {\n                    this._nativeAudioNode.disconnect(nativeAudioParam, output);\n                }\n            }\n            catch (err) {\n                // Bug #58: Only Firefox does throw an InvalidStateError yet.\n                if (err.code === 12) {\n                    throw createInvalidAccessError();\n                }\n                throw err;\n            }\n            const isNewConnectionToAudioParam = isOffline\n                ? addConnectionToAudioParamOfOfflineAudioContext(this, destination, output)\n                : addConnectionToAudioParamOfAudioContext(this, destination, output);\n            // Bug #164: Only Firefox detects cycles so far.\n            if (isNewConnectionToAudioParam) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, createIncrementCycleCounter(isOffline));\n            }\n        }\n        disconnect(destinationOrOutput, output, input) {\n            let destinations;\n            if (destinationOrOutput === undefined) {\n                destinations = deleteAnyConnection(this);\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionAtOutput(this, destinationOrOutput);\n            }\n            else {\n                if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {\n                    throw createIndexSizeError();\n                }\n                if (isAudioNode(destinationOrOutput)\n                    && input !== undefined\n                    && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {\n                    throw createIndexSizeError();\n                }\n                destinations = deleteConnectionToDestination(this, destinationOrOutput, output, input);\n                if (destinations.length === 0) {\n                    throw createInvalidAccessError();\n                }\n            }\n            // Bug #164: Only Firefox detects cycles so far.\n            for (const destination of destinations) {\n                const cycles = detectCycles([this], destination);\n                visitEachAudioNodeOnce(cycles, decrementCycleCounter);\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-node-constructor.js.map","import { AutomationEventList } from 'automation-events';\nexport const createAudioParamFactory = (addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor) => {\n    return (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam, maxValue = null, minValue = null) => {\n        const automationEventList = new AutomationEventList(nativeAudioParam.defaultValue);\n        const audioParamRenderer = (isAudioParamOfOfflineAudioContext) ? createAudioParamRenderer(automationEventList) : null;\n        const audioParam = {\n            get defaultValue() {\n                return nativeAudioParam.defaultValue;\n            },\n            get maxValue() {\n                return (maxValue === null) ? nativeAudioParam.maxValue : maxValue;\n            },\n            get minValue() {\n                return (minValue === null) ? nativeAudioParam.minValue : minValue;\n            },\n            get value() {\n                return nativeAudioParam.value;\n            },\n            set value(value) {\n                nativeAudioParam.value = value;\n                // Bug #98: Edge, Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().\n                audioParam.setValueAtTime(value, audioNode.context.currentTime);\n            },\n            cancelAndHoldAtTime(cancelTime) {\n                // Bug #28: Edge, Firefox & Safari do not yet implement cancelAndHoldAtTime().\n                if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    nativeAudioParam.cancelAndHoldAtTime(cancelTime);\n                }\n                else {\n                    const previousLastEvent = Array\n                        .from(automationEventList)\n                        .pop();\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));\n                    const currentLastEvent = Array\n                        .from(automationEventList)\n                        .pop();\n                    nativeAudioParam.cancelScheduledValues(cancelTime);\n                    if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {\n                        if (currentLastEvent.type === 'exponentialRampToValue') {\n                            nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'linearRampToValue') {\n                            nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);\n                        }\n                        else if (currentLastEvent.type === 'setValue') {\n                            nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);\n                        }\n                        else if (currentLastEvent.type === 'setValueCurve') {\n                            nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);\n                        }\n                    }\n                }\n                return audioParam;\n            },\n            cancelScheduledValues(cancelTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));\n                nativeAudioParam.cancelScheduledValues(cancelTime);\n                return audioParam;\n            },\n            exponentialRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.exponentialRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            linearRampToValueAtTime(value, endTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));\n                nativeAudioParam.linearRampToValueAtTime(value, endTime);\n                return audioParam;\n            },\n            setTargetAtTime(target, startTime, timeConstant) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));\n                nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);\n                return audioParam;\n            },\n            setValueAtTime(value, startTime) {\n                if (audioParamRenderer === null) {\n                    automationEventList.flush(audioNode.context.currentTime);\n                }\n                automationEventList.add(createSetValueAutomationEvent(value, startTime));\n                nativeAudioParam.setValueAtTime(value, startTime);\n                return audioParam;\n            },\n            setValueCurveAtTime(values, startTime, duration) {\n                /*\n                 * Bug #152: Safari does not correctly interpolate the values of the curve.\n                 * @todo Unfortunately there is no way to test for this behavior in synchronous fashion which is why testing for the\n                 * existence of the webkitAudioContext is used as a workaround here.\n                 */\n                if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {\n                    const endTime = startTime + duration;\n                    const sampleRate = audioNode.context.sampleRate;\n                    const firstSample = Math.ceil(startTime * sampleRate);\n                    const lastSample = Math.floor((endTime) * sampleRate);\n                    const numberOfInterpolatedValues = lastSample - firstSample;\n                    const interpolatedValues = new Float32Array(numberOfInterpolatedValues);\n                    for (let i = 0; i < numberOfInterpolatedValues; i += 1) {\n                        const theoreticIndex = ((values.length - 1) / duration) * (((firstSample + i) / sampleRate) - startTime);\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        interpolatedValues[i] = (lowerIndex === upperIndex)\n                            ? values[lowerIndex]\n                            : ((1 - (theoreticIndex - lowerIndex)) * values[lowerIndex])\n                                + ((1 - (upperIndex - theoreticIndex)) * values[upperIndex]);\n                    }\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);\n                    const timeOfLastSample = lastSample / sampleRate;\n                    if (timeOfLastSample < endTime) {\n                        audioParam.setValueAtTime(interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);\n                    }\n                    audioParam.setValueAtTime(values[values.length - 1], endTime);\n                }\n                else {\n                    if (audioParamRenderer === null) {\n                        automationEventList.flush(audioNode.context.currentTime);\n                    }\n                    automationEventList.add(createSetValueCurveAutomationEvent(values, startTime, duration));\n                    nativeAudioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                return audioParam;\n            }\n        };\n        audioParamStore.set(audioParam, nativeAudioParam);\n        audioParamAudioNodeStore.set(audioParam, audioNode);\n        addAudioParamConnections(audioParam, audioParamRenderer);\n        return audioParam;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-param-factory.js.map","export const createAudioParamRenderer = (automationEventList) => {\n    return {\n        replay(audioParam) {\n            for (const automationEvent of automationEventList) {\n                if (automationEvent.type === 'exponentialRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.exponentialRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'linearRampToValue') {\n                    const { endTime, value } = automationEvent;\n                    audioParam.linearRampToValueAtTime(value, endTime);\n                }\n                else if (automationEvent.type === 'setTarget') {\n                    const { startTime, target, timeConstant } = automationEvent;\n                    audioParam.setTargetAtTime(target, startTime, timeConstant);\n                }\n                else if (automationEvent.type === 'setValue') {\n                    const { startTime, value } = automationEvent;\n                    audioParam.setValueAtTime(value, startTime);\n                }\n                else if (automationEvent.type === 'setValueCurve') {\n                    const { duration, startTime, values } = automationEvent;\n                    audioParam.setValueCurveAtTime(values, startTime, duration);\n                }\n                else {\n                    throw new Error(\"Can't apply an unknown automation.\");\n                }\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-param-renderer.js.map","import { NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS } from '../globals';\nimport { ReadOnlyMap } from '../read-only-map';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 1,\n    numberOfOutputs: 1,\n    outputChannelCount: undefined,\n    parameterData: {},\n    processorOptions: {}\n};\nconst createChannelCount = (length) => {\n    const channelCount = [];\n    for (let i = 0; i < length; i += 1) {\n        channelCount.push(1);\n    }\n    return channelCount;\n};\nconst sanitizedOptions = (options) => {\n    return {\n        ...options,\n        outputChannelCount: (options.outputChannelCount !== undefined) ?\n            options.outputChannelCount :\n            (options.numberOfInputs === 1 && options.numberOfOutputs === 1) ?\n                /*\n                 * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why\n                 * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That\n                 * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.\n                 */\n                [options.channelCount] :\n                createChannelCount(options.numberOfOutputs)\n    };\n};\nexport const createAudioWorkletNodeConstructor = (addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, wrapEventListener) => {\n    return class AudioWorkletNode extends audioNodeConstructor {\n        constructor(context, name, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nodeNameToProcessorConstructorMap = NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS.get(nativeContext);\n            const processorConstructor = (nodeNameToProcessorConstructorMap === undefined) ?\n                undefined :\n                nodeNameToProcessorConstructorMap.get(name);\n            const nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);\n            const audioWorkletNodeRenderer = ((isOffline)\n                ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor)\n                : null);\n            /*\n             * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor\n             * returns false.\n             */\n            super(context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);\n            const parameters = [];\n            nativeAudioWorkletNode.parameters.forEach((nativeAudioParam, nm) => {\n                const audioParam = createAudioParam(this, isOffline, nativeAudioParam);\n                parameters.push([nm, audioParam]);\n            });\n            this._nativeAudioWorkletNode = nativeAudioWorkletNode;\n            this._onprocessorerror = null;\n            this._parameters = new ReadOnlyMap(parameters);\n            /*\n             * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to\n             * the destination.\n             */\n            if (isOffline) {\n                addUnrenderedAudioWorkletNode(nativeContext, this);\n            }\n        }\n        get onprocessorerror() {\n            return this._onprocessorerror;\n        }\n        set onprocessorerror(value) {\n            const wrappedListener = (typeof value === 'function')\n                ? wrapEventListener(this, value)\n                : null;\n            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;\n            const nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;\n            this._onprocessorerror = (nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener)\n                ? value\n                : nativeOnProcessorError;\n        }\n        get parameters() {\n            if (this._parameters === null) {\n                // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                return this._nativeAudioWorkletNode.parameters;\n            }\n            return this._parameters;\n        }\n        get port() {\n            return this._nativeAudioWorkletNode.port;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-worklet-node-constructor.js.map","import { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { getAudioNodeConnections } from '../helpers/get-audio-node-connections';\nimport { getAudioWorkletProcessor } from '../helpers/get-audio-worklet-processor';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst processBuffer = async (proxy, renderedBuffer, nativeOfflineAudioContext, options, processorConstructor, exposeCurrentFrameAndCurrentTime) => {\n    // Ceil the length to the next full render quantum.\n    // Bug #17: Safari does not yet expose the length.\n    const length = (renderedBuffer === null) ? (Math.ceil(proxy.context.length / 128) * 128) : renderedBuffer.length;\n    const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n    const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n    const processedBuffer = (numberOfOutputChannels === 0) ? null : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);\n    if (processorConstructor === undefined) {\n        throw new Error('Missing the processor constructor.');\n    }\n    const audioNodeConnections = getAudioNodeConnections(proxy);\n    const audioWorkletProcessor = await getAudioWorkletProcessor(nativeOfflineAudioContext, proxy);\n    const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n    const outputs = createNestedArrays(options.numberOfOutputs, options.outputChannelCount);\n    const parameters = Array\n        .from(proxy.parameters.keys())\n        .reduce((prmtrs, name) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n    for (let i = 0; i < length; i += 128) {\n        if (options.numberOfInputs > 0 && renderedBuffer !== null) {\n            for (let j = 0; j < options.numberOfInputs; j += 1) {\n                for (let k = 0; k < options.channelCount; k += 1) {\n                    copyFromChannel(renderedBuffer, inputs[j], k, k, i);\n                }\n            }\n        }\n        if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {\n            processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                copyFromChannel(renderedBuffer, parameters, name, numberOfInputChannels + index, i);\n            });\n        }\n        for (let j = 0; j < options.numberOfInputs; j += 1) {\n            for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                // The byteLength will be 0 when the ArrayBuffer was transferred.\n                if (outputs[j][k].byteLength === 0) {\n                    outputs[j][k] = new Float32Array(128);\n                }\n            }\n        }\n        try {\n            const potentiallyEmptyInputs = inputs\n                .map((input, index) => {\n                if (audioNodeConnections.activeInputs[index].size === 0) {\n                    return [];\n                }\n                return input;\n            });\n            const activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n            if (processedBuffer !== null) {\n                for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                    for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                        copyToChannel(processedBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                    }\n                    outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n                }\n            }\n            if (!activeSourceFlag) {\n                break;\n            }\n        }\n        catch (error) {\n            proxy.dispatchEvent(new ErrorEvent('processorerror', { error }));\n            break;\n        }\n    }\n    return processedBuffer;\n};\nexport const createAudioWorkletNodeRendererFactory = (connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (name, options, processorConstructor) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let processedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioWorkletNode = getNativeAudioNode(proxy);\n            let nativeOutputNodes = null;\n            const nativeAudioWorkletNodeIsOwnedByContext = isOwnedByContext(nativeAudioWorkletNode, nativeOfflineAudioContext);\n            // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n            if (nativeAudioWorkletNodeConstructor === null) {\n                const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n                const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {\n                    channelCount: Math.max(1, numberOfOutputChannels),\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    numberOfOutputs: Math.max(1, numberOfOutputChannels)\n                });\n                const outputChannelMergerNodes = [];\n                for (let i = 0; i < proxy.numberOfOutputs; i += 1) {\n                    outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: options.outputChannelCount[i]\n                    }));\n                }\n                const outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                    channelCount: options.channelCount,\n                    channelCountMode: options.channelCountMode,\n                    channelInterpretation: options.channelInterpretation,\n                    gain: 1\n                });\n                outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);\n                nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];\n            }\n            else if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, (nativeOutputNodes === null) ? nativeAudioWorkletNode : nativeOutputNodes[2]);\n            if (nativeOutputNodes !== null) {\n                if (processedBufferPromise === null) {\n                    if (processorConstructor === undefined) {\n                        throw new Error('Missing the processor constructor.');\n                    }\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n                    const numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;\n                    const numberOfParameters = (processorConstructor.parameterDescriptors === undefined)\n                        ? 0\n                        : processorConstructor.parameterDescriptors.length;\n                    const numberOfChannels = numberOfInputChannels + numberOfParameters;\n                    const renderBuffer = async () => {\n                        const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, \n                        // Ceil the length to the next full render quantum.\n                        // Bug #17: Safari does not yet expose the length.\n                        Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);\n                        const gainNodes = [];\n                        const inputChannelSplitterNodes = [];\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: options.channelCountMode,\n                                channelInterpretation: options.channelInterpretation,\n                                gain: 1\n                            }));\n                            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {\n                                channelCount: options.channelCount,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                numberOfOutputs: options.channelCount\n                            }));\n                        }\n                        const constantSourceNodes = await Promise\n                            .all(Array\n                            .from(proxy.parameters.values())\n                            .map(async (audioParam) => {\n                            const constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: audioParam.value\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);\n                            return constantSourceNode;\n                        }));\n                        const inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                            channelCount: 1,\n                            channelCountMode: 'explicit',\n                            channelInterpretation: 'speakers',\n                            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n                        });\n                        for (let i = 0; i < options.numberOfInputs; i += 1) {\n                            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n                            for (let j = 0; j < options.channelCount; j += 1) {\n                                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, (i * options.channelCount) + j);\n                            }\n                        }\n                        for (const [index, constantSourceNode] of constantSourceNodes.entries()) {\n                            constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                            constantSourceNode.start(0);\n                        }\n                        inputChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                        await Promise\n                            .all(gainNodes\n                            .map((gainNode) => renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace)));\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    };\n                    processedBufferPromise = processBuffer(proxy, (numberOfChannels === 0) ? null : await renderBuffer(), nativeOfflineAudioContext, options, processorConstructor, exposeCurrentFrameAndCurrentTime);\n                }\n                const processedBuffer = await processedBufferPromise;\n                const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n                const [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode] = nativeOutputNodes;\n                if (processedBuffer !== null) {\n                    audioBufferSourceNode.buffer = processedBuffer;\n                    audioBufferSourceNode.start(0);\n                }\n                audioBufferSourceNode.connect(outputChannelSplitterNode);\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < proxy.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n                }\n                return outputGainNode;\n            }\n            if (!nativeAudioWorkletNodeIsOwnedByContext) {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await renderAutomation(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            else {\n                for (const [nm, audioParam] of proxy.parameters.entries()) {\n                    await connectAudioParam(nativeOfflineAudioContext, audioParam, \n                    // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.\n                    nativeAudioWorkletNode.parameters.get(nm), trace);\n                }\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);\n            return nativeAudioWorkletNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);\n                const renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/audio-worklet-node-renderer-factory.js.map","export const createBaseAudioContextConstructor = (addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) => {\n    return class BaseAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext, numberOfChannels);\n            this._nativeContext = _nativeContext;\n            this._audioWorklet = (addAudioWorkletModule === undefined) ?\n                undefined :\n                {\n                    addModule: (moduleURL, options) => {\n                        return addAudioWorkletModule(this, moduleURL, options);\n                    }\n                };\n        }\n        get audioWorklet() {\n            return this._audioWorklet;\n        }\n        createAnalyser() {\n            return new analyserNodeConstructor(this);\n        }\n        createBiquadFilter() {\n            return new biquadFilterNodeConstructor(this);\n        }\n        createBuffer(numberOfChannels, length, sampleRate) {\n            return new audioBufferConstructor({ length, numberOfChannels, sampleRate });\n        }\n        createBufferSource() {\n            return new audioBufferSourceNodeConstructor(this);\n        }\n        createChannelMerger(numberOfInputs = 6) {\n            return new channelMergerNodeConstructor(this, { numberOfInputs });\n        }\n        createChannelSplitter(numberOfOutputs = 6) {\n            return new channelSplitterNodeConstructor(this, { numberOfOutputs });\n        }\n        createConstantSource() {\n            return new constantSourceNodeConstructor(this);\n        }\n        createConvolver() {\n            return new convolverNodeConstructor(this);\n        }\n        createDelay(maxDelayTime = 1) {\n            return new delayNodeConstructor(this, { maxDelayTime });\n        }\n        createDynamicsCompressor() {\n            return new dynamicsCompressorNodeConstructor(this);\n        }\n        createGain() {\n            return new gainNodeConstructor(this);\n        }\n        createIIRFilter(feedforward, feedback) {\n            return new iIRFilterNodeConstructor(this, { feedback, feedforward });\n        }\n        createOscillator() {\n            return new oscillatorNodeConstructor(this);\n        }\n        createPanner() {\n            return new pannerNodeConstructor(this);\n        }\n        createPeriodicWave(real, imag, constraints = { disableNormalization: false }) {\n            return new periodicWaveConstructor(this, { ...constraints, imag, real });\n        }\n        createStereoPanner() {\n            return new stereoPannerNodeConstructor(this);\n        }\n        createWaveShaper() {\n            return new waveShaperNodeConstructor(this);\n        }\n        decodeAudioData(audioData, successCallback, errorCallback) {\n            return decodeAudioData(this._nativeContext, audioData)\n                .then((audioBuffer) => {\n                if (typeof successCallback === 'function') {\n                    successCallback(audioBuffer);\n                }\n                return audioBuffer;\n            })\n                .catch((err) => {\n                if (typeof errorCallback === 'function') {\n                    errorCallback(err);\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/base-audio-context-constructor.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    Q: 1,\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 350,\n    gain: 0,\n    type: 'lowpass'\n};\nexport const createBiquadFilterNodeConstructor = (audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class BiquadFilterNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const biquadFilterNodeRenderer = ((isOffline) ? createBiquadFilterNodeRenderer() : null);\n            super(context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer);\n            // Bug #80: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._Q = createAudioParam(this, isOffline, nativeBiquadFilterNode.Q, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT), -1200 * Math.log2(MOST_POSITIVE_SINGLE_FLOAT));\n            /*\n             * Bug #77: Edge does not export the correct values for maxValue and minValue. Firefox & Safari do not export the correct value\n             * for minValue.\n             */\n            this._frequency = createAudioParam(this, isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0);\n            // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(MOST_POSITIVE_SINGLE_FLOAT), MOST_NEGATIVE_SINGLE_FLOAT);\n            this._nativeBiquadFilterNode = nativeBiquadFilterNode;\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get gain() {\n            return this._gain;\n        }\n        get Q() {\n            return this._Q;\n        }\n        get type() {\n            return this._nativeBiquadFilterNode.type;\n        }\n        set type(value) {\n            this._nativeBiquadFilterNode.type = value;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n            // Bug #68: Only Chrome, Firefox & Opera do throw an error if the parameters differ in their length.\n            if ((frequencyHz.length !== magResponse.length) || (magResponse.length !== phaseResponse.length)) {\n                throw createInvalidAccessError();\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/biquad-filter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createBiquadFilterNodeRendererFactory = (connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeBiquadFilterNodes = new WeakMap();\n        const createBiquadFilterNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeBiquadFilterNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeBiquadFilterNodeIsOwnedByContext = isOwnedByContext(nativeBiquadFilterNode, nativeOfflineAudioContext);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                const options = {\n                    Q: nativeBiquadFilterNode.Q.value,\n                    channelCount: nativeBiquadFilterNode.channelCount,\n                    channelCountMode: nativeBiquadFilterNode.channelCountMode,\n                    channelInterpretation: nativeBiquadFilterNode.channelInterpretation,\n                    detune: nativeBiquadFilterNode.detune.value,\n                    frequency: nativeBiquadFilterNode.frequency.value,\n                    gain: nativeBiquadFilterNode.gain.value,\n                    type: nativeBiquadFilterNode.type\n                };\n                nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);\n            if (!nativeBiquadFilterNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);\n            return nativeBiquadFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeBiquadFilterNode !== undefined) {\n                    return Promise.resolve(renderedNativeBiquadFilterNode);\n                }\n                return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/biquad-filter-node-renderer-factory.js.map","export const createCacheTestResult = (ongoingTests, testResults) => {\n    return (tester, test) => {\n        const cachedTestResult = testResults.get(tester);\n        if (cachedTestResult !== undefined) {\n            return cachedTestResult;\n        }\n        const ongoingTest = ongoingTests.get(tester);\n        if (ongoingTest !== undefined) {\n            return ongoingTest;\n        }\n        try {\n            const synchronousTestResult = test();\n            if (synchronousTestResult instanceof Promise) {\n                ongoingTests.set(tester, synchronousTestResult);\n                return synchronousTestResult\n                    .catch(() => false)\n                    .then((finalTestResult) => {\n                    ongoingTests.delete(tester);\n                    testResults.set(tester, finalTestResult);\n                    return finalTestResult;\n                });\n            }\n            testResults.set(tester, synchronousTestResult);\n            return synchronousTestResult;\n        }\n        catch {\n            testResults.set(tester, false);\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/cache-test-result.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 1,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    numberOfInputs: 6\n};\nexport const createChannelMergerNodeConstructor = (audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelMergerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);\n            const channelMergerNodeRenderer = ((isNativeOfflineAudioContext(nativeContext))\n                ? createChannelMergerNodeRenderer()\n                : null);\n            super(context, false, nativeChannelMergerNode, channelMergerNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-merger-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelMergerNodeRendererFactory = (createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfInputs: nativeAudioNode.numberOfInputs\n                };\n                nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-merger-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 6,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'discrete',\n    numberOfOutputs: 6\n};\nconst sanitizedOptions = (options) => {\n    return { ...options, channelCount: options.numberOfOutputs };\n};\nexport const createChannelSplitterNodeConstructor = (audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ChannelSplitterNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = sanitizedOptions({ ...DEFAULT_OPTIONS, ...options });\n            const nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);\n            const channelSplitterNodeRenderer = ((isNativeOfflineAudioContext(nativeContext))\n                ? createChannelSplitterNodeRenderer()\n                : null);\n            super(context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-splitter-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createChannelSplitterNodeRendererFactory = (createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioNode = getNativeAudioNode(proxy);\n            // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeAudioNodeIsOwnedByContext = isOwnedByContext(nativeAudioNode, nativeOfflineAudioContext);\n            if (!nativeAudioNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeAudioNode.channelCount,\n                    channelCountMode: nativeAudioNode.channelCountMode,\n                    channelInterpretation: nativeAudioNode.channelInterpretation,\n                    numberOfOutputs: nativeAudioNode.numberOfOutputs\n                };\n                nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);\n            return nativeAudioNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/channel-splitter-node-renderer-factory.js.map","export const createConnectAudioParam = (renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/connect-audio-param.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const createConnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destination, output = 0, input = 0) => {\n        const outputAudioNode = outputAudioNodes[output];\n        if (outputAudioNode === undefined) {\n            throw createIndexSizeError();\n        }\n        if (isNativeAudioNode(destination)) {\n            return outputAudioNode.connect(destination, 0, input);\n        }\n        return outputAudioNode.connect(destination, 0);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/connect-multiple-outputs.js.map","export const createConnectedNativeAudioBufferSourceNodeFactory = (createNativeAudioBufferSourceNode) => {\n    return (nativeContext, nativeAudioNode) => {\n        const nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.loop = true;\n        nativeAudioBufferSourceNode.connect(nativeAudioNode);\n        nativeAudioBufferSourceNode.start();\n        return () => {\n            nativeAudioBufferSourceNode.stop();\n            nativeAudioBufferSourceNode.disconnect(nativeAudioNode);\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    offset: 1\n};\nexport const createConstantSourceNodeConstructor = (audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class ConstantSourceNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const constantSourceNodeRenderer = ((isOffline)\n                ? createConstantSourceNodeRendererFactory()\n                : null);\n            super(context, false, nativeConstantSourceNode, constantSourceNodeRenderer);\n            this._constantSourceNodeRenderer = constantSourceNodeRenderer;\n            this._nativeConstantSourceNode = nativeConstantSourceNode;\n            /*\n             * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and\n             * minValue for GainNodes.\n             */\n            this._offset = createAudioParam(this, isOffline, nativeConstantSourceNode.offset, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._onended = null;\n        }\n        get offset() {\n            return this._offset;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = (typeof value === 'function') ? wrapEventListener(this, value) : null;\n            this._nativeConstantSourceNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeConstantSourceNode.onended;\n            this._onended = (nativeOnEnded !== null && nativeOnEnded === wrappedListener)\n                ? value\n                : nativeOnEnded;\n        }\n        start(when = 0) {\n            this._nativeConstantSourceNode.start(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.start = when;\n            }\n            else {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => setInternalStateToPassive(this), 1000);\n                };\n                this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeConstantSourceNode.stop(when);\n            if (this._constantSourceNodeRenderer !== null) {\n                this._constantSourceNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/constant-source-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConstantSourceNodeRendererFactory = (connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConstantSourceNodes = new WeakMap();\n        let start = null;\n        let stop = null;\n        const createConstantSourceNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConstantSourceNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeConstantSourceNodeIsOwnedByContext = isOwnedByContext(nativeConstantSourceNode, nativeOfflineAudioContext);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeConstantSourceNode.channelCount,\n                    channelCountMode: nativeConstantSourceNode.channelCountMode,\n                    channelInterpretation: nativeConstantSourceNode.channelInterpretation,\n                    offset: nativeConstantSourceNode.offset.value\n                };\n                nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeConstantSourceNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeConstantSourceNode.stop(stop);\n                }\n            }\n            renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);\n            if (!nativeConstantSourceNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);\n            return nativeConstantSourceNode;\n        };\n        return {\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConstantSourceNode !== undefined) {\n                    return Promise.resolve(renderedNativeConstantSourceNode);\n                }\n                return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/constant-source-node-renderer-factory.js.map","export const createConvertNumberToUnsignedLong = (unit32Array) => {\n    return (value) => {\n        unit32Array[0] = value;\n        return unit32Array[0];\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/convert-number-to-unsigned-long.js.map","const DEFAULT_OPTIONS = {\n    buffer: null,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    disableNormalization: false\n};\nexport const createConvolverNodeConstructor = (audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class ConvolverNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const convolverNodeRenderer = ((isOffline) ? createConvolverNodeRenderer() : null);\n            super(context, false, nativeConvolverNode, convolverNodeRenderer);\n            this._isBufferNullified = false;\n            this._nativeConvolverNode = nativeConvolverNode;\n        }\n        get buffer() {\n            if (this._isBufferNullified) {\n                return null;\n            }\n            return this._nativeConvolverNode.buffer;\n        }\n        set buffer(value) {\n            this._nativeConvolverNode.buffer = value;\n            // Bug #115: Safari does not allow to set the buffer to null.\n            if (value === null && this._nativeConvolverNode.buffer !== null) {\n                const nativeContext = this._nativeConvolverNode.context;\n                this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n                this._isBufferNullified = true;\n            }\n            else {\n                this._isBufferNullified = false;\n            }\n        }\n        get normalize() {\n            return this._nativeConvolverNode.normalize;\n        }\n        set normalize(value) {\n            this._nativeConvolverNode.normalize = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/convolver-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createConvolverNodeRendererFactory = (createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeConvolverNodes = new WeakMap();\n        const createConvolverNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeConvolverNode = getNativeAudioNode(proxy);\n            // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeConvolverNodeIsOwnedByContext = isOwnedByContext(nativeConvolverNode, nativeOfflineAudioContext);\n            if (!nativeConvolverNodeIsOwnedByContext) {\n                const options = {\n                    buffer: nativeConvolverNode.buffer,\n                    channelCount: nativeConvolverNode.channelCount,\n                    channelCountMode: nativeConvolverNode.channelCountMode,\n                    channelInterpretation: nativeConvolverNode.channelInterpretation,\n                    disableNormalization: !nativeConvolverNode.normalize\n                };\n                nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);\n            if (isNativeAudioNodeFaker(nativeConvolverNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);\n            }\n            return nativeConvolverNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeConvolverNode !== undefined) {\n                    return Promise.resolve(renderedNativeConvolverNode);\n                }\n                return createConvolverNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/convolver-node-renderer-factory.js.map","export const createCreateNativeOfflineAudioContext = (createNotSupportedError, nativeOfflineAudioContextConstructor) => {\n    return (numberOfChannels, length, sampleRate) => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            throw new Error('Missing the native OfflineAudioContext constructor.');\n        }\n        try {\n            return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);\n        }\n        catch (err) {\n            // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.\n            // Bug #143: Edge throws a SyntaxError when numberOfChannels or length are invalid.\n            // Bug #145: Edge throws an IndexSizeError when sampleRate is zero.\n            if (err.name === 'IndexSizeError' || err.name === 'SyntaxError') {\n                throw createNotSupportedError();\n            }\n            throw err;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/create-native-offline-audio-context.js.map","export const createDataCloneError = () => {\n    try {\n        return new DOMException('', 'DataCloneError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 25;\n        err.name = 'DataCloneError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/data-clone-error.js.map","import { detachArrayBuffer } from '../helpers/detach-array-buffer';\nimport { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createDecodeAudioData = (audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    return (anyContext, audioData) => {\n        const nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext);\n        // Bug #43: Only Chrome and Opera do throw a DataCloneError.\n        if (detachedArrayBuffers.has(audioData)) {\n            const err = createDataCloneError();\n            return Promise.reject(err);\n        }\n        // The audioData parameter maybe of a type which can't be added to a WeakSet.\n        try {\n            detachedArrayBuffers.add(audioData);\n        }\n        catch {\n            // Ignore errors.\n        }\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeContext))) {\n            // Bug #101: Edge does not decode something on a closed OfflineAudioContext.\n            const nativeContextOrBackupNativeContext = (nativeContext.state === 'closed' &&\n                nativeOfflineAudioContextConstructor !== null &&\n                isNativeOfflineAudioContext(nativeContext)) ?\n                new nativeOfflineAudioContextConstructor(1, 1, nativeContext.sampleRate) :\n                nativeContext;\n            const promise = nativeContextOrBackupNativeContext\n                .decodeAudioData(audioData)\n                .catch((err) => {\n                // Bug #27: Edge is rejecting invalid arrayBuffers with a DOMException.\n                if (err instanceof DOMException && err.name === 'NotSupportedError') {\n                    throw new TypeError();\n                }\n                throw err;\n            });\n            return promise\n                .then((audioBuffer) => {\n                // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n                if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n                    wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n                }\n                audioBufferStore.add(audioBuffer);\n                return audioBuffer;\n            });\n        }\n        // Bug #21: Safari does not return a Promise yet.\n        return new Promise((resolve, reject) => {\n            const complete = () => {\n                // Bug #133: Safari does neuter the ArrayBuffer.\n                try {\n                    detachArrayBuffer(audioData);\n                }\n                catch { /* Ignore errors. */ }\n            };\n            const fail = (err) => {\n                reject(err);\n                complete();\n            };\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                // Bug #1: Safari requires a successCallback.\n                nativeContext.decodeAudioData(audioData, (audioBuffer) => {\n                    // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n                    // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n                    if (typeof audioBuffer.copyFromChannel !== 'function') {\n                        wrapAudioBufferCopyChannelMethods(audioBuffer);\n                        wrapAudioBufferGetChannelDataMethod(audioBuffer);\n                    }\n                    audioBufferStore.add(audioBuffer);\n                    complete();\n                    resolve(audioBuffer);\n                }, (err) => {\n                    // Bug #4: Safari returns null instead of an error.\n                    if (err === null) {\n                        fail(createEncodingError());\n                    }\n                    else {\n                        fail(err);\n                    }\n                });\n            }\n            catch (err) {\n                fail(err);\n            }\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/decode-audio-data.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createDecrementCycleCounter = (connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) => {\n    return (audioNode, count) => {\n        const cycleCounter = cycleCounters.get(audioNode);\n        if (cycleCounter === undefined) {\n            throw new Error('Missing the expected cycle count.');\n        }\n        const nativeContext = getNativeContext(audioNode.context);\n        const isOffline = isNativeOfflineAudioContext(nativeContext);\n        if (cycleCounter === count) {\n            cycleCounters.delete(audioNode);\n            if (!isOffline && isActiveAudioNode(audioNode)) {\n                const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                const { outputs } = getAudioNodeConnections(audioNode);\n                for (const output of outputs) {\n                    if (isAudioNodeOutputConnection(output)) {\n                        const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                        connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                    }\n                    else {\n                        const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                        nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);\n                    }\n                }\n            }\n        }\n        else {\n            cycleCounters.set(audioNode, cycleCounter - count);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/decrement-cycle-counter.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    delayTime: 0,\n    maxDelayTime: 1\n};\nexport const createDelayNodeConstructor = (audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class DelayNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const delayNodeRenderer = ((isOffline)\n                ? createDelayNodeRenderer(mergedOptions.maxDelayTime)\n                : null);\n            super(context, false, nativeDelayNode, delayNodeRenderer);\n            // Bug #161: Edge does not export the correct values for maxValue and minValue.\n            this._delayTime = createAudioParam(this, isOffline, nativeDelayNode.delayTime, mergedOptions.maxDelayTime, 0);\n        }\n        get delayTime() {\n            return this._delayTime;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/delay-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDelayNodeRendererFactory = (connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return (maxDelayTime) => {\n        const renderedNativeDelayNodes = new WeakMap();\n        const createDelayNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDelayNode = getNativeAudioNode(proxy);\n            // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeDelayNodeIsOwnedByContext = isOwnedByContext(nativeDelayNode, nativeOfflineAudioContext);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeDelayNode.channelCount,\n                    channelCountMode: nativeDelayNode.channelCountMode,\n                    channelInterpretation: nativeDelayNode.channelInterpretation,\n                    delayTime: nativeDelayNode.delayTime.value,\n                    maxDelayTime\n                };\n                nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);\n            if (!nativeDelayNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);\n            return nativeDelayNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDelayNode !== undefined) {\n                    return Promise.resolve(renderedNativeDelayNode);\n                }\n                return createDelayNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/delay-node-renderer-factory.js.map","export const createDeleteUnrenderedAudioWorkletNode = (getUnrenderedAudioWorkletNodes) => {\n    return (nativeContext, audioWorkletNode) => {\n        getUnrenderedAudioWorkletNodes(nativeContext)\n            .delete(audioWorkletNode);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/delete-unrendered-audio-worklet-node.js.map","import { isAudioNode } from '../guards/audio-node';\nimport { isDelayNode } from '../guards/delay-node';\nexport const createDetectCycles = (audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) => {\n    return function detectCycles(chain, nextLink) {\n        const audioNode = (isAudioNode(nextLink))\n            ? nextLink\n            : getValueForKey(audioParamAudioNodeStore, nextLink);\n        if (isDelayNode(audioNode)) {\n            return [];\n        }\n        if (chain[0] === audioNode) {\n            return [chain];\n        }\n        if (chain.includes(audioNode)) {\n            return [];\n        }\n        const { outputs } = getAudioNodeConnections(audioNode);\n        return Array\n            .from(outputs)\n            .map((outputConnection) => detectCycles([...chain, audioNode], outputConnection[0]))\n            .reduce((mergedCycles, nestedCycles) => mergedCycles.concat(nestedCycles), []);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/detect-cycles.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nconst getOutputAudioNodeAtIndex = (createIndexSizeError, outputAudioNodes, output) => {\n    const outputAudioNode = outputAudioNodes[output];\n    if (outputAudioNode === undefined) {\n        throw createIndexSizeError();\n    }\n    return outputAudioNode;\n};\nexport const createDisconnectMultipleOutputs = (createIndexSizeError) => {\n    return (outputAudioNodes, destinationOrOutput = undefined, output = undefined, input = 0) => {\n        if (destinationOrOutput === undefined) {\n            return outputAudioNodes\n                .forEach((outputAudioNode) => outputAudioNode.disconnect());\n        }\n        if (typeof destinationOrOutput === 'number') {\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput)\n                .disconnect();\n        }\n        if (isNativeAudioNode(destinationOrOutput)) {\n            if (output === undefined) {\n                return outputAudioNodes\n                    .forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n            }\n            if (input === undefined) {\n                return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n                    .disconnect(destinationOrOutput, 0);\n            }\n            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n                .disconnect(destinationOrOutput, 0, input);\n        }\n        if (output === undefined) {\n            return outputAudioNodes\n                .forEach((outputAudioNode) => outputAudioNode.disconnect(destinationOrOutput));\n        }\n        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output)\n            .disconnect(destinationOrOutput, 0);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/disconnect-multiple-outputs.js.map","const DEFAULT_OPTIONS = {\n    attack: 0.003,\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    knee: 30,\n    ratio: 12,\n    release: 0.25,\n    threshold: -24\n};\nexport const createDynamicsCompressorNodeConstructor = (audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) => {\n    return class DynamicsCompressorNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const dynamicsCompressorNodeRenderer = ((isOffline)\n                ? createDynamicsCompressorNodeRenderer()\n                : null);\n            super(context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer);\n            // Bug #110: Edge does not export the correct values for maxValue and minValue.\n            this._attack = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.attack, 1, 0);\n            this._knee = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.knee, 40, 0);\n            this._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;\n            this._ratio = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.ratio, 20, 1);\n            this._release = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.release, 1, 0);\n            this._threshold = createAudioParam(this, isOffline, nativeDynamicsCompressorNode.threshold, 0, -100);\n        }\n        get attack() {\n            return this._attack;\n        }\n        /*\n         * Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet which is why the getter and setter needs\n         * to be overwritten here.\n         */\n        get channelCount() {\n            return this._nativeDynamicsCompressorNode.channelCount;\n        }\n        set channelCount(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;\n            this._nativeDynamicsCompressorNode.channelCount = value;\n            if (value > 2) {\n                this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        /*\n         * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be\n         * overwritten here.\n         */\n        get channelCountMode() {\n            return this._nativeDynamicsCompressorNode.channelCountMode;\n        }\n        set channelCountMode(value) {\n            const previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;\n            this._nativeDynamicsCompressorNode.channelCountMode = value;\n            if (value === 'max') {\n                this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;\n                throw createNotSupportedError();\n            }\n        }\n        get knee() {\n            return this._knee;\n        }\n        get ratio() {\n            return this._ratio;\n        }\n        get reduction() {\n            // Bug #111: Safari returns an AudioParam instead of a number.\n            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {\n                return this._nativeDynamicsCompressorNode.reduction.value;\n            }\n            return this._nativeDynamicsCompressorNode.reduction;\n        }\n        get release() {\n            return this._release;\n        }\n        get threshold() {\n            return this._threshold;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/dynamics-compressor-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createDynamicsCompressorNodeRendererFactory = (connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeDynamicsCompressorNodes = new WeakMap();\n        const createDynamicsCompressorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeDynamicsCompressorNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be\n             * created again.\n             */\n            const nativeDynamicsCompressorNodeIsOwnedByContext = isOwnedByContext(nativeDynamicsCompressorNode, nativeOfflineAudioContext);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                const options = {\n                    attack: nativeDynamicsCompressorNode.attack.value,\n                    channelCount: nativeDynamicsCompressorNode.channelCount,\n                    channelCountMode: nativeDynamicsCompressorNode.channelCountMode,\n                    channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,\n                    knee: nativeDynamicsCompressorNode.knee.value,\n                    ratio: nativeDynamicsCompressorNode.ratio.value,\n                    release: nativeDynamicsCompressorNode.release.value,\n                    threshold: nativeDynamicsCompressorNode.threshold.value\n                };\n                nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);\n            if (!nativeDynamicsCompressorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);\n            return nativeDynamicsCompressorNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeDynamicsCompressorNode !== undefined) {\n                    return Promise.resolve(renderedNativeDynamicsCompressorNode);\n                }\n                return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/dynamics-compressor-node-renderer-factory.js.map","export const createEncodingError = () => {\n    try {\n        return new DOMException('', 'EncodingError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 0;\n        err.name = 'EncodingError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/encoding-error.js.map","export const createEvaluateSource = (window) => {\n    return (source) => new Promise((resolve, reject) => {\n        if (window === null) {\n            reject(new SyntaxError());\n            return;\n        }\n        const head = window.document.head;\n        if (head === null) {\n            reject(new SyntaxError());\n        }\n        else {\n            const script = window.document.createElement('script');\n            // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.\n            const blob = new Blob([source], { type: 'application/javascript' });\n            const url = URL.createObjectURL(blob);\n            const originalOnErrorHandler = window.onerror;\n            const removeErrorEventListenerAndRevokeUrl = () => {\n                window.onerror = originalOnErrorHandler;\n                URL.revokeObjectURL(url);\n            };\n            window.onerror = (message, src, lineno, colno, error) => {\n                // @todo Edge thinks the source is the one of the html document.\n                if (src === url || (src === window.location.href && lineno === 1 && colno === 1)) {\n                    removeErrorEventListenerAndRevokeUrl();\n                    reject(error);\n                    return false;\n                }\n                if (originalOnErrorHandler !== null) {\n                    return originalOnErrorHandler(message, src, lineno, colno, error);\n                }\n            };\n            script.onerror = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                reject(new SyntaxError());\n            };\n            script.onload = () => {\n                removeErrorEventListenerAndRevokeUrl();\n                resolve();\n            };\n            script.src = url;\n            script.type = 'module';\n            head.appendChild(script);\n        }\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/evaluate-source.js.map","export const createEventTargetConstructor = (wrapEventListener) => {\n    return class EventTarget {\n        constructor(_nativeEventTarget) {\n            this._nativeEventTarget = _nativeEventTarget;\n            this._listeners = new WeakMap();\n        }\n        addEventListener(type, listener, options) {\n            if (listener !== null) {\n                let wrappedEventListener = this._listeners.get(listener);\n                if (wrappedEventListener === undefined) {\n                    wrappedEventListener = wrapEventListener(this, listener);\n                    if (typeof listener === 'function') {\n                        this._listeners.set(listener, wrappedEventListener);\n                    }\n                }\n                this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);\n            }\n        }\n        dispatchEvent(event) {\n            return this._nativeEventTarget.dispatchEvent(event);\n        }\n        removeEventListener(type, listener, options) {\n            const wrappedEventListener = (listener === null) ? undefined : this._listeners.get(listener);\n            this._nativeEventTarget.removeEventListener(type, (wrappedEventListener === undefined) ? null : wrappedEventListener, options);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/event-target-constructor.js.map","export const createExposeCurrentFrameAndCurrentTime = (window) => {\n    return (currentTime, sampleRate, fn) => {\n        Object.defineProperties(window, {\n            currentFrame: {\n                configurable: true,\n                get() {\n                    return Math.round(currentTime * sampleRate);\n                }\n            },\n            currentTime: {\n                configurable: true,\n                get() {\n                    return currentTime;\n                }\n            }\n        });\n        try {\n            return fn();\n        }\n        finally {\n            if (window !== null) {\n                delete window.currentFrame;\n                delete window.currentTime;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/expose-current-frame-and-current-time.js.map","export const createFetchSource = (createAbortError) => {\n    return async (url) => {\n        try {\n            const response = await fetch(url);\n            if (response.ok) {\n                return response.text();\n            }\n        }\n        catch { /* Ignore errors. */ } // tslint:disable-line:no-empty\n        throw createAbortError();\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/fetch-source.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    gain: 1\n};\nexport const createGainNodeConstructor = (audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class GainNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const gainNodeRenderer = ((isOffline) ? createGainNodeRenderer() : null);\n            super(context, false, nativeGainNode, gainNodeRenderer);\n            // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._gain = createAudioParam(this, isOffline, nativeGainNode.gain, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get gain() {\n            return this._gain;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/gain-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createGainNodeRendererFactory = (connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeGainNodes = new WeakMap();\n        const createGainNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = getNativeAudioNode(proxy);\n            // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeGainNodeIsOwnedByContext = isOwnedByContext(nativeGainNode, nativeOfflineAudioContext);\n            if (!nativeGainNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeGainNode.channelCount,\n                    channelCountMode: nativeGainNode.channelCountMode,\n                    channelInterpretation: nativeGainNode.channelInterpretation,\n                    gain: nativeGainNode.gain.value\n                };\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);\n            if (!nativeGainNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);\n            return nativeGainNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNode);\n                }\n                return createGainNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/gain-node-renderer-factory.js.map","export const createGetAudioNodeRenderer = (getAudioNodeConnections) => {\n    return (audioNode) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        if (audioNodeConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioNode in the audio graph.');\n        }\n        return audioNodeConnections.renderer;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-audio-node-renderer.js.map","export const createGetAudioParamRenderer = (getAudioParamConnections) => {\n    return (audioParam) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        if (audioParamConnections.renderer === null) {\n            throw new Error('Missing the renderer of the given AudioParam in the audio graph.');\n        }\n        return audioParamConnections.renderer;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-audio-param-renderer.js.map","import { BACKUP_NATIVE_CONTEXT_STORE } from '../globals';\nexport const createGetBackupNativeContext = (isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor) => {\n    return (nativeContext) => {\n        /*\n         * Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet which is why there needs to be no\n         * backupNativeContext in that case.\n         */\n        if (nativeContext.state === 'closed'\n            && nativeAudioContextConstructor !== null\n            && nativeAudioContextConstructor.name !== 'webkitAudioContext') {\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n                if (backupNativeContext !== undefined) {\n                    return backupNativeContext;\n                }\n                if (nativeOfflineAudioContextConstructor !== null) {\n                    // @todo Copy the attached AudioWorkletProcessors and other settings.\n                    const bckpNtveCntxt = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n                    BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n                    return bckpNtveCntxt;\n                }\n            }\n            else {\n                const backupNativeContext = BACKUP_NATIVE_CONTEXT_STORE.get(nativeContext);\n                if (backupNativeContext !== undefined) {\n                    return backupNativeContext;\n                }\n                // @todo Copy the attached AudioWorkletProcessors and other settings.\n                const bckpNtveCntxt = new nativeAudioContextConstructor();\n                BACKUP_NATIVE_CONTEXT_STORE.set(nativeContext, bckpNtveCntxt);\n                return bckpNtveCntxt;\n            }\n        }\n        return null;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-backup-native-context.js.map","import { createInvalidStateError } from './invalid-state-error';\nexport const createGetNativeContext = (contextStore) => {\n    return (context) => {\n        const nativeContext = contextStore.get(context);\n        if (nativeContext === undefined) {\n            throw createInvalidStateError();\n        }\n        return nativeContext;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-native-context.js.map","export const createGetUnrenderedAudioWorkletNodes = (unrenderedAudioWorkletNodeStore) => {\n    return (nativeContext) => {\n        const unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);\n        if (unrenderedAudioWorkletNodes === undefined) {\n            throw new Error('The context has no set of AudioWorkletNodes.');\n        }\n        return unrenderedAudioWorkletNodes;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/get-unrendered-audio-worklet-nodes.js.map","import { wrapIIRFilterNodeGetFrequencyResponseMethod } from '../helpers/wrap-iir-filter-node-get-frequency-response-method';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers'\n};\nexport const createIIRFilterNodeConstructor = (audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class IIRFilterNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);\n            const iirFilterNodeRenderer = ((isOffline)\n                ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward)\n                : null);\n            super(context, false, nativeIIRFilterNode, iirFilterNodeRenderer);\n            // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.\n            // @todo Write a test which allows other browsers to remain unpatched.\n            wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode);\n            this._nativeIIRFilterNode = nativeIIRFilterNode;\n        }\n        getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/iir-filter-node-constructor.js.map","import { filterBuffer } from '../helpers/filter-buffer';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nconst filterFullBuffer = (renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) => {\n    const feedbackLength = feedback.length;\n    const feedforwardLength = feedforward.length;\n    const minLength = Math.min(feedbackLength, feedforwardLength);\n    if (feedback[0] !== 1) {\n        for (let i = 0; i < feedbackLength; i += 1) {\n            feedforward[i] /= feedback[0];\n        }\n        for (let i = 1; i < feedforwardLength; i += 1) {\n            feedback[i] /= feedback[0];\n        }\n    }\n    const bufferLength = 32;\n    const xBuffer = new Float32Array(bufferLength);\n    const yBuffer = new Float32Array(bufferLength);\n    const filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);\n    const numberOfChannels = renderedBuffer.numberOfChannels;\n    for (let i = 0; i < numberOfChannels; i += 1) {\n        const input = renderedBuffer.getChannelData(i);\n        const output = filteredBuffer.getChannelData(i);\n        xBuffer.fill(0);\n        yBuffer.fill(0);\n        filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);\n    }\n    return filteredBuffer;\n};\nexport const createIIRFilterNodeRendererFactory = (createNativeAudioBufferSourceNode, createNativeAudioNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return (feedback, feedforward) => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let filteredBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeAudioBufferSourceNode = null;\n            let nativeIIRFilterNode = getNativeAudioNode(proxy);\n            // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeIIRFilterNodeIsOwnedByContext = isOwnedByContext(nativeIIRFilterNode, nativeOfflineAudioContext);\n            // Bug #9: Safari does not support IIRFilterNodes.\n            if (nativeOfflineAudioContext.createIIRFilter === undefined) {\n                nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {\n                    buffer: null,\n                    channelCount: 2,\n                    channelCountMode: 'max',\n                    channelInterpretation: 'speakers',\n                    loop: false,\n                    loopEnd: 0,\n                    loopStart: 0,\n                    playbackRate: 1\n                });\n            }\n            else if (!nativeIIRFilterNodeIsOwnedByContext) {\n                nativeIIRFilterNode = createNativeAudioNode(nativeOfflineAudioContext, (ntvCntxt) => {\n                    return ntvCntxt.createIIRFilter(feedforward, feedback);\n                });\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, (nativeAudioBufferSourceNode === null) ? nativeIIRFilterNode : nativeAudioBufferSourceNode);\n            if (nativeAudioBufferSourceNode !== null) {\n                if (filteredBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(\n                    // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.\n                    proxy.context.destination.channelCount, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    filteredBufferPromise = (async () => {\n                        await renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);\n                        const renderedBuffer = await renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                        return filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward);\n                    })();\n                }\n                const filteredBuffer = await filteredBufferPromise;\n                nativeAudioBufferSourceNode.buffer = filteredBuffer;\n                nativeAudioBufferSourceNode.start(0);\n                return nativeAudioBufferSourceNode;\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);\n            return nativeIIRFilterNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeAudioNode !== undefined) {\n                    return Promise.resolve(renderedNativeAudioNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/iir-filter-node-renderer-factory.js.map","import { isAudioNodeOutputConnection } from '../guards/audio-node-output-connection';\nexport const createIncrementCycleCounterFactory = (cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) => {\n    return (isOffline) => {\n        return (audioNode, count) => {\n            const cycleCounter = cycleCounters.get(audioNode);\n            if (cycleCounter === undefined) {\n                if (!isOffline && isActiveAudioNode(audioNode)) {\n                    const nativeSourceAudioNode = getNativeAudioNode(audioNode);\n                    const { outputs } = getAudioNodeConnections(audioNode);\n                    for (const output of outputs) {\n                        if (isAudioNodeOutputConnection(output)) {\n                            const nativeDestinationAudioNode = getNativeAudioNode(output[0]);\n                            disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);\n                        }\n                        else {\n                            const nativeDestinationAudioParam = getNativeAudioParam(output[0]);\n                            nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);\n                        }\n                    }\n                }\n                cycleCounters.set(audioNode, count);\n            }\n            else {\n                cycleCounters.set(audioNode, cycleCounter + count);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/increment-cycle-counter-factory.js.map","export const createIndexSizeError = () => {\n    try {\n        return new DOMException('', 'IndexSizeError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 1;\n        err.name = 'IndexSizeError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/index-size-error.js.map","export const createInvalidAccessError = () => {\n    try {\n        return new DOMException('', 'InvalidAccessError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 15;\n        err.name = 'InvalidAccessError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/invalid-access-error.js.map","export const createInvalidStateError = () => {\n    try {\n        return new DOMException('', 'InvalidStateError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 11;\n        err.name = 'InvalidStateError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/invalid-state-error.js.map","export const createIsAnyAudioContext = (contextStore, isNativeAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-audio-context.js.map","export const createIsAnyAudioNode = (audioNodeStore, isNativeAudioNode) => {\n    return (anything) => audioNodeStore.has(anything) || isNativeAudioNode(anything);\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-audio-node.js.map","export const createIsAnyAudioParam = (audioParamStore, isNativeAudioParam) => {\n    return (anything) => audioParamStore.has(anything) || isNativeAudioParam(anything);\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-audio-param.js.map","export const createIsAnyOfflineAudioContext = (contextStore, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        const nativeContext = contextStore.get(anything);\n        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-any-offline-audio-context.js.map","export const createIsNativeAudioContext = (nativeAudioContextConstructor) => {\n    return (anything) => {\n        return (nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-audio-context.js.map","export const createIsNativeAudioNode = (window) => {\n    return (anything) => {\n        return (window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-audio-node.js.map","export const createIsNativeAudioParam = (window) => {\n    return (anything) => {\n        return (window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-audio-param.js.map","export const createIsNativeContext = (isNativeAudioContext, isNativeOfflineAudioContext) => {\n    return (anything) => {\n        return (isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything));\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-context.js.map","export const createIsNativeOfflineAudioContext = (nativeOfflineAudioContextConstructor) => {\n    return (anything) => {\n        return (nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/is-native-offline-audio-context.js.map","export const createIsSecureContext = (window) => (window !== null && window.isSecureContext);\n//# sourceMappingURL=/build/es2019/factories/is-secure-context.js.map","export const createIsSupportedPromise = async (cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) => {\n    if (cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport)\n        && cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport)\n        && cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport)\n        && cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport)\n        && cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport)\n        && cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport)\n        && cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport)\n        && cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport)\n        && cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport)) {\n        const results = await Promise\n            .all([\n            cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport),\n            cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport),\n            cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport),\n            cacheTestResult(testTransferablesSupport, testTransferablesSupport)\n        ]);\n        return results.every((result) => result);\n    }\n    return false;\n};\n//# sourceMappingURL=/build/es2019/factories/is-supported-promise.js.map","export const createMediaElementAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaElementAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options);\n            // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw TypeError();\n            }\n            super(context, true, nativeMediaElementAudioSourceNode, null);\n            // Bug #63: Edge does not expose the mediaElement yet.\n            this._mediaElement = options.mediaElement;\n            this._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;\n        }\n        get mediaElement() {\n            return (this._nativeMediaElementAudioSourceNode.mediaElement === undefined) ?\n                this._mediaElement :\n                this._nativeMediaElementAudioSourceNode.mediaElement;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-element-audio-source-node-constructor.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers'\n};\nexport const createMediaStreamAudioDestinationNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioDestinationNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);\n            super(context, false, nativeMediaStreamAudioDestinationNode, null);\n            this._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;\n        }\n        get stream() {\n            return this._nativeMediaStreamAudioDestinationNode.stream;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-stream-audio-destination-node-constructor.js.map","export const createMediaStreamAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) => {\n    return class MediaStreamAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options);\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(nativeContext)) {\n                throw new TypeError();\n            }\n            super(context, true, nativeMediaStreamAudioSourceNode, null);\n            this._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;\n        }\n        get mediaStream() {\n            return this._nativeMediaStreamAudioSourceNode.mediaStream;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-stream-audio-source-node-constructor.js.map","export const createMediaStreamTrackAudioSourceNodeConstructor = (audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) => {\n    return class MediaStreamTrackAudioSourceNode extends audioNodeConstructor {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);\n            super(context, true, nativeMediaStreamTrackAudioSourceNode, null);\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/media-stream-track-audio-source-node-constructor.js.map","import { isValidLatencyHint } from '../helpers/is-valid-latency-hint';\nexport const createMinimalAudioContextConstructor = (createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) => {\n    return class MinimalAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options = {}) {\n            if (nativeAudioContextConstructor === null) {\n                throw new Error('Missing the native AudioContext constructor.');\n            }\n            const nativeAudioContext = new nativeAudioContextConstructor(options);\n            // Bug #131 Safari returns null when there are four other AudioContexts running already.\n            if (nativeAudioContext === null) {\n                throw createUnknownError();\n            }\n            // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.\n            if (!isValidLatencyHint(options.latencyHint)) {\n                throw new TypeError(`The provided value '${options.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);\n            }\n            // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.\n            if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {\n                throw createNotSupportedError();\n            }\n            super(nativeAudioContext, 2);\n            const { latencyHint } = options;\n            const { sampleRate } = nativeAudioContext;\n            // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.\n            this._baseLatency = (typeof nativeAudioContext.baseLatency === 'number')\n                ? nativeAudioContext.baseLatency\n                : (latencyHint === 'balanced')\n                    ? (512 / sampleRate)\n                    : (latencyHint === 'interactive' || latencyHint === undefined)\n                        ? (256 / sampleRate)\n                        : (latencyHint === 'playback')\n                            ? (1024 / sampleRate)\n                            /*\n                             * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a\n                             * ScriptProcessorNode.\n                             */\n                            : ((Math.max(2, Math.min(128, Math.round((latencyHint * sampleRate) / 128))) * 128) / sampleRate);\n            this._nativeAudioContext = nativeAudioContext;\n            this._state = null;\n            /*\n             * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually\n             * changes to 'running'.\n             */\n            if (nativeAudioContext.state === 'running') {\n                this._state = 'suspended';\n                const revokeState = () => {\n                    if (this._state === 'suspended') {\n                        this._state = null;\n                    }\n                    nativeAudioContext.removeEventListener('statechange', revokeState);\n                };\n                nativeAudioContext.addEventListener('statechange', revokeState);\n            }\n        }\n        get baseLatency() {\n            return this._baseLatency;\n        }\n        get state() {\n            return (this._state !== null) ? this._state : this._nativeAudioContext.state;\n        }\n        close() {\n            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.\n            if (this.state === 'closed') {\n                return this._nativeAudioContext\n                    .close()\n                    .then(() => {\n                    throw createInvalidStateError();\n                });\n            }\n            // Bug #34: If the state was set to suspended before it should be revoked now.\n            if (this._state === 'suspended') {\n                this._state = null;\n            }\n            return this._nativeAudioContext.close();\n            /*\n             * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n             * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));\n             */\n        }\n        resume() {\n            if (this._state === 'suspended') {\n                return new Promise((resolve, reject) => {\n                    const resolvePromise = () => {\n                        this._nativeAudioContext.removeEventListener('statechange', resolvePromise);\n                        if (this._nativeAudioContext.state === 'running') {\n                            resolve();\n                        }\n                        else {\n                            this\n                                .resume()\n                                .then(resolve, reject);\n                        }\n                    };\n                    this._nativeAudioContext.addEventListener('statechange', resolvePromise);\n                });\n            }\n            return this._nativeAudioContext\n                .resume()\n                .catch((err) => {\n                // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined || err.code === 15) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n        suspend() {\n            return this._nativeAudioContext\n                .suspend()\n                .catch((err) => {\n                // Bug #56: Safari invokes the catch handler but without an error.\n                if (err === undefined) {\n                    throw createInvalidStateError();\n                }\n                throw err;\n            });\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/minimal-audio-context-constructor.js.map","import { CONTEXT_STORE } from '../globals';\nexport const createMinimalBaseAudioContextConstructor = (audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) => {\n    return class MinimalBaseAudioContext extends eventTargetConstructor {\n        constructor(_nativeContext, numberOfChannels) {\n            super(_nativeContext);\n            this._nativeContext = _nativeContext;\n            CONTEXT_STORE.set(this, _nativeContext);\n            // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.\n            const sampleRate = _nativeContext.sampleRate;\n            Object.defineProperty(_nativeContext, 'sampleRate', {\n                get: () => sampleRate\n            });\n            if (isNativeOfflineAudioContext(_nativeContext)) {\n                unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());\n            }\n            this._destination = new audioDestinationNodeConstructor(this, numberOfChannels);\n            this._listener = createAudioListener(this, _nativeContext);\n            this._onstatechange = null;\n        }\n        get currentTime() {\n            return this._nativeContext.currentTime;\n        }\n        get destination() {\n            return this._destination;\n        }\n        get listener() {\n            return this._listener;\n        }\n        get onstatechange() {\n            return this._onstatechange;\n        }\n        set onstatechange(value) {\n            const wrappedListener = (typeof value === 'function') ? wrapEventListener(this, value) : null;\n            this._nativeContext.onstatechange = wrappedListener;\n            const nativeOnStateChange = this._nativeContext.onstatechange;\n            this._onstatechange = (nativeOnStateChange !== null && nativeOnStateChange === wrappedListener)\n                ? value\n                : nativeOnStateChange;\n        }\n        get sampleRate() {\n            return this._nativeContext.sampleRate;\n        }\n        get state() {\n            return this._nativeContext.state;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/minimal-base-audio-context-constructor.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createMinimalOfflineAudioContextConstructor = (cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering) => {\n    return class MinimalOfflineAudioContext extends minimalBaseAudioContextConstructor {\n        constructor(options) {\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return (this._state === null) ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext)\n                .then((audioBuffer) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                return audioBuffer;\n            })\n                // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n                .catch((err) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                throw err;\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/minimal-offline-audio-context-constructor.js.map","export const createMonitorConnections = (insertElementInSet, isNativeAudioNode) => {\n    return (nativeAudioNode, whenConnected, whenDisconnected) => {\n        const connections = new Set();\n        nativeAudioNode.connect = ((connect) => {\n            return (destination, output = 0, input = 0) => {\n                const wasDisconnected = connections.size === 0;\n                if (isNativeAudioNode(destination)) {\n                    // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                    connect.call(nativeAudioNode, destination, output, input);\n                    insertElementInSet(connections, [destination, output, input], (connection) => (connection[0] === destination && connection[1] === output && connection[2] === input), true);\n                    if (wasDisconnected) {\n                        whenConnected();\n                    }\n                    return destination;\n                }\n                connect.call(nativeAudioNode, destination, output);\n                insertElementInSet(connections, [destination, output], (connection) => (connection[0] === destination && connection[1] === output), true);\n                if (wasDisconnected) {\n                    whenConnected();\n                }\n                return;\n            };\n        })(nativeAudioNode.connect);\n        nativeAudioNode.disconnect = ((disconnect) => {\n            return (destinationOrOutput, output, input) => {\n                const wasConnected = connections.size > 0;\n                if (destinationOrOutput === undefined) {\n                    disconnect.apply(nativeAudioNode);\n                    connections.clear();\n                }\n                else if (typeof destinationOrOutput === 'number') {\n                    // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                    disconnect.call(nativeAudioNode, destinationOrOutput);\n                    for (const connection of connections) {\n                        if (connection[1] === destinationOrOutput) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                else {\n                    if (isNativeAudioNode(destinationOrOutput)) {\n                        // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output, input);\n                    }\n                    else {\n                        // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.\n                        disconnect.call(nativeAudioNode, destinationOrOutput, output);\n                    }\n                    for (const connection of connections) {\n                        if (connection[0] === destinationOrOutput\n                            && (output === undefined || connection[1] === output)\n                            && (input === undefined || connection[2] === input)) {\n                            connections.delete(connection);\n                        }\n                    }\n                }\n                const isDisconnected = connections.size === 0;\n                if (wasConnected && isDisconnected) {\n                    whenDisconnected();\n                }\n            };\n        })(nativeAudioNode.disconnect);\n        return nativeAudioNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/monitor-connections.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { testAnalyserNodeGetFloatTimeDomainDataMethodSupport } from '../helpers/test-analyser-node-get-float-time-domain-data-method-support';\nimport { wrapAnalyserNodeGetFloatTimeDomainDataMethod } from '../helpers/wrap-analyser-node-get-float-time-domain-data-method';\nexport const createNativeAnalyserNodeFactory = (cacheTestResult, createIndexSizeError, createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeAnalyserNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createAnalyser());\n        // Bug #37: Firefox does not create an AnalyserNode with the default properties.\n        assignNativeAudioNodeOptions(nativeAnalyserNode, options);\n        // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.\n        if (!(options.maxDecibels > options.minDecibels)) {\n            throw createIndexSizeError();\n        }\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'fftSize');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'maxDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'minDecibels');\n        assignNativeAudioNodeOption(nativeAnalyserNode, options, 'smoothingTimeConstant');\n        // Bug #36: Safari does not support getFloatTimeDomainData() yet.\n        if (!cacheTestResult(testAnalyserNodeGetFloatTimeDomainDataMethodSupport, () => testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode))) {\n            wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode);\n        }\n        return nativeAnalyserNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-analyser-node-factory.js.map","export const createNativeAudioBufferConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioBuffer')) {\n        return window.AudioBuffer;\n    }\n    return null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-buffer-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioBufferSourceNodeStartMethodConsecutiveCalls } from '../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls';\nimport { wrapAudioBufferSourceNodeStartMethodDurationParameter } from '../helpers/wrap-audio-buffer-source-node-start-method-duration-parameter';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeAudioBufferSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        assignNativeAudioNodeOptions(nativeAudioBufferSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeAudioBufferSourceNode, options, 'playbackRate');\n        // Bug #71: Edge does not allow to set the buffer to null.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'buffer');\n        // Bug #149: Safari does not yet support the detune AudioParam.\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loop');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopEnd');\n        assignNativeAudioNodeOption(nativeAudioBufferSourceNode, options, 'loopStart');\n        // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, () => testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode);\n        }\n        // Bug #92: Chrome & Edge do not respect the duration parameter yet.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport)) {\n            wrapAudioBufferSourceNodeStartMethodDurationParameter(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.\n        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, () => testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);\n        }\n        // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.\n        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, () => testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext))) {\n            wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioBufferSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);\n        return nativeAudioBufferSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-buffer-source-node-factory.js.map","export const createNativeAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('AudioContext')) {\n        return window.AudioContext;\n    }\n    return (window.hasOwnProperty('webkitAudioContext')) ? window.webkitAudioContext : null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-context-constructor.js.map","export const createNativeAudioDestinationNodeFactory = (createNativeGainNode, overwriteAccessors) => {\n    return (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) => {\n        const nativeAudioDestinationNode = nativeContext.destination;\n        // Bug #132: Edge & Safari do not have the correct channelCount.\n        if (nativeAudioDestinationNode.channelCount !== channelCount) {\n            try {\n                nativeAudioDestinationNode.channelCount = channelCount;\n            }\n            catch {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n            }\n        }\n        // Bug #83: Edge & Safari do not have the correct channelCountMode.\n        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {\n            nativeAudioDestinationNode.channelCountMode = 'explicit';\n        }\n        // Bug #47: The AudioDestinationNode in Edge and Safari does not initialize the maxChannelCount property correctly.\n        if (nativeAudioDestinationNode.maxChannelCount === 0) {\n            Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {\n                value: channelCount\n            });\n        }\n        // Bug #168: No browser does yet have an AudioDestinationNode with an output.\n        const gainNode = createNativeGainNode(nativeContext, {\n            channelCount,\n            channelCountMode: nativeAudioDestinationNode.channelCountMode,\n            channelInterpretation: nativeAudioDestinationNode.channelInterpretation,\n            gain: 1\n        });\n        overwriteAccessors(gainNode, 'channelCount', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            try {\n                nativeAudioDestinationNode.channelCount = value;\n            }\n            catch (err) {\n                // Bug #169: Safari throws an error on each attempt to change the channelCount.\n                if (value > nativeAudioDestinationNode.maxChannelCount) {\n                    throw err;\n                }\n            }\n        });\n        overwriteAccessors(gainNode, 'channelCountMode', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelCountMode = value;\n        });\n        overwriteAccessors(gainNode, 'channelInterpretation', (get) => () => get.call(gainNode), (set) => (value) => {\n            set.call(gainNode, value);\n            nativeAudioDestinationNode.channelInterpretation = value;\n        });\n        Object.defineProperty(gainNode, 'maxChannelCount', {\n            get: () => nativeAudioDestinationNode.maxChannelCount\n        });\n        // @todo This should be disconnected when the context is closed.\n        gainNode.connect(nativeAudioDestinationNode);\n        return gainNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-destination-node.js.map","export const createNativeAudioNodeFactory = (getBackupNativeContext) => {\n    return (nativeContext, factoryFunction) => {\n        // Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet.\n        const backupNativeContext = getBackupNativeContext(nativeContext);\n        if (backupNativeContext !== null) {\n            return factoryFunction(backupNativeContext);\n        }\n        return factoryFunction(nativeContext);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-node-factory.js.map","export const createNativeAudioWorkletNodeConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    return (window.hasOwnProperty('AudioWorkletNode')) ? window.AudioWorkletNode : null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-constructor.js.map","import { testClonabilityOfAudioWorkletNodeOptions } from '../helpers/test-clonability-of-audio-worklet-node-options';\nexport const createNativeAudioWorkletNodeFactory = (createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) => {\n    return (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) => {\n        if (nativeAudioWorkletNodeConstructor !== null) {\n            try {\n                const nativeAudioWorkletNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n                    return new nativeAudioWorkletNodeConstructor(ntvCntxt, name, options);\n                });\n                const patchedEventListeners = new Map(); // tslint:disable-line:max-line-length\n                let onprocessorerror = null;\n                Object.defineProperties(nativeAudioWorkletNode, {\n                    /*\n                     * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some\n                     * browsers have no native implementation to achieve a consistent behavior.\n                     */\n                    channelCount: {\n                        get: () => options.channelCount,\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    channelCountMode: {\n                        get: () => 'explicit',\n                        set: () => {\n                            throw createInvalidStateError();\n                        }\n                    },\n                    // Bug #156: Chrome & Opera do not yet fire an ErrorEvent.\n                    onprocessorerror: {\n                        get: () => onprocessorerror,\n                        set: (value) => {\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);\n                            }\n                            onprocessorerror = (typeof value === 'function') ? value : null;\n                            if (typeof onprocessorerror === 'function') {\n                                nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);\n                            }\n                        }\n                    }\n                });\n                nativeAudioWorkletNode.addEventListener = ((addEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const unpatchedEventListener = (typeof args[1] === 'function')\n                                ? args[1]\n                                : (typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function')\n                                    ? args[1].handleEvent\n                                    : null;\n                            if (unpatchedEventListener !== null) {\n                                const patchedEventListener = patchedEventListeners.get(args[1]);\n                                if (patchedEventListener !== undefined) {\n                                    args[1] = patchedEventListener;\n                                }\n                                else {\n                                    args[1] = (event) => {\n                                        unpatchedEventListener(new ErrorEvent(args[0], { ...event, error: new Error( /* @todo */) }));\n                                    };\n                                    patchedEventListeners.set(unpatchedEventListener, args[1]);\n                                }\n                            }\n                        }\n                        return addEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.addEventListener);\n                nativeAudioWorkletNode.removeEventListener = ((removeEventListener) => {\n                    return (...args) => {\n                        if (args[0] === 'processorerror') {\n                            const patchedEventListener = patchedEventListeners.get(args[1]);\n                            if (patchedEventListener !== undefined) {\n                                patchedEventListeners.delete(args[1]);\n                                args[1] = patchedEventListener;\n                            }\n                        }\n                        return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);\n                    };\n                })(nativeAudioWorkletNode.removeEventListener);\n                /*\n                 * Bug #86: Chrome & Opera do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but has\n                 * an output.\n                 */\n                if (options.numberOfOutputs !== 0) {\n                    const nativeGainNode = createNativeGainNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete', gain: 0 });\n                    nativeAudioWorkletNode\n                        .connect(nativeGainNode)\n                        /*\n                         * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n                         * used here to make sure to connect the right destination.\n                         */\n                        .connect(nativeGainNode.context.destination);\n                    const whenConnected = () => nativeGainNode.disconnect();\n                    /*\n                     * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is\n                     * used here to make sure to connect the right destination.\n                     */\n                    const whenDisconnected = () => nativeGainNode.connect(nativeGainNode.context.destination);\n                    // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.\n                    return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);\n                }\n                return nativeAudioWorkletNode;\n            }\n            catch (err) {\n                // Bug #60: Chrome & Opera throw an InvalidStateError instead of a NotSupportedError.\n                if (err.code === 11) {\n                    throw createNotSupportedError();\n                }\n                throw err;\n            }\n        }\n        // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.\n        if (processorConstructor === undefined) {\n            throw createNotSupportedError();\n        }\n        testClonabilityOfAudioWorkletNodeOptions(options);\n        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nimport { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { copyFromChannel } from '../helpers/copy-from-channel';\nimport { copyToChannel } from '../helpers/copy-to-channel';\nimport { createAudioWorkletProcessor } from '../helpers/create-audio-worklet-processor';\nimport { createNestedArrays } from '../helpers/create-nested-arrays';\nimport { ReadOnlyMap } from '../read-only-map';\nexport const createNativeAudioWorkletNodeFakerFactory = (auxiliaryGainNodeStore, connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections) => {\n    return (nativeContext, baseLatency, processorConstructor, options) => {\n        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {\n            throw createNotSupportedError();\n        }\n        if (options.outputChannelCount !== undefined) {\n            // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.\n            if (options.outputChannelCount.some((channelCount) => (channelCount < 1))) {\n                throw createNotSupportedError();\n            }\n            if (options.outputChannelCount.length !== options.numberOfOutputs) {\n                throw createIndexSizeError();\n            }\n        }\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (options.channelCountMode !== 'explicit') {\n            throw createNotSupportedError();\n        }\n        const numberOfInputChannels = options.channelCount * options.numberOfInputs;\n        const numberOfOutputChannels = options.outputChannelCount.reduce((sum, value) => sum + value, 0);\n        const numberOfParameters = (processorConstructor.parameterDescriptors === undefined)\n            ? 0\n            : processorConstructor.parameterDescriptors.length;\n        // Bug #61: This is not part of the standard but required for the faker to work.\n        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {\n            throw createNotSupportedError();\n        }\n        const messageChannel = new MessageChannel();\n        const gainNodes = [];\n        const inputChannelSplitterNodes = [];\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes.push(createNativeGainNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: options.channelCountMode,\n                channelInterpretation: options.channelInterpretation,\n                gain: 1\n            }));\n            inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {\n                channelCount: options.channelCount,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                numberOfOutputs: options.channelCount\n            }));\n        }\n        const constantSourceNodes = [];\n        if (processorConstructor.parameterDescriptors !== undefined) {\n            for (const { defaultValue, maxValue, minValue, name } of processorConstructor.parameterDescriptors) {\n                const constantSourceNode = createNativeConstantSourceNode(nativeContext, {\n                    channelCount: 1,\n                    channelCountMode: 'explicit',\n                    channelInterpretation: 'discrete',\n                    offset: (options.parameterData[name] !== undefined)\n                        ? options.parameterData[name]\n                        : (defaultValue === undefined)\n                            ? 0\n                            : defaultValue\n                });\n                Object.defineProperties(constantSourceNode.offset, {\n                    defaultValue: {\n                        get: () => (defaultValue === undefined) ? 0 : defaultValue\n                    },\n                    maxValue: {\n                        get: () => (maxValue === undefined) ? MOST_POSITIVE_SINGLE_FLOAT : maxValue\n                    },\n                    minValue: {\n                        get: () => (minValue === undefined) ? MOST_NEGATIVE_SINGLE_FLOAT : minValue\n                    }\n                });\n                constantSourceNodes.push(constantSourceNode);\n            }\n        }\n        const inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'speakers',\n            numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)\n        });\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, \n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        Math.max(1, numberOfOutputChannels));\n        const outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: Math.max(1, numberOfOutputChannels),\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: Math.max(1, numberOfOutputChannels)\n        });\n        const outputChannelMergerNodes = [];\n        for (let i = 0; i < options.numberOfOutputs; i += 1) {\n            outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'speakers',\n                numberOfInputs: options.outputChannelCount[i]\n            }));\n        }\n        for (let i = 0; i < options.numberOfInputs; i += 1) {\n            gainNodes[i].connect(inputChannelSplitterNodes[i]);\n            for (let j = 0; j < options.channelCount; j += 1) {\n                inputChannelSplitterNodes[i].connect(inputChannelMergerNode, j, (i * options.channelCount) + j);\n            }\n        }\n        const parameterMap = new ReadOnlyMap((processorConstructor.parameterDescriptors === undefined)\n            ? []\n            : processorConstructor.parameterDescriptors\n                .map(({ name }, index) => {\n                const constantSourceNode = constantSourceNodes[index];\n                constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);\n                constantSourceNode.start(0);\n                return [name, constantSourceNode.offset];\n            }));\n        inputChannelMergerNode.connect(scriptProcessorNode);\n        let channelInterpretation = options.channelInterpretation;\n        let onprocessorerror = null;\n        // Bug #87: Expose at least one output to make this node connectable.\n        const outputAudioNodes = (options.numberOfOutputs === 0) ? [scriptProcessorNode] : outputChannelMergerNodes;\n        const nativeAudioWorkletNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return options.channelCount;\n            },\n            set channelCount(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelCountMode() {\n                return options.channelCountMode;\n            },\n            set channelCountMode(_) {\n                // Bug #61: This is not part of the standard but required for the faker to work.\n                throw createInvalidStateError();\n            },\n            get channelInterpretation() {\n                return channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                for (const gainNode of gainNodes) {\n                    gainNode.channelInterpretation = value;\n                }\n                channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return gainNodes;\n            },\n            get numberOfInputs() {\n                return options.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return options.numberOfOutputs;\n            },\n            get onprocessorerror() {\n                return onprocessorerror;\n            },\n            set onprocessorerror(value) {\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);\n                }\n                onprocessorerror = (typeof value === 'function') ? value : null;\n                if (typeof onprocessorerror === 'function') {\n                    nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);\n                }\n            },\n            get parameters() {\n                return parameterMap;\n            },\n            get port() {\n                return messageChannel.port2;\n            },\n            addEventListener(...args) {\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            connect: connectMultipleOutputs.bind(null, outputAudioNodes),\n            disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        const patchedEventListeners = new Map(); // tslint:disable-line:max-line-length\n        messageChannel.port1.addEventListener = ((addEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const unpatchedEventListener = (typeof args[1] === 'function')\n                        ? args[1]\n                        : (typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function')\n                            ? args[1].handleEvent\n                            : null;\n                    if (unpatchedEventListener !== null) {\n                        const patchedEventListener = patchedEventListeners.get(args[1]);\n                        if (patchedEventListener !== undefined) {\n                            args[1] = patchedEventListener;\n                        }\n                        else {\n                            args[1] = (event) => {\n                                exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, () => unpatchedEventListener(event));\n                            };\n                            patchedEventListeners.set(unpatchedEventListener, args[1]);\n                        }\n                    }\n                }\n                return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.addEventListener);\n        messageChannel.port1.removeEventListener = ((removeEventListener) => {\n            return (...args) => {\n                if (args[0] === 'message') {\n                    const patchedEventListener = patchedEventListeners.get(args[1]);\n                    if (patchedEventListener !== undefined) {\n                        patchedEventListeners.delete(args[1]);\n                        args[1] = patchedEventListener;\n                    }\n                }\n                return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);\n            };\n        })(messageChannel.port1.removeEventListener);\n        let onmessage = null;\n        Object.defineProperty(messageChannel.port1, 'onmessage', {\n            get: () => onmessage,\n            set: (value) => {\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.removeEventListener('message', onmessage);\n                }\n                onmessage = (typeof value === 'function') ? value : null;\n                if (typeof onmessage === 'function') {\n                    messageChannel.port1.addEventListener('message', onmessage);\n                    messageChannel.port1.start();\n                }\n            }\n        });\n        processorConstructor.prototype.port = messageChannel.port1;\n        let audioWorkletProcessor = null;\n        const audioWorkletProcessorPromise = createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);\n        audioWorkletProcessorPromise\n            .then((dWrkltPrcssr) => audioWorkletProcessor = dWrkltPrcssr);\n        const inputs = createNestedArrays(options.numberOfInputs, options.channelCount);\n        const outputs = createNestedArrays(options.numberOfOutputs, options.outputChannelCount);\n        const parameters = (processorConstructor.parameterDescriptors === undefined) ?\n            [] :\n            processorConstructor.parameterDescriptors\n                .reduce((prmtrs, { name }) => ({ ...prmtrs, [name]: new Float32Array(128) }), {});\n        let isActive = true;\n        const disconnectOutputsGraph = () => {\n            if (options.numberOfOutputs > 0) {\n                scriptProcessorNode.disconnect(outputChannelSplitterNode);\n            }\n            for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                const outputChannelMergerNode = outputChannelMergerNodes[i];\n                for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n                    outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                }\n                outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n            }\n        };\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer, outputBuffer }) => {\n            if (audioWorkletProcessor !== null) {\n                for (let i = 0; i < bufferSize; i += 128) {\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.channelCount; k += 1) {\n                            copyFromChannel(inputBuffer, inputs[j], k, k, i);\n                        }\n                    }\n                    if (processorConstructor.parameterDescriptors !== undefined) {\n                        processorConstructor.parameterDescriptors.forEach(({ name }, index) => {\n                            copyFromChannel(inputBuffer, parameters, name, numberOfInputChannels + index, i);\n                        });\n                    }\n                    for (let j = 0; j < options.numberOfInputs; j += 1) {\n                        for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                            // The byteLength will be 0 when the ArrayBuffer was transferred.\n                            if (outputs[j][k].byteLength === 0) {\n                                outputs[j][k] = new Float32Array(128);\n                            }\n                        }\n                    }\n                    try {\n                        const potentiallyEmptyInputs = inputs\n                            .map((input, index) => {\n                            const auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeAudioWorkletNodeFaker);\n                            if (auxiliaryGainNodes === undefined || auxiliaryGainNodes.get(index) === undefined) {\n                                return [];\n                            }\n                            return input;\n                        });\n                        const activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + (i / nativeContext.sampleRate), nativeContext.sampleRate, () => audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters));\n                        isActive = activeSourceFlag;\n                        for (let j = 0, outputChannelSplitterNodeOutput = 0; j < options.numberOfOutputs; j += 1) {\n                            for (let k = 0; k < options.outputChannelCount[j]; k += 1) {\n                                copyToChannel(outputBuffer, outputs[j], k, outputChannelSplitterNodeOutput + k, i);\n                            }\n                            outputChannelSplitterNodeOutput += options.outputChannelCount[j];\n                        }\n                    }\n                    catch (error) {\n                        isActive = false;\n                        nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', { error }));\n                    }\n                    if (!isActive) {\n                        for (let j = 0; j < options.numberOfInputs; j += 1) {\n                            gainNodes[j].disconnect(inputChannelSplitterNodes[j]);\n                            for (let k = 0; k < options.channelCount; k += 1) {\n                                inputChannelSplitterNodes[i].disconnect(inputChannelMergerNode, k, (j * options.channelCount) + k);\n                            }\n                        }\n                        if (processorConstructor.parameterDescriptors !== undefined) {\n                            const length = processorConstructor.parameterDescriptors.length;\n                            for (let j = 0; j < length; j += 1) {\n                                const constantSourceNode = constantSourceNodes[j];\n                                constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + j);\n                                constantSourceNode.stop();\n                            }\n                        }\n                        inputChannelMergerNode.disconnect(scriptProcessorNode);\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        if (isConnected) {\n                            disconnectOutputsGraph();\n                        }\n                        else {\n                            disconnectFakeGraph();\n                        }\n                        break;\n                    }\n                }\n            }\n        };\n        let isConnected = false;\n        // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.\n        const nativeGainNode = createNativeGainNode(nativeContext, { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete', gain: 0 });\n        const connectFakeGraph = () => scriptProcessorNode\n            .connect(nativeGainNode)\n            /*\n             * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is used here\n             * to make sure to connect the right destination.\n             */\n            .connect(nativeGainNode.context.destination);\n        const disconnectFakeGraph = () => {\n            scriptProcessorNode.disconnect(nativeGainNode);\n            nativeGainNode.disconnect();\n        };\n        const whenConnected = () => {\n            if (isActive) {\n                disconnectFakeGraph();\n                if (options.numberOfOutputs > 0) {\n                    scriptProcessorNode.connect(outputChannelSplitterNode);\n                }\n                for (let i = 0, outputChannelSplitterNodeOutput = 0; i < options.numberOfOutputs; i += 1) {\n                    const outputChannelMergerNode = outputChannelMergerNodes[i];\n                    for (let j = 0; j < options.outputChannelCount[i]; j += 1) {\n                        outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);\n                    }\n                    outputChannelSplitterNodeOutput += options.outputChannelCount[i];\n                }\n            }\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            if (isActive) {\n                connectFakeGraph();\n                disconnectOutputsGraph();\n            }\n            isConnected = false;\n        };\n        connectFakeGraph();\n        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeBiquadFilterNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeBiquadFilterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBiquadFilter());\n        assignNativeAudioNodeOptions(nativeBiquadFilterNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'Q');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'frequency');\n        assignNativeAudioNodeAudioParamValue(nativeBiquadFilterNode, options, 'gain');\n        assignNativeAudioNodeOption(nativeBiquadFilterNode, options, 'type');\n        return nativeBiquadFilterNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-biquad-filter-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeChannelMergerNodeFactory = (createNativeAudioNode, wrapChannelMergerNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelMergerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createChannelMerger(options.numberOfInputs);\n        });\n        // Bug #15: Safari does not return the default properties.\n        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.\n        if (nativeChannelMergerNode.channelCount !== 1 &&\n            nativeChannelMergerNode.channelCountMode !== 'explicit') {\n            wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);\n        }\n        assignNativeAudioNodeOptions(nativeChannelMergerNode, options);\n        return nativeChannelMergerNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-channel-merger-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapChannelSplitterNode } from '../helpers/wrap-channel-splitter-node';\nexport const createNativeChannelSplitterNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeChannelSplitterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createChannelSplitter(options.numberOfOutputs);\n        });\n        // Bug #96: Safari does not have the correct channelCount.\n        // Bug #29: Edge & Safari do not have the correct channelCountMode.\n        // Bug #31: Edge & Safari do not have the correct channelInterpretation.\n        assignNativeAudioNodeOptions(nativeChannelSplitterNode, options);\n        // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Firefox & Opera partially support the spec yet.\n        wrapChannelSplitterNode(nativeChannelSplitterNode);\n        return nativeChannelSplitterNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-channel-splitter-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeConstantSourceNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) => {\n    return (nativeContext, options) => {\n        // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n        if (nativeContext.createConstantSource === undefined) {\n            return createNativeConstantSourceNodeFaker(nativeContext, options);\n        }\n        const nativeConstantSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createConstantSource();\n        });\n        assignNativeAudioNodeOptions(nativeConstantSourceNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeConstantSourceNode, options, 'offset');\n        // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeConstantSourceNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.\n        addSilentConnection(nativeContext, nativeConstantSourceNode);\n        return nativeConstantSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-constant-source-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConstantSourceNodeFakerFactory = (addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { offset, ...audioNodeOptions }) => {\n        const audioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);\n        const audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {\n            buffer: null,\n            channelCount: 2,\n            channelCountMode: 'max',\n            channelInterpretation: 'speakers',\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            playbackRate: 1\n        });\n        const gainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: offset });\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        const channelData = audioBuffer.getChannelData(0);\n        // Bug #95: Safari does not play or loop one sample buffers.\n        channelData[0] = 1;\n        channelData[1] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.loop = true;\n        const nativeConstantSourceNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return gainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return gainNode.context;\n            },\n            get inputs() {\n                return [];\n            },\n            get numberOfInputs() {\n                return audioBufferSourceNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return gainNode.numberOfOutputs;\n            },\n            get offset() {\n                return gainNode.gain;\n            },\n            get onended() {\n                return audioBufferSourceNode.onended;\n            },\n            set onended(value) {\n                audioBufferSourceNode.onended = value;\n            },\n            addEventListener(...args) {\n                return audioBufferSourceNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return audioBufferSourceNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return audioBufferSourceNode.removeEventListener(args[0], args[1], args[2]);\n            },\n            start(when = 0) {\n                audioBufferSourceNode.start.call(audioBufferSourceNode, when);\n            },\n            stop(when = 0) {\n                audioBufferSourceNode.stop.call(audioBufferSourceNode, when);\n            }\n        };\n        const whenConnected = () => audioBufferSourceNode.connect(gainNode);\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(gainNode);\n        // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.\n        addSilentConnection(nativeContext, audioBufferSourceNode);\n        return monitorConnections(interceptConnections(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-constant-source-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeConvolverNodeFactory = (createNativeAudioNode, createNativeConvolverNodeFaker, createNotSupportedError, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeConvolverNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createConvolver());\n        try {\n            // Bug #166: Opera does not allow yet to set the channelCount to 1.\n            nativeConvolverNode.channelCount = 1;\n        }\n        catch (err) {\n            return createNativeConvolverNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativeConvolverNode, options);\n        // The normalize property needs to be set before setting the buffer.\n        if (options.disableNormalization === nativeConvolverNode.normalize) {\n            nativeConvolverNode.normalize = !options.disableNormalization;\n        }\n        assignNativeAudioNodeOption(nativeConvolverNode, options, 'buffer');\n        // Bug #113: Edge & Safari allow to set the channelCount to a value larger than 2.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCount', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value > 2) {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        // Bug #114: Edge & Safari allow to set the channelCountMode to 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        overwriteAccessors(nativeConvolverNode, 'channelCountMode', (get) => () => get.call(nativeConvolverNode), (set) => (value) => {\n            if (value === 'max') {\n                throw createNotSupportedError();\n            }\n            return set.call(nativeConvolverNode, value);\n        });\n        return nativeConvolverNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-convolver-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeConvolverNodeFakerFactory = (createNativeAudioNode, createNativeGainNode, monitorConnections) => {\n    return (nativeContext, { buffer, channelCount, channelCountMode, channelInterpretation, disableNormalization }) => {\n        const convolverNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createConvolver());\n        assignNativeAudioNodeOptions(convolverNode, {\n            // Bug #166: Opera does not allow yet to set the channelCount to 1.\n            channelCount: Math.max(channelCount, 2),\n            // Bug #167: Opera does not allow yet to set the channelCountMode to 'explicit'.\n            channelCountMode: (channelCountMode === 'max') ? channelCountMode : 'clamped-max',\n            channelInterpretation\n        });\n        const gainNode = createNativeGainNode(nativeContext, { channelCount, channelCountMode, channelInterpretation, gain: 1 });\n        const nativeConvolverNodeFaker = {\n            get buffer() {\n                return convolverNode.buffer;\n            },\n            set buffer(value) {\n                convolverNode.buffer = value;\n            },\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return gainNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #166: Opera does not allow yet to set the channelCount to 1.\n                if (value > 2) {\n                    convolverNode.channelCount = value;\n                }\n                gainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return gainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #167: Opera does not allow yet to set the channelCountMode to 'explicit'.\n                if (value === 'max') {\n                    convolverNode.channelCountMode = value;\n                }\n                gainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return convolverNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                convolverNode.channelInterpretation = value;\n                gainNode.channelInterpretation = value;\n            },\n            get context() {\n                return convolverNode.context;\n            },\n            get inputs() {\n                return [convolverNode];\n            },\n            get numberOfInputs() {\n                return convolverNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return convolverNode.numberOfOutputs;\n            },\n            get normalize() {\n                return convolverNode.normalize;\n            },\n            set normalize(value) {\n                convolverNode.normalize = value;\n            },\n            addEventListener(...args) {\n                return convolverNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return convolverNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return convolverNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        // The normalize property needs to be set before setting the buffer.\n        if (disableNormalization === nativeConvolverNodeFaker.normalize) {\n            nativeConvolverNodeFaker.normalize = !disableNormalization;\n        }\n        if (buffer !== nativeConvolverNodeFaker.buffer) {\n            nativeConvolverNodeFaker.buffer = buffer;\n        }\n        const whenConnected = () => convolverNode.connect(gainNode);\n        const whenDisconnected = () => convolverNode.disconnect(gainNode);\n        return monitorConnections(interceptConnections(nativeConvolverNodeFaker, gainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-convolver-node-faker-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDelayNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeDelayNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createDelay(options.maxDelayTime));\n        assignNativeAudioNodeOptions(nativeDelayNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeDelayNode, options, 'delayTime');\n        return nativeDelayNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-delay-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeDynamicsCompressorNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n    return (nativeContext, options) => {\n        const nativeDynamicsCompressorNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createDynamicsCompressor());\n        assignNativeAudioNodeOptions(nativeDynamicsCompressorNode, options);\n        // Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet.\n        if (options.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.\n        if (options.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'attack');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'knee');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'ratio');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'release');\n        assignNativeAudioNodeAudioParamValue(nativeDynamicsCompressorNode, options, 'threshold');\n        return nativeDynamicsCompressorNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-dynamics-compressor-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeGainNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, options) => {\n        const nativeGainNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createGain());\n        assignNativeAudioNodeOptions(nativeGainNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeGainNode, options, 'gain');\n        return nativeGainNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-gain-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeIIRFilterNodeFactory = (createNativeAudioNode, createNativeIIRFilterNodeFaker) => {\n    return (nativeContext, baseLatency, options) => {\n        // Bug #9: Safari does not support IIRFilterNodes.\n        if (nativeContext.createIIRFilter === undefined) {\n            return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);\n        }\n        const nativeIIRFilterNode = createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createIIRFilter(options.feedforward, options.feedback);\n        });\n        assignNativeAudioNodeOptions(nativeIIRFilterNode, options);\n        return nativeIIRFilterNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-iir-filter-node-factory.js.map","import { computeBufferSize } from '../helpers/compute-buffer-size';\nimport { filterBuffer } from '../helpers/filter-buffer';\nimport { interceptConnections } from '../helpers/intercept-connections';\nfunction divide(a, b) {\n    const denominator = (b[0] * b[0]) + (b[1] * b[1]);\n    return [(((a[0] * b[0]) + (a[1] * b[1])) / denominator), (((a[1] * b[0]) - (a[0] * b[1])) / denominator)];\n}\nfunction multiply(a, b) {\n    return [((a[0] * b[0]) - (a[1] * b[1])), ((a[0] * b[1]) + (a[1] * b[0]))];\n}\nfunction evaluatePolynomial(coefficient, z) {\n    let result = [0, 0];\n    for (let i = coefficient.length - 1; i >= 0; i -= 1) {\n        result = multiply(result, z);\n        result[0] += coefficient[i];\n    }\n    return result;\n}\nexport const createNativeIIRFilterNodeFakerFactory = (createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) => {\n    return (nativeContext, baseLatency, { channelCount, channelCountMode, channelInterpretation, feedback, feedforward }) => {\n        const bufferSize = computeBufferSize(baseLatency, nativeContext.sampleRate);\n        const feedbackLength = feedback.length;\n        const feedforwardLength = feedforward.length;\n        const minLength = Math.min(feedbackLength, feedforwardLength);\n        if (feedback.length === 0 || feedback.length > 20) {\n            throw createNotSupportedError();\n        }\n        if (feedback[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedforward.length === 0 || feedforward.length > 20) {\n            throw createNotSupportedError();\n        }\n        if (feedforward[0] === 0) {\n            throw createInvalidStateError();\n        }\n        if (feedback[0] !== 1) {\n            for (let i = 0; i < feedforwardLength; i += 1) {\n                feedforward[i] /= feedback[0];\n            }\n            for (let i = 1; i < feedbackLength; i += 1) {\n                feedback[i] /= feedback[0];\n            }\n        }\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);\n        scriptProcessorNode.channelCount = channelCount;\n        scriptProcessorNode.channelCountMode = channelCountMode;\n        scriptProcessorNode.channelInterpretation = channelInterpretation;\n        const bufferLength = 32;\n        const bufferIndexes = [];\n        const xBuffers = [];\n        const yBuffers = [];\n        for (let i = 0; i < channelCount; i += 1) {\n            bufferIndexes.push(0);\n            const xBuffer = new Float32Array(bufferLength);\n            const yBuffer = new Float32Array(bufferLength);\n            xBuffer.fill(0);\n            yBuffer.fill(0);\n            xBuffers.push(xBuffer);\n            yBuffers.push(yBuffer);\n        }\n        scriptProcessorNode.onaudioprocess = (event) => {\n            const inputBuffer = event.inputBuffer;\n            const outputBuffer = event.outputBuffer;\n            const numberOfChannels = inputBuffer.numberOfChannels;\n            for (let i = 0; i < numberOfChannels; i += 1) {\n                const input = inputBuffer.getChannelData(i);\n                const output = outputBuffer.getChannelData(i);\n                bufferIndexes[i] = filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffers[i], yBuffers[i], bufferIndexes[i], bufferLength, input, output);\n            }\n        };\n        const nyquist = nativeContext.sampleRate / 2;\n        const nativeIIRFilterNodeFaker = {\n            get bufferSize() {\n                return bufferSize;\n            },\n            get channelCount() {\n                return scriptProcessorNode.channelCount;\n            },\n            set channelCount(value) {\n                scriptProcessorNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return scriptProcessorNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                scriptProcessorNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return scriptProcessorNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                scriptProcessorNode.channelInterpretation = value;\n            },\n            get context() {\n                return scriptProcessorNode.context;\n            },\n            get inputs() {\n                return [scriptProcessorNode];\n            },\n            get numberOfInputs() {\n                return scriptProcessorNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return scriptProcessorNode.numberOfOutputs;\n            },\n            addEventListener(...args) {\n                // @todo Dissallow adding an audioprocess listener.\n                return scriptProcessorNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return scriptProcessorNode.dispatchEvent(args[0]);\n            },\n            getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {\n                if ((frequencyHz.length !== magResponse.length) || (magResponse.length !== phaseResponse.length)) {\n                    throw createInvalidAccessError();\n                }\n                const length = frequencyHz.length;\n                for (let i = 0; i < length; i += 1) {\n                    const omega = -Math.PI * (frequencyHz[i] / nyquist);\n                    const z = [Math.cos(omega), Math.sin(omega)];\n                    const numerator = evaluatePolynomial(feedforward, z);\n                    const denominator = evaluatePolynomial(feedback, z);\n                    const response = divide(numerator, denominator);\n                    magResponse[i] = Math.sqrt((response[0] * response[0]) + (response[1] * response[1]));\n                    phaseResponse[i] = Math.atan2(response[1], response[0]);\n                }\n            },\n            removeEventListener(...args) {\n                return scriptProcessorNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        return interceptConnections(nativeIIRFilterNodeFaker, scriptProcessorNode);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-iir-filter-node-faker-factory.js.map","export const createNativeMediaElementAudioSourceNodeFactory = (createNativeAudioNode) => {\n    return (nativeAudioContext, options) => createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n        return ntvDCntxt.createMediaElementSource(options.mediaElement);\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-element-audio-source-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeMediaStreamAudioDestinationNodeFactory = (createNativeAudioNode, createNotSupportedError) => {\n    return (nativeAudioContext, options) => {\n        // Bug #64: Edge does not support MediaStreamAudioDestinationNodes.\n        if (nativeAudioContext.createMediaStreamDestination === undefined) {\n            throw createNotSupportedError();\n        }\n        const nativeMediaStreamAudioDestinationNode = createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            return ntvDCntxt.createMediaStreamDestination();\n        });\n        assignNativeAudioNodeOptions(nativeMediaStreamAudioDestinationNode, options);\n        // Bug #174: Safari does expose a wrong numberOfOutputs.\n        if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {\n            Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', { get: () => 0 });\n        }\n        return nativeMediaStreamAudioDestinationNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-stream-audio-destination-node-factory.js.map","export const createNativeMediaStreamAudioSourceNodeFactory = (createNativeAudioNode) => {\n    return (nativeAudioContext, { mediaStream }) => {\n        const audioStreamTracks = mediaStream.getAudioTracks();\n        const nativeMediaStreamAudioSourceNode = createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            /*\n             * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.\n             * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.\n             */\n            const filteredAudioStreamTracks = audioStreamTracks\n                .sort((a, b) => ((a.id < b.id) ? -1 : (a.id > b.id) ? 1 : 0))\n                .slice(0, 1);\n            return ntvDCntxt.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));\n        });\n        // Bug #63: Edge does not expose the mediaStream yet.\n        Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', { value: mediaStream });\n        return nativeMediaStreamAudioSourceNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-stream-audio-source-node-factory.js.map","export const createNativeMediaStreamTrackAudioSourceNodeFactory = (createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext) => {\n    return (nativeAudioContext, { mediaStreamTrack }) => {\n        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {\n            return createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => ntvDCntxt.createMediaStreamTrackSource(mediaStreamTrack));\n        }\n        // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.\n        return createNativeAudioNode(nativeAudioContext, (ntvDCntxt) => {\n            const mediaStream = new MediaStream([mediaStreamTrack]);\n            const nativeMediaStreamAudioSourceNode = ntvDCntxt.createMediaStreamSource(mediaStream);\n            // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.\n            if (mediaStreamTrack.kind !== 'audio') {\n                throw createInvalidStateError();\n            }\n            // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.\n            if (isNativeOfflineAudioContext(ntvDCntxt)) {\n                throw new TypeError();\n            }\n            return nativeMediaStreamAudioSourceNode;\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js.map","export const createNativeOfflineAudioContextConstructor = (window) => {\n    if (window === null) {\n        return null;\n    }\n    if (window.hasOwnProperty('OfflineAudioContext')) {\n        return window.OfflineAudioContext;\n    }\n    return (window.hasOwnProperty('webkitOfflineAudioContext')) ? window.webkitOfflineAudioContext : null;\n};\n//# sourceMappingURL=/build/es2019/factories/native-offline-audio-context-constructor.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { wrapAudioScheduledSourceNodeStartMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters';\nimport { wrapAudioScheduledSourceNodeStopMethodNegativeParameters } from '../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters';\nexport const createNativeOscillatorNodeFactory = (addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) => {\n    return (nativeContext, options) => {\n        const nativeOscillatorNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        assignNativeAudioNodeOptions(nativeOscillatorNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'detune');\n        assignNativeAudioNodeAudioParamValue(nativeOscillatorNode, options, 'frequency');\n        if (options.periodicWave !== undefined) {\n            nativeOscillatorNode.setPeriodicWave(options.periodicWave);\n        }\n        else {\n            assignNativeAudioNodeOption(nativeOscillatorNode, options, 'type');\n        }\n        // Bug #44: Only Chrome & Opera throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, () => testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);\n        }\n        // Bug #44: Only Firefox does not throw a RangeError yet.\n        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, () => testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext))) {\n            wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeOscillatorNode);\n        }\n        // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.\n        addSilentConnection(nativeContext, nativeOscillatorNode);\n        return nativeOscillatorNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-oscillator-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativePannerNodeFactory = (createNativeAudioNode, createNativePannerNodeFaker) => {\n    return (nativeContext, options) => {\n        const nativePannerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createPanner());\n        // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.\n        if (nativePannerNode.orientationX === undefined) {\n            return createNativePannerNodeFaker(nativeContext, options);\n        }\n        assignNativeAudioNodeOptions(nativePannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'orientationZ');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionX');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionY');\n        assignNativeAudioNodeAudioParamValue(nativePannerNode, options, 'positionZ');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneInnerAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterAngle');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'coneOuterGain');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'distanceModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'maxDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'panningModel');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'refDistance');\n        assignNativeAudioNodeOption(nativePannerNode, options, 'rolloffFactor');\n        return nativePannerNode;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-panner-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativePannerNodeFakerFactory = (connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections) => {\n    return (nativeContext, { coneInnerAngle, coneOuterAngle, coneOuterGain, distanceModel, maxDistance, orientationX, orientationY, orientationZ, panningModel, positionX, positionY, positionZ, refDistance, rolloffFactor, ...audioNodeOptions }) => {\n        const pannerNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createPanner());\n        // Bug #125: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCount > 2) {\n            throw createNotSupportedError();\n        }\n        // Bug #126: Safari does not throw an error yet.\n        if (audioNodeOptions.channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        assignNativeAudioNodeOptions(pannerNode, audioNodeOptions);\n        const SINGLE_CHANNEL_OPTIONS = {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete'\n        };\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, channelInterpretation: 'speakers', numberOfInputs: 6 });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const orientationXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 1 });\n        const orientationYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const orientationZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionXGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionYGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const positionZGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        const scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);\n        const waveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, curve: new Float32Array([1, 1]), oversample: 'none' });\n        let lastOrientation = [orientationX, orientationY, orientationZ];\n        let lastPosition = [positionX, positionY, positionZ];\n        scriptProcessorNode.onaudioprocess = ({ inputBuffer }) => {\n            const orientation = [\n                inputBuffer.getChannelData(0)[0],\n                inputBuffer.getChannelData(1)[0],\n                inputBuffer.getChannelData(2)[0]\n            ];\n            if (orientation.some((value, index) => (value !== lastOrientation[index]))) {\n                pannerNode.setOrientation(...orientation); // tslint:disable-line:deprecation\n                lastOrientation = orientation;\n            }\n            const positon = [\n                inputBuffer.getChannelData(3)[0],\n                inputBuffer.getChannelData(4)[0],\n                inputBuffer.getChannelData(5)[0]\n            ];\n            if (positon.some((value, index) => (value !== lastPosition[index]))) {\n                pannerNode.setPosition(...positon); // tslint:disable-line:deprecation\n                lastPosition = positon;\n            }\n        };\n        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionXGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionYGainNode.gain, 'defaultValue', { get: () => 0 });\n        Object.defineProperty(positionZGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativePannerNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return pannerNode.channelCount;\n            },\n            set channelCount(value) {\n                // Bug #125: Safari does not throw an error yet.\n                if (value > 2) {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCount = value;\n                pannerNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return pannerNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                // Bug #126: Safari does not throw an error yet.\n                if (value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n                pannerNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return pannerNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                pannerNode.channelInterpretation = value;\n            },\n            get coneInnerAngle() {\n                return pannerNode.coneInnerAngle;\n            },\n            set coneInnerAngle(value) {\n                pannerNode.coneInnerAngle = value;\n            },\n            get coneOuterAngle() {\n                return pannerNode.coneOuterAngle;\n            },\n            set coneOuterAngle(value) {\n                pannerNode.coneOuterAngle = value;\n            },\n            get coneOuterGain() {\n                return pannerNode.coneOuterGain;\n            },\n            set coneOuterGain(value) {\n                // Bug #127: Edge & Safari do not throw an InvalidStateError yet.\n                if (value < 0 || value > 1) {\n                    throw createInvalidStateError();\n                }\n                pannerNode.coneOuterGain = value;\n            },\n            get context() {\n                return pannerNode.context;\n            },\n            get distanceModel() {\n                return pannerNode.distanceModel;\n            },\n            set distanceModel(value) {\n                pannerNode.distanceModel = value;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get maxDistance() {\n                return pannerNode.maxDistance;\n            },\n            set maxDistance(value) {\n                // Bug #128: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.maxDistance = value;\n            },\n            get numberOfInputs() {\n                return pannerNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return pannerNode.numberOfOutputs;\n            },\n            get orientationX() {\n                return orientationXGainNode.gain;\n            },\n            get orientationY() {\n                return orientationYGainNode.gain;\n            },\n            get orientationZ() {\n                return orientationZGainNode.gain;\n            },\n            get panningModel() {\n                return pannerNode.panningModel;\n            },\n            set panningModel(value) {\n                pannerNode.panningModel = value;\n                // Bug #123: Edge does not support HRTF as panningModel.\n                if (pannerNode.panningModel !== value && value === 'HRTF') {\n                    throw createNotSupportedError();\n                }\n            },\n            get positionX() {\n                return positionXGainNode.gain;\n            },\n            get positionY() {\n                return positionYGainNode.gain;\n            },\n            get positionZ() {\n                return positionZGainNode.gain;\n            },\n            get refDistance() {\n                return pannerNode.refDistance;\n            },\n            set refDistance(value) {\n                // Bug #129: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.refDistance = value;\n            },\n            get rolloffFactor() {\n                return pannerNode.rolloffFactor;\n            },\n            set rolloffFactor(value) {\n                // Bug #130: Edge & Safari do not throw an error yet.\n                if (value < 0) {\n                    throw new RangeError();\n                }\n                pannerNode.rolloffFactor = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {\n            nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;\n        }\n        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {\n            nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;\n        }\n        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {\n            nativePannerNodeFaker.coneOuterGain = coneOuterGain;\n        }\n        if (distanceModel !== nativePannerNodeFaker.distanceModel) {\n            nativePannerNodeFaker.distanceModel = distanceModel;\n        }\n        if (maxDistance !== nativePannerNodeFaker.maxDistance) {\n            nativePannerNodeFaker.maxDistance = maxDistance;\n        }\n        if (orientationX !== nativePannerNodeFaker.orientationX.value) {\n            nativePannerNodeFaker.orientationX.value = orientationX;\n        }\n        if (orientationY !== nativePannerNodeFaker.orientationY.value) {\n            nativePannerNodeFaker.orientationY.value = orientationY;\n        }\n        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {\n            nativePannerNodeFaker.orientationZ.value = orientationZ;\n        }\n        if (panningModel !== nativePannerNodeFaker.panningModel) {\n            nativePannerNodeFaker.panningModel = panningModel;\n        }\n        if (positionX !== nativePannerNodeFaker.positionX.value) {\n            nativePannerNodeFaker.positionX.value = positionX;\n        }\n        if (positionY !== nativePannerNodeFaker.positionY.value) {\n            nativePannerNodeFaker.positionY.value = positionY;\n        }\n        if (positionZ !== nativePannerNodeFaker.positionZ.value) {\n            nativePannerNodeFaker.positionZ.value = positionZ;\n        }\n        if (refDistance !== nativePannerNodeFaker.refDistance) {\n            nativePannerNodeFaker.refDistance = refDistance;\n        }\n        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {\n            nativePannerNodeFaker.rolloffFactor = rolloffFactor;\n        }\n        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {\n            pannerNode.setOrientation(...lastOrientation); // tslint:disable-line:deprecation\n        }\n        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {\n            pannerNode.setPosition(...lastPosition); // tslint:disable-line:deprecation\n        }\n        const whenConnected = () => {\n            inputGainNode.connect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode\n                .connect(orientationXGainNode)\n                .connect(channelMergerNode, 0, 0);\n            waveShaperNode\n                .connect(orientationYGainNode)\n                .connect(channelMergerNode, 0, 1);\n            waveShaperNode\n                .connect(orientationZGainNode)\n                .connect(channelMergerNode, 0, 2);\n            waveShaperNode\n                .connect(positionXGainNode)\n                .connect(channelMergerNode, 0, 3);\n            waveShaperNode\n                .connect(positionYGainNode)\n                .connect(channelMergerNode, 0, 4);\n            waveShaperNode\n                .connect(positionZGainNode)\n                .connect(channelMergerNode, 0, 5);\n            channelMergerNode\n                .connect(scriptProcessorNode)\n                .connect(nativeContext.destination);\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(pannerNode);\n            // Bug #119: Safari does not fully support the WaveShaperNode.\n            disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);\n            waveShaperNode.disconnect(orientationXGainNode);\n            orientationXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationYGainNode);\n            orientationYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(orientationZGainNode);\n            orientationZGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionXGainNode);\n            positionXGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionYGainNode);\n            positionYGainNode.disconnect(channelMergerNode);\n            waveShaperNode.disconnect(positionZGainNode);\n            positionZGainNode.disconnect(channelMergerNode);\n            channelMergerNode.disconnect(scriptProcessorNode);\n            scriptProcessorNode.disconnect(nativeContext.destination);\n        };\n        return monitorConnections(interceptConnections(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-panner-node-faker-factory.js.map","export const createNativePeriodicWaveFactory = (getBackupNativeContext) => {\n    return (nativeContext, { disableNormalization, imag, real }) => {\n        // Bug #50: Only Edge does currently not allow to create AudioNodes (and other objects) on a closed context yet.\n        const backupNativeContext = getBackupNativeContext(nativeContext);\n        // @todo Edge, Firefox & Safari do only accept Float32Arrays.\n        const wrappedImag = new Float32Array(imag);\n        const wrappedReal = new Float32Array(real);\n        if (backupNativeContext !== null) {\n            return backupNativeContext.createPeriodicWave(wrappedReal, wrappedImag, { disableNormalization });\n        }\n        return nativeContext.createPeriodicWave(wrappedReal, wrappedImag, { disableNormalization });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-periodic-wave-factory.js.map","export const createNativeScriptProcessorNodeFactory = (createNativeAudioNode) => {\n    return (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) => {\n        return createNativeAudioNode(nativeContext, (ntvCntxt) => {\n            return ntvCntxt.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-script-processor-node-factory.js.map","import { assignNativeAudioNodeAudioParamValue } from '../helpers/assign-native-audio-node-audio-param-value';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeStereoPannerNodeFactory = (createNativeAudioNode, createNativeStereoPannerNodeFaker, createNotSupportedError) => {\n    return (nativeContext, options) => createNativeAudioNode(nativeContext, (ntvCntxt) => {\n        const channelCountMode = options.channelCountMode;\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        if (channelCountMode === 'clamped-max') {\n            throw createNotSupportedError();\n        }\n        // Bug #105: Safari does not support the StereoPannerNode.\n        if (nativeContext.createStereoPanner === undefined) {\n            return createNativeStereoPannerNodeFaker(nativeContext, options);\n        }\n        const nativeStereoPannerNode = ntvCntxt.createStereoPanner();\n        assignNativeAudioNodeOptions(nativeStereoPannerNode, options);\n        assignNativeAudioNodeAudioParamValue(nativeStereoPannerNode, options, 'pan');\n        /*\n         * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari\n         * which supports it and therefore it can't be supported at all.\n         */\n        Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {\n            get: () => channelCountMode,\n            set: (value) => {\n                if (value !== channelCountMode) {\n                    throw createNotSupportedError();\n                }\n            }\n        });\n        return nativeStereoPannerNode;\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/native-stereo-panner-node-factory.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeStereoPannerNodeFakerFactory = (createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) => {\n    // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.\n    const CURVE_SIZE = 16385;\n    const DC_CURVE = new Float32Array([1, 1]);\n    const HALF_PI = Math.PI / 2;\n    const SINGLE_CHANNEL_OPTIONS = { channelCount: 1, channelCountMode: 'explicit', channelInterpretation: 'discrete' };\n    const SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = { ...SINGLE_CHANNEL_OPTIONS, oversample: 'none' };\n    const buildInternalGraphForMono = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            const x = (i / (CURVE_SIZE - 1)) * HALF_PI;\n            leftWaveShaperCurve[i] = Math.cos(x);\n            rightWaveShaperCurve[i] = Math.sin(x);\n        }\n        const leftGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftWaveShaperCurve });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE });\n        const rightGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightWaveShaperCurve });\n        return {\n            connectGraph() {\n                inputGainNode.connect(leftGainNode);\n                inputGainNode.connect(panWaveShaperNode.inputs[0]);\n                inputGainNode.connect(rightGainNode);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.connect(leftGainNode.gain);\n                rightWaveShaperNode.connect(rightGainNode.gain);\n                leftGainNode.connect(channelMergerNode, 0, 0);\n                rightGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(leftGainNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n                inputGainNode.disconnect(rightGainNode);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightWaveShaperNode.inputs[0]);\n                leftWaveShaperNode.disconnect(leftGainNode.gain);\n                rightWaveShaperNode.disconnect(rightGainNode.gain);\n                leftGainNode.disconnect(channelMergerNode, 0, 0);\n                rightGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraphForStereo = (nativeContext, inputGainNode, panGainNode, channelMergerNode) => {\n        const leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);\n        const centerIndex = Math.floor(CURVE_SIZE / 2);\n        for (let i = 0; i < CURVE_SIZE; i += 1) {\n            if (i > centerIndex) {\n                const x = ((i - centerIndex) / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n                rightInputForLeftOutputWaveShaperCurve[i] = 0;\n                rightInputForRightOutputWaveShaperCurve[i] = 1;\n            }\n            else {\n                const x = (i / (CURVE_SIZE - 1 - centerIndex)) * HALF_PI;\n                leftInputForLeftOutputWaveShaperCurve[i] = 1;\n                leftInputForRightOutputWaveShaperCurve[i] = 0;\n                rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);\n                rightInputForRightOutputWaveShaperCurve[i] = Math.sin(x);\n            }\n        }\n        const channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {\n            channelCount: 2,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            numberOfOutputs: 2\n        });\n        const leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftInputForLeftOutputWaveShaperCurve });\n        const leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: leftInputForRightOutputWaveShaperCurve });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const panWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: DC_CURVE });\n        const rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightInputForLeftOutputWaveShaperCurve });\n        const rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, { ...SINGLE_CHANNEL_OPTIONS, gain: 0 });\n        // Bug #119: Safari does not fully support the WaveShaperNode.\n        const rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, { ...SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS, curve: rightInputForRightOutputWaveShaperCurve });\n        return {\n            connectGraph() {\n                inputGainNode.connect(channelSplitterNode);\n                inputGainNode.connect(panWaveShaperNode.inputs[0]);\n                channelSplitterNode.connect(leftInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(leftInputForRightOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.connect(panGainNode);\n                panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);\n            },\n            disconnectGraph() {\n                inputGainNode.disconnect(channelSplitterNode);\n                inputGainNode.disconnect(panWaveShaperNode.inputs[0]);\n                channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);\n                channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);\n                panWaveShaperNode.disconnect(panGainNode);\n                panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs[0]);\n                panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs[0]);\n                leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);\n                leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);\n                rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);\n                rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);\n                leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);\n                leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n                rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);\n            }\n        };\n    };\n    const buildInternalGraph = (nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) => {\n        if (channelCount === 1) {\n            return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        if (channelCount === 2) {\n            return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);\n        }\n        throw createNotSupportedError();\n    };\n    return (nativeContext, { channelCount, channelCountMode, pan, ...audioNodeOptions }) => {\n        if (channelCountMode === 'max') {\n            throw createNotSupportedError();\n        }\n        const channelMergerNode = createNativeChannelMergerNode(nativeContext, {\n            ...audioNodeOptions,\n            channelCount: 1,\n            channelCountMode,\n            numberOfInputs: 2\n        });\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, channelCount, channelCountMode, gain: 1 });\n        const panGainNode = createNativeGainNode(nativeContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: pan\n        });\n        let { connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode);\n        Object.defineProperty(panGainNode.gain, 'defaultValue', { get: () => 0 });\n        const nativeStereoPannerNodeFakerFactory = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return inputGainNode.channelCount;\n            },\n            set channelCount(value) {\n                if (inputGainNode.channelCount !== value) {\n                    if (isConnected) {\n                        disconnectGraph();\n                    }\n                    ({ connectGraph, disconnectGraph } = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode));\n                    if (isConnected) {\n                        connectGraph();\n                    }\n                }\n                inputGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return inputGainNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                if (value === 'clamped-max' || value === 'max') {\n                    throw createNotSupportedError();\n                }\n                inputGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return inputGainNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return inputGainNode.context;\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return inputGainNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return inputGainNode.numberOfOutputs;\n            },\n            get pan() {\n                return panGainNode.gain;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        let isConnected = false;\n        const whenConnected = () => {\n            connectGraph();\n            isConnected = true;\n        };\n        const whenDisconnected = () => {\n            disconnectGraph();\n            isConnected = false;\n        };\n        return monitorConnections(interceptConnections(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-stereo-panner-node-faker-factory.js.map","import { assignNativeAudioNodeOption } from '../helpers/assign-native-audio-node-option';\nimport { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nexport const createNativeWaveShaperNodeFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, overwriteAccessors) => {\n    return (nativeContext, options) => {\n        const nativeWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        try {\n            // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n            // Bug #119: Safari does not correctly map the values. Bug #102 is only used to detect Safari in this case.\n            nativeWaveShaperNode.curve = new Float32Array([1]);\n            return createNativeWaveShaperNodeFaker(nativeContext, options);\n        }\n        catch { /* Ignore errors. */ }\n        assignNativeAudioNodeOptions(nativeWaveShaperNode, options);\n        const curve = options.curve;\n        // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n        if (curve !== null && curve.length < 2) {\n            throw createInvalidStateError();\n        }\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'curve');\n        assignNativeAudioNodeOption(nativeWaveShaperNode, options, 'oversample');\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        overwriteAccessors(nativeWaveShaperNode, 'curve', (get) => () => get.call(nativeWaveShaperNode), (set) => (value) => {\n            set.call(nativeWaveShaperNode, value);\n            if (isConnected) {\n                if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {\n                    disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n                }\n                else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {\n                    disconnectNativeAudioBufferSourceNode();\n                    disconnectNativeAudioBufferSourceNode = null;\n                }\n            }\n            return value;\n        });\n        const whenConnected = () => {\n            isConnected = true;\n            if (isDCCurve(nativeWaveShaperNode.curve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);\n            }\n        };\n        const whenDisconnected = () => {\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-wave-shaper-node-factory.js.map","import { assignNativeAudioNodeOptions } from '../helpers/assign-native-audio-node-options';\nimport { interceptConnections } from '../helpers/intercept-connections';\nexport const createNativeWaveShaperNodeFakerFactory = (createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeGainNode, isDCCurve, monitorConnections) => {\n    return (nativeContext, { curve, oversample, ...audioNodeOptions }) => {\n        const negativeWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        const positiveWaveShaperNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createWaveShaper());\n        assignNativeAudioNodeOptions(negativeWaveShaperNode, audioNodeOptions);\n        assignNativeAudioNodeOptions(positiveWaveShaperNode, audioNodeOptions);\n        const inputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const invertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        const outputGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: 1 });\n        const revertGainNode = createNativeGainNode(nativeContext, { ...audioNodeOptions, gain: -1 });\n        let disconnectNativeAudioBufferSourceNode = null;\n        let isConnected = false;\n        let unmodifiedCurve = null;\n        const nativeWaveShaperNodeFaker = {\n            get bufferSize() {\n                return undefined;\n            },\n            get channelCount() {\n                return negativeWaveShaperNode.channelCount;\n            },\n            set channelCount(value) {\n                inputGainNode.channelCount = value;\n                invertGainNode.channelCount = value;\n                negativeWaveShaperNode.channelCount = value;\n                outputGainNode.channelCount = value;\n                positiveWaveShaperNode.channelCount = value;\n                revertGainNode.channelCount = value;\n            },\n            get channelCountMode() {\n                return negativeWaveShaperNode.channelCountMode;\n            },\n            set channelCountMode(value) {\n                inputGainNode.channelCountMode = value;\n                invertGainNode.channelCountMode = value;\n                negativeWaveShaperNode.channelCountMode = value;\n                outputGainNode.channelCountMode = value;\n                positiveWaveShaperNode.channelCountMode = value;\n                revertGainNode.channelCountMode = value;\n            },\n            get channelInterpretation() {\n                return negativeWaveShaperNode.channelInterpretation;\n            },\n            set channelInterpretation(value) {\n                inputGainNode.channelInterpretation = value;\n                invertGainNode.channelInterpretation = value;\n                negativeWaveShaperNode.channelInterpretation = value;\n                outputGainNode.channelInterpretation = value;\n                positiveWaveShaperNode.channelInterpretation = value;\n                revertGainNode.channelInterpretation = value;\n            },\n            get context() {\n                return negativeWaveShaperNode.context;\n            },\n            get curve() {\n                return unmodifiedCurve;\n            },\n            set curve(value) {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                if (curve !== null && curve.length < 2) {\n                    throw createInvalidStateError();\n                }\n                if (value === null) {\n                    negativeWaveShaperNode.curve = value;\n                    positiveWaveShaperNode.curve = value;\n                }\n                else {\n                    const curveLength = value.length;\n                    const negativeCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    const positiveCurve = new Float32Array(curveLength + 2 - (curveLength % 2));\n                    negativeCurve[0] = value[0];\n                    positiveCurve[0] = -value[curveLength - 1];\n                    const length = Math.ceil((curveLength + 1) / 2);\n                    const centerIndex = ((curveLength + 1) / 2) - 1;\n                    for (let i = 1; i < length; i += 1) {\n                        const theoreticIndex = (i / length) * centerIndex;\n                        const lowerIndex = Math.floor(theoreticIndex);\n                        const upperIndex = Math.ceil(theoreticIndex);\n                        negativeCurve[i] = (lowerIndex === upperIndex)\n                            ? value[lowerIndex]\n                            : ((1 - (theoreticIndex - lowerIndex)) * value[lowerIndex])\n                                + ((1 - (upperIndex - theoreticIndex)) * value[upperIndex]);\n                        positiveCurve[i] = (lowerIndex === upperIndex)\n                            ? -value[curveLength - 1 - lowerIndex]\n                            : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex])\n                                - ((1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex]);\n                    }\n                    negativeCurve[length] = (curveLength % 2 === 1) ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;\n                    negativeWaveShaperNode.curve = negativeCurve;\n                    positiveWaveShaperNode.curve = positiveCurve;\n                }\n                unmodifiedCurve = value;\n                if (isConnected) {\n                    if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {\n                        disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n                    }\n                    else if (disconnectNativeAudioBufferSourceNode !== null) {\n                        disconnectNativeAudioBufferSourceNode();\n                        disconnectNativeAudioBufferSourceNode = null;\n                    }\n                }\n            },\n            get inputs() {\n                return [inputGainNode];\n            },\n            get numberOfInputs() {\n                return negativeWaveShaperNode.numberOfInputs;\n            },\n            get numberOfOutputs() {\n                return negativeWaveShaperNode.numberOfOutputs;\n            },\n            get oversample() {\n                return negativeWaveShaperNode.oversample;\n            },\n            set oversample(value) {\n                negativeWaveShaperNode.oversample = value;\n                positiveWaveShaperNode.oversample = value;\n            },\n            addEventListener(...args) {\n                return inputGainNode.addEventListener(args[0], args[1], args[2]);\n            },\n            dispatchEvent(...args) {\n                return inputGainNode.dispatchEvent(args[0]);\n            },\n            removeEventListener(...args) {\n                return inputGainNode.removeEventListener(args[0], args[1], args[2]);\n            }\n        };\n        if (curve !== nativeWaveShaperNodeFaker.curve) {\n            nativeWaveShaperNodeFaker.curve = curve;\n        }\n        if (oversample !== nativeWaveShaperNodeFaker.oversample) {\n            nativeWaveShaperNodeFaker.oversample = oversample;\n        }\n        const whenConnected = () => {\n            inputGainNode\n                .connect(negativeWaveShaperNode)\n                .connect(outputGainNode);\n            inputGainNode\n                .connect(invertGainNode)\n                .connect(positiveWaveShaperNode)\n                .connect(revertGainNode)\n                .connect(outputGainNode);\n            isConnected = true;\n            if (isDCCurve(unmodifiedCurve)) {\n                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);\n            }\n        };\n        const whenDisconnected = () => {\n            inputGainNode.disconnect(negativeWaveShaperNode);\n            negativeWaveShaperNode.disconnect(outputGainNode);\n            inputGainNode.disconnect(invertGainNode);\n            invertGainNode.disconnect(positiveWaveShaperNode);\n            positiveWaveShaperNode.disconnect(revertGainNode);\n            revertGainNode.disconnect(outputGainNode);\n            isConnected = false;\n            if (disconnectNativeAudioBufferSourceNode !== null) {\n                disconnectNativeAudioBufferSourceNode();\n                disconnectNativeAudioBufferSourceNode = null;\n            }\n        };\n        return monitorConnections(interceptConnections(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/native-wave-shaper-node-faker-factory.js.map","export const createNotSupportedError = () => {\n    try {\n        return new DOMException('', 'NotSupportedError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.code = 9;\n        err.name = 'NotSupportedError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/not-supported-error.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nconst DEFAULT_OPTIONS = {\n    numberOfChannels: 1\n};\nexport const createOfflineAudioContextConstructor = (baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering) => {\n    return class OfflineAudioContext extends baseAudioContextConstructor {\n        constructor(a, b, c) {\n            let options;\n            if (typeof a === 'number' && b !== undefined && c !== undefined) {\n                options = { length: b, numberOfChannels: a, sampleRate: c };\n            }\n            else if (typeof a === 'object') {\n                options = a;\n            }\n            else {\n                throw new Error('The given parameters are not valid.');\n            }\n            const { length, numberOfChannels, sampleRate } = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate);\n            // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.\n            if (!cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n                nativeOfflineAudioContext.addEventListener('statechange', (() => {\n                    let i = 0;\n                    const delayStateChangeEvent = (event) => {\n                        if (this._state === 'running') {\n                            if (i > 0) {\n                                nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);\n                                event.stopImmediatePropagation();\n                                this._waitForThePromiseToSettle(event);\n                            }\n                            else {\n                                i += 1;\n                            }\n                        }\n                    };\n                    return delayStateChangeEvent;\n                })());\n            }\n            super(nativeOfflineAudioContext, numberOfChannels);\n            this._length = length;\n            this._nativeOfflineAudioContext = nativeOfflineAudioContext;\n            this._state = null;\n        }\n        get length() {\n            // Bug #17: Safari does not yet expose the length.\n            if (this._nativeOfflineAudioContext.length === undefined) {\n                return this._length;\n            }\n            return this._nativeOfflineAudioContext.length;\n        }\n        get state() {\n            return (this._state === null) ? this._nativeOfflineAudioContext.state : this._state;\n        }\n        startRendering() {\n            /*\n             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore\n             * the state of the nativeOfflineAudioContext might no transition to running immediately.\n             */\n            if (this._state === 'running') {\n                return Promise.reject(createInvalidStateError());\n            }\n            this._state = 'running';\n            return startRendering(this.destination, this._nativeOfflineAudioContext)\n                .then((audioBuffer) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                return audioBuffer;\n            })\n                // @todo This could be written more elegantly when Promise.finally() becomes avalaible.\n                .catch((err) => {\n                this._state = null;\n                /*\n                 * Bug #50: Deleting the AudioGraph is currently not possible anymore.\n                 * deleteAudioGraph(this, this._nativeOfflineAudioContext);\n                 */\n                throw err;\n            });\n        }\n        _waitForThePromiseToSettle(event) {\n            if (this._state === null) {\n                this._nativeOfflineAudioContext.dispatchEvent(event);\n            }\n            else {\n                setTimeout(() => this._waitForThePromiseToSettle(event));\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/offline-audio-context-constructor.js.map","import { setInternalStateToActive } from '../helpers/set-internal-state-to-active';\nimport { setInternalStateToPassive } from '../helpers/set-internal-state-to-passive';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    detune: 0,\n    frequency: 440,\n    type: 'sine'\n};\nexport const createOscillatorNodeConstructor = (audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) => {\n    return class OscillatorNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const oscillatorNodeRenderer = ((isOffline) ? createOscillatorNodeRenderer() : null);\n            const nyquist = context.sampleRate / 2;\n            super(context, false, nativeOscillatorNode, oscillatorNodeRenderer);\n            // Bug #81: Edge, Firefox & Safari do not export the correct values for maxValue and minValue.\n            this._detune = createAudioParam(this, isOffline, nativeOscillatorNode.detune, 153600, -153600);\n            // Bug #76: Edge & Safari do not export the correct values for maxValue and minValue.\n            this._frequency = createAudioParam(this, isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);\n            this._nativeOscillatorNode = nativeOscillatorNode;\n            this._onended = null;\n            this._oscillatorNodeRenderer = oscillatorNodeRenderer;\n            if (this._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {\n                this._oscillatorNodeRenderer.periodicWave =\n                    mergedOptions.periodicWave;\n            }\n        }\n        get detune() {\n            return this._detune;\n        }\n        get frequency() {\n            return this._frequency;\n        }\n        get onended() {\n            return this._onended;\n        }\n        set onended(value) {\n            const wrappedListener = (typeof value === 'function') ? wrapEventListener(this, value) : null;\n            this._nativeOscillatorNode.onended = wrappedListener;\n            const nativeOnEnded = this._nativeOscillatorNode.onended;\n            this._onended = (nativeOnEnded !== null && nativeOnEnded === wrappedListener)\n                ? value\n                : nativeOnEnded;\n        }\n        get type() {\n            return this._nativeOscillatorNode.type;\n        }\n        set type(value) {\n            this._nativeOscillatorNode.type = value;\n            // Bug #57: Edge will not throw an error when assigning the type to 'custom'. But it still will change the value.\n            if (value === 'custom') {\n                throw createInvalidStateError();\n            }\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = null;\n            }\n        }\n        setPeriodicWave(periodicWave) {\n            this._nativeOscillatorNode.setPeriodicWave(periodicWave);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.periodicWave = periodicWave;\n            }\n        }\n        start(when = 0) {\n            this._nativeOscillatorNode.start(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.start = when;\n            }\n            else {\n                setInternalStateToActive(this);\n                const resetInternalStateToPassive = () => {\n                    this._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive);\n                    // @todo Determine a meaningful delay instead of just using one second.\n                    setTimeout(() => setInternalStateToPassive(this), 1000);\n                };\n                this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);\n            }\n        }\n        stop(when = 0) {\n            this._nativeOscillatorNode.stop(when);\n            if (this._oscillatorNodeRenderer !== null) {\n                this._oscillatorNodeRenderer.stop = when;\n            }\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/oscillator-node-constructor.js.map","import { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createOscillatorNodeRendererFactory = (connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeOscillatorNodes = new WeakMap();\n        let periodicWave = null;\n        let start = null;\n        let stop = null;\n        const createOscillatorNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeOscillatorNode = getNativeAudioNode(proxy);\n            // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeOscillatorNodeIsOwnedByContext = isOwnedByContext(nativeOscillatorNode, nativeOfflineAudioContext);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeOscillatorNode.channelCount,\n                    channelCountMode: nativeOscillatorNode.channelCountMode,\n                    channelInterpretation: nativeOscillatorNode.channelInterpretation,\n                    detune: nativeOscillatorNode.detune.value,\n                    frequency: nativeOscillatorNode.frequency.value,\n                    periodicWave: (periodicWave === null) ? undefined : periodicWave,\n                    type: nativeOscillatorNode.type\n                };\n                nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);\n                if (start !== null) {\n                    nativeOscillatorNode.start(start);\n                }\n                if (stop !== null) {\n                    nativeOscillatorNode.stop(stop);\n                }\n            }\n            renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);\n            if (!nativeOscillatorNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);\n            }\n            await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);\n            return nativeOscillatorNode;\n        };\n        return {\n            set periodicWave(value) {\n                periodicWave = value;\n            },\n            set start(value) {\n                start = value;\n            },\n            set stop(value) {\n                stop = value;\n            },\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeOscillatorNode !== undefined) {\n                    return Promise.resolve(renderedNativeOscillatorNode);\n                }\n                return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/oscillator-node-renderer-factory.js.map","import { MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT } from '../constants';\nconst DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'clamped-max',\n    channelInterpretation: 'speakers',\n    coneInnerAngle: 360,\n    coneOuterAngle: 360,\n    coneOuterGain: 0,\n    distanceModel: 'inverse',\n    maxDistance: 10000,\n    orientationX: 1,\n    orientationY: 0,\n    orientationZ: 0,\n    panningModel: 'equalpower',\n    positionX: 0,\n    positionY: 0,\n    positionZ: 0,\n    refDistance: 1,\n    rolloffFactor: 1\n};\nexport const createPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class PannerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const pannerNodeRenderer = ((isOffline) ? createPannerNodeRenderer() : null);\n            super(context, false, nativePannerNode, pannerNodeRenderer);\n            this._nativePannerNode = nativePannerNode;\n            // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue for GainNodes.\n            this._orientationX = createAudioParam(this, isOffline, nativePannerNode.orientationX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationY = createAudioParam(this, isOffline, nativePannerNode.orientationY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._orientationZ = createAudioParam(this, isOffline, nativePannerNode.orientationZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionX = createAudioParam(this, isOffline, nativePannerNode.positionX, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionY = createAudioParam(this, isOffline, nativePannerNode.positionY, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n            this._positionZ = createAudioParam(this, isOffline, nativePannerNode.positionZ, MOST_POSITIVE_SINGLE_FLOAT, MOST_NEGATIVE_SINGLE_FLOAT);\n        }\n        get coneInnerAngle() {\n            return this._nativePannerNode.coneInnerAngle;\n        }\n        set coneInnerAngle(value) {\n            this._nativePannerNode.coneInnerAngle = value;\n        }\n        get coneOuterAngle() {\n            return this._nativePannerNode.coneOuterAngle;\n        }\n        set coneOuterAngle(value) {\n            this._nativePannerNode.coneOuterAngle = value;\n        }\n        get coneOuterGain() {\n            return this._nativePannerNode.coneOuterGain;\n        }\n        set coneOuterGain(value) {\n            this._nativePannerNode.coneOuterGain = value;\n        }\n        get distanceModel() {\n            return this._nativePannerNode.distanceModel;\n        }\n        set distanceModel(value) {\n            this._nativePannerNode.distanceModel = value;\n        }\n        get maxDistance() {\n            return this._nativePannerNode.maxDistance;\n        }\n        set maxDistance(value) {\n            this._nativePannerNode.maxDistance = value;\n        }\n        get orientationX() {\n            return this._orientationX;\n        }\n        get orientationY() {\n            return this._orientationY;\n        }\n        get orientationZ() {\n            return this._orientationZ;\n        }\n        get panningModel() {\n            return this._nativePannerNode.panningModel;\n        }\n        set panningModel(value) {\n            this._nativePannerNode.panningModel = value;\n        }\n        get positionX() {\n            return this._positionX;\n        }\n        get positionY() {\n            return this._positionY;\n        }\n        get positionZ() {\n            return this._positionZ;\n        }\n        get refDistance() {\n            return this._nativePannerNode.refDistance;\n        }\n        set refDistance(value) {\n            this._nativePannerNode.refDistance = value;\n        }\n        get rolloffFactor() {\n            return this._nativePannerNode.rolloffFactor;\n        }\n        set rolloffFactor(value) {\n            this._nativePannerNode.rolloffFactor = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createPannerNodeRendererFactory = (connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) => {\n    return () => {\n        const renderedNativeAudioNodes = new WeakMap();\n        let renderedBufferPromise = null;\n        const createAudioNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeGainNode = null;\n            let nativePannerNode = getNativeAudioNode(proxy);\n            const commonAudioNodeOptions = {\n                channelCount: nativePannerNode.channelCount,\n                channelCountMode: nativePannerNode.channelCountMode,\n                channelInterpretation: nativePannerNode.channelInterpretation\n            };\n            const commonNativePannerNodeOptions = {\n                ...commonAudioNodeOptions,\n                coneInnerAngle: nativePannerNode.coneInnerAngle,\n                coneOuterAngle: nativePannerNode.coneOuterAngle,\n                coneOuterGain: nativePannerNode.coneOuterGain,\n                distanceModel: nativePannerNode.distanceModel,\n                maxDistance: nativePannerNode.maxDistance,\n                panningModel: nativePannerNode.panningModel,\n                refDistance: nativePannerNode.refDistance,\n                rolloffFactor: nativePannerNode.rolloffFactor\n            };\n            // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativePannerNodeIsOwnedByContext = isOwnedByContext(nativePannerNode, nativeOfflineAudioContext);\n            // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.\n            if ('bufferSize' in nativePannerNode) {\n                nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n            }\n            else if (!nativePannerNodeIsOwnedByContext) {\n                const options = {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: nativePannerNode.orientationX.value,\n                    orientationY: nativePannerNode.orientationY.value,\n                    orientationZ: nativePannerNode.orientationZ.value,\n                    positionX: nativePannerNode.positionX.value,\n                    positionY: nativePannerNode.positionY.value,\n                    positionZ: nativePannerNode.positionZ.value\n                };\n                nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeAudioNodes.set(nativeOfflineAudioContext, (nativeGainNode === null) ? nativePannerNode : nativeGainNode);\n            if (nativeGainNode !== null) {\n                if (renderedBufferPromise === null) {\n                    if (nativeOfflineAudioContextConstructor === null) {\n                        throw new Error('Missing the native OfflineAudioContext constructor.');\n                    }\n                    const partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, \n                    // Bug #17: Safari does not yet expose the length.\n                    proxy.context.length, nativeOfflineAudioContext.sampleRate);\n                    const nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {\n                        channelCount: 1,\n                        channelCountMode: 'explicit',\n                        channelInterpretation: 'speakers',\n                        numberOfInputs: 6\n                    });\n                    nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);\n                    renderedBufferPromise = (async () => {\n                        const nativeConstantSourceNodes = await Promise\n                            .all([\n                            proxy.orientationX,\n                            proxy.orientationY,\n                            proxy.orientationZ,\n                            proxy.positionX,\n                            proxy.positionY,\n                            proxy.positionZ\n                        ]\n                            .map(async (audioParam, index) => {\n                            const nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {\n                                channelCount: 1,\n                                channelCountMode: 'explicit',\n                                channelInterpretation: 'discrete',\n                                offset: (index === 0) ? 1 : 0\n                            });\n                            await renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);\n                            return nativeConstantSourceNode;\n                        }));\n                        for (let i = 0; i < 6; i += 1) {\n                            nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);\n                            nativeConstantSourceNodes[i].start(0);\n                        }\n                        return renderNativeOfflineAudioContext(partialOfflineAudioContext);\n                    })();\n                }\n                const renderedBuffer = await renderedBufferPromise;\n                const inputGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);\n                const channelDatas = [];\n                for (let i = 0; i < renderedBuffer.numberOfChannels; i += 1) {\n                    channelDatas.push(renderedBuffer.getChannelData(i));\n                }\n                let lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];\n                let lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];\n                let gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 1 });\n                let partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                    ...commonNativePannerNodeOptions,\n                    orientationX: lastOrientation[0],\n                    orientationY: lastOrientation[1],\n                    orientationZ: lastOrientation[2],\n                    positionX: lastPosition[0],\n                    positionY: lastPosition[1],\n                    positionZ: lastPosition[2]\n                });\n                inputGainNode\n                    .connect(gateGainNode)\n                    .connect(partialPannerNode.inputs[0]);\n                partialPannerNode.connect(nativeGainNode);\n                for (let i = 128; i < renderedBuffer.length; i += 128) {\n                    const orientation = [channelDatas[0][i], channelDatas[1][i], channelDatas[2][i]];\n                    const positon = [channelDatas[3][i], channelDatas[4][i], channelDatas[5][i]];\n                    if (orientation.some((value, index) => (value !== lastOrientation[index]))\n                        || positon.some((value, index) => (value !== lastPosition[index]))) {\n                        lastOrientation = orientation;\n                        lastPosition = positon;\n                        const currentTime = i / nativeOfflineAudioContext.sampleRate;\n                        gateGainNode.gain.setValueAtTime(0, currentTime);\n                        gateGainNode = createNativeGainNode(nativeOfflineAudioContext, { ...commonAudioNodeOptions, gain: 0 });\n                        partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, {\n                            ...commonNativePannerNodeOptions,\n                            orientationX: lastOrientation[0],\n                            orientationY: lastOrientation[1],\n                            orientationZ: lastOrientation[2],\n                            positionX: lastPosition[0],\n                            positionY: lastPosition[1],\n                            positionZ: lastPosition[2]\n                        });\n                        gateGainNode.gain.setValueAtTime(1, currentTime);\n                        inputGainNode\n                            .connect(gateGainNode)\n                            .connect(partialPannerNode.inputs[0]);\n                        partialPannerNode.connect(nativeGainNode);\n                    }\n                }\n                return nativeGainNode;\n            }\n            if (!nativePannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);\n                await connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);\n            }\n            if (isNativeAudioNodeFaker(nativePannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);\n            }\n            return nativePannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeGainNodeOrNativePannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);\n                }\n                return createAudioNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/panner-node-renderer-factory.js.map","const DEFAULT_OPTIONS = {\n    disableNormalization: false\n};\nexport const createPeriodicWaveConstructor = (createNativePeriodicWave, getNativeContext, periodicWaveStore) => {\n    return class PeriodicWave {\n        constructor(context, options) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);\n            periodicWaveStore.add(periodicWave);\n            // This does violate all good pratices but it is used here to simplify the handling of periodic waves.\n            return periodicWave;\n        }\n        static [Symbol.hasInstance](instance) {\n            return (instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype)\n                || (periodicWaveStore.has(instance));\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/periodic-wave-constructor.js.map","export const createRenderAutomation = (getAudioParamRenderer, renderInputsOfAudioParam) => {\n    return (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) => {\n        const audioParamRenderer = getAudioParamRenderer(audioParam);\n        audioParamRenderer.replay(nativeAudioParam);\n        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-automation.js.map","export const createRenderInputsOfAudioNode = (getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) => {\n    return async (audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) => {\n        const audioNodeConnections = getAudioNodeConnections(audioNode);\n        const nextTrace = [...trace, audioNode];\n        await Promise\n            .all(audioNodeConnections.activeInputs\n            .map((connections, input) => Array\n            .from(connections)\n            .filter(([source]) => !nextTrace.includes(source))\n            .map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);\n            const destination = audioNode.context.destination;\n            if (!isPartOfACycle(source) && ((audioNode !== destination) || !isPartOfACycle(audioNode))) {\n                renderedNativeAudioNode.connect(nativeAudioNode, output, input);\n            }\n        }))\n            .reduce((allRenderingPromises, renderingPromises) => [...allRenderingPromises, ...renderingPromises], []));\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-inputs-of-audio-node.js.map","export const createRenderInputsOfAudioParam = (getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) => {\n    return async (audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) => {\n        const audioParamConnections = getAudioParamConnections(audioParam);\n        await Promise\n            .all(Array\n            .from(audioParamConnections.activeInputs)\n            .map(async ([source, output]) => {\n            const audioNodeRenderer = getAudioNodeRenderer(source);\n            const renderedNativeAudioNode = await audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);\n            if (!isPartOfACycle(source)) {\n                renderedNativeAudioNode.connect(nativeAudioParam, output);\n            }\n        }));\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-inputs-of-audio-param.js.map","import { testPromiseSupport } from '../helpers/test-promise-support';\nexport const createRenderNativeOfflineAudioContext = (cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) => {\n    return (nativeOfflineAudioContext) => {\n        // Bug #21: Safari does not support promises yet.\n        if (cacheTestResult(testPromiseSupport, () => testPromiseSupport(nativeOfflineAudioContext))) {\n            // Bug #158: Edge does not advance currentTime if it is not accessed while rendering the audio.\n            return Promise\n                .resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport))\n                .then((isOfflineAudioContextCurrentTimeSupported) => {\n                if (!isOfflineAudioContextCurrentTimeSupported) {\n                    const scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);\n                    nativeOfflineAudioContext.oncomplete = () => {\n                        scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation\n                        scriptProcessorNode.disconnect();\n                    };\n                    scriptProcessorNode.onaudioprocess = () => nativeOfflineAudioContext.currentTime; // tslint:disable-line:deprecation\n                    scriptProcessorNode.connect(nativeOfflineAudioContext.destination);\n                }\n                return nativeOfflineAudioContext.startRendering();\n            });\n        }\n        return new Promise((resolve) => {\n            // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n            const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n                channelCount: 1,\n                channelCountMode: 'explicit',\n                channelInterpretation: 'discrete',\n                gain: 0\n            });\n            nativeOfflineAudioContext.oncomplete = (event) => {\n                gainNode.disconnect();\n                resolve(event.renderedBuffer);\n            };\n            gainNode.connect(nativeOfflineAudioContext.destination);\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/render-native-offline-audio-context.js.map","import { wrapAudioBufferGetChannelDataMethod } from '../helpers/wrap-audio-buffer-get-channel-data-method';\nexport const createStartRendering = (audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) => {\n    const trace = [];\n    return (destination, nativeOfflineAudioContext) => getAudioNodeRenderer(destination)\n        .render(destination, nativeOfflineAudioContext, trace)\n        /*\n         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the\n         * destination.\n         */\n        .then(() => Promise\n        .all(Array\n        .from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext))\n        .map((audioWorkletNode) => getAudioNodeRenderer(audioWorkletNode)\n        .render(audioWorkletNode, nativeOfflineAudioContext, trace))))\n        .then(() => renderNativeOfflineAudioContext(nativeOfflineAudioContext))\n        .then((audioBuffer) => {\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.\n        if (typeof audioBuffer.copyFromChannel !== 'function') {\n            wrapAudioBufferCopyChannelMethods(audioBuffer);\n            wrapAudioBufferGetChannelDataMethod(audioBuffer);\n            // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.\n        }\n        else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, () => testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer))) {\n            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);\n        }\n        audioBufferStore.add(audioBuffer);\n        return audioBuffer;\n    });\n};\n//# sourceMappingURL=/build/es2019/factories/start-rendering.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    /*\n     * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent\n     * behavior.\n     */\n    channelCountMode: 'explicit',\n    channelInterpretation: 'speakers',\n    pan: 0\n};\nexport const createStereoPannerNodeConstructor = (audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class StereoPannerNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const stereoPannerNodeRenderer = ((isOffline) ? createStereoPannerNodeRenderer() : null);\n            super(context, false, nativeStereoPannerNode, stereoPannerNodeRenderer);\n            // Bug #106: Edge does not export a maxValue and minValue property.\n            this._pan = createAudioParam(this, isOffline, nativeStereoPannerNode.pan, 1, -1);\n        }\n        get pan() {\n            return this._pan;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/stereo-panner-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createStereoPannerNodeRendererFactory = (connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeStereoPannerNodes = new WeakMap();\n        const createStereoPannerNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeStereoPannerNode = getNativeAudioNode(proxy);\n            /*\n             * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created\n             * again.\n             */\n            const nativeStereoPannerNodeIsOwnedByContext = isOwnedByContext(nativeStereoPannerNode, nativeOfflineAudioContext);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeStereoPannerNode.channelCount,\n                    channelCountMode: nativeStereoPannerNode.channelCountMode,\n                    channelInterpretation: nativeStereoPannerNode.channelInterpretation,\n                    pan: nativeStereoPannerNode.pan.value\n                };\n                nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);\n            if (!nativeStereoPannerNodeIsOwnedByContext) {\n                await renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            else {\n                await connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);\n            }\n            if (isNativeAudioNodeFaker(nativeStereoPannerNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);\n            }\n            return nativeStereoPannerNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeStereoPannerNode !== undefined) {\n                    return Promise.resolve(renderedNativeStereoPannerNode);\n                }\n                return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/stereo-panner-node-renderer-factory.js.map","// Bug #33: Edge & Safari expose an AudioBuffer but it can't be used as a constructor.\nexport const createTestAudioBufferConstructorSupport = (nativeAudioBufferConstructor) => {\n    return () => {\n        if (nativeAudioBufferConstructor === null) {\n            return false;\n        }\n        try {\n            new nativeAudioBufferConstructor({ length: 1, sampleRate: 44100 }); // tslint:disable-line:no-unused-expression\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-constructor-support.js.map","/*\n * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods\n * is enough to know if the other one is supported as well.\n */\nexport const createTestAudioBufferCopyChannelMethodsSubarraySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100);\n        // Bug #5: Safari does not support copyFromChannel() and copyToChannel().\n        if (nativeAudioBuffer.copyToChannel === undefined) {\n            return true;\n        }\n        const source = new Float32Array(2);\n        try {\n            nativeAudioBuffer.copyFromChannel(source, 0, 0);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js.map","export const createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.start();\n        try {\n            nativeAudioBufferSourceNode.start();\n        }\n        catch {\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map","// Bug #92: Edge does not respect the duration parameter yet.\nexport const createTestAudioBufferSourceNodeStartMethodDurationParameterSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const audioBuffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        const audioBufferSourceNode = offlineAudioContext.createBufferSource();\n        audioBuffer.getChannelData(0)[0] = 1;\n        audioBufferSourceNode.buffer = audioBuffer;\n        audioBufferSourceNode.start(0, 0, 0);\n        audioBufferSourceNode.connect(offlineAudioContext.destination);\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            offlineAudioContext.oncomplete = ({ renderedBuffer }) => {\n                // Bug #5: Safari does not support copyFromChannel().\n                resolve(renderedBuffer.getChannelData(0)[0] === 0);\n            };\n            offlineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js.map","export const createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        try {\n            nativeAudioBufferSourceNode.start(0, 1);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js.map","export const createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.start();\n        try {\n            nativeAudioBufferSourceNode.stop();\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map","export const createTestAudioContextCloseMethodSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        // Try to check the prototype before constructing the AudioContext.\n        if (nativeAudioContextConstructor.prototype !== undefined &&\n            nativeAudioContextConstructor.prototype.close !== undefined) {\n            return true;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        const isAudioContextClosable = (audioContext.close !== undefined);\n        try {\n            audioContext.close();\n        }\n        catch {\n            // Ignore errors.\n        }\n        return isAudioContextClosable;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-context-close-method-support.js.map","/**\n * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers\n * did not refuse to decode invalid parameters with a TypeError.\n */\nexport const createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            let isPending = true;\n            const resolvePromise = (err) => {\n                if (isPending) {\n                    isPending = false;\n                    offlineAudioContext.startRendering();\n                    resolve(err instanceof TypeError);\n                }\n            };\n            let promise;\n            // Bug #26: Safari throws a synchronous error.\n            try {\n                promise = offlineAudioContext\n                    // Bug #1: Safari requires a successCallback.\n                    .decodeAudioData(null, () => {\n                    // Ignore the success callback.\n                }, resolvePromise);\n            }\n            catch (err) {\n                resolvePromise(err);\n            }\n            // Bug #21: Safari does not support promises yet.\n            if (promise !== undefined) {\n                // Bug #6 Chrome does not call the errorCallback\n                promise.catch(resolvePromise);\n            }\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js.map","export const createTestAudioContextOptionsSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        let audioContext;\n        try {\n            audioContext = new nativeAudioContextConstructor({ latencyHint: 'balanced' });\n        }\n        catch {\n            return false;\n        }\n        audioContext.close();\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-context-options-support.js.map","// Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.\nexport const createTestAudioNodeConnectMethodSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeGainNode = nativeOfflineAudioContext.createGain();\n        const isSupported = (nativeGainNode.connect(nativeGainNode) === nativeGainNode);\n        nativeGainNode.disconnect(nativeGainNode);\n        return isSupported;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-node-connect-method-support.js.map","export const createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        try {\n            nativeAudioBufferSourceNode.start(-1);\n        }\n        catch (err) {\n            return (err instanceof RangeError);\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map","export const createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;\n        nativeAudioBufferSourceNode.start();\n        nativeAudioBufferSourceNode.stop();\n        try {\n            nativeAudioBufferSourceNode.stop();\n            return true;\n        }\n        catch {\n            return false;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map","export const createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport = (createNativeAudioNode) => {\n    return (nativeContext) => {\n        const nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createOscillator());\n        try {\n            nativeAudioBufferSourceNode.stop(-1);\n        }\n        catch (err) {\n            return (err instanceof RangeError);\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map","/**\n * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was\n * enabled by default in version 66.\n */\nexport const createTestAudioWorkletProcessorNoOutputsSupport = (nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) => {\n    return async () => {\n        // Bug #61: If there is no native AudioWorkletNode it gets faked and therefore it is no problem if the it doesn't exist.\n        if (nativeAudioWorkletNodeConstructor === null) {\n            return true;\n        }\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor(\"a\",A)'], { type: 'application/javascript; charset=utf-8' });\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 3200);\n        const url = URL.createObjectURL(blob);\n        let isCallingProcess = false;\n        try {\n            await offlineAudioContext.audioWorklet.addModule(url);\n            const gainNode = offlineAudioContext.createGain();\n            const audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', { numberOfOutputs: 0 });\n            audioWorkletNode.port.onmessage = () => isCallingProcess = true;\n            gainNode.connect(audioWorkletNode);\n            await offlineAudioContext.startRendering();\n        }\n        catch {\n            // Ignore errors.\n        }\n        finally {\n            URL.revokeObjectURL(url);\n        }\n        return isCallingProcess;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js.map","/**\n * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.\n */\nexport const createTestChannelMergerNodeChannelCountSupport = (createNativeAudioNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeChannelMergerNode = createNativeAudioNode(offlineAudioContext, (ntvCntxt) => ntvCntxt.createChannelMerger());\n        /**\n         * Bug #15: Safari does not return the default properties. It still needs to be patched. This test is supposed to test the support\n         * in other browsers.\n         */\n        if (nativeChannelMergerNode.channelCountMode === 'max') {\n            return true;\n        }\n        try {\n            nativeChannelMergerNode.channelCount = 2;\n        }\n        catch {\n            return true;\n        }\n        return false;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-channel-merger-node-channel-count-support.js.map","export const createTestConstantSourceNodeAccurateSchedulingSupport = (createNativeAudioNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return true;\n        }\n        const nativeConstantSourceNode = createNativeAudioNode(nativeOfflineAudioContext, (ntvCntxt) => ntvCntxt.createConstantSource());\n        /*\n         * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to\n         * the implementation of Firefox right now, but it could probably be done in a better way.\n         */\n        return (nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js.map","// Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.\nexport const createTestConvolverNodeBufferReassignabilitySupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return false;\n        }\n        const offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        const nativeConvolverNode = offlineAudioContext.createConvolver();\n        nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        try {\n            nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);\n        }\n        catch {\n            return false;\n        }\n        return true;\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js.map","export const createTestIsSecureContextSupport = (window) => {\n    return () => (window !== null && window.hasOwnProperty('isSecureContext'));\n};\n//# sourceMappingURL=/build/es2019/factories/test-is-secure-context-support.js.map","// Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.\nexport const createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = (nativeAudioContextConstructor) => {\n    return () => {\n        if (nativeAudioContextConstructor === null) {\n            return false;\n        }\n        const audioContext = new nativeAudioContextConstructor();\n        try {\n            audioContext.createMediaStreamSource(new MediaStream());\n            return false;\n        }\n        catch (err) {\n            return true;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js.map","export const createTestOfflineAudioContextCurrentTimeSupport = (createNativeGainNode, nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        // Bug #48: Safari does not render an OfflineAudioContext without any connected node.\n        const gainNode = createNativeGainNode(nativeOfflineAudioContext, {\n            channelCount: 1,\n            channelCountMode: 'explicit',\n            channelInterpretation: 'discrete',\n            gain: 0\n        });\n        // Bug #21: Safari does not support promises yet.\n        return new Promise((resolve) => {\n            nativeOfflineAudioContext.oncomplete = () => {\n                gainNode.disconnect();\n                resolve(nativeOfflineAudioContext.currentTime !== 0);\n            };\n            nativeOfflineAudioContext.startRendering();\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-offline-audio-context-current-time-support.js.map","/**\n * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.\n */\nexport const createTestStereoPannerNodeDefaultValueSupport = (nativeOfflineAudioContextConstructor) => {\n    return () => {\n        if (nativeOfflineAudioContextConstructor === null) {\n            return Promise.resolve(false);\n        }\n        const nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);\n        /*\n         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does\n         * support the tested behaviour.\n         */\n        if (nativeOfflineAudioContext.createStereoPanner === undefined) {\n            return Promise.resolve(true);\n        }\n        // Bug #62: Edge & Safari do not support ConstantSourceNodes.\n        if (nativeOfflineAudioContext.createConstantSource === undefined) {\n            return Promise.resolve(true);\n        }\n        const constantSourceNode = nativeOfflineAudioContext.createConstantSource();\n        const stereoPanner = nativeOfflineAudioContext.createStereoPanner();\n        constantSourceNode.channelCount = 1;\n        constantSourceNode.offset.value = 1;\n        stereoPanner.channelCount = 1;\n        constantSourceNode.start();\n        constantSourceNode\n            .connect(stereoPanner)\n            .connect(nativeOfflineAudioContext.destination);\n        return nativeOfflineAudioContext\n            .startRendering()\n            .then((buffer) => buffer.getChannelData(0)[0] !== 1);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/test-stereo-panner-node-default-value-support.js.map","export const createUnknownError = () => {\n    try {\n        return new DOMException('', 'UnknownError');\n    }\n    catch (err) {\n        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.\n        err.name = 'UnknownError';\n        return err;\n    }\n};\n//# sourceMappingURL=/build/es2019/factories/unknown-error.js.map","const DEFAULT_OPTIONS = {\n    channelCount: 2,\n    channelCountMode: 'max',\n    channelInterpretation: 'speakers',\n    curve: null,\n    oversample: 'none'\n};\nexport const createWaveShaperNodeConstructor = (audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext) => {\n    return class WaveShaperNode extends audioNodeConstructor {\n        constructor(context, options = DEFAULT_OPTIONS) {\n            const nativeContext = getNativeContext(context);\n            const mergedOptions = { ...DEFAULT_OPTIONS, ...options };\n            const nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);\n            const isOffline = isNativeOfflineAudioContext(nativeContext);\n            const waveShaperNodeRenderer = ((isOffline) ? createWaveShaperNodeRenderer() : null);\n            // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.\n            super(context, true, nativeWaveShaperNode, waveShaperNodeRenderer);\n            this._isCurveNullified = false;\n            this._nativeWaveShaperNode = nativeWaveShaperNode;\n        }\n        get curve() {\n            if (this._isCurveNullified) {\n                return null;\n            }\n            return this._nativeWaveShaperNode.curve;\n        }\n        set curve(value) {\n            // Bug #103: Safari does not allow to set the curve to null.\n            if (value === null) {\n                this._isCurveNullified = true;\n                this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);\n            }\n            else {\n                // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.\n                // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.\n                if (value.length < 2) {\n                    throw createInvalidStateError();\n                }\n                this._isCurveNullified = false;\n                this._nativeWaveShaperNode.curve = value;\n            }\n        }\n        get oversample() {\n            return this._nativeWaveShaperNode.oversample;\n        }\n        set oversample(value) {\n            this._nativeWaveShaperNode.oversample = value;\n        }\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wave-shaper-node-constructor.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nimport { isOwnedByContext } from '../helpers/is-owned-by-context';\nexport const createWaveShaperNodeRendererFactory = (createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) => {\n    return () => {\n        const renderedNativeWaveShaperNodes = new WeakMap();\n        const createWaveShaperNode = async (proxy, nativeOfflineAudioContext, trace) => {\n            let nativeWaveShaperNode = getNativeAudioNode(proxy);\n            // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.\n            const nativeWaveShaperNodeIsOwnedByContext = isOwnedByContext(nativeWaveShaperNode, nativeOfflineAudioContext);\n            if (!nativeWaveShaperNodeIsOwnedByContext) {\n                const options = {\n                    channelCount: nativeWaveShaperNode.channelCount,\n                    channelCountMode: nativeWaveShaperNode.channelCountMode,\n                    channelInterpretation: nativeWaveShaperNode.channelInterpretation,\n                    curve: nativeWaveShaperNode.curve,\n                    oversample: nativeWaveShaperNode.oversample\n                };\n                nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);\n            }\n            renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);\n            if (isNativeAudioNodeFaker(nativeWaveShaperNode)) {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);\n            }\n            else {\n                await renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);\n            }\n            return nativeWaveShaperNode;\n        };\n        return {\n            render(proxy, nativeOfflineAudioContext, trace) {\n                const renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);\n                if (renderedNativeWaveShaperNode !== undefined) {\n                    return Promise.resolve(renderedNativeWaveShaperNode);\n                }\n                return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wave-shaper-node-renderer-factory.js.map","export const createWindow = () => (typeof window === 'undefined') ? null : window;\n//# sourceMappingURL=/build/es2019/factories/window.js.map","export const createWrapAudioBufferCopyChannelMethodsOutOfBounds = (convertNumberToUnsignedLong) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = ((copyFromChannel) => {\n            return (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyFromChannel);\n        audioBuffer.copyToChannel = ((copyToChannel) => {\n            return (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n                const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n                const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n                if (bufferOffset < audioBuffer.length) {\n                    return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);\n                }\n            };\n        })(audioBuffer.copyToChannel);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map","export const createWrapAudioBufferCopyChannelMethods = (convertNumberToUnsignedLong, createIndexSizeError) => {\n    return (audioBuffer) => {\n        audioBuffer.copyFromChannel = (destination, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const destinationLength = destination.length;\n            for (let i = (bufferOffset < 0) ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {\n                destination[i] = channelData[i + bufferOffset];\n            }\n        };\n        audioBuffer.copyToChannel = (source, channelNumberAsNumber, bufferOffsetAsNumber = 0) => {\n            const bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);\n            const channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);\n            if (channelNumber >= audioBuffer.numberOfChannels) {\n                throw createIndexSizeError();\n            }\n            const audioBufferLength = audioBuffer.length;\n            const channelData = audioBuffer.getChannelData(channelNumber);\n            const sourceLength = source.length;\n            for (let i = (bufferOffset < 0) ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {\n                channelData[i + bufferOffset] = source[i];\n            }\n        };\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js.map","export const createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = (overwriteAccessors) => {\n    return (nativeAudioBufferSourceNode, nativeContext) => {\n        const nullifiedBuffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);\n        if (nativeAudioBufferSourceNode.buffer === null) {\n            nativeAudioBufferSourceNode.buffer = nullifiedBuffer;\n        }\n        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', (get) => () => {\n            const value = get.call(nativeAudioBufferSourceNode);\n            return (value === nullifiedBuffer) ? null : value;\n        }, (set) => (value) => {\n            return set.call(nativeAudioBufferSourceNode, (value === null) ? nullifiedBuffer : value);\n        });\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map","import { interceptConnections } from '../helpers/intercept-connections';\nexport const createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = (createNativeAudioNode) => {\n    return (nativeAudioScheduledSourceNode, nativeContext) => {\n        const nativeGainNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createGain());\n        nativeAudioScheduledSourceNode.connect(nativeGainNode);\n        const disconnectGainNode = ((disconnect) => {\n            return () => {\n                // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.\n                disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);\n                nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);\n            };\n        })(nativeAudioScheduledSourceNode.disconnect);\n        nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);\n        interceptConnections(nativeAudioScheduledSourceNode, nativeGainNode);\n        nativeAudioScheduledSourceNode.stop = ((stop) => {\n            let isStopped = false;\n            return (when = 0) => {\n                if (isStopped) {\n                    try {\n                        stop.call(nativeAudioScheduledSourceNode, when);\n                    }\n                    catch {\n                        nativeGainNode.gain.setValueAtTime(0, when);\n                    }\n                }\n                else {\n                    stop.call(nativeAudioScheduledSourceNode, when);\n                    isStopped = true;\n                }\n            };\n        })(nativeAudioScheduledSourceNode.stop);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map","export const createWrapChannelMergerNode = (createInvalidStateError, createNativeAudioNode, monitorConnectionsFunction) => {\n    return (nativeContext, channelMergerNode) => {\n        channelMergerNode.channelCount = 1;\n        channelMergerNode.channelCountMode = 'explicit';\n        Object.defineProperty(channelMergerNode, 'channelCount', {\n            get: () => 1,\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        Object.defineProperty(channelMergerNode, 'channelCountMode', {\n            get: () => 'explicit',\n            set: () => {\n                throw createInvalidStateError();\n            }\n        });\n        // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.\n        const audioBufferSourceNode = createNativeAudioNode(nativeContext, (ntvCntxt) => ntvCntxt.createBufferSource());\n        const whenConnected = () => {\n            const length = channelMergerNode.numberOfInputs;\n            for (let i = 0; i < length; i += 1) {\n                audioBufferSourceNode.connect(channelMergerNode, 0, i);\n            }\n        };\n        const whenDisconnected = () => audioBufferSourceNode.disconnect(channelMergerNode);\n        monitorConnectionsFunction(channelMergerNode, whenConnected, whenDisconnected);\n    };\n};\n//# sourceMappingURL=/build/es2019/factories/wrap-channel-merger-node.js.map","export const ACTIVE_AUDIO_NODE_STORE = new WeakSet();\nexport const AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_NODE_STORE = new WeakMap();\nexport const AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();\nexport const AUDIO_PARAM_STORE = new WeakMap();\nexport const BACKUP_NATIVE_CONTEXT_STORE = new WeakMap();\nexport const CONTEXT_STORE = new WeakMap();\nexport const EVENT_LISTENERS = new WeakMap();\nexport const CYCLE_COUNTERS = new WeakMap();\n// This clunky name is borrowed from the spec. :-)\nexport const NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();\nexport const NODE_TO_PROCESSOR_MAPS = new WeakMap();\n//# sourceMappingURL=/build/es2019/globals.js.map","import { isAudioNode } from './audio-node';\nexport const isAudioNodeOutputConnection = (outputConnection) => {\n    return isAudioNode(outputConnection[0]);\n};\n//# sourceMappingURL=/build/es2019/guards/audio-node-output-connection.js.map","export const isAudioNode = (audioNodeOrAudioParam) => {\n    return 'context' in audioNodeOrAudioParam;\n};\n//# sourceMappingURL=/build/es2019/guards/audio-node.js.map","export const isAudioWorkletNode = (audioNode) => {\n    return 'port' in audioNode;\n};\n//# sourceMappingURL=/build/es2019/guards/audio-worklet-node.js.map","export const isDelayNode = (audioNode) => {\n    return 'delayTime' in audioNode;\n};\n//# sourceMappingURL=/build/es2019/guards/delay-node.js.map","export const isNativeAudioNodeFaker = (nativeAudioNodeOrNativeAudioNodeFaker) => {\n    return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;\n};\n//# sourceMappingURL=/build/es2019/guards/native-audio-node-faker.js.map","export const isNativeAudioNode = (nativeAudioNodeOrAudioParam) => {\n    return 'context' in nativeAudioNodeOrAudioParam;\n};\n//# sourceMappingURL=/build/es2019/guards/native-audio-node.js.map","export const assignNativeAudioNodeAudioParamValue = (nativeAudioNode, options, audioParam) => {\n    const value = options[audioParam];\n    if (value !== undefined && value !== nativeAudioNode[audioParam].value) {\n        nativeAudioNode[audioParam].value = value;\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-audio-param-value.js.map","export const assignNativeAudioNodeOption = (nativeAudioNode, options, option) => {\n    const value = options[option];\n    if (value !== undefined && value !== nativeAudioNode[option]) {\n        nativeAudioNode[option] = value;\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-option.js.map","import { assignNativeAudioNodeOption } from './assign-native-audio-node-option';\nexport const assignNativeAudioNodeOptions = (nativeAudioNode, options) => {\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCount');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelCountMode');\n    assignNativeAudioNodeOption(nativeAudioNode, options, 'channelInterpretation');\n};\n//# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-options.js.map","export const cloneAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    return new Promise((resolve, reject) => {\n        const { port1, port2 } = new MessageChannel();\n        port1.onmessage = ({ data }) => {\n            port1.close();\n            port2.close();\n            resolve(data);\n        };\n        port1.onmessageerror = ({ data }) => {\n            port1.close();\n            port2.close();\n            reject(data);\n        };\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port2.postMessage(audioWorkletNodeOptions);\n    });\n};\n//# sourceMappingURL=/build/es2019/helpers/clone-audio-worklet-node-options.js.map","export const computeBufferSize = (baseLatency, sampleRate) => {\n    if (baseLatency === null) {\n        return 512;\n    }\n    return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));\n};\n//# sourceMappingURL=/build/es2019/helpers/compute-buffer-size.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const connectNativeAudioNodeToNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        const fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];\n        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);\n        return [fakeNativeDestinationAudioNode, output, 0];\n    }\n    nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);\n    return [nativeDestinationAudioNode, output, input];\n};\n//# sourceMappingURL=/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js.map","export function copyFromChannel(audioBuffer, \n// @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }\nparent, key, channelNumber, bufferOffset) {\n    if (typeof audioBuffer.copyFromChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = new Float32Array(128);\n        }\n        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset);\n        // Bug #5: Safari does not support copyFromChannel().\n    }\n    else {\n        const channelData = audioBuffer.getChannelData(channelNumber);\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength === 0) {\n            parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);\n        }\n        else {\n            const slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);\n            parent[key].set(slicedInput);\n        }\n    }\n}\n//# sourceMappingURL=/build/es2019/helpers/copy-from-channel.js.map","export const copyToChannel = (audioBuffer, parent, key, channelNumber, bufferOffset) => {\n    if (typeof audioBuffer.copyToChannel === 'function') {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);\n        }\n        // Bug #5: Safari does not support copyToChannel().\n    }\n    else {\n        // The byteLength will be 0 when the ArrayBuffer was transferred.\n        if (parent[key].byteLength !== 0) {\n            audioBuffer\n                .getChannelData(channelNumber)\n                .set(parent[key], bufferOffset);\n        }\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/copy-to-channel.js.map","import { cloneAudioWorkletNodeOptions } from './clone-audio-worklet-node-options';\nexport const createAudioWorkletProcessorPromise = async (processorConstructor, audioWorkletNodeOptions) => {\n    const clonedAudioWorkletNodeOptions = await cloneAudioWorkletNodeOptions(audioWorkletNodeOptions);\n    return new processorConstructor(clonedAudioWorkletNodeOptions);\n};\n//# sourceMappingURL=/build/es2019/helpers/create-audio-worklet-processor-promise.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { createAudioWorkletProcessorPromise } from './create-audio-worklet-processor-promise';\nexport const createAudioWorkletProcessor = (nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) => {\n    let nodeToProcessorMap = NODE_TO_PROCESSOR_MAPS.get(nativeContext);\n    if (nodeToProcessorMap === undefined) {\n        nodeToProcessorMap = new WeakMap();\n        NODE_TO_PROCESSOR_MAPS.set(nativeContext, nodeToProcessorMap);\n    }\n    const audioWorkletProcessorPromise = createAudioWorkletProcessorPromise(processorConstructor, audioWorkletNodeOptions);\n    nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);\n    return audioWorkletProcessorPromise;\n};\n//# sourceMappingURL=/build/es2019/helpers/create-audio-worklet-processor.js.map","export const createNestedArrays = (x, y) => {\n    const arrays = [];\n    for (let i = 0; i < x; i += 1) {\n        const array = [];\n        const length = (typeof y === 'number') ? y : y[i];\n        for (let j = 0; j < length; j += 1) {\n            array.push(new Float32Array(128));\n        }\n        arrays.push(array);\n    }\n    return arrays;\n};\n//# sourceMappingURL=/build/es2019/helpers/create-nested-arrays.js.map","import { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const deleteEventListenerOfAudioNode = (audioNode, eventListener) => {\n    const eventListeners = getEventListenersOfAudioNode(audioNode);\n    if (!eventListeners.delete(eventListener)) {\n        throw new Error('Missing the expected event listener.');\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/delete-event-listeners-of-audio-node.js.map","export const detachArrayBuffer = (arrayBuffer) => {\n    const { port1 } = new MessageChannel();\n    port1.postMessage(arrayBuffer, [arrayBuffer]);\n};\n//# sourceMappingURL=/build/es2019/helpers/detach-array-buffer.js.map","import { isNativeAudioNodeFaker } from '../guards/native-audio-node-faker';\nexport const disconnectNativeAudioNodeFromNativeAudioNode = (nativeSourceAudioNode, nativeDestinationAudioNode, output, input) => {\n    if (isNativeAudioNodeFaker(nativeDestinationAudioNode)) {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);\n    }\n    else {\n        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js.map","// This implementation as shamelessly inspired by source code of\n// tslint:disable-next-line:max-line-length\n// {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.\nexport const filterBuffer = (feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) => {\n    const inputLength = input.length;\n    let i = bufferIndex;\n    for (let j = 0; j < inputLength; j += 1) {\n        let y = feedforward[0] * input[j];\n        for (let k = 1; k < minLength; k += 1) {\n            const x = (i - k) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n            y += feedforward[k] * xBuffer[x];\n            y -= feedback[k] * yBuffer[x];\n        }\n        for (let k = minLength; k < feedforwardLength; k += 1) {\n            y += feedforward[k] * xBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        for (let k = minLength; k < feedbackLength; k += 1) {\n            y -= feedback[k] * yBuffer[(i - k) & (bufferLength - 1)]; // tslint:disable-line:no-bitwise\n        }\n        xBuffer[i] = input[j];\n        yBuffer[i] = y;\n        i = (i + 1) & (bufferLength - 1); // tslint:disable-line:no-bitwise\n        output[j] = y;\n    }\n    return i;\n};\n//# sourceMappingURL=/build/es2019/helpers/filter-buffer.js.map","import { AUDIO_NODE_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioNodeConnections = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_CONNECTIONS_STORE, audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-audio-node-connections.js.map","import { AUDIO_PARAM_CONNECTIONS_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioParamConnections = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_CONNECTIONS_STORE, audioParam);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-audio-param-connections.js.map","import { NODE_TO_PROCESSOR_MAPS } from '../globals';\nimport { getNativeAudioNode } from './get-native-audio-node';\nimport { getValueForKey } from './get-value-for-key';\nexport const getAudioWorkletProcessor = (nativeOfflineAudioContext, proxy) => {\n    const nodeToProcessorMap = getValueForKey(NODE_TO_PROCESSOR_MAPS, nativeOfflineAudioContext);\n    const nativeAudioWorkletNode = getNativeAudioNode(proxy);\n    return getValueForKey(nodeToProcessorMap, nativeAudioWorkletNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-audio-worklet-processor.js.map","import { EVENT_LISTENERS } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getEventListenersOfAudioNode = (audioNode) => {\n    return getValueForKey(EVENT_LISTENERS, audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-event-listeners-of-audio-node.js.map","import { AUDIO_NODE_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioNode = (audioNode) => {\n    return getValueForKey(AUDIO_NODE_STORE, audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-native-audio-node.js.map","import { AUDIO_PARAM_STORE } from '../globals';\nimport { getValueForKey } from './get-value-for-key';\nexport const getNativeAudioParam = (audioParam) => {\n    return getValueForKey(AUDIO_PARAM_STORE, audioParam);\n};\n//# sourceMappingURL=/build/es2019/helpers/get-native-audio-param.js.map","export const getValueForKey = (map, key) => {\n    const value = map.get(key);\n    if (value === undefined) {\n        throw new Error('A value with the given key could not be found.');\n    }\n    return value;\n};\n//# sourceMappingURL=/build/es2019/helpers/get-value-for-key.js.map","export const insertElementInSet = (set, element, predicate, ignoreDuplicates) => {\n    for (const lmnt of set) {\n        if (predicate(lmnt)) {\n            if (ignoreDuplicates) {\n                return false;\n            }\n            throw Error('The set contains at least one similar element.');\n        }\n    }\n    set.add(element);\n    return true;\n};\n//# sourceMappingURL=/build/es2019/helpers/insert-element-in-set.js.map","export const interceptConnections = (original, interceptor) => {\n    original.connect = interceptor.connect.bind(interceptor);\n    original.disconnect = interceptor.disconnect.bind(interceptor);\n    return original;\n};\n//# sourceMappingURL=/build/es2019/helpers/intercept-connections.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isActiveAudioNode = (audioNode) => ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n//# sourceMappingURL=/build/es2019/helpers/is-active-audio-node.js.map","const handler = {\n    construct() {\n        return handler;\n    }\n};\nexport const isConstructible = (constructible) => {\n    try {\n        const proxy = new Proxy(constructible, handler);\n        new proxy(); // tslint:disable-line:no-unused-expression\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=/build/es2019/helpers/is-constructible.js.map","export const isDCCurve = (curve) => {\n    if (curve === null) {\n        return false;\n    }\n    const length = curve.length;\n    if (length % 2 !== 0) {\n        return (curve[Math.floor(length / 2)] !== 0);\n    }\n    return (curve[(length / 2) - 1] + curve[length / 2] !== 0);\n};\n//# sourceMappingURL=/build/es2019/helpers/is-dc-curve.js.map","export const isOwnedByContext = (nativeAudioNode, nativeContext) => {\n    return nativeAudioNode.context === nativeContext;\n};\n//# sourceMappingURL=/build/es2019/helpers/is-owned-by-context.js.map","import { CYCLE_COUNTERS } from '../globals';\nexport const isPartOfACycle = (audioNode) => {\n    return CYCLE_COUNTERS.has(audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/is-part-of-a-cycle.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nexport const isPassiveAudioNode = (audioNode) => {\n    return !ACTIVE_AUDIO_NODE_STORE.has(audioNode);\n};\n//# sourceMappingURL=/build/es2019/helpers/is-passive-audio-node.js.map","export const isValidLatencyHint = (latencyHint) => {\n    return latencyHint === undefined ||\n        typeof latencyHint === 'number' ||\n        (typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback'));\n};\n//# sourceMappingURL=/build/es2019/helpers/is-valid-latency-hint.js.map","export const overwriteAccessors = (object, property, createGetter, createSetter) => {\n    let prototype = Object.getPrototypeOf(object);\n    while (!prototype.hasOwnProperty(property)) {\n        prototype = Object.getPrototypeOf(prototype);\n    }\n    const { get, set } = Object.getOwnPropertyDescriptor(prototype, property);\n    Object.defineProperty(object, property, { get: createGetter(get), set: createSetter(set) });\n};\n//# sourceMappingURL=/build/es2019/helpers/overwrite-accessors.js.map","export const pickElementFromSet = (set, predicate) => {\n    const matchingElements = Array\n        .from(set)\n        .filter(predicate);\n    if (matchingElements.length > 1) {\n        throw Error('More than one element was found.');\n    }\n    if (matchingElements.length === 0) {\n        throw Error('No element was found.');\n    }\n    const [matchingElement] = matchingElements;\n    set.delete(matchingElement);\n    return matchingElement;\n};\n//# sourceMappingURL=/build/es2019/helpers/pick-element-from-set.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToActive = (audioNode) => {\n    if (ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is already stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.add(audioNode);\n    getEventListenersOfAudioNode(audioNode)\n        .forEach((eventListener) => eventListener(true));\n};\n//# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-active.js.map","import { isAudioWorkletNode } from '../guards/audio-worklet-node';\nimport { setInternalStateToPassive } from './set-internal-state-to-passive';\n// Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.\nexport const setInternalStateToPassiveWhenNecessary = (audioNode, activeInputs) => {\n    if (!isAudioWorkletNode(audioNode) && activeInputs.every((connections) => (connections.size === 0))) {\n        setInternalStateToPassive(audioNode);\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js.map","import { ACTIVE_AUDIO_NODE_STORE } from '../globals';\nimport { getEventListenersOfAudioNode } from './get-event-listeners-of-audio-node';\nexport const setInternalStateToPassive = (audioNode) => {\n    if (!ACTIVE_AUDIO_NODE_STORE.has(audioNode)) {\n        throw new Error('The AudioNode is not stored.');\n    }\n    ACTIVE_AUDIO_NODE_STORE.delete(audioNode);\n    getEventListenersOfAudioNode(audioNode)\n        .forEach((eventListener) => eventListener(false));\n};\n//# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-passive.js.map","/*\n * This massive regex tries to cover all the following cases.\n *\n * import './path';\n * import defaultImport from './path';\n * import { namedImport } from './path';\n * import { namedImport as renamendImport } from './path';\n * import * as namespaceImport from './path';\n * import defaultImport, { namedImport } from './path';\n * import defaultImport, { namedImport as renamendImport } from './path';\n * import defaultImport, * as namespaceImport from './path';\n */\nconst IMPORT_STATEMENT_REGEX = /^import(?:(?:[\\s]+[\\w]+|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\{[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?(?:[\\s]*,[\\s]*[\\w]+(?:[\\s]+as[\\s]+[\\w]+)?)*[\\s]*}|(?:[\\s]+[\\w]+[\\s]*,)?[\\s]*\\*[\\s]+as[\\s]+[\\w]+)[\\s]+from)?(?:[\\s]*)(\"([^\"\\\\]|\\\\.)+\"|'([^'\\\\]|\\\\.)+')(?:[\\s]*);?/; // tslint:disable-line:max-line-length\nexport const splitImportStatements = (source, url) => {\n    const importStatements = [];\n    let sourceWithoutImportStatements = source.replace(/^[\\s]+/, '');\n    let result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    while (result !== null) {\n        const unresolvedUrl = result[1].slice(1, -1);\n        const importStatementWithResolvedUrl = result[0]\n            .replace(/([\\s]+)?;?$/, '')\n            .replace(unresolvedUrl, (new URL(unresolvedUrl, url)).toString());\n        importStatements.push(importStatementWithResolvedUrl);\n        sourceWithoutImportStatements = sourceWithoutImportStatements\n            .slice(result[0].length)\n            .replace(/^[\\s]+/, '');\n        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);\n    }\n    return [importStatements.join(';'), sourceWithoutImportStatements];\n};\n//# sourceMappingURL=/build/es2019/helpers/split-import-statements.js.map","export const testAnalyserNodeGetFloatTimeDomainDataMethodSupport = (nativeAnalyserNode) => {\n    return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';\n};\n//# sourceMappingURL=/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js.map","export const testAudioBufferCopyChannelMethodsOutOfBoundsSupport = (nativeAudioBuffer) => {\n    try {\n        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);\n    }\n    catch {\n        return false;\n    }\n    return true;\n};\n//# sourceMappingURL=/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map","export const testAudioNodeDisconnectMethodSupport = (nativeAudioContext) => {\n    return new Promise((resolve) => {\n        const analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);\n        const dummy = nativeAudioContext.createGain();\n        // Bug #95: Safari does not play one sample buffers.\n        const ones = nativeAudioContext.createBuffer(1, 2, 44100);\n        const channelData = ones.getChannelData(0);\n        channelData[0] = 1;\n        channelData[1] = 1;\n        const source = nativeAudioContext.createBufferSource();\n        source.buffer = ones;\n        source.loop = true;\n        source\n            .connect(analyzer)\n            .connect(nativeAudioContext.destination);\n        source.connect(dummy);\n        source.disconnect(dummy);\n        analyzer.onaudioprocess = (event) => {\n            const chnnlDt = event.inputBuffer.getChannelData(0);\n            if (Array.prototype.some.call(chnnlDt, (sample) => sample === 1)) {\n                resolve(true);\n            }\n            else {\n                resolve(false);\n            }\n            source.stop();\n            analyzer.onaudioprocess = null; // tslint:disable-line:deprecation\n            source.disconnect(analyzer);\n            analyzer.disconnect(nativeAudioContext.destination);\n        };\n        source.start();\n    });\n};\n//# sourceMappingURL=/build/es2019/helpers/test-audio-node-disconnect-method-support.js.map","export const testClonabilityOfAudioWorkletNodeOptions = (audioWorkletNodeOptions) => {\n    const { port1 } = new MessageChannel();\n    try {\n        // This will throw an error if the audioWorkletNodeOptions are not clonable.\n        port1.postMessage(audioWorkletNodeOptions);\n    }\n    finally {\n        port1.close();\n    }\n};\n//# sourceMappingURL=/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js.map","export const testPromiseSupport = (nativeContext) => {\n    // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.\n    const uint32Array = new Uint32Array([\n        1179011410,\n        40,\n        1163280727,\n        544501094,\n        16,\n        131073,\n        44100,\n        176400,\n        1048580,\n        1635017060,\n        4,\n        0\n    ]);\n    try {\n        // Bug #1: Safari requires a successCallback.\n        const promise = nativeContext.decodeAudioData(uint32Array.buffer, () => {\n            // Ignore the success callback.\n        });\n        if (promise === undefined) {\n            return false;\n        }\n        promise.catch(() => {\n            // Ignore rejected errors.\n        });\n        return true;\n    }\n    catch {\n        // Ignore errors.\n    }\n    return false;\n};\n//# sourceMappingURL=/build/es2019/helpers/test-promise-support.js.map","// Safari at version 11 did not support transferables.\nexport const testTransferablesSupport = () => new Promise((resolve) => {\n    const arrayBuffer = new ArrayBuffer(0);\n    const { port1, port2 } = new MessageChannel();\n    port1.onmessage = ({ data }) => resolve(data !== null);\n    port2.postMessage(arrayBuffer, [arrayBuffer]);\n});\n//# sourceMappingURL=/build/es2019/helpers/test-transferables-support.js.map","export const visitEachAudioNodeOnce = (cycles, visitor) => {\n    const counts = new Map();\n    for (const cycle of cycles) {\n        for (const audioNode of cycle) {\n            const count = counts.get(audioNode);\n            counts.set(audioNode, (count === undefined) ? 1 : count + 1);\n        }\n    }\n    counts.forEach((count, audioNode) => visitor(audioNode, count));\n};\n//# sourceMappingURL=/build/es2019/helpers/visit-each-audio-node-once.js.map","export const wrapAnalyserNodeGetFloatTimeDomainDataMethod = (nativeAnalyserNode) => {\n    nativeAnalyserNode.getFloatTimeDomainData = (array) => {\n        const byteTimeDomainData = new Uint8Array(array.length);\n        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);\n        const length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);\n        for (let i = 0; i < length; i += 1) {\n            array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;\n        }\n        return array;\n    };\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js.map","import { createIndexSizeError } from '../factories/index-size-error';\nexport const wrapAudioBufferGetChannelDataMethod = (audioBuffer) => {\n    audioBuffer.getChannelData = ((getChannelData) => {\n        return (channel) => {\n            try {\n                return getChannelData.call(audioBuffer, channel);\n            }\n            catch (err) {\n                if (err.code === 12) {\n                    throw createIndexSizeError();\n                }\n                throw err;\n            }\n        };\n    })(audioBuffer.getChannelData);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        let isScheduled = false;\n        return (when = 0, offset = 0, duration) => {\n            if (isScheduled) {\n                throw createInvalidStateError();\n            }\n            start.call(nativeAudioBufferSourceNode, when, offset, duration);\n            isScheduled = true;\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map","export const wrapAudioBufferSourceNodeStartMethodDurationParameter = (nativeAudioScheduledSourceNode, nativeContext) => {\n    let endTime = Number.POSITIVE_INFINITY;\n    let stopTime = Number.POSITIVE_INFINITY;\n    nativeAudioScheduledSourceNode.start = ((start, stop) => {\n        return (when = 0, offset = 0, duration = Number.POSITIVE_INFINITY) => {\n            start.call(nativeAudioScheduledSourceNode, when, offset);\n            if (duration >= 0 && duration < Number.POSITIVE_INFINITY) {\n                const actualStartTime = Math.max(when, nativeContext.currentTime);\n                // @todo The playbackRate could of course also have been automated and is not always fixed.\n                const durationInBufferTime = (duration / nativeAudioScheduledSourceNode.playbackRate.value);\n                endTime = actualStartTime + durationInBufferTime;\n                stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n            }\n        };\n    })(nativeAudioScheduledSourceNode.start, nativeAudioScheduledSourceNode.stop);\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            stopTime = Math.max(when, nativeContext.currentTime);\n            stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js.map","export const wrapAudioBufferSourceNodeStartMethodOffsetClamping = (nativeAudioBufferSourceNode) => {\n    nativeAudioBufferSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            const buffer = nativeAudioBufferSourceNode.buffer;\n            // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.\n            const clampedOffset = (buffer === null) ? offset : Math.min(buffer.duration, offset);\n            // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.\n            if (buffer !== null && clampedOffset > buffer.duration - (0.5 / nativeAudioBufferSourceNode.context.sampleRate)) {\n                start.call(nativeAudioBufferSourceNode, when, 0, 0);\n            }\n            else {\n                start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);\n            }\n        };\n    })(nativeAudioBufferSourceNode.start);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js.map","import { isNativeAudioNode } from '../guards/native-audio-node';\nexport const wrapAudioNodeDisconnectMethod = (nativeAudioNode) => {\n    const connections = new Map();\n    nativeAudioNode.connect = ((connect) => {\n        return (destination, output = 0, input = 0) => {\n            const returnValue = (isNativeAudioNode(destination))\n                ? connect(destination, output, input)\n                : connect(destination, output);\n            // Save the new connection only if the calls to connect above didn't throw an error.\n            const connectionsToDestination = connections.get(destination);\n            if (connectionsToDestination === undefined) {\n                connections.set(destination, [{ input, output }]);\n            }\n            else {\n                if (connectionsToDestination.every((connection) => (connection.input !== input || connection.output !== output))) {\n                    connectionsToDestination.push({ input, output });\n                }\n            }\n            return returnValue;\n        };\n    })(nativeAudioNode.connect.bind(nativeAudioNode));\n    nativeAudioNode.disconnect = ((disconnect) => {\n        return (destinationOrOutput, output, input) => {\n            disconnect.apply(nativeAudioNode);\n            if (destinationOrOutput === undefined) {\n                connections.clear();\n            }\n            else if (typeof destinationOrOutput === 'number') {\n                for (const [destination, connectionsToDestination] of connections) {\n                    const filteredConnections = connectionsToDestination\n                        .filter((connection) => (connection.output !== destinationOrOutput));\n                    if (filteredConnections.length === 0) {\n                        connections.delete(destination);\n                    }\n                    else {\n                        connections.set(destination, filteredConnections);\n                    }\n                }\n            }\n            else if (connections.has(destinationOrOutput)) {\n                if (output === undefined) {\n                    connections.delete(destinationOrOutput);\n                }\n                else {\n                    const connectionsToDestination = connections.get(destinationOrOutput);\n                    if (connectionsToDestination !== undefined) {\n                        const filteredConnections = connectionsToDestination\n                            .filter((connection) => (connection.output !== output && (connection.input !== input || input === undefined)));\n                        if (filteredConnections.length === 0) {\n                            connections.delete(destinationOrOutput);\n                        }\n                        else {\n                            connections.set(destinationOrOutput, filteredConnections);\n                        }\n                    }\n                }\n            }\n            for (const [destination, connectionsToDestination] of connections) {\n                connectionsToDestination\n                    .forEach((connection) => {\n                    if (isNativeAudioNode(destination)) {\n                        nativeAudioNode.connect(destination, connection.output, connection.input);\n                    }\n                    else {\n                        nativeAudioNode.connect(destination, connection.output);\n                    }\n                });\n            }\n        };\n    })(nativeAudioNode.disconnect);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-node-disconnect-method.js.map","export const wrapAudioScheduledSourceNodeStartMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.start = ((start) => {\n        return (when = 0, offset = 0, duration) => {\n            if ((typeof duration === 'number' && duration < 0) || offset < 0 || when < 0) {\n                throw new RangeError(\"The parameters can't be negative.\");\n            }\n            // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.\n            start.call(nativeAudioScheduledSourceNode, when, offset, duration);\n        };\n    })(nativeAudioScheduledSourceNode.start);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map","export const wrapAudioScheduledSourceNodeStopMethodNegativeParameters = (nativeAudioScheduledSourceNode) => {\n    nativeAudioScheduledSourceNode.stop = ((stop) => {\n        return (when = 0) => {\n            if (when < 0) {\n                throw new RangeError(\"The parameter can't be negative.\");\n            }\n            stop.call(nativeAudioScheduledSourceNode, when);\n        };\n    })(nativeAudioScheduledSourceNode.stop);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map","import { createInvalidStateError } from '../factories/invalid-state-error';\nexport const wrapChannelSplitterNode = (channelSplitterNode) => {\n    const channelCount = channelSplitterNode.numberOfOutputs;\n    // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.\n    Object.defineProperty(channelSplitterNode, 'channelCount', {\n        get: () => channelCount,\n        set: (value) => {\n            if (value !== channelCount) {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    /*\n     * Bug #30: Only Chrome, Firefox & Opera throw an error when attempting to change the channelCountMode to something other than\n     * explicit.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelCountMode', {\n        get: () => 'explicit',\n        set: (value) => {\n            if (value !== 'explicit') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n    /*\n     * Bug #32: Only Chrome, Firefox & Opera throws an error when attempting to change the channelInterpretation to something other than\n     * discrete.\n     */\n    Object.defineProperty(channelSplitterNode, 'channelInterpretation', {\n        get: () => 'discrete',\n        set: (value) => {\n            if (value !== 'discrete') {\n                throw createInvalidStateError();\n            }\n        }\n    });\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-channel-splitter-node.js.map","export const wrapEventListener = (target, eventListener) => {\n    return (event) => {\n        const descriptor = { value: target };\n        Object.defineProperties(event, {\n            currentTarget: descriptor,\n            target: descriptor\n        });\n        if (typeof eventListener === 'function') {\n            return eventListener.call(target, event);\n        }\n        return eventListener.handleEvent.call(target, event);\n    };\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-event-listener.js.map","import { createInvalidAccessError } from '../factories/invalid-access-error';\nexport const wrapIIRFilterNodeGetFrequencyResponseMethod = (nativeIIRFilterNode) => {\n    nativeIIRFilterNode.getFrequencyResponse = ((getFrequencyResponse) => {\n        return (frequencyHz, magResponse, phaseResponse) => {\n            if ((frequencyHz.length !== magResponse.length) || (magResponse.length !== phaseResponse.length)) {\n                throw createInvalidAccessError();\n            }\n            return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);\n        };\n    })(nativeIIRFilterNode.getFrequencyResponse);\n};\n//# sourceMappingURL=/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js.map","//# sourceMappingURL=/build/es2019/interfaces/analyser-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/analyser-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-buffer-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-buffer-source-node-renderer.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-buffer-source-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-buffer-source-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-buffer.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-context-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-context.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-destination-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-listener.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-node-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-node-renderer.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-param-descriptor.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-param-renderer.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-param.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-scheduled-source-node-event-map.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-scheduled-source-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-worklet-node-event-map.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-worklet-node-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-worklet-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-worklet-processor-constructor.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-worklet-processor.js.map","//# sourceMappingURL=/build/es2019/interfaces/audio-worklet.js.map","//# sourceMappingURL=/build/es2019/interfaces/automation.js.map","//# sourceMappingURL=/build/es2019/interfaces/base-audio-context.js.map","//# sourceMappingURL=/build/es2019/interfaces/biquad-filter-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/biquad-filter-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/channel-merger-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/channel-splitter-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/common-audio-context.js.map","//# sourceMappingURL=/build/es2019/interfaces/common-offline-audio-context.js.map","//# sourceMappingURL=/build/es2019/interfaces/constant-source-node-renderer.js.map","//# sourceMappingURL=/build/es2019/interfaces/constant-source-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/constant-source-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/convolver-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/convolver-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/delay-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/delay-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/dynamics-compressor-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/dynamics-compressor-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/gain-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/gain-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/iir-filter-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/iir-filter-options.js.map","export * from './analyser-node';\nexport * from './analyser-options';\nexport * from './audio-buffer';\nexport * from './audio-buffer-options';\nexport * from './audio-buffer-source-node';\nexport * from './audio-buffer-source-node-renderer';\nexport * from './audio-buffer-source-options';\nexport * from './audio-context';\nexport * from './audio-context-options';\nexport * from './audio-destination-node';\nexport * from './audio-listener';\nexport * from './audio-node';\nexport * from './audio-node-options';\nexport * from './audio-node-renderer';\nexport * from './audio-param';\nexport * from './audio-param-descriptor';\nexport * from './audio-param-renderer';\nexport * from './audio-scheduled-source-node';\nexport * from './audio-scheduled-source-node-event-map';\nexport * from './audio-worklet';\nexport * from './audio-worklet-node';\nexport * from './audio-worklet-node-event-map';\nexport * from './audio-worklet-node-options';\nexport * from './audio-worklet-processor';\nexport * from './audio-worklet-processor-constructor';\nexport * from './automation';\nexport * from './base-audio-context';\nexport * from './biquad-filter-node';\nexport * from './biquad-filter-options';\nexport * from './channel-merger-options';\nexport * from './channel-splitter-options';\nexport * from './common-audio-context';\nexport * from './common-offline-audio-context';\nexport * from './constant-source-node';\nexport * from './constant-source-node-renderer';\nexport * from './constant-source-options';\nexport * from './convolver-node';\nexport * from './convolver-options';\nexport * from './delay-node';\nexport * from './delay-options';\nexport * from './dynamics-compressor-node';\nexport * from './dynamics-compressor-options';\nexport * from './gain-node';\nexport * from './gain-options';\nexport * from './iir-filter-node';\nexport * from './iir-filter-options';\nexport * from './media-element-audio-source-node';\nexport * from './media-element-audio-source-options';\nexport * from './media-stream-audio-destination-node';\nexport * from './media-stream-audio-source-node';\nexport * from './media-stream-audio-source-options';\nexport * from './media-stream-track-audio-source-node';\nexport * from './media-stream-track-audio-source-options';\nexport * from './minimal-audio-context';\nexport * from './minimal-base-audio-context';\nexport * from './minimal-base-audio-context-event-map';\nexport * from './minimal-offline-audio-context';\nexport * from './native-audio-node-faker';\nexport * from './native-audio-worklet-node-faker';\nexport * from './native-constant-source-node-faker';\nexport * from './native-convolver-node-faker';\nexport * from './native-iir-filter-node-faker';\nexport * from './native-panner-node-faker';\nexport * from './native-stereo-panner-node-faker';\nexport * from './native-wave-shaper-node-faker';\nexport * from './offline-audio-completion-event';\nexport * from './offline-audio-context';\nexport * from './offline-audio-context-constructor';\nexport * from './offline-audio-context-options';\nexport * from './oscillator-node';\nexport * from './oscillator-node-renderer';\nexport * from './oscillator-options';\nexport * from './panner-node';\nexport * from './panner-options';\nexport * from './periodic-wave';\nexport * from './periodic-wave-constraints';\nexport * from './periodic-wave-options';\nexport * from './read-only-map';\nexport * from './stereo-panner-node';\nexport * from './stereo-panner-options';\nexport * from './wave-shaper-node';\nexport * from './wave-shaper-options';\nexport * from './worklet-options';\n//# sourceMappingURL=/build/es2019/interfaces/index.js.map","//# sourceMappingURL=/build/es2019/interfaces/media-element-audio-source-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/media-element-audio-source-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/media-stream-audio-destination-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/media-stream-audio-source-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/media-stream-audio-source-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/media-stream-track-audio-source-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/media-stream-track-audio-source-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/minimal-audio-context.js.map","//# sourceMappingURL=/build/es2019/interfaces/minimal-base-audio-context-event-map.js.map","//# sourceMappingURL=/build/es2019/interfaces/minimal-base-audio-context.js.map","//# sourceMappingURL=/build/es2019/interfaces/minimal-offline-audio-context.js.map","//# sourceMappingURL=/build/es2019/interfaces/native-audio-node-faker.js.map","//# sourceMappingURL=/build/es2019/interfaces/native-audio-worklet-node-faker.js.map","//# sourceMappingURL=/build/es2019/interfaces/native-constant-source-node-faker.js.map","//# sourceMappingURL=/build/es2019/interfaces/native-convolver-node-faker.js.map","//# sourceMappingURL=/build/es2019/interfaces/native-iir-filter-node-faker.js.map","//# sourceMappingURL=/build/es2019/interfaces/native-panner-node-faker.js.map","//# sourceMappingURL=/build/es2019/interfaces/native-stereo-panner-node-faker.js.map","//# sourceMappingURL=/build/es2019/interfaces/native-wave-shaper-node-faker.js.map","//# sourceMappingURL=/build/es2019/interfaces/offline-audio-completion-event.js.map","//# sourceMappingURL=/build/es2019/interfaces/offline-audio-context-constructor.js.map","//# sourceMappingURL=/build/es2019/interfaces/offline-audio-context-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/offline-audio-context.js.map","//# sourceMappingURL=/build/es2019/interfaces/oscillator-node-renderer.js.map","//# sourceMappingURL=/build/es2019/interfaces/oscillator-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/oscillator-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/panner-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/panner-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/periodic-wave-constraints.js.map","//# sourceMappingURL=/build/es2019/interfaces/periodic-wave-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/periodic-wave.js.map","//# sourceMappingURL=/build/es2019/interfaces/read-only-map.js.map","//# sourceMappingURL=/build/es2019/interfaces/stereo-panner-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/stereo-panner-options.js.map","//# sourceMappingURL=/build/es2019/interfaces/wave-shaper-node.js.map","//# sourceMappingURL=/build/es2019/interfaces/wave-shaper-options.js.map","// @todo This is currently named IWorkletOptions and not IAudioWorkletOptions because it defines the options of a generic Worklet.\n//# sourceMappingURL=/build/es2019/interfaces/worklet-options.js.map","import { createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent } from 'automation-events';\nimport { createAbortError } from './factories/abort-error';\nimport { createAddAudioNodeConnections } from './factories/add-audio-node-connections';\nimport { createAddAudioParamConnections } from './factories/add-audio-param-connections';\nimport { createAddAudioWorkletModule } from './factories/add-audio-worklet-module';\nimport { createAddSilentConnection } from './factories/add-silent-connection';\nimport { createAddUnrenderedAudioWorkletNode } from './factories/add-unrendered-audio-worklet-node';\nimport { createAnalyserNodeConstructor } from './factories/analyser-node-constructor';\nimport { createAnalyserNodeRendererFactory } from './factories/analyser-node-renderer-factory';\nimport { createAudioBufferConstructor } from './factories/audio-buffer-constructor';\nimport { createAudioBufferSourceNodeConstructor } from './factories/audio-buffer-source-node-constructor';\nimport { createAudioBufferSourceNodeRendererFactory } from './factories/audio-buffer-source-node-renderer-factory';\nimport { createAudioContextConstructor } from './factories/audio-context-constructor';\nimport { createAudioDestinationNodeConstructor } from './factories/audio-destination-node-constructor';\nimport { createAudioDestinationNodeRenderer } from './factories/audio-destination-node-renderer-factory';\nimport { createAudioListenerFactory } from './factories/audio-listener-factory';\nimport { createAudioNodeConstructor } from './factories/audio-node-constructor';\nimport { createAudioParamFactory } from './factories/audio-param-factory';\nimport { createAudioParamRenderer } from './factories/audio-param-renderer';\nimport { createAudioWorkletNodeConstructor } from './factories/audio-worklet-node-constructor';\nimport { createAudioWorkletNodeRendererFactory } from './factories/audio-worklet-node-renderer-factory';\nimport { createBaseAudioContextConstructor } from './factories/base-audio-context-constructor';\nimport { createBiquadFilterNodeConstructor } from './factories/biquad-filter-node-constructor';\nimport { createBiquadFilterNodeRendererFactory } from './factories/biquad-filter-node-renderer-factory';\nimport { createCacheTestResult } from './factories/cache-test-result';\nimport { createChannelMergerNodeConstructor } from './factories/channel-merger-node-constructor';\nimport { createChannelMergerNodeRendererFactory } from './factories/channel-merger-node-renderer-factory';\nimport { createChannelSplitterNodeConstructor } from './factories/channel-splitter-node-constructor';\nimport { createChannelSplitterNodeRendererFactory } from './factories/channel-splitter-node-renderer-factory';\nimport { createConnectAudioParam } from './factories/connect-audio-param';\nimport { createConnectMultipleOutputs } from './factories/connect-multiple-outputs';\nimport { createConnectedNativeAudioBufferSourceNodeFactory } from './factories/connected-native-audio-buffer-source-node-factory';\nimport { createConstantSourceNodeConstructor } from './factories/constant-source-node-constructor';\nimport { createConstantSourceNodeRendererFactory } from './factories/constant-source-node-renderer-factory';\nimport { createConvertNumberToUnsignedLong } from './factories/convert-number-to-unsigned-long';\nimport { createConvolverNodeConstructor } from './factories/convolver-node-constructor';\nimport { createConvolverNodeRendererFactory } from './factories/convolver-node-renderer-factory';\nimport { createCreateNativeOfflineAudioContext } from './factories/create-native-offline-audio-context';\nimport { createDataCloneError } from './factories/data-clone-error';\nimport { createDecodeAudioData } from './factories/decode-audio-data';\nimport { createDecrementCycleCounter } from './factories/decrement-cycle-counter';\nimport { createDelayNodeConstructor } from './factories/delay-node-constructor';\nimport { createDelayNodeRendererFactory } from './factories/delay-node-renderer-factory';\nimport { createDeleteUnrenderedAudioWorkletNode } from './factories/delete-unrendered-audio-worklet-node';\nimport { createDetectCycles } from './factories/detect-cycles';\nimport { createDisconnectMultipleOutputs } from './factories/disconnect-multiple-outputs';\nimport { createDynamicsCompressorNodeConstructor } from './factories/dynamics-compressor-node-constructor';\nimport { createDynamicsCompressorNodeRendererFactory } from './factories/dynamics-compressor-node-renderer-factory';\nimport { createEncodingError } from './factories/encoding-error';\nimport { createEvaluateSource } from './factories/evaluate-source';\nimport { createEventTargetConstructor } from './factories/event-target-constructor';\nimport { createExposeCurrentFrameAndCurrentTime } from './factories/expose-current-frame-and-current-time';\nimport { createFetchSource } from './factories/fetch-source';\nimport { createGainNodeConstructor } from './factories/gain-node-constructor';\nimport { createGainNodeRendererFactory } from './factories/gain-node-renderer-factory';\nimport { createGetAudioNodeRenderer } from './factories/get-audio-node-renderer';\nimport { createGetAudioParamRenderer } from './factories/get-audio-param-renderer';\nimport { createGetBackupNativeContext } from './factories/get-backup-native-context';\nimport { createGetNativeContext } from './factories/get-native-context';\nimport { createGetUnrenderedAudioWorkletNodes } from './factories/get-unrendered-audio-worklet-nodes';\nimport { createIIRFilterNodeConstructor } from './factories/iir-filter-node-constructor';\nimport { createIIRFilterNodeRendererFactory } from './factories/iir-filter-node-renderer-factory';\nimport { createIncrementCycleCounterFactory } from './factories/increment-cycle-counter-factory';\nimport { createIndexSizeError } from './factories/index-size-error';\nimport { createInvalidAccessError } from './factories/invalid-access-error';\nimport { createInvalidStateError } from './factories/invalid-state-error';\nimport { createIsAnyAudioContext } from './factories/is-any-audio-context';\nimport { createIsAnyAudioNode } from './factories/is-any-audio-node';\nimport { createIsAnyAudioParam } from './factories/is-any-audio-param';\nimport { createIsAnyOfflineAudioContext } from './factories/is-any-offline-audio-context';\nimport { createIsNativeAudioContext } from './factories/is-native-audio-context';\nimport { createIsNativeAudioNode } from './factories/is-native-audio-node';\nimport { createIsNativeAudioParam } from './factories/is-native-audio-param';\nimport { createIsNativeContext } from './factories/is-native-context';\nimport { createIsNativeOfflineAudioContext } from './factories/is-native-offline-audio-context';\nimport { createIsSecureContext } from './factories/is-secure-context';\nimport { createIsSupportedPromise } from './factories/is-supported-promise';\nimport { createMediaElementAudioSourceNodeConstructor } from './factories/media-element-audio-source-node-constructor';\nimport { createMediaStreamAudioDestinationNodeConstructor } from './factories/media-stream-audio-destination-node-constructor';\nimport { createMediaStreamAudioSourceNodeConstructor } from './factories/media-stream-audio-source-node-constructor';\nimport { createMediaStreamTrackAudioSourceNodeConstructor } from './factories/media-stream-track-audio-source-node-constructor';\nimport { createMinimalAudioContextConstructor } from './factories/minimal-audio-context-constructor';\nimport { createMinimalBaseAudioContextConstructor } from './factories/minimal-base-audio-context-constructor';\nimport { createMinimalOfflineAudioContextConstructor } from './factories/minimal-offline-audio-context-constructor';\nimport { createMonitorConnections } from './factories/monitor-connections';\nimport { createNativeAnalyserNodeFactory } from './factories/native-analyser-node-factory';\nimport { createNativeAudioBufferConstructor } from './factories/native-audio-buffer-constructor';\nimport { createNativeAudioBufferSourceNodeFactory } from './factories/native-audio-buffer-source-node-factory';\nimport { createNativeAudioContextConstructor } from './factories/native-audio-context-constructor';\nimport { createNativeAudioDestinationNodeFactory } from './factories/native-audio-destination-node';\nimport { createNativeAudioNodeFactory } from './factories/native-audio-node-factory';\nimport { createNativeAudioWorkletNodeConstructor } from './factories/native-audio-worklet-node-constructor';\nimport { createNativeAudioWorkletNodeFactory } from './factories/native-audio-worklet-node-factory';\nimport { createNativeAudioWorkletNodeFakerFactory } from './factories/native-audio-worklet-node-faker-factory';\nimport { createNativeBiquadFilterNodeFactory } from './factories/native-biquad-filter-node-factory';\nimport { createNativeChannelMergerNodeFactory } from './factories/native-channel-merger-node-factory';\nimport { createNativeChannelSplitterNodeFactory } from './factories/native-channel-splitter-node-factory';\nimport { createNativeConstantSourceNodeFactory } from './factories/native-constant-source-node-factory';\nimport { createNativeConstantSourceNodeFakerFactory } from './factories/native-constant-source-node-faker-factory';\nimport { createNativeConvolverNodeFactory } from './factories/native-convolver-node-factory';\nimport { createNativeConvolverNodeFakerFactory } from './factories/native-convolver-node-faker-factory';\nimport { createNativeDelayNodeFactory } from './factories/native-delay-node-factory';\nimport { createNativeDynamicsCompressorNodeFactory } from './factories/native-dynamics-compressor-node-factory';\nimport { createNativeGainNodeFactory } from './factories/native-gain-node-factory';\nimport { createNativeIIRFilterNodeFactory } from './factories/native-iir-filter-node-factory';\nimport { createNativeIIRFilterNodeFakerFactory } from './factories/native-iir-filter-node-faker-factory';\nimport { createNativeMediaElementAudioSourceNodeFactory } from './factories/native-media-element-audio-source-node-factory';\nimport { createNativeMediaStreamAudioDestinationNodeFactory } from './factories/native-media-stream-audio-destination-node-factory';\nimport { createNativeMediaStreamAudioSourceNodeFactory } from './factories/native-media-stream-audio-source-node-factory';\nimport { createNativeMediaStreamTrackAudioSourceNodeFactory } from './factories/native-media-stream-track-audio-source-node-factory';\nimport { createNativeOfflineAudioContextConstructor } from './factories/native-offline-audio-context-constructor';\nimport { createNativeOscillatorNodeFactory } from './factories/native-oscillator-node-factory';\nimport { createNativePannerNodeFactory } from './factories/native-panner-node-factory';\nimport { createNativePannerNodeFakerFactory } from './factories/native-panner-node-faker-factory';\nimport { createNativePeriodicWaveFactory } from './factories/native-periodic-wave-factory';\nimport { createNativeScriptProcessorNodeFactory } from './factories/native-script-processor-node-factory';\nimport { createNativeStereoPannerNodeFactory } from './factories/native-stereo-panner-node-factory';\nimport { createNativeStereoPannerNodeFakerFactory } from './factories/native-stereo-panner-node-faker-factory';\nimport { createNativeWaveShaperNodeFactory } from './factories/native-wave-shaper-node-factory';\nimport { createNativeWaveShaperNodeFakerFactory } from './factories/native-wave-shaper-node-faker-factory';\nimport { createNotSupportedError } from './factories/not-supported-error';\nimport { createOfflineAudioContextConstructor } from './factories/offline-audio-context-constructor';\nimport { createOscillatorNodeConstructor } from './factories/oscillator-node-constructor';\nimport { createOscillatorNodeRendererFactory } from './factories/oscillator-node-renderer-factory';\nimport { createPannerNodeConstructor } from './factories/panner-node-constructor';\nimport { createPannerNodeRendererFactory } from './factories/panner-node-renderer-factory';\nimport { createPeriodicWaveConstructor } from './factories/periodic-wave-constructor';\nimport { createRenderAutomation } from './factories/render-automation';\nimport { createRenderInputsOfAudioNode } from './factories/render-inputs-of-audio-node';\nimport { createRenderInputsOfAudioParam } from './factories/render-inputs-of-audio-param';\nimport { createRenderNativeOfflineAudioContext } from './factories/render-native-offline-audio-context';\nimport { createStartRendering } from './factories/start-rendering';\nimport { createStereoPannerNodeConstructor } from './factories/stereo-panner-node-constructor';\nimport { createStereoPannerNodeRendererFactory } from './factories/stereo-panner-node-renderer-factory';\nimport { createTestAudioBufferConstructorSupport } from './factories/test-audio-buffer-constructor-support';\nimport { createTestAudioBufferCopyChannelMethodsSubarraySupport } from './factories/test-audio-buffer-copy-channel-methods-subarray-support';\nimport { createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport } from './factories/test-audio-buffer-source-node-start-method-consecutive-calls-support';\nimport { createTestAudioBufferSourceNodeStartMethodDurationParameterSupport } from './factories/test-audio-buffer-source-node-start-method-duration-parameter-support';\nimport { createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport } from './factories/test-audio-buffer-source-node-start-method-offset-clamping-support';\nimport { createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport } from './factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support';\nimport { createTestAudioContextCloseMethodSupport } from './factories/test-audio-context-close-method-support';\nimport { createTestAudioContextDecodeAudioDataMethodTypeErrorSupport } from './factories/test-audio-context-decode-audio-data-method-type-error-support';\nimport { createTestAudioContextOptionsSupport } from './factories/test-audio-context-options-support';\nimport { createTestAudioNodeConnectMethodSupport } from './factories/test-audio-node-connect-method-support';\nimport { createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport } from './factories/test-audio-scheduled-source-node-start-method-negative-parameters-support';\nimport { createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport } from './factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support';\nimport { createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport } from './factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support';\nimport { createTestAudioWorkletProcessorNoOutputsSupport } from './factories/test-audio-worklet-processor-no-outputs-support';\nimport { createTestChannelMergerNodeChannelCountSupport } from './factories/test-channel-merger-node-channel-count-support';\nimport { createTestConstantSourceNodeAccurateSchedulingSupport } from './factories/test-constant-source-node-accurate-scheduling-support';\nimport { createTestConvolverNodeBufferReassignabilitySupport } from './factories/test-convolver-node-buffer-reassignability-support';\nimport { createTestIsSecureContextSupport } from './factories/test-is-secure-context-support';\nimport { createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport } from './factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nimport { createTestOfflineAudioContextCurrentTimeSupport } from './factories/test-offline-audio-context-current-time-support';\nimport { createTestStereoPannerNodeDefaultValueSupport } from './factories/test-stereo-panner-node-default-value-support';\nimport { createUnknownError } from './factories/unknown-error';\nimport { createWaveShaperNodeConstructor } from './factories/wave-shaper-node-constructor';\nimport { createWaveShaperNodeRendererFactory } from './factories/wave-shaper-node-renderer-factory';\nimport { createWindow } from './factories/window';\nimport { createWrapAudioBufferCopyChannelMethods } from './factories/wrap-audio-buffer-copy-channel-methods';\nimport { createWrapAudioBufferCopyChannelMethodsOutOfBounds } from './factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds';\nimport { createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer } from './factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer';\nimport { createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls } from './factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls';\nimport { createWrapChannelMergerNode } from './factories/wrap-channel-merger-node';\nimport { AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, CONTEXT_STORE, CYCLE_COUNTERS } from './globals';\nimport { connectNativeAudioNodeToNativeAudioNode } from './helpers/connect-native-audio-node-to-native-audio-node';\nimport { disconnectNativeAudioNodeFromNativeAudioNode } from './helpers/disconnect-native-audio-node-from-native-audio-node';\nimport { getAudioNodeConnections } from './helpers/get-audio-node-connections';\nimport { getAudioParamConnections } from './helpers/get-audio-param-connections';\nimport { getNativeAudioNode } from './helpers/get-native-audio-node';\nimport { getNativeAudioParam } from './helpers/get-native-audio-param';\nimport { getValueForKey } from './helpers/get-value-for-key';\nimport { insertElementInSet } from './helpers/insert-element-in-set';\nimport { isActiveAudioNode } from './helpers/is-active-audio-node';\nimport { isDCCurve } from './helpers/is-dc-curve';\nimport { isPartOfACycle } from './helpers/is-part-of-a-cycle';\nimport { overwriteAccessors } from './helpers/overwrite-accessors';\nimport { testAudioBufferCopyChannelMethodsOutOfBoundsSupport } from './helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support';\nimport { testPromiseSupport } from './helpers/test-promise-support';\nimport { testTransferablesSupport } from './helpers/test-transferables-support';\nimport { wrapAudioBufferSourceNodeStartMethodOffsetClamping } from './helpers/wrap-audio-buffer-source-node-start-method-offset-clamping';\nimport { wrapEventListener } from './helpers/wrap-event-listener';\n/*\n * @todo Explicitly referencing the barrel file seems to be necessary when enabling the\n * isolatedModules compiler option.\n */\nexport * from './interfaces/index';\nexport * from './types/index';\nconst cacheTestResult = createCacheTestResult(new Map(), new WeakMap());\nconst window = createWindow();\nconst nativeOfflineAudioContextConstructor = createNativeOfflineAudioContextConstructor(window);\nconst isNativeOfflineAudioContext = createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor);\nconst nativeAudioContextConstructor = createNativeAudioContextConstructor(window);\nconst getBackupNativeContext = createGetBackupNativeContext(isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor);\nconst createNativeAudioNode = createNativeAudioNodeFactory(getBackupNativeContext);\nconst createNativeAnalyserNode = createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError, createNativeAudioNode);\nconst getAudioNodeRenderer = createGetAudioNodeRenderer(getAudioNodeConnections);\nconst renderInputsOfAudioNode = createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle);\nconst createAnalyserNodeRenderer = createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst auxiliaryGainNodeStore = new WeakMap();\nconst getNativeContext = createGetNativeContext(CONTEXT_STORE);\nconst audioParamAudioNodeStore = new WeakMap();\nconst eventTargetConstructor = createEventTargetConstructor(wrapEventListener);\nconst isNativeAudioContext = createIsNativeAudioContext(nativeAudioContextConstructor);\nconst isNativeAudioNode = createIsNativeAudioNode(window);\nconst isNativeAudioParam = createIsNativeAudioParam(window);\nconst audioNodeConstructor = createAudioNodeConstructor(createAddAudioNodeConnections(AUDIO_NODE_CONNECTIONS_STORE), auxiliaryGainNodeStore, cacheTestResult, createIncrementCycleCounterFactory(CYCLE_COUNTERS, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode), createIndexSizeError, createInvalidAccessError, createNotSupportedError, createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, CYCLE_COUNTERS, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext), createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);\nconst analyserNodeConstructor = createAnalyserNodeConstructor(audioNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);\nexport { analyserNodeConstructor as AnalyserNode };\nconst audioBufferStore = new WeakSet();\nconst nativeAudioBufferConstructor = createNativeAudioBufferConstructor(window);\nconst convertNumberToUnsignedLong = createConvertNumberToUnsignedLong(new Uint32Array(1));\nconst wrapAudioBufferCopyChannelMethods = createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError);\nconst wrapAudioBufferCopyChannelMethodsOutOfBounds = createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong);\nconst audioBufferConstructor = createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nexport { audioBufferConstructor as AudioBuffer };\nconst createNativeGainNode = createNativeGainNodeFactory(createNativeAudioNode);\nconst addSilentConnection = createAddSilentConnection(createNativeGainNode);\nconst testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(createNativeAudioNode);\nconst testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport(createNativeAudioNode);\nconst wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(createNativeAudioNode);\nconst renderInputsOfAudioParam = createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle);\nconst connectAudioParam = createConnectAudioParam(renderInputsOfAudioParam);\nconst createNativeAudioBufferSourceNode = createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(createNativeAudioNode), createTestAudioBufferSourceNodeStartMethodDurationParameterSupport(nativeOfflineAudioContextConstructor), createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport(createNativeAudioNode), createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport(createNativeAudioNode), testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClamping, createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst renderAutomation = createRenderAutomation(createGetAudioParamRenderer(getAudioParamConnections), renderInputsOfAudioParam);\nconst createAudioBufferSourceNodeRenderer = createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst createAudioParam = createAudioParamFactory(createAddAudioParamConnections(AUDIO_PARAM_CONNECTIONS_STORE), audioParamAudioNodeStore, AUDIO_PARAM_STORE, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor);\nconst audioBufferSourceNodeConstructor = createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nexport { audioBufferSourceNodeConstructor as AudioBufferSourceNode };\nconst audioDestinationNodeConstructor = createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);\nconst createNativeBiquadFilterNode = createNativeBiquadFilterNodeFactory(createNativeAudioNode);\nconst createBiquadFilterNodeRenderer = createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst biquadFilterNodeConstructor = createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext);\nconst monitorConnections = createMonitorConnections(insertElementInSet, isNativeAudioNode);\nconst wrapChannelMergerNode = createWrapChannelMergerNode(createInvalidStateError, createNativeAudioNode, monitorConnections);\nconst createNativeChannelMergerNode = createNativeChannelMergerNodeFactory(createNativeAudioNode, wrapChannelMergerNode);\nconst createChannelMergerNodeRenderer = createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelMergerNodeConstructor = createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeChannelSplitterNode = createNativeChannelSplitterNodeFactory(createNativeAudioNode);\nconst createChannelSplitterNodeRenderer = createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst channelSplitterNodeConstructor = createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeConstantSourceNodeFaker = createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);\nconst createNativeConstantSourceNode = createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);\nconst createConstantSourceNodeRenderer = createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst constantSourceNodeConstructor = createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createNativeConvolverNodeFaker = createNativeConvolverNodeFakerFactory(createNativeAudioNode, createNativeGainNode, monitorConnections);\nconst createNativeConvolverNode = createNativeConvolverNodeFactory(createNativeAudioNode, createNativeConvolverNodeFaker, createNotSupportedError, overwriteAccessors);\nconst createConvolverNodeRenderer = createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst convolverNodeConstructor = createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeDelayNode = createNativeDelayNodeFactory(createNativeAudioNode);\nconst createDelayNodeRenderer = createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst delayNodeConstructor = createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeDynamicsCompressorNode = createNativeDynamicsCompressorNodeFactory(createNativeAudioNode, createNotSupportedError);\nconst createDynamicsCompressorNodeRenderer = createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst dynamicsCompressorNodeConstructor = createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext);\nconst createGainNodeRenderer = createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst gainNodeConstructor = createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeScriptProcessorNode = createNativeScriptProcessorNodeFactory(createNativeAudioNode);\nconst createNativeIIRFilterNodeFaker = createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError);\nconst renderNativeOfflineAudioContext = createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor));\nconst createIIRFilterNodeRenderer = createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, createNativeAudioNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst createNativeIIRFilterNode = createNativeIIRFilterNodeFactory(createNativeAudioNode, createNativeIIRFilterNodeFaker);\nconst iIRFilterNodeConstructor = createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createAudioListener = createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext);\nconst unrenderedAudioWorkletNodeStore = new WeakMap();\nconst minimalBaseAudioContextConstructor = createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener);\nconst createNativeOscillatorNode = createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);\nconst createOscillatorNodeRenderer = createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst oscillatorNodeConstructor = createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener);\nconst createConnectedNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode);\nconst createNativeWaveShaperNodeFaker = createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeGainNode, isDCCurve, monitorConnections);\nconst createNativeWaveShaperNode = createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, overwriteAccessors);\nconst createNativePannerNodeFaker = createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections);\nconst createNativePannerNode = createNativePannerNodeFactory(createNativeAudioNode, createNativePannerNodeFaker);\nconst createPannerNodeRenderer = createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\nconst pannerNodeConstructor = createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createNativePeriodicWave = createNativePeriodicWaveFactory(getBackupNativeContext);\nconst periodicWaveConstructor = createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, new WeakSet());\nconst nativeStereoPannerNodeFakerFactory = createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections);\nconst createNativeStereoPannerNode = createNativeStereoPannerNodeFactory(createNativeAudioNode, nativeStereoPannerNodeFakerFactory, createNotSupportedError);\nconst createStereoPannerNodeRenderer = createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode);\nconst stereoPannerNodeConstructor = createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst createWaveShaperNodeRenderer = createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode);\nconst waveShaperNodeConstructor = createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext);\nconst isSecureContext = createIsSecureContext(window);\nconst exposeCurrentFrameAndCurrentTime = createExposeCurrentFrameAndCurrentTime(window);\n// The addAudioWorkletModule() function is only available in a SecureContext.\nexport const addAudioWorkletModule = (isSecureContext) ?\n    createAddAudioWorkletModule(createNotSupportedError, createEvaluateSource(window), exposeCurrentFrameAndCurrentTime, createFetchSource(createAbortError), getBackupNativeContext, getNativeContext, new WeakMap(), new WeakMap(), \n    // @todo window is guaranteed to be defined because isSecureContext checks that as well.\n    window) :\n    undefined;\nconst isNativeContext = createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext);\nexport const decodeAudioData = createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, new WeakSet(), getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst baseAudioContextConstructor = createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);\nconst createNativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNodeFactory(createNativeAudioNode);\nconst mediaElementAudioSourceNodeConstructor = createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNodeFactory(createNativeAudioNode, createNotSupportedError);\nconst mediaStreamAudioDestinationNodeConstructor = createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNodeFactory(createNativeAudioNode);\nconst mediaStreamAudioSourceNodeConstructor = createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);\nconst createNativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext);\nconst mediaStreamTrackAudioSourceNodeConstructor = createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);\nconst audioContextConstructor = createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);\nexport { audioContextConstructor as AudioContext };\nconst getUnrenderedAudioWorkletNodes = createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore);\nconst addUnrenderedAudioWorkletNode = createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst connectMultipleOutputs = createConnectMultipleOutputs(createIndexSizeError);\nconst deleteUnrenderedAudioWorkletNode = createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes);\nconst disconnectMultipleOutputs = createDisconnectMultipleOutputs(createIndexSizeError);\nconst createNativeAudioWorkletNodeFaker = createNativeAudioWorkletNodeFakerFactory(auxiliaryGainNodeStore, connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections);\nconst createNativeAudioWorkletNode = createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections);\nconst nativeAudioWorkletNodeConstructor = createNativeAudioWorkletNodeConstructor(window);\nconst createAudioWorkletNodeRenderer = createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);\n// The AudioWorkletNode constructor is only available in a SecureContext.\nconst audioWorkletNodeConstructor = (isSecureContext) ?\n    createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, wrapEventListener) :\n    undefined;\nexport { audioWorkletNodeConstructor as AudioWorkletNode };\nexport { biquadFilterNodeConstructor as BiquadFilterNode };\nexport { channelMergerNodeConstructor as ChannelMergerNode };\nexport { channelSplitterNodeConstructor as ChannelSplitterNode };\nexport { convolverNodeConstructor as ConvolverNode };\nexport { constantSourceNodeConstructor as ConstantSourceNode };\nexport { delayNodeConstructor as DelayNode };\nexport { dynamicsCompressorNodeConstructor as DynamicsCompressorNode };\nexport { gainNodeConstructor as GainNode };\nexport { iIRFilterNodeConstructor as IIRFilterNode };\nexport { mediaElementAudioSourceNodeConstructor as MediaElementAudioSourceNode };\nexport { mediaStreamAudioDestinationNodeConstructor as MediaStreamAudioDestinationNode };\nexport { mediaStreamAudioSourceNodeConstructor as MediaStreamAudioSourceNode };\nexport { mediaStreamTrackAudioSourceNodeConstructor as MediaStreamTrackAudioSourceNode };\nconst minimalAudioContextConstructor = createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor);\nexport { minimalAudioContextConstructor as MinimalAudioContext };\nconst createNativeOfflineAudioContext = createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor);\nconst startRendering = createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);\nconst minimalOfflineAudioContextConstructor = createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);\nexport { minimalOfflineAudioContextConstructor as MinimalOfflineAudioContext };\nconst offlineAudioContextConstructor = createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, startRendering);\nexport { offlineAudioContextConstructor as OfflineAudioContext };\nexport { oscillatorNodeConstructor as OscillatorNode };\nexport { pannerNodeConstructor as PannerNode };\nexport { periodicWaveConstructor as PeriodicWave };\nexport { stereoPannerNodeConstructor as StereoPannerNode };\nexport { waveShaperNodeConstructor as WaveShaperNode };\nexport const isAnyAudioContext = createIsAnyAudioContext(CONTEXT_STORE, isNativeAudioContext);\nexport const isAnyAudioNode = createIsAnyAudioNode(AUDIO_NODE_STORE, isNativeAudioNode);\nexport const isAnyAudioParam = createIsAnyAudioParam(AUDIO_PARAM_STORE, isNativeAudioParam);\nexport const isAnyOfflineAudioContext = createIsAnyOfflineAudioContext(CONTEXT_STORE, isNativeOfflineAudioContext);\nexport const isSupported = () => createIsSupportedPromise(cacheTestResult, createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor), createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor), createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor), createTestAudioContextOptionsSupport(nativeAudioContextConstructor), createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor), createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), createTestChannelMergerNodeChannelCountSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor), createTestConstantSourceNodeAccurateSchedulingSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor), createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor), createTestIsSecureContextSupport(window), createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor), createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor), testTransferablesSupport);\n//# sourceMappingURL=/build/es2019/module.js.map","export class ReadOnlyMap {\n    constructor(parameters) {\n        this._map = new Map(parameters);\n    }\n    get size() {\n        return this._map.size;\n    }\n    entries() {\n        return this._map.entries();\n    }\n    forEach(callback, thisArg = null) {\n        return this._map.forEach((value, key) => callback.call(thisArg, value, key, this));\n    }\n    get(name) {\n        return this._map.get(name);\n    }\n    has(name) {\n        return this._map.has(name);\n    }\n    keys() {\n        return this._map.keys();\n    }\n    values() {\n        return this._map.values();\n    }\n}\n//# sourceMappingURL=/build/es2019/read-only-map.js.map","//# sourceMappingURL=/build/es2019/types/abort-error-factory.js.map","//# sourceMappingURL=/build/es2019/types/active-input-connection.js.map","//# sourceMappingURL=/build/es2019/types/add-audio-node-connections-factory.js.map","//# sourceMappingURL=/build/es2019/types/add-audio-node-connections-function.js.map","//# sourceMappingURL=/build/es2019/types/add-audio-param-connections-factory.js.map","//# sourceMappingURL=/build/es2019/types/add-audio-param-connections-function.js.map","//# sourceMappingURL=/build/es2019/types/add-audio-worklet-module-factory.js.map","//# sourceMappingURL=/build/es2019/types/add-audio-worklet-module-function.js.map","//# sourceMappingURL=/build/es2019/types/add-silent-connection-factory.js.map","//# sourceMappingURL=/build/es2019/types/add-silent-connection-function.js.map","//# sourceMappingURL=/build/es2019/types/add-unrendered-audio-worklet-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/add-unrendered-audio-worklet-node-function.js.map","//# sourceMappingURL=/build/es2019/types/analyser-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/analyser-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/analyser-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/analyser-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/any-audio-buffer.js.map","//# sourceMappingURL=/build/es2019/types/any-context.js.map","//# sourceMappingURL=/build/es2019/types/audio-buffer-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-buffer-constructor.js.map","//# sourceMappingURL=/build/es2019/types/audio-buffer-source-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-buffer-source-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-buffer-source-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-buffer-source-node-renderer.js.map","//# sourceMappingURL=/build/es2019/types/audio-buffer-store.js.map","//# sourceMappingURL=/build/es2019/types/audio-context-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-context-constructor.js.map","//# sourceMappingURL=/build/es2019/types/audio-context-latency-category.js.map","//# sourceMappingURL=/build/es2019/types/audio-context-state.js.map","//# sourceMappingURL=/build/es2019/types/audio-destination-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-destination-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/audio-destination-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-listener-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-listener-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-node-connections-store.js.map","//# sourceMappingURL=/build/es2019/types/audio-node-connections.js.map","//# sourceMappingURL=/build/es2019/types/audio-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/audio-node-output-connection.js.map","//# sourceMappingURL=/build/es2019/types/audio-node-renderer.js.map","//# sourceMappingURL=/build/es2019/types/audio-node-store.js.map","//# sourceMappingURL=/build/es2019/types/audio-param-audio-node-store.js.map","//# sourceMappingURL=/build/es2019/types/audio-param-connections-store.js.map","//# sourceMappingURL=/build/es2019/types/audio-param-connections.js.map","//# sourceMappingURL=/build/es2019/types/audio-param-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-param-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-param-map.js.map","//# sourceMappingURL=/build/es2019/types/audio-param-output-connection.js.map","//# sourceMappingURL=/build/es2019/types/audio-param-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-param-store.js.map","//# sourceMappingURL=/build/es2019/types/audio-worklet-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-worklet-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/audio-worklet-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/audio-worklet-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/auxiliary-gain-node-store.js.map","//# sourceMappingURL=/build/es2019/types/base-audio-context-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/base-audio-context-constructor.js.map","//# sourceMappingURL=/build/es2019/types/biquad-filter-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/biquad-filter-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/biquad-filter-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/biquad-filter-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/biquad-filter-type.js.map","//# sourceMappingURL=/build/es2019/types/cache-test-result-factory.js.map","//# sourceMappingURL=/build/es2019/types/cache-test-result-function.js.map","//# sourceMappingURL=/build/es2019/types/channel-count-mode.js.map","//# sourceMappingURL=/build/es2019/types/channel-interpretation.js.map","//# sourceMappingURL=/build/es2019/types/channel-merger-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/channel-merger-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/channel-merger-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/channel-merger-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/channel-splitter-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/channel-splitter-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/channel-splitter-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/channel-splitter-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/connect-audio-param-factory.js.map","//# sourceMappingURL=/build/es2019/types/connect-audio-param-function.js.map","//# sourceMappingURL=/build/es2019/types/connect-multiple-outputs-factory.js.map","//# sourceMappingURL=/build/es2019/types/connect-multiple-outputs-function.js.map","//# sourceMappingURL=/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js.map","//# sourceMappingURL=/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/connected-native-audio-buffer-source-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/constant-source-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/constant-source-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/constant-source-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/constant-source-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/constant-source-node-renderer.js.map","//# sourceMappingURL=/build/es2019/types/constructor.js.map","//# sourceMappingURL=/build/es2019/types/context-store.js.map","//# sourceMappingURL=/build/es2019/types/context.js.map","//# sourceMappingURL=/build/es2019/types/convert-number-to-unsigned-long-factory.js.map","//# sourceMappingURL=/build/es2019/types/convert-number-to-unsigned-long-function.js.map","//# sourceMappingURL=/build/es2019/types/convolver-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/convolver-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/convolver-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/convolver-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/create-native-offline-audio-context-factory.js.map","//# sourceMappingURL=/build/es2019/types/create-native-offline-audio-context-function.js.map","//# sourceMappingURL=/build/es2019/types/cycle-counters.js.map","//# sourceMappingURL=/build/es2019/types/data-clone-error-factory.js.map","//# sourceMappingURL=/build/es2019/types/decode-audio-data-factory.js.map","//# sourceMappingURL=/build/es2019/types/decode-audio-data-function.js.map","//# sourceMappingURL=/build/es2019/types/decode-error-callback.js.map","//# sourceMappingURL=/build/es2019/types/decode-success-callback.js.map","//# sourceMappingURL=/build/es2019/types/decrement-cycle-counter-factory.js.map","//# sourceMappingURL=/build/es2019/types/decrement-cycle-counter-function.js.map","//# sourceMappingURL=/build/es2019/types/delay-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/delay-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/delay-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/delay-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/delete-unrendered-audio-worklet-node-function.js.map","//# sourceMappingURL=/build/es2019/types/detect-cycles-factory.js.map","//# sourceMappingURL=/build/es2019/types/detect-cycles-function.js.map","//# sourceMappingURL=/build/es2019/types/disconnect-multiple-outputs-factory.js.map","//# sourceMappingURL=/build/es2019/types/disconnect-multiple-outputs-function.js.map","//# sourceMappingURL=/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js.map","//# sourceMappingURL=/build/es2019/types/distance-model-type.js.map","//# sourceMappingURL=/build/es2019/types/dynamics-compressor-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/dynamics-compressor-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/dynamics-compressor-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/encoding-error-factory.js.map","//# sourceMappingURL=/build/es2019/types/error-event-handler.js.map","//# sourceMappingURL=/build/es2019/types/evaluate-audio-worklet-global-scope-function.js.map","//# sourceMappingURL=/build/es2019/types/evaluate-source-factory.js.map","//# sourceMappingURL=/build/es2019/types/evaluate-source-function.js.map","//# sourceMappingURL=/build/es2019/types/event-handler.js.map","//# sourceMappingURL=/build/es2019/types/event-target-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/event-target-constructor.js.map","//# sourceMappingURL=/build/es2019/types/expose-current-frame-and-current-time-factory.js.map","//# sourceMappingURL=/build/es2019/types/expose-current-frame-and-current-time-function.js.map","//# sourceMappingURL=/build/es2019/types/fetch-source-factory.js.map","//# sourceMappingURL=/build/es2019/types/fetch-source-function.js.map","//# sourceMappingURL=/build/es2019/types/gain-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/gain-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/gain-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/gain-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/get-audio-node-connections-function.js.map","//# sourceMappingURL=/build/es2019/types/get-audio-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/get-audio-node-renderer-function.js.map","//# sourceMappingURL=/build/es2019/types/get-audio-param-connections-function.js.map","//# sourceMappingURL=/build/es2019/types/get-audio-param-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/get-audio-param-renderer-function.js.map","//# sourceMappingURL=/build/es2019/types/get-backup-native-context-factory.js.map","//# sourceMappingURL=/build/es2019/types/get-backup-native-context-function.js.map","//# sourceMappingURL=/build/es2019/types/get-native-audio-node-function.js.map","//# sourceMappingURL=/build/es2019/types/get-native-audio-param-function.js.map","//# sourceMappingURL=/build/es2019/types/get-native-context-factory.js.map","//# sourceMappingURL=/build/es2019/types/get-native-context-function.js.map","//# sourceMappingURL=/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js.map","//# sourceMappingURL=/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js.map","//# sourceMappingURL=/build/es2019/types/get-value-for-key-function.js.map","//# sourceMappingURL=/build/es2019/types/iir-filter-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/iir-filter-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/iir-filter-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/iir-filter-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/increment-cycle-counter-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/increment-cycle-counter-factory.js.map","//# sourceMappingURL=/build/es2019/types/increment-cycle-counter-function.js.map","//# sourceMappingURL=/build/es2019/types/index-size-error-factory.js.map","export * from './abort-error-factory';\nexport * from './active-input-connection';\nexport * from './add-audio-node-connections-factory';\nexport * from './add-audio-node-connections-function';\nexport * from './add-audio-param-connections-factory';\nexport * from './add-audio-param-connections-function';\nexport * from './add-audio-worklet-module-factory';\nexport * from './add-audio-worklet-module-function';\nexport * from './add-silent-connection-factory';\nexport * from './add-silent-connection-function';\nexport * from './add-unrendered-audio-worklet-node-factory';\nexport * from './add-unrendered-audio-worklet-node-function';\nexport * from './analyser-node-constructor';\nexport * from './analyser-node-constructor-factory';\nexport * from './analyser-node-renderer-factory';\nexport * from './analyser-node-renderer-factory-factory';\nexport * from './any-audio-buffer';\nexport * from './any-context';\nexport * from './audio-buffer-constructor';\nexport * from './audio-buffer-constructor-factory';\nexport * from './audio-buffer-source-node-constructor';\nexport * from './audio-buffer-source-node-constructor-factory';\nexport * from './audio-buffer-source-node-renderer';\nexport * from './audio-buffer-source-node-renderer-factory';\nexport * from './audio-buffer-source-node-renderer-factory-factory';\nexport * from './audio-buffer-store';\nexport * from './audio-context-constructor';\nexport * from './audio-context-constructor-factory';\nexport * from './audio-context-latency-category';\nexport * from './audio-context-state';\nexport * from './audio-destination-node-constructor';\nexport * from './audio-destination-node-constructor-factory';\nexport * from './audio-destination-node-renderer-factory';\nexport * from './audio-listener-factory';\nexport * from './audio-listener-factory-factory';\nexport * from './audio-node-connections';\nexport * from './audio-node-connections-store';\nexport * from './audio-node-constructor';\nexport * from './audio-node-constructor-factory';\nexport * from './audio-node-output-connection';\nexport * from './audio-node-renderer';\nexport * from './audio-node-store';\nexport * from './audio-param-audio-node-store';\nexport * from './audio-param-connections';\nexport * from './audio-param-connections-store';\nexport * from './audio-param-factory';\nexport * from './audio-param-factory-factory';\nexport * from './audio-param-map';\nexport * from './audio-param-output-connection';\nexport * from './audio-param-renderer-factory';\nexport * from './audio-param-store';\nexport * from './audio-worklet-node-constructor';\nexport * from './audio-worklet-node-constructor-factory';\nexport * from './audio-worklet-node-renderer-factory';\nexport * from './audio-worklet-node-renderer-factory-factory';\nexport * from './auxiliary-gain-node-store';\nexport * from './base-audio-context-constructor';\nexport * from './base-audio-context-constructor-factory';\nexport * from './biquad-filter-node-constructor';\nexport * from './biquad-filter-node-constructor-factory';\nexport * from './biquad-filter-node-renderer-factory';\nexport * from './biquad-filter-node-renderer-factory-factory';\nexport * from './biquad-filter-type';\nexport * from './channel-count-mode';\nexport * from './channel-interpretation';\nexport * from './channel-merger-node-constructor';\nexport * from './channel-merger-node-constructor-factory';\nexport * from './channel-merger-node-renderer-factory';\nexport * from './channel-merger-node-renderer-factory-factory';\nexport * from './channel-splitter-node-constructor';\nexport * from './channel-splitter-node-constructor-factory';\nexport * from './channel-splitter-node-renderer-factory';\nexport * from './channel-splitter-node-renderer-factory-factory';\nexport * from './cache-test-result-factory';\nexport * from './cache-test-result-function';\nexport * from './connect-audio-param-factory';\nexport * from './connect-audio-param-function';\nexport * from './connect-multiple-outputs-factory';\nexport * from './connect-multiple-outputs-function';\nexport * from './connect-native-audio-node-to-native-audio-node-function';\nexport * from './connected-native-audio-buffer-source-node-factory';\nexport * from './connected-native-audio-buffer-source-node-factory-factory';\nexport * from './constant-source-node-constructor';\nexport * from './constant-source-node-constructor-factory';\nexport * from './constant-source-node-renderer';\nexport * from './constant-source-node-renderer-factory';\nexport * from './constant-source-node-renderer-factory-factory';\nexport * from './constructor';\nexport * from './context';\nexport * from './context-store';\nexport * from './convert-number-to-unsigned-long-factory';\nexport * from './convert-number-to-unsigned-long-function';\nexport * from './convolver-node-constructor';\nexport * from './convolver-node-constructor-factory';\nexport * from './convolver-node-renderer-factory';\nexport * from './convolver-node-renderer-factory-factory';\nexport * from './create-native-offline-audio-context-factory';\nexport * from './create-native-offline-audio-context-function';\nexport * from './cycle-counters';\nexport * from './data-clone-error-factory';\nexport * from './decode-audio-data-factory';\nexport * from './decode-audio-data-function';\nexport * from './decode-error-callback';\nexport * from './decode-success-callback';\nexport * from './decrement-cycle-counter-factory';\nexport * from './decrement-cycle-counter-function';\nexport * from './delay-node-constructor';\nexport * from './delay-node-constructor-factory';\nexport * from './delay-node-renderer-factory';\nexport * from './delay-node-renderer-factory-factory';\nexport * from './delete-unrendered-audio-worklet-node-factory';\nexport * from './delete-unrendered-audio-worklet-node-function';\nexport * from './detect-cycles-factory';\nexport * from './detect-cycles-function';\nexport * from './disconnect-multiple-outputs-factory';\nexport * from './disconnect-multiple-outputs-function';\nexport * from './disconnect-native-audio-node-from-native-audio-node-function';\nexport * from './distance-model-type';\nexport * from './dynamics-compressor-node-constructor';\nexport * from './dynamics-compressor-node-constructor-factory';\nexport * from './dynamics-compressor-node-renderer-factory';\nexport * from './dynamics-compressor-node-renderer-factory-factory';\nexport * from './encoding-error-factory';\nexport * from './error-event-handler';\nexport * from './evaluate-audio-worklet-global-scope-function';\nexport * from './evaluate-source-factory';\nexport * from './evaluate-source-function';\nexport * from './event-handler';\nexport * from './event-target-constructor';\nexport * from './event-target-constructor-factory';\nexport * from './expose-current-frame-and-current-time-factory';\nexport * from './expose-current-frame-and-current-time-function';\nexport * from './fetch-source-factory';\nexport * from './fetch-source-function';\nexport * from './gain-node-constructor';\nexport * from './gain-node-constructor-factory';\nexport * from './gain-node-renderer-factory';\nexport * from './gain-node-renderer-factory-factory';\nexport * from './get-audio-node-connections-function';\nexport * from './get-audio-node-renderer-factory';\nexport * from './get-audio-node-renderer-function';\nexport * from './get-audio-param-connections-function';\nexport * from './get-audio-param-renderer-factory';\nexport * from './get-audio-param-renderer-function';\nexport * from './get-backup-native-context-factory';\nexport * from './get-backup-native-context-function';\nexport * from './get-native-audio-node-function';\nexport * from './get-native-audio-param-function';\nexport * from './get-native-context-function';\nexport * from './get-native-context-factory';\nexport * from './get-unrendered-audio-worklet-nodes-factory';\nexport * from './get-unrendered-audio-worklet-nodes-function';\nexport * from './get-value-for-key-function';\nexport * from './iir-filter-node-constructor';\nexport * from './iir-filter-node-constructor-factory';\nexport * from './iir-filter-node-renderer-factory';\nexport * from './iir-filter-node-renderer-factory-factory';\nexport * from './increment-cycle-counter-factory';\nexport * from './increment-cycle-counter-factory-factory';\nexport * from './increment-cycle-counter-function';\nexport * from './index-size-error-factory';\nexport * from './insert-element-in-set-function';\nexport * from './internal-state-event-listener';\nexport * from './invalid-access-error-factory';\nexport * from './invalid-state-error-factory';\nexport * from './is-active-audio-node-function';\nexport * from './is-any-audio-context-factory';\nexport * from './is-any-audio-context-function';\nexport * from './is-any-audio-node-factory';\nexport * from './is-any-audio-node-function';\nexport * from './is-any-audio-param-factory';\nexport * from './is-any-audio-param-function';\nexport * from './is-any-offline-audio-context-factory';\nexport * from './is-any-offline-audio-context-function';\nexport * from './is-dc-curve-function';\nexport * from './is-native-audio-context-factory';\nexport * from './is-native-audio-context-function';\nexport * from './is-native-audio-node-factory';\nexport * from './is-native-audio-node-function';\nexport * from './is-native-audio-param-factory';\nexport * from './is-native-audio-param-function';\nexport * from './is-native-context-factory';\nexport * from './is-native-context-function';\nexport * from './is-native-offline-audio-context-factory';\nexport * from './is-native-offline-audio-context-function';\nexport * from './is-part-of-a-cycle-function';\nexport * from './is-secure-context-factory';\nexport * from './is-supported-promise-factory';\nexport * from './media-element-audio-source-node-constructor';\nexport * from './media-element-audio-source-node-constructor-factory';\nexport * from './media-stream-audio-destination-node-constructor';\nexport * from './media-stream-audio-destination-node-constructor-factory';\nexport * from './media-stream-audio-source-node-constructor';\nexport * from './media-stream-audio-source-node-constructor-factory';\nexport * from './media-stream-track-audio-source-node-constructor';\nexport * from './media-stream-track-audio-source-node-constructor-factory';\nexport * from './minimal-audio-context-constructor';\nexport * from './minimal-audio-context-constructor-factory';\nexport * from './minimal-base-audio-context-constructor';\nexport * from './minimal-base-audio-context-constructor-factory';\nexport * from './minimal-offline-audio-context-constructor';\nexport * from './minimal-offline-audio-context-constructor-factory';\nexport * from './monitor-connections-factory';\nexport * from './monitor-connections-function';\nexport * from './native-analyser-node';\nexport * from './native-analyser-node-factory';\nexport * from './native-analyser-node-factory-factory';\nexport * from './native-audio-buffer';\nexport * from './native-audio-buffer-constructor';\nexport * from './native-audio-buffer-constructor-factory';\nexport * from './native-audio-buffer-source-node';\nexport * from './native-audio-buffer-source-node-factory';\nexport * from './native-audio-buffer-source-node-factory-factory';\nexport * from './native-audio-context';\nexport * from './native-audio-context-constructor';\nexport * from './native-audio-context-constructor-factory';\nexport * from './native-audio-destination-node';\nexport * from './native-audio-destination-node-factory';\nexport * from './native-audio-destination-node-factory-factory';\nexport * from './native-audio-listener';\nexport * from './native-audio-node';\nexport * from './native-audio-node-factory';\nexport * from './native-audio-node-factory-factory';\nexport * from './native-audio-param';\nexport * from './native-audio-param-map';\nexport * from './native-audio-worklet';\nexport * from './native-audio-worklet-node';\nexport * from './native-audio-worklet-node-constructor';\nexport * from './native-audio-worklet-node-constructor-factory';\nexport * from './native-audio-worklet-node-factory';\nexport * from './native-audio-worklet-node-factory-factory';\nexport * from './native-audio-worklet-node-faker-factory';\nexport * from './native-audio-worklet-node-faker-factory-factory';\nexport * from './native-audio-worklet-node-options';\nexport * from './native-biquad-filter-node';\nexport * from './native-biquad-filter-node-factory';\nexport * from './native-biquad-filter-node-factory-factory';\nexport * from './native-channel-merger-node';\nexport * from './native-channel-merger-node-factory';\nexport * from './native-channel-merger-node-factory-factory';\nexport * from './native-channel-splitter-node';\nexport * from './native-channel-splitter-node-factory';\nexport * from './native-channel-splitter-node-factory-factory';\nexport * from './native-constant-source-node';\nexport * from './native-constant-source-node-factory';\nexport * from './native-constant-source-node-factory-factory';\nexport * from './native-constant-source-node-faker-factory';\nexport * from './native-constant-source-node-faker-factory-factory';\nexport * from './native-context';\nexport * from './native-convolver-node';\nexport * from './native-convolver-node-factory';\nexport * from './native-convolver-node-factory-factory';\nexport * from './native-convolver-node-faker-factory';\nexport * from './native-convolver-node-faker-factory-factory';\nexport * from './native-delay-node-factory';\nexport * from './native-delay-node-factory-factory';\nexport * from './native-delay-node';\nexport * from './native-dynamics-compressor-node';\nexport * from './native-dynamics-compressor-node-factory';\nexport * from './native-dynamics-compressor-node-factory-factory';\nexport * from './native-event-target';\nexport * from './native-gain-node';\nexport * from './native-gain-node-factory';\nexport * from './native-gain-node-factory-factory';\nexport * from './native-iir-filter-node';\nexport * from './native-iir-filter-node-factory';\nexport * from './native-iir-filter-node-factory-factory';\nexport * from './native-iir-filter-node-faker-factory';\nexport * from './native-iir-filter-node-faker-factory-factory';\nexport * from './native-media-element-audio-source-node';\nexport * from './native-media-element-audio-source-node-factory';\nexport * from './native-media-element-audio-source-node-factory-factory';\nexport * from './native-media-stream-audio-destination-node';\nexport * from './native-media-stream-audio-destination-node-factory';\nexport * from './native-media-stream-audio-destination-node-factory-factory';\nexport * from './native-media-stream-audio-source-node';\nexport * from './native-media-stream-audio-source-node-factory';\nexport * from './native-media-stream-audio-source-node-factory-factory';\nexport * from './native-media-stream-track-audio-source-node';\nexport * from './native-media-stream-track-audio-source-node-factory';\nexport * from './native-media-stream-track-audio-source-node-factory-factory';\nexport * from './native-offline-audio-context';\nexport * from './native-offline-audio-context-constructor';\nexport * from './native-offline-audio-context-constructor-factory';\nexport * from './native-oscillator-node';\nexport * from './native-oscillator-node-factory';\nexport * from './native-oscillator-node-factory-factory';\nexport * from './native-panner-node';\nexport * from './native-panner-node-factory';\nexport * from './native-panner-node-factory-factory';\nexport * from './native-panner-node-faker-factory';\nexport * from './native-panner-node-faker-factory-factory';\nexport * from './native-periodic-wave';\nexport * from './native-periodic-wave-factory';\nexport * from './native-periodic-wave-factory-factory';\nexport * from './native-script-processor-node';\nexport * from './native-script-processor-node-factory';\nexport * from './native-script-processor-node-factory-factory';\nexport * from './native-stereo-panner-node';\nexport * from './native-stereo-panner-node-factory';\nexport * from './native-stereo-panner-node-factory-factory';\nexport * from './native-stereo-panner-node-faker-factory';\nexport * from './native-stereo-panner-node-faker-factory-factory';\nexport * from './native-wave-shaper-node';\nexport * from './native-wave-shaper-node-factory';\nexport * from './native-wave-shaper-node-factory-factory';\nexport * from './native-wave-shaper-node-faker-factory';\nexport * from './native-wave-shaper-node-faker-factory-factory';\nexport * from './not-supported-error-factory';\nexport * from './offline-audio-context-constructor-factory';\nexport * from './oscillator-node-constructor';\nexport * from './oscillator-node-constructor-factory';\nexport * from './oscillator-node-renderer';\nexport * from './oscillator-node-renderer-factory';\nexport * from './oscillator-node-renderer-factory-factory';\nexport * from './oscillator-type';\nexport * from './output-connection';\nexport * from './over-sample-type';\nexport * from './overwrite-accessors-function';\nexport * from './panner-node-constructor';\nexport * from './panner-node-constructor-factory';\nexport * from './panner-node-renderer-factory';\nexport * from './panner-node-renderer-factory-factory';\nexport * from './panning-model-type';\nexport * from './passive-audio-node-input-connection';\nexport * from './passive-audio-param-input-connection';\nexport * from './periodic-wave-constructor';\nexport * from './periodic-wave-constructor-factory';\nexport * from './render-automation-factory';\nexport * from './render-automation-function';\nexport * from './render-inputs-of-audio-node-factory';\nexport * from './render-inputs-of-audio-node-function';\nexport * from './render-inputs-of-audio-param-factory';\nexport * from './render-inputs-of-audio-param-function';\nexport * from './render-native-offline-audio-context-factory';\nexport * from './render-native-offline-audio-context-function';\nexport * from './start-rendering-factory';\nexport * from './start-rendering-function';\nexport * from './stereo-panner-node-constructor';\nexport * from './stereo-panner-node-constructor-factory';\nexport * from './stereo-panner-node-renderer-factory-factory';\nexport * from './stereo-panner-node-renderer-factory';\nexport * from './test-audio-buffer-copy-channel-methods-subarray-support-factory';\nexport * from './test-audio-buffer-constructor-support-factory';\nexport * from './test-audio-buffer-source-node-start-method-consecutive-calls-support-factory';\nexport * from './test-audio-buffer-source-node-start-method-duration-parameter-support-factory';\nexport * from './test-audio-buffer-source-node-start-method-offset-clamping-support-factory';\nexport * from './test-audio-buffer-source-node-stop-method-nullified-buffer-support-factory';\nexport * from './test-audio-context-close-method-support-factory';\nexport * from './test-audio-context-decode-audio-data-method-type-error-support-factory';\nexport * from './test-audio-context-options-support-factory';\nexport * from './test-audio-node-connect-method-support-factory';\nexport * from './test-audio-scheduled-source-node-start-method-consecutive-calls-support-factory';\nexport * from './test-audio-scheduled-source-node-stop-method-consecutive-calls-support-factory';\nexport * from './test-audio-scheduled-source-node-stop-method-negative-parameters-support-factory';\nexport * from './test-audio-worklet-processor-no-outputs-support-factory';\nexport * from './test-channel-merger-node-channel-count-support-factory';\nexport * from './test-constant-source-node-accurate-scheduling-support-factory';\nexport * from './test-convolver-node-buffer-reassignability-support-factory';\nexport * from './test-is-secure-context-support-factory';\nexport * from './test-media-stream-audio-source-node-media-stream-without-audio-track-support';\nexport * from './test-offline-audio-context-current-time-support-factory';\nexport * from './test-stereo-panner-node-default-value-support-factory';\nexport * from './typed-array';\nexport * from './unknown-error-factory';\nexport * from './unrendered-audio-worklet-node-store';\nexport * from './unrendered-audio-worklet-nodes';\nexport * from './wave-shaper-node-constructor';\nexport * from './wave-shaper-node-constructor-factory';\nexport * from './wave-shaper-node-renderer-factory-factory';\nexport * from './wave-shaper-node-renderer-factory';\nexport * from './window-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-function';\nexport * from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory';\nexport * from './wrap-audio-buffer-copy-channel-methods-out-of-bounds-function';\nexport * from './wrap-audio-buffer-source-node-start-method-offset-clamping-function';\nexport * from './wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory';\nexport * from './wrap-audio-buffer-source-node-stop-method-nullified-buffer-function';\nexport * from './wrap-audio-scheduled-source-node-stop-method-consecutive-calls-factory';\nexport * from './wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function';\nexport * from './wrap-channel-merger-node-factory';\nexport * from './wrap-channel-merger-node-function';\nexport * from './wrap-event-listener-function';\n//# sourceMappingURL=/build/es2019/types/index.js.map","//# sourceMappingURL=/build/es2019/types/insert-element-in-set-function.js.map","//# sourceMappingURL=/build/es2019/types/internal-state-event-listener.js.map","//# sourceMappingURL=/build/es2019/types/invalid-access-error-factory.js.map","//# sourceMappingURL=/build/es2019/types/invalid-state-error-factory.js.map","//# sourceMappingURL=/build/es2019/types/is-active-audio-node-function.js.map","//# sourceMappingURL=/build/es2019/types/is-any-audio-context-factory.js.map","//# sourceMappingURL=/build/es2019/types/is-any-audio-context-function.js.map","//# sourceMappingURL=/build/es2019/types/is-any-audio-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/is-any-audio-node-function.js.map","//# sourceMappingURL=/build/es2019/types/is-any-audio-param-factory.js.map","//# sourceMappingURL=/build/es2019/types/is-any-audio-param-function.js.map","//# sourceMappingURL=/build/es2019/types/is-any-offline-audio-context-factory.js.map","//# sourceMappingURL=/build/es2019/types/is-any-offline-audio-context-function.js.map","//# sourceMappingURL=/build/es2019/types/is-dc-curve-function.js.map","//# sourceMappingURL=/build/es2019/types/is-native-audio-context-factory.js.map","//# sourceMappingURL=/build/es2019/types/is-native-audio-context-function.js.map","//# sourceMappingURL=/build/es2019/types/is-native-audio-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/is-native-audio-node-function.js.map","//# sourceMappingURL=/build/es2019/types/is-native-audio-param-factory.js.map","//# sourceMappingURL=/build/es2019/types/is-native-audio-param-function.js.map","//# sourceMappingURL=/build/es2019/types/is-native-context-factory.js.map","//# sourceMappingURL=/build/es2019/types/is-native-context-function.js.map","//# sourceMappingURL=/build/es2019/types/is-native-offline-audio-context-factory.js.map","//# sourceMappingURL=/build/es2019/types/is-native-offline-audio-context-function.js.map","//# sourceMappingURL=/build/es2019/types/is-part-of-a-cycle-function.js.map","//# sourceMappingURL=/build/es2019/types/is-secure-context-factory.js.map","//# sourceMappingURL=/build/es2019/types/is-supported-promise-factory.js.map","//# sourceMappingURL=/build/es2019/types/media-element-audio-source-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/media-element-audio-source-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/media-stream-audio-destination-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/media-stream-audio-source-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/media-stream-audio-source-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/media-stream-track-audio-source-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/minimal-audio-context-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/minimal-audio-context-constructor.js.map","//# sourceMappingURL=/build/es2019/types/minimal-base-audio-context-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/minimal-base-audio-context-constructor.js.map","//# sourceMappingURL=/build/es2019/types/minimal-offline-audio-context-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/minimal-offline-audio-context-constructor.js.map","//# sourceMappingURL=/build/es2019/types/monitor-connections-factory.js.map","//# sourceMappingURL=/build/es2019/types/monitor-connections-function.js.map","//# sourceMappingURL=/build/es2019/types/native-analyser-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-analyser-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-analyser-node.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-buffer-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-buffer-constructor.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-buffer-source-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-buffer-source-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-buffer-source-node.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-buffer.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-context-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-context-constructor.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-context.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-destination-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-destination-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-destination-node.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-listener.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-node.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-param-map.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-param.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-faker-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-options.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node.js.map","//# sourceMappingURL=/build/es2019/types/native-audio-worklet.js.map","//# sourceMappingURL=/build/es2019/types/native-biquad-filter-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-biquad-filter-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-biquad-filter-node.js.map","//# sourceMappingURL=/build/es2019/types/native-channel-merger-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-channel-merger-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-channel-merger-node.js.map","//# sourceMappingURL=/build/es2019/types/native-channel-splitter-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-channel-splitter-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-channel-splitter-node.js.map","//# sourceMappingURL=/build/es2019/types/native-constant-source-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-constant-source-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-constant-source-node-faker-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-constant-source-node-faker-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-constant-source-node.js.map","//# sourceMappingURL=/build/es2019/types/native-context.js.map","//# sourceMappingURL=/build/es2019/types/native-convolver-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-convolver-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-convolver-node-faker-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-convolver-node-faker-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-convolver-node.js.map","//# sourceMappingURL=/build/es2019/types/native-delay-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-delay-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-delay-node.js.map","//# sourceMappingURL=/build/es2019/types/native-dynamics-compressor-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-dynamics-compressor-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-dynamics-compressor-node.js.map","//# sourceMappingURL=/build/es2019/types/native-event-target.js.map","//# sourceMappingURL=/build/es2019/types/native-gain-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-gain-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-gain-node.js.map","//# sourceMappingURL=/build/es2019/types/native-iir-filter-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-iir-filter-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-iir-filter-node-faker-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-iir-filter-node-faker-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-iir-filter-node.js.map","//# sourceMappingURL=/build/es2019/types/native-media-element-audio-source-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-media-element-audio-source-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-media-element-audio-source-node.js.map","//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-destination-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-destination-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-destination-node.js.map","//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-source-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-source-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-source-node.js.map","//# sourceMappingURL=/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-media-stream-track-audio-source-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-media-stream-track-audio-source-node.js.map","//# sourceMappingURL=/build/es2019/types/native-offline-audio-context-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-offline-audio-context-constructor.js.map","//# sourceMappingURL=/build/es2019/types/native-offline-audio-context.js.map","//# sourceMappingURL=/build/es2019/types/native-oscillator-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-oscillator-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-oscillator-node.js.map","//# sourceMappingURL=/build/es2019/types/native-panner-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-panner-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-panner-node-faker-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-panner-node-faker-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-panner-node.js.map","//# sourceMappingURL=/build/es2019/types/native-periodic-wave-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-periodic-wave-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-periodic-wave.js.map","//# sourceMappingURL=/build/es2019/types/native-script-processor-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-script-processor-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-script-processor-node.js.map","//# sourceMappingURL=/build/es2019/types/native-stereo-panner-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-stereo-panner-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-stereo-panner-node-faker-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-stereo-panner-node.js.map","//# sourceMappingURL=/build/es2019/types/native-wave-shaper-node-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-wave-shaper-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-wave-shaper-node-faker-factory.js.map","//# sourceMappingURL=/build/es2019/types/native-wave-shaper-node.js.map","//# sourceMappingURL=/build/es2019/types/not-supported-error-factory.js.map","//# sourceMappingURL=/build/es2019/types/offline-audio-context-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/oscillator-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/oscillator-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/oscillator-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/oscillator-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/oscillator-node-renderer.js.map","//# sourceMappingURL=/build/es2019/types/oscillator-type.js.map","//# sourceMappingURL=/build/es2019/types/output-connection.js.map","//# sourceMappingURL=/build/es2019/types/over-sample-type.js.map","//# sourceMappingURL=/build/es2019/types/overwrite-accessors-function.js.map","//# sourceMappingURL=/build/es2019/types/panner-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/panner-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/panner-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/panner-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/panning-model-type.js.map","//# sourceMappingURL=/build/es2019/types/passive-audio-node-input-connection.js.map","//# sourceMappingURL=/build/es2019/types/passive-audio-param-input-connection.js.map","//# sourceMappingURL=/build/es2019/types/periodic-wave-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/periodic-wave-constructor.js.map","//# sourceMappingURL=/build/es2019/types/render-automation-factory.js.map","//# sourceMappingURL=/build/es2019/types/render-automation-function.js.map","//# sourceMappingURL=/build/es2019/types/render-inputs-of-audio-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/render-inputs-of-audio-node-function.js.map","//# sourceMappingURL=/build/es2019/types/render-inputs-of-audio-param-factory.js.map","//# sourceMappingURL=/build/es2019/types/render-inputs-of-audio-param-function.js.map","//# sourceMappingURL=/build/es2019/types/render-native-offline-audio-context-factory.js.map","//# sourceMappingURL=/build/es2019/types/render-native-offline-audio-context-function.js.map","//# sourceMappingURL=/build/es2019/types/start-rendering-factory.js.map","//# sourceMappingURL=/build/es2019/types/start-rendering-function.js.map","//# sourceMappingURL=/build/es2019/types/stereo-panner-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/stereo-panner-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/stereo-panner-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/stereo-panner-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-buffer-constructor-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-buffer-source-node-start-method-consecutive-calls-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-buffer-source-node-start-method-duration-parameter-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-buffer-source-node-start-method-offset-clamping-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-buffer-source-node-stop-method-nullified-buffer-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-context-close-method-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-context-options-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-node-connect-method-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-scheduled-source-node-start-method-consecutive-calls-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-scheduled-source-node-stop-method-consecutive-calls-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-scheduled-source-node-stop-method-negative-parameters-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-is-secure-context-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js.map","//# sourceMappingURL=/build/es2019/types/test-offline-audio-context-current-time-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js.map","//# sourceMappingURL=/build/es2019/types/typed-array.js.map","//# sourceMappingURL=/build/es2019/types/unknown-error-factory.js.map","//# sourceMappingURL=/build/es2019/types/unrendered-audio-worklet-node-store.js.map","//# sourceMappingURL=/build/es2019/types/unrendered-audio-worklet-nodes.js.map","//# sourceMappingURL=/build/es2019/types/wave-shaper-node-constructor-factory.js.map","//# sourceMappingURL=/build/es2019/types/wave-shaper-node-constructor.js.map","//# sourceMappingURL=/build/es2019/types/wave-shaper-node-renderer-factory-factory.js.map","//# sourceMappingURL=/build/es2019/types/wave-shaper-node-renderer-factory.js.map","//# sourceMappingURL=/build/es2019/types/window-factory.js.map","//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js.map","//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js.map","//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js.map","//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js.map","//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js.map","//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js.map","//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js.map","//# sourceMappingURL=/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-factory.js.map","//# sourceMappingURL=/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js.map","//# sourceMappingURL=/build/es2019/types/wrap-channel-merger-node-factory.js.map","//# sourceMappingURL=/build/es2019/types/wrap-channel-merger-node-function.js.map","//# sourceMappingURL=/build/es2019/types/wrap-event-listener-function.js.map","export * from \"./core/index\";\nexport * from \"./source/index\";\nexport * from \"./signal/index\";\nexport * from \"./instrument/index\";\nexport * from \"./event/index\";\nexport * from \"./effect/index\";\nexport * from \"./component/index\";\n//# sourceMappingURL=classes.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Split } from \"../channel/Split\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert, assertRange } from \"../../core/util/Debug\";\n/**\n * Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).\n * Extracts FFT or Waveform data from the incoming signal.\n * @category Component\n */\nexport class Analyser extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]));\n        this.name = \"Analyser\";\n        /**\n         * The analyser node.\n         */\n        this._analysers = [];\n        /**\n         * The buffer that the FFT data is written to\n         */\n        this._buffers = [];\n        const options = optionsFromArguments(Analyser.getDefaults(), arguments, [\"type\", \"size\"]);\n        this.input = this.output = this._gain = new Gain({ context: this.context });\n        this._split = new Split({\n            context: this.context,\n            channels: options.channels,\n        });\n        this.input.connect(this._split);\n        assertRange(options.channels, 1);\n        // create the analysers\n        for (let channel = 0; channel < options.channels; channel++) {\n            this._analysers[channel] = this.context.createAnalyser();\n            this._split.connect(this._analysers[channel], channel, 0);\n        }\n        // set the values initially\n        this.size = options.size;\n        this.type = options.type;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            size: 1024,\n            smoothing: 0.8,\n            type: \"fft\",\n            channels: 1,\n        });\n    }\n    /**\n     * Run the analysis given the current settings. If [[channels]] = 1,\n     * it will return a Float32Array. If [[channels]] > 1, it will\n     * return an array of Float32Arrays where each index in the array\n     * represents the analysis done on a channel.\n     */\n    getValue() {\n        this._analysers.forEach((analyser, index) => {\n            const buffer = this._buffers[index];\n            if (this._type === \"fft\") {\n                analyser.getFloatFrequencyData(buffer);\n            }\n            else if (this._type === \"waveform\") {\n                analyser.getFloatTimeDomainData(buffer);\n            }\n        });\n        if (this.channels === 1) {\n            return this._buffers[0];\n        }\n        else {\n            return this._buffers;\n        }\n    }\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     */\n    get size() {\n        return this._analysers[0].frequencyBinCount;\n    }\n    set size(size) {\n        this._analysers.forEach((analyser, index) => {\n            analyser.fftSize = size * 2;\n            this._buffers[index] = new Float32Array(size);\n        });\n    }\n    /**\n     * The number of channels the analyser does the analysis on. Channel\n     * separation is done using [[Split]]\n     */\n    get channels() {\n        return this._analysers.length;\n    }\n    /**\n     * The analysis function returned by analyser.getValue(), either \"fft\" or \"waveform\".\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        assert(type === \"waveform\" || type === \"fft\", `Analyser: invalid type: ${type}`);\n        this._type = type;\n    }\n    /**\n     * 0 represents no time averaging with the last analysis frame.\n     */\n    get smoothing() {\n        return this._analysers[0].smoothingTimeConstant;\n    }\n    set smoothing(val) {\n        this._analysers.forEach(a => a.smoothingTimeConstant = val);\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._analysers.forEach(a => a.disconnect());\n        this._split.dispose();\n        this._gain.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Analyser.js.map","import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * DCMeter gets the raw value of the input signal at the current time.\n *\n * @example\n * const meter = new Tone.DCMeter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\nexport class DCMeter extends MeterBase {\n    constructor() {\n        super(optionsFromArguments(DCMeter.getDefaults(), arguments));\n        this.name = \"DCMeter\";\n        this._analyser.type = \"waveform\";\n        this._analyser.size = 256;\n    }\n    /**\n     * Get the signal value of the incoming signal\n     */\n    getValue() {\n        const value = this._analyser.getValue();\n        return value[0];\n    }\n}\n//# sourceMappingURL=DCMeter.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { dbToGain } from \"../../core/type/Conversions\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * Get the current frequency data of the connected audio source using a fast Fourier transform.\n * @category Component\n */\nexport class FFT extends MeterBase {\n    constructor() {\n        super(optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]));\n        this.name = \"FFT\";\n        const options = optionsFromArguments(FFT.getDefaults(), arguments, [\"size\"]);\n        this.normalRange = options.normalRange;\n        this._analyser.type = \"fft\";\n        this.size = options.size;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            normalRange: false,\n            size: 1024,\n            smoothing: 0.8,\n        });\n    }\n    /**\n     * Gets the current frequency data from the connected audio source.\n     * Returns the frequency data of length [[size]] as a Float32Array of decibel values.\n     */\n    getValue() {\n        const values = this._analyser.getValue();\n        return values.map(v => this.normalRange ? dbToGain(v) : v);\n    }\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     * Determines the size of the array returned by [[getValue]] (i.e. the number of\n     * frequency bins). Large FFT sizes may be costly to compute.\n     */\n    get size() {\n        return this._analyser.size;\n    }\n    set size(size) {\n        this._analyser.size = size;\n    }\n    /**\n     * 0 represents no time averaging with the last analysis frame.\n     */\n    get smoothing() {\n        return this._analyser.smoothing;\n    }\n    set smoothing(val) {\n        this._analyser.smoothing = val;\n    }\n}\n//# sourceMappingURL=FFT.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OnePoleFilter } from \"../filter/OnePoleFilter\";\nimport { Abs } from \"../../signal/Abs\";\n/**\n * Follower is a simple envelope follower.\n * It's implemented by applying a lowpass filter to the absolute value of the incoming signal.\n * ```\n *          +-----+    +---------------+\n * Input +--> Abs +----> OnePoleFilter +--> Output\n *          +-----+    +---------------+\n * ```\n * @category Component\n */\nexport class Follower extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]));\n        this.name = \"Follower\";\n        const options = optionsFromArguments(Follower.getDefaults(), arguments, [\"smoothing\"]);\n        this._abs = this.input = new Abs({ context: this.context });\n        this._lowpass = this.output = new OnePoleFilter({\n            context: this.context,\n            frequency: 1 / this.toSeconds(options.smoothing),\n            type: \"lowpass\"\n        });\n        this._abs.connect(this._lowpass);\n        this._smoothing = options.smoothing;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            smoothing: 0.05\n        });\n    }\n    /**\n     * The amount of time it takes a value change to arrive at the updated value.\n     */\n    get smoothing() {\n        return this._smoothing;\n    }\n    set smoothing(smoothing) {\n        this._smoothing = smoothing;\n        this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);\n    }\n    dispose() {\n        super.dispose();\n        this._abs.dispose();\n        this._lowpass.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Follower.js.map","import { gainToDb } from \"../../core/type/Conversions\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\nimport { warn } from \"../../core/util/Debug\";\nimport { Analyser } from \"./Analyser\";\n/**\n * Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)\n * of an input signal. It can also get the raw value of the input signal.\n *\n * @example\n * const meter = new Tone.Meter();\n * const mic = new Tone.UserMedia();\n * mic.open();\n * // connect mic to the meter\n * mic.connect(meter);\n * // the current level of the mic\n * const level = meter.getValue();\n * @category Component\n */\nexport class Meter extends MeterBase {\n    constructor() {\n        super(optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]));\n        this.name = \"Meter\";\n        /**\n         * The previous frame's value\n         */\n        this._rms = 0;\n        const options = optionsFromArguments(Meter.getDefaults(), arguments, [\"smoothing\"]);\n        this.input = this.output = this._analyser = new Analyser({\n            context: this.context,\n            size: 256,\n            type: \"waveform\",\n            channels: options.channels,\n        });\n        this.smoothing = options.smoothing,\n            this.normalRange = options.normalRange;\n    }\n    static getDefaults() {\n        return Object.assign(MeterBase.getDefaults(), {\n            smoothing: 0.8,\n            normalRange: false,\n            channels: 1,\n        });\n    }\n    /**\n     * Use [[getValue]] instead. For the previous getValue behavior, use DCMeter.\n     * @deprecated\n     */\n    getLevel() {\n        warn(\"'getLevel' has been changed to 'getValue'\");\n        return this.getValue();\n    }\n    /**\n     * Get the current value of the incoming signal.\n     * Output is in decibels when [[normalRange]] is `false`.\n     * If [[channels]] = 1, then the output is a single number\n     * representing the value of the input signal. When [[channels]] > 1,\n     * then each channel is returned as a value in a number array.\n     */\n    getValue() {\n        const aValues = this._analyser.getValue();\n        const channelValues = this.channels === 1 ? [aValues] : aValues;\n        const vals = channelValues.map(values => {\n            const totalSquared = values.reduce((total, current) => total + current * current, 0);\n            const rms = Math.sqrt(totalSquared / values.length);\n            // the rms can only fall at the rate of the smoothing\n            // but can jump up instantly\n            this._rms = Math.max(rms, this._rms * this.smoothing);\n            return this.normalRange ? this._rms : gainToDb(this._rms);\n        });\n        if (this.channels === 1) {\n            return vals[0];\n        }\n        else {\n            return vals;\n        }\n    }\n    /**\n     * The number of channels of analysis.\n     */\n    get channels() {\n        return this._analyser.channels;\n    }\n    dispose() {\n        super.dispose();\n        this._analyser.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Meter.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Analyser } from \"./Analyser\";\n/**\n * The base class for Metering classes.\n */\nexport class MeterBase extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(MeterBase.getDefaults(), arguments));\n        this.name = \"MeterBase\";\n        this.input = this.output = this._analyser = new Analyser({\n            context: this.context,\n            size: 256,\n            type: \"waveform\",\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._analyser.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MeterBase.js.map","import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MeterBase } from \"./MeterBase\";\n/**\n * Get the current waveform data of the connected audio source.\n * @category Component\n */\nexport class Waveform extends MeterBase {\n    constructor() {\n        super(optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]));\n        this.name = \"Waveform\";\n        const options = optionsFromArguments(Waveform.getDefaults(), arguments, [\"size\"]);\n        this._analyser.type = \"waveform\";\n        this.size = options.size;\n    }\n    static getDefaults() {\n        return Object.assign(MeterBase.getDefaults(), {\n            size: 1024,\n        });\n    }\n    /**\n     * Return the waveform for the current time as a Float32Array where each value in the array\n     * represents a sample in the waveform.\n     */\n    getValue() {\n        return this._analyser.getValue();\n    }\n    /**\n     * The size of analysis. This must be a power of two in the range 16 to 16384.\n     * Determines the size of the array returned by [[getValue]].\n     */\n    get size() {\n        return this._analyser.size;\n    }\n    set size(size) {\n        this._analyser.size = size;\n    }\n}\n//# sourceMappingURL=Waveform.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Solo } from \"./Solo\";\nimport { PanVol } from \"./PanVol\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * Channel provides a channel strip interface with volume, pan, solo and mute controls.\n * See [[PanVol]] and [[Solo]]\n * @example\n * // pan the incoming signal left and drop the volume 12db\n * const channel = new Tone.Channel(-0.25, -12);\n * @category Component\n */\nexport class Channel extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]));\n        this.name = \"Channel\";\n        const options = optionsFromArguments(Channel.getDefaults(), arguments, [\"volume\", \"pan\"]);\n        this._solo = this.input = new Solo({\n            solo: options.solo,\n            context: this.context,\n        });\n        this._panVol = this.output = new PanVol({\n            context: this.context,\n            pan: options.pan,\n            volume: options.volume,\n            mute: options.mute,\n        });\n        this.pan = this._panVol.pan;\n        this.volume = this._panVol.volume;\n        this._solo.connect(this._panVol);\n        readOnly(this, [\"pan\", \"volume\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            volume: 0,\n            mute: false,\n            solo: false\n        });\n    }\n    /**\n     * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances\n     */\n    get solo() {\n        return this._solo.solo;\n    }\n    set solo(solo) {\n        this._solo.solo = solo;\n    }\n    /**\n     * If the current instance is muted, i.e. another instance is soloed,\n     * or the channel is muted\n     */\n    get muted() {\n        return this._solo.muted || this.mute;\n    }\n    /**\n     * Mute/unmute the volume\n     */\n    get mute() {\n        return this._panVol.mute;\n    }\n    set mute(mute) {\n        this._panVol.mute = mute;\n    }\n    /**\n     * Get the gain node belonging to the bus name. Create it if\n     * it doesn't exist\n     * @param name The bus name\n     */\n    _getBus(name) {\n        if (!Channel.buses.has(name)) {\n            Channel.buses.set(name, new Gain({ context: this.context }));\n        }\n        return Channel.buses.get(name);\n    }\n    /**\n     * Send audio to another channel using a string. `send` is a lot like\n     * [[connect]], except it uses a string instead of an object. This can\n     * be useful in large applications to decouple sections since [[send]]\n     * and [[receive]] can be invoked separately in order to connect an object\n     * @param name The channel name to send the audio\n     * @param volume The amount of the signal to send.\n     * \tDefaults to 0db, i.e. send the entire signal\n     * @returns Returns the gain node of this connection.\n     */\n    send(name, volume = 0) {\n        const bus = this._getBus(name);\n        const sendKnob = new Gain({\n            context: this.context,\n            units: \"decibels\",\n            gain: volume,\n        });\n        this.connect(sendKnob);\n        sendKnob.connect(bus);\n        return sendKnob;\n    }\n    /**\n     * Receive audio from a channel which was connected with [[send]].\n     * @param name The channel name to receive audio from.\n     */\n    receive(name) {\n        const bus = this._getBus(name);\n        bus.connect(this);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._panVol.dispose();\n        this.pan.dispose();\n        this.volume.dispose();\n        this._solo.dispose();\n        return this;\n    }\n}\n/**\n * Store the send/receive channels by name.\n */\nChannel.buses = new Map();\n//# sourceMappingURL=Channel.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { connect, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { GainToAudio } from \"../../signal/GainToAudio\";\nimport { Signal } from \"../../signal/Signal\";\n/**\n * Tone.Crossfade provides equal power fading between two inputs.\n * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).\n * ```\n *                                             +---------+\n *                                            +> input a +>--+\n * +-----------+   +---------------------+     |         |   |\n * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |\n * +-----------+   |                     |     +---------+   |\n *               +-> pan               R +>-+                |   +--------+\n *               | +---------------------+  |                +---> output +>\n *  +------+     |                          |  +---------+   |   +--------+\n *  | fade +>----+                          | +> input b +>--+\n *  +------+                                |  |         |\n *                                          +--> gain    |\n *                                             +---------+\n * ```\n * @example\n * const crossFade = new Tone.CrossFade().toDestination();\n * // connect two inputs Tone.to a/b\n * const inputA = new Tone.Oscillator(440, \"square\").connect(crossFade.a).start();\n * const inputB = new Tone.Oscillator(440, \"sine\").connect(crossFade.b).start();\n * // use the fade to control the mix between the two\n * crossFade.fade.value = 0.5;\n * @category Component\n */\nexport class CrossFade extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"])));\n        this.name = \"CrossFade\";\n        /**\n         * The crossfading is done by a StereoPannerNode\n         */\n        this._panner = this.context.createStereoPanner();\n        /**\n         * Split the output of the panner node into two values used to control the gains.\n         */\n        this._split = this.context.createChannelSplitter(2);\n        /**\n         * Convert the fade value into an audio range value so it can be connected\n         * to the panner.pan AudioParam\n         */\n        this._g2a = new GainToAudio({ context: this.context });\n        /**\n         * The input which is at full level when fade = 0\n         */\n        this.a = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * The input which is at full level when fade = 1\n         */\n        this.b = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * The output is a mix between `a` and `b` at the ratio of `fade`\n         */\n        this.output = new Gain({ context: this.context });\n        this._internalChannels = [this.a, this.b];\n        const options = optionsFromArguments(CrossFade.getDefaults(), arguments, [\"fade\"]);\n        this.fade = new Signal({\n            context: this.context,\n            units: \"normalRange\",\n            value: options.fade,\n        });\n        readOnly(this, \"fade\");\n        this.context.getConstant(1).connect(this._panner);\n        this._panner.connect(this._split);\n        // this is necessary for standardized-audio-context\n        // doesn't make any difference for the native AudioContext\n        // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n        this._panner.channelCount = 1;\n        this._panner.channelCountMode = \"explicit\";\n        connect(this._split, this.a.gain, 0);\n        connect(this._split, this.b.gain, 1);\n        this.fade.chain(this._g2a, this._panner.pan);\n        this.a.connect(this.output);\n        this.b.connect(this.output);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            fade: 0.5,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.a.dispose();\n        this.b.dispose();\n        this.output.dispose();\n        this.fade.dispose();\n        this._g2a.dispose();\n        this._panner.disconnect();\n        this._split.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=CrossFade.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Merge brings multiple mono input channels into a single multichannel output channel.\n *\n * @example\n * const merge = new Tone.Merge().toDestination();\n * // routing a sine tone in the left channel\n * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();\n * // and noise in the right channel\n * const noise = new Tone.Noise().connect(merge, 0, 1).start();;\n * @category Component\n */\nexport class Merge extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]));\n        this.name = \"Merge\";\n        const options = optionsFromArguments(Merge.getDefaults(), arguments, [\"channels\"]);\n        this._merger = this.output = this.input = this.context.createChannelMerger(options.channels);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            channels: 2,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._merger.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Merge.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Merge } from \"./Merge\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideMerge]]\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ\n * ```\n */\nexport class MidSideMerge extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(MidSideMerge.getDefaults(), arguments));\n        this.name = \"MidSideMerge\";\n        this.mid = new Gain({ context: this.context });\n        this.side = new Gain({ context: this.context });\n        this._left = new Add({ context: this.context });\n        this._leftMult = new Multiply({\n            context: this.context,\n            value: Math.SQRT1_2\n        });\n        this._right = new Subtract({ context: this.context });\n        this._rightMult = new Multiply({\n            context: this.context,\n            value: Math.SQRT1_2\n        });\n        this._merge = this.output = new Merge({ context: this.context });\n        this.mid.fan(this._left);\n        this.side.connect(this._left.addend);\n        this.mid.connect(this._right);\n        this.side.connect(this._right.subtrahend);\n        this._left.connect(this._leftMult);\n        this._right.connect(this._rightMult);\n        this._leftMult.connect(this._merge, 0, 0);\n        this._rightMult.connect(this._merge, 0, 1);\n    }\n    dispose() {\n        super.dispose();\n        this.mid.dispose();\n        this.side.dispose();\n        this._leftMult.dispose();\n        this._rightMult.dispose();\n        this._left.dispose();\n        this._right.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MidSideMerge.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Split } from \"./Split\";\nimport { Add } from \"../../signal/Add\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Subtract } from \"../../signal/Subtract\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels).\n * ```\n * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right\n * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right\n * ```\n */\nexport class MidSideSplit extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(MidSideSplit.getDefaults(), arguments));\n        this.name = \"MidSideSplit\";\n        this._split = this.input = new Split({\n            channels: 2,\n            context: this.context\n        });\n        this._midAdd = new Add({ context: this.context });\n        this.mid = new Multiply({\n            context: this.context,\n            value: Math.SQRT1_2,\n        });\n        this._sideSubtract = new Subtract({ context: this.context });\n        this.side = new Multiply({\n            context: this.context,\n            value: Math.SQRT1_2,\n        });\n        this._split.connect(this._midAdd, 0);\n        this._split.connect(this._midAdd.addend, 1);\n        this._split.connect(this._sideSubtract, 0);\n        this._split.connect(this._sideSubtract.subtrahend, 1);\n        this._midAdd.connect(this.mid);\n        this._sideSubtract.connect(this.side);\n    }\n    dispose() {\n        super.dispose();\n        this.mid.dispose();\n        this.side.dispose();\n        this._midAdd.dispose();\n        this._sideSubtract.dispose();\n        this._split.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MidSideSplit.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Filter } from \"../filter/Filter\";\n/**\n * Split the incoming signal into three bands (low, mid, high)\n * with two crossover frequency controls.\n * ```\n *            +----------------------+\n *          +-> input < lowFrequency +------------------> low\n *          | +----------------------+\n *          |\n *          | +--------------------------------------+\n * input ---+-> lowFrequency < input < highFrequency +--> mid\n *          | +--------------------------------------+\n *          |\n *          | +-----------------------+\n *          +-> highFrequency < input +-----------------> high\n *            +-----------------------+\n * ```\n * @category Component\n */\nexport class MultibandSplit extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]));\n        this.name = \"MultibandSplit\";\n        /**\n         * the input\n         */\n        this.input = new Gain({ context: this.context });\n        /**\n         * no output node, use either low, mid or high outputs\n         */\n        this.output = undefined;\n        /**\n         * The low band.\n         */\n        this.low = new Filter({\n            context: this.context,\n            frequency: 0,\n            type: \"lowpass\",\n        });\n        /**\n         * the lower filter of the mid band\n         */\n        this._lowMidFilter = new Filter({\n            context: this.context,\n            frequency: 0,\n            type: \"highpass\",\n        });\n        /**\n         * The mid band output.\n         */\n        this.mid = new Filter({\n            context: this.context,\n            frequency: 0,\n            type: \"lowpass\",\n        });\n        /**\n         * The high band output.\n         */\n        this.high = new Filter({\n            context: this.context,\n            frequency: 0,\n            type: \"highpass\",\n        });\n        this._internalChannels = [this.low, this.mid, this.high];\n        const options = optionsFromArguments(MultibandSplit.getDefaults(), arguments, [\"lowFrequency\", \"highFrequency\"]);\n        this.lowFrequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.lowFrequency,\n        });\n        this.highFrequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.highFrequency,\n        });\n        this.Q = new Signal({\n            context: this.context,\n            units: \"positive\",\n            value: options.Q,\n        });\n        this.input.fan(this.low, this.high);\n        this.input.chain(this._lowMidFilter, this.mid);\n        // the frequency control signal\n        this.lowFrequency.fan(this.low.frequency, this._lowMidFilter.frequency);\n        this.highFrequency.fan(this.mid.frequency, this.high.frequency);\n        // the Q value\n        this.Q.connect(this.low.Q);\n        this.Q.connect(this._lowMidFilter.Q);\n        this.Q.connect(this.mid.Q);\n        this.Q.connect(this.high.Q);\n        readOnly(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            Q: 1,\n            highFrequency: 2500,\n            lowFrequency: 400,\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        writable(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n        this.low.dispose();\n        this._lowMidFilter.dispose();\n        this.mid.dispose();\n        this.high.dispose();\n        this.lowFrequency.dispose();\n        this.highFrequency.dispose();\n        this.Q.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MultibandSplit.js.map","import { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Panner } from \"./Panner\";\nimport { Volume } from \"./Volume\";\n/**\n * PanVol is a Tone.Panner and Tone.Volume in one.\n * @example\n * // pan the incoming signal left and drop the volume\n * const panVol = new Tone.PanVol(-0.25, -12).toDestination();\n * const osc = new Tone.Oscillator().connect(panVol).start();\n * @category Component\n */\nexport class PanVol extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]));\n        this.name = \"PanVol\";\n        const options = optionsFromArguments(PanVol.getDefaults(), arguments, [\"pan\", \"volume\"]);\n        this._panner = this.input = new Panner({\n            context: this.context,\n            pan: options.pan,\n            channelCount: options.channelCount,\n        });\n        this.pan = this._panner.pan;\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        // connections\n        this._panner.connect(this._volume);\n        this.mute = options.mute;\n        readOnly(this, [\"pan\", \"volume\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            pan: 0,\n            volume: 0,\n            channelCount: 1,\n        });\n    }\n    /**\n     * Mute/unmute the volume\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    dispose() {\n        super.dispose();\n        this._panner.dispose();\n        this.pan.dispose();\n        this._volume.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PanVol.js.map","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.\n * @offline 0.5 2\n * @example\n * // move the input signal from right to left\n * const panner = new Tone.Panner(1).toDestination();\n * panner.pan.rampTo(-1, 0.5);\n * const osc = new Tone.Oscillator(100).connect(panner).start();\n * @category Component\n */\nexport class Panner extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"])));\n        this.name = \"Panner\";\n        /**\n         * the panner node\n         */\n        this._panner = this.context.createStereoPanner();\n        this.input = this._panner;\n        this.output = this._panner;\n        const options = optionsFromArguments(Panner.getDefaults(), arguments, [\"pan\"]);\n        this.pan = new Param({\n            context: this.context,\n            param: this._panner.pan,\n            value: options.pan,\n            minValue: -1,\n            maxValue: 1,\n        });\n        // this is necessary for standardized-audio-context\n        // doesn't make any difference for the native AudioContext\n        // https://github.com/chrisguttandin/standardized-audio-context/issues/647\n        this._panner.channelCount = options.channelCount;\n        this._panner.channelCountMode = \"explicit\";\n        // initial value\n        readOnly(this, \"pan\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            pan: 0,\n            channelCount: 1,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._panner.disconnect();\n        this.pan.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Panner.js.map","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport \"../../core/context/Listener\";\n/**\n * A spatialized panner node which supports equalpower or HRTF panning.\n * @category Component\n */\nexport class Panner3D extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"]));\n        this.name = \"Panner3D\";\n        const options = optionsFromArguments(Panner3D.getDefaults(), arguments, [\"positionX\", \"positionY\", \"positionZ\"]);\n        this._panner = this.input = this.output = this.context.createPanner();\n        // set some values\n        this.panningModel = options.panningModel;\n        this.maxDistance = options.maxDistance;\n        this.distanceModel = options.distanceModel;\n        this.coneOuterGain = options.coneOuterGain;\n        this.coneOuterAngle = options.coneOuterAngle;\n        this.coneInnerAngle = options.coneInnerAngle;\n        this.refDistance = options.refDistance;\n        this.rolloffFactor = options.rolloffFactor;\n        this.positionX = new Param({\n            context: this.context,\n            param: this._panner.positionX,\n            value: options.positionX,\n        });\n        this.positionY = new Param({\n            context: this.context,\n            param: this._panner.positionY,\n            value: options.positionY,\n        });\n        this.positionZ = new Param({\n            context: this.context,\n            param: this._panner.positionZ,\n            value: options.positionZ,\n        });\n        this.orientationX = new Param({\n            context: this.context,\n            param: this._panner.orientationX,\n            value: options.orientationX,\n        });\n        this.orientationY = new Param({\n            context: this.context,\n            param: this._panner.orientationY,\n            value: options.orientationY,\n        });\n        this.orientationZ = new Param({\n            context: this.context,\n            param: this._panner.orientationZ,\n            value: options.orientationZ,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            coneInnerAngle: 360,\n            coneOuterAngle: 360,\n            coneOuterGain: 0,\n            distanceModel: \"inverse\",\n            maxDistance: 10000,\n            orientationX: 0,\n            orientationY: 0,\n            orientationZ: 0,\n            panningModel: \"equalpower\",\n            positionX: 0,\n            positionY: 0,\n            positionZ: 0,\n            refDistance: 1,\n            rolloffFactor: 1,\n        });\n    }\n    /**\n     * Sets the position of the source in 3d space.\n     */\n    setPosition(x, y, z) {\n        this.positionX.value = x;\n        this.positionY.value = y;\n        this.positionZ.value = z;\n        return this;\n    }\n    /**\n     * Sets the orientation of the source in 3d space.\n     */\n    setOrientation(x, y, z) {\n        this.orientationX.value = x;\n        this.orientationY.value = y;\n        this.orientationZ.value = z;\n        return this;\n    }\n    /**\n     * The panning model. Either \"equalpower\" or \"HRTF\".\n     */\n    get panningModel() {\n        return this._panner.panningModel;\n    }\n    set panningModel(val) {\n        this._panner.panningModel = val;\n    }\n    /**\n     * A reference distance for reducing volume as source move further from the listener\n     */\n    get refDistance() {\n        return this._panner.refDistance;\n    }\n    set refDistance(val) {\n        this._panner.refDistance = val;\n    }\n    /**\n     * Describes how quickly the volume is reduced as source moves away from listener.\n     */\n    get rolloffFactor() {\n        return this._panner.rolloffFactor;\n    }\n    set rolloffFactor(val) {\n        this._panner.rolloffFactor = val;\n    }\n    /**\n     * The distance model used by,  \"linear\", \"inverse\", or \"exponential\".\n     */\n    get distanceModel() {\n        return this._panner.distanceModel;\n    }\n    set distanceModel(val) {\n        this._panner.distanceModel = val;\n    }\n    /**\n     * The angle, in degrees, inside of which there will be no volume reduction\n     */\n    get coneInnerAngle() {\n        return this._panner.coneInnerAngle;\n    }\n    set coneInnerAngle(val) {\n        this._panner.coneInnerAngle = val;\n    }\n    /**\n     * The angle, in degrees, outside of which the volume will be reduced\n     * to a constant value of coneOuterGain\n     */\n    get coneOuterAngle() {\n        return this._panner.coneOuterAngle;\n    }\n    set coneOuterAngle(val) {\n        this._panner.coneOuterAngle = val;\n    }\n    /**\n     * The gain outside of the coneOuterAngle\n     */\n    get coneOuterGain() {\n        return this._panner.coneOuterGain;\n    }\n    set coneOuterGain(val) {\n        this._panner.coneOuterGain = val;\n    }\n    /**\n     * The maximum distance between source and listener,\n     * after which the volume will not be reduced any further.\n     */\n    get maxDistance() {\n        return this._panner.maxDistance;\n    }\n    set maxDistance(val) {\n        this._panner.maxDistance = val;\n    }\n    dispose() {\n        super.dispose();\n        this._panner.disconnect();\n        this.orientationX.dispose();\n        this.orientationY.dispose();\n        this.orientationZ.dispose();\n        this.positionX.dispose();\n        this.positionY.dispose();\n        this.positionZ.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Panner3D.js.map","import { __awaiter } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { assert } from \"../../core/util/Debug\";\nimport { theWindow } from \"../../core/context/AudioContext\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * This is only natively supported in Chrome and Firefox.\n * For a cross-browser shim, install (audio-recorder-polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].\n * @example\n * const recorder = new Tone.Recorder();\n * const synth = new Tone.Synth().connect(recorder);\n * // start recording\n * recorder.start();\n * // generate a few notes\n * synth.triggerAttackRelease(\"C3\", 0.5);\n * synth.triggerAttackRelease(\"C4\", 0.5, \"+1\");\n * synth.triggerAttackRelease(\"C5\", 0.5, \"+2\");\n * // wait for the notes to end and stop the recording\n * setTimeout(async () => {\n * \t// the recorded audio is returned as a blob\n * \tconst recording = await recorder.stop();\n * \t// download the recording by creating an anchor element and blob url\n * \tconst url = URL.createObjectURL(recording);\n * \tconst anchor = document.createElement(\"a\");\n * \tanchor.download = \"recording.webm\";\n * \tanchor.href = url;\n * \tanchor.click();\n * }, 4000);\n */\nexport class Recorder extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Recorder.getDefaults(), arguments, [\"gain\", \"units\"]));\n        this.name = \"Recorder\";\n        const options = optionsFromArguments(Recorder.getDefaults(), arguments, [\"gain\", \"units\"]);\n        this.input = new Gain({\n            context: this.context\n        });\n        assert(Recorder.supported, \"Media Recorder API is not available\");\n        this._stream = this.context.createMediaStreamDestination();\n        this.input.connect(this._stream);\n        this._recorder = new MediaRecorder(this._stream.stream, {\n            mimeType: options.mimeType\n        });\n    }\n    static getDefaults() {\n        return ToneAudioNode.getDefaults();\n    }\n    /**\n     * The mime type is the format that the audio is encoded in. For Chrome\n     * that is typically webm encoded as \"vorbis\".\n     */\n    get mimeType() {\n        return this._recorder.mimeType;\n    }\n    /**\n     * Test if your platform supports the Media Recorder API. If it's not available,\n     * try installing this (polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].\n     */\n    static get supported() {\n        return theWindow !== null && Reflect.has(theWindow, \"MediaRecorder\");\n    }\n    /**\n     * Get the playback state of the Recorder, either \"started\", \"stopped\" or \"paused\"\n     */\n    get state() {\n        if (this._recorder.state === \"inactive\") {\n            return \"stopped\";\n        }\n        else if (this._recorder.state === \"paused\") {\n            return \"paused\";\n        }\n        else {\n            return \"started\";\n        }\n    }\n    start() {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(this.state !== \"started\", \"Recorder is already started\");\n            const startPromise = new Promise(done => {\n                const handleStart = () => {\n                    this._recorder.removeEventListener(\"start\", handleStart, false);\n                    done();\n                };\n                this._recorder.addEventListener(\"start\", handleStart, false);\n            });\n            this._recorder.start();\n            return yield startPromise;\n        });\n    }\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(this.state !== \"stopped\", \"Recorder is not started\");\n            const dataPromise = new Promise(done => {\n                const handleData = (e) => {\n                    this._recorder.removeEventListener(\"dataavailable\", handleData, false);\n                    done(e.data);\n                };\n                this._recorder.addEventListener(\"dataavailable\", handleData, false);\n            });\n            this._recorder.stop();\n            return yield dataPromise;\n        });\n    }\n    pause() {\n        assert(this.state === \"started\", \"Recorder must be started\");\n        this._recorder.pause();\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this._stream.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Recorder.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,\n * it will mute all other instances of Solo.\n * @example\n * const soloA = new Tone.Solo().toDestination();\n * const oscA = new Tone.Oscillator(\"C4\", \"sawtooth\").connect(soloA);\n * const soloB = new Tone.Solo().toDestination();\n * const oscB = new Tone.Oscillator(\"E4\", \"square\").connect(soloB);\n * soloA.solo = true;\n * // no audio will pass through soloB\n * @category Component\n */\nexport class Solo extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]));\n        this.name = \"Solo\";\n        const options = optionsFromArguments(Solo.getDefaults(), arguments, [\"solo\"]);\n        this.input = this.output = new Gain({\n            context: this.context,\n        });\n        if (!Solo._allSolos.has(this.context)) {\n            Solo._allSolos.set(this.context, new Set());\n        }\n        Solo._allSolos.get(this.context).add(this);\n        // set initially\n        this.solo = options.solo;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            solo: false,\n        });\n    }\n    /**\n     * Isolates this instance and mutes all other instances of Solo.\n     * Only one instance can be soloed at a time. A soloed\n     * instance will report `solo=false` when another instance is soloed.\n     */\n    get solo() {\n        return this._isSoloed();\n    }\n    set solo(solo) {\n        if (solo) {\n            this._addSolo();\n        }\n        else {\n            this._removeSolo();\n        }\n        Solo._allSolos.get(this.context).forEach(instance => instance._updateSolo());\n    }\n    /**\n     * If the current instance is muted, i.e. another instance is soloed\n     */\n    get muted() {\n        return this.input.gain.value === 0;\n    }\n    /**\n     * Add this to the soloed array\n     */\n    _addSolo() {\n        if (!Solo._soloed.has(this.context)) {\n            Solo._soloed.set(this.context, new Set());\n        }\n        Solo._soloed.get(this.context).add(this);\n    }\n    /**\n     * Remove this from the soloed array\n     */\n    _removeSolo() {\n        if (Solo._soloed.has(this.context)) {\n            Solo._soloed.get(this.context).delete(this);\n        }\n    }\n    /**\n     * Is this on the soloed array\n     */\n    _isSoloed() {\n        return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);\n    }\n    /**\n     * Returns true if no one is soloed\n     */\n    _noSolos() {\n        // either does not have any soloed added\n        return !Solo._soloed.has(this.context) ||\n            // or has a solo set but doesn't include any items\n            (Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0);\n    }\n    /**\n     * Solo the current instance and unsolo all other instances.\n     */\n    _updateSolo() {\n        if (this._isSoloed()) {\n            this.input.gain.value = 1;\n        }\n        else if (this._noSolos()) {\n            // no one is soloed\n            this.input.gain.value = 1;\n        }\n        else {\n            this.input.gain.value = 0;\n        }\n    }\n    dispose() {\n        super.dispose();\n        Solo._allSolos.get(this.context).delete(this);\n        this._removeSolo();\n        return this;\n    }\n}\n/**\n * Hold all of the solo'ed tracks belonging to a specific context\n */\nSolo._allSolos = new Map();\n/**\n * Hold the currently solo'ed instance(s)\n */\nSolo._soloed = new Map();\n//# sourceMappingURL=Solo.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\n/**\n * Split splits an incoming signal into the number of given channels.\n *\n * @example\n * const split = new Tone.Split();\n * // stereoSignal.connect(split);\n * @category Component\n */\nexport class Split extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]));\n        this.name = \"Split\";\n        const options = optionsFromArguments(Split.getDefaults(), arguments, [\"channels\"]);\n        this._splitter = this.input = this.output = this.context.createChannelSplitter(options.channels);\n        this._internalChannels = [this._splitter];\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            channels: 2,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._splitter.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Split.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Volume is a simple volume node, useful for creating a volume fader.\n *\n * @example\n * const vol = new Tone.Volume(-12).toDestination();\n * const osc = new Tone.Oscillator().connect(vol).start();\n * @category Component\n */\nexport class Volume extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]));\n        this.name = \"Volume\";\n        const options = optionsFromArguments(Volume.getDefaults(), arguments, [\"volume\"]);\n        this.input = this.output = new Gain({\n            context: this.context,\n            gain: options.volume,\n            units: \"decibels\",\n        });\n        this.volume = this.output.gain;\n        readOnly(this, \"volume\");\n        this._unmutedVolume = options.volume;\n        // set the mute initially\n        this.mute = options.mute;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const vol = new Tone.Volume(-12).toDestination();\n     * const osc = new Tone.Oscillator().connect(vol).start();\n     * // mute the output\n     * vol.mute = true;\n     */\n    get mute() {\n        return this.volume.value === -Infinity;\n    }\n    set mute(mute) {\n        if (!this.mute && mute) {\n            this._unmutedVolume = this.volume.value;\n            // maybe it should ramp here?\n            this.volume.value = -Infinity;\n        }\n        else if (this.mute && !mute) {\n            this.volume.value = this._unmutedVolume;\n        }\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Volume.js.map","import { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Compressor is a thin wrapper around the Web Audio\n * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).\n * Compression reduces the volume of loud sounds or amplifies quiet sounds\n * by narrowing or \"compressing\" an audio signal's dynamic range.\n * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).\n * @example\n * const comp = new Tone.Compressor(-30, 3);\n * @category Component\n */\nexport class Compressor extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]));\n        this.name = \"Compressor\";\n        /**\n         * the compressor node\n         */\n        this._compressor = this.context.createDynamicsCompressor();\n        this.input = this._compressor;\n        this.output = this._compressor;\n        const options = optionsFromArguments(Compressor.getDefaults(), arguments, [\"threshold\", \"ratio\"]);\n        this.threshold = new Param({\n            minValue: this._compressor.threshold.minValue,\n            maxValue: this._compressor.threshold.maxValue,\n            context: this.context,\n            convert: false,\n            param: this._compressor.threshold,\n            units: \"decibels\",\n            value: options.threshold,\n        });\n        this.attack = new Param({\n            minValue: this._compressor.attack.minValue,\n            maxValue: this._compressor.attack.maxValue,\n            context: this.context,\n            param: this._compressor.attack,\n            units: \"time\",\n            value: options.attack,\n        });\n        this.release = new Param({\n            minValue: this._compressor.release.minValue,\n            maxValue: this._compressor.release.maxValue,\n            context: this.context,\n            param: this._compressor.release,\n            units: \"time\",\n            value: options.release,\n        });\n        this.knee = new Param({\n            minValue: this._compressor.knee.minValue,\n            maxValue: this._compressor.knee.maxValue,\n            context: this.context,\n            convert: false,\n            param: this._compressor.knee,\n            units: \"decibels\",\n            value: options.knee,\n        });\n        this.ratio = new Param({\n            minValue: this._compressor.ratio.minValue,\n            maxValue: this._compressor.ratio.maxValue,\n            context: this.context,\n            convert: false,\n            param: this._compressor.ratio,\n            units: \"positive\",\n            value: options.ratio,\n        });\n        // set the defaults\n        readOnly(this, [\"knee\", \"release\", \"attack\", \"ratio\", \"threshold\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            attack: 0.003,\n            knee: 30,\n            ratio: 12,\n            release: 0.25,\n            threshold: -24,\n        });\n    }\n    /**\n     * A read-only decibel value for metering purposes, representing the current amount of gain\n     * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).\n     */\n    get reduction() {\n        return this._compressor.reduction;\n    }\n    dispose() {\n        super.dispose();\n        this._compressor.disconnect();\n        this.attack.dispose();\n        this.release.dispose();\n        this.threshold.dispose();\n        this.ratio.dispose();\n        this.knee.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Compressor.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { GreaterThan } from \"../../signal/GreaterThan\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { Follower } from \"../analysis/Follower\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { dbToGain, gainToDb } from \"../../core/type/Conversions\";\n/**\n * Gate only passes a signal through when the incoming\n * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude\n * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].\n *\n * @example\n * const gate = new Tone.Gate(-30, 0.2).toDestination();\n * const mic = new Tone.UserMedia().connect(gate);\n * // the gate will only pass through the incoming\n * // signal when it's louder than -30db\n */\nexport class Gate extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"])));\n        this.name = \"Gate\";\n        const options = optionsFromArguments(Gate.getDefaults(), arguments, [\"threshold\", \"smoothing\"]);\n        this._follower = new Follower({\n            context: this.context,\n            smoothing: options.smoothing,\n        });\n        this._gt = new GreaterThan({\n            context: this.context,\n            value: dbToGain(options.threshold),\n        });\n        this.input = new Gain({ context: this.context });\n        this._gate = this.output = new Gain({ context: this.context });\n        // connections\n        this.input.connect(this._gate);\n        // the control signal\n        this.input.chain(this._follower, this._gt, this._gate.gain);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            smoothing: 0.1,\n            threshold: -40\n        });\n    }\n    /**\n     * The threshold of the gate in decibels\n     */\n    get threshold() {\n        return gainToDb(this._gt.value);\n    }\n    set threshold(thresh) {\n        this._gt.value = dbToGain(thresh);\n    }\n    /**\n     * The attack/decay speed of the gate. See [[Follower.smoothing]]\n     */\n    get smoothing() {\n        return this._follower.smoothing;\n    }\n    set smoothing(smoothingTime) {\n        this._follower.smoothing = smoothingTime;\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this._follower.dispose();\n        this._gt.dispose();\n        this._gate.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Gate.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Compressor } from \"./Compressor\";\nimport { readOnly } from \"../../core/util/Interface\";\n;\n/**\n * Limiter will limit the loudness of an incoming signal.\n * It is composed of a [[Compressor]] with a fast attack\n * and release and max ratio. Limiters are commonly used to safeguard against\n * signal clipping. Unlike a compressor, limiters do not provide\n * smooth gain reduction and almost completely prevent\n * additional gain above the threshold.\n *\n * @example\n * const limiter = new Tone.Limiter(-20).toDestination();\n * const oscillator = new Tone.Oscillator().connect(limiter);\n * oscillator.start();\n */\nexport class Limiter extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"])));\n        this.name = \"Limiter\";\n        const options = optionsFromArguments(Limiter.getDefaults(), arguments, [\"threshold\"]);\n        this._compressor = this.input = this.output = new Compressor({\n            context: this.context,\n            ratio: 20,\n            attack: 0,\n            release: 0,\n            threshold: options.threshold\n        });\n        this.threshold = this._compressor.threshold;\n        readOnly(this, \"threshold\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            threshold: -12\n        });\n    }\n    /**\n     * A read-only decibel value for metering purposes, representing the current amount of gain\n     * reduction that the compressor is applying to the signal.\n     */\n    get reduction() {\n        return this._compressor.reduction;\n    }\n    dispose() {\n        super.dispose();\n        this._compressor.dispose();\n        this.threshold.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Limiter.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { MidSideSplit } from \"../channel/MidSideSplit\";\nimport { MidSideMerge } from \"../channel/MidSideMerge\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * MidSideCompressor applies two different compressors to the [[mid]]\n * and [[side]] signal components of the input. See [[MidSideSplit]] and [[MidSideMerge]].\n */\nexport class MidSideCompressor extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(MidSideCompressor.getDefaults(), arguments)));\n        this.name = \"MidSideCompressor\";\n        const options = optionsFromArguments(MidSideCompressor.getDefaults(), arguments);\n        this._midSideSplit = this.input = new MidSideSplit({ context: this.context });\n        this._midSideMerge = this.output = new MidSideMerge({ context: this.context });\n        this.mid = new Compressor(Object.assign(options.mid, { context: this.context }));\n        this.side = new Compressor(Object.assign(options.side, { context: this.context }));\n        this._midSideSplit.mid.chain(this.mid, this._midSideMerge.mid);\n        this._midSideSplit.side.chain(this.side, this._midSideMerge.side);\n        readOnly(this, [\"mid\", \"side\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mid: {\n                ratio: 3,\n                threshold: -24,\n                release: 0.03,\n                attack: 0.02,\n                knee: 16\n            },\n            side: {\n                ratio: 6,\n                threshold: -30,\n                release: 0.25,\n                attack: 0.03,\n                knee: 10\n            }\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.mid.dispose();\n        this.side.dispose();\n        this._midSideSplit.dispose();\n        this._midSideMerge.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MidSideCompressor.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { Compressor } from \"./Compressor\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]\n *\n * @example\n * const multiband = new Tone.MultibandCompressor({\n * \tlowFrequency: 200,\n * \thighFrequency: 1300,\n * \tlow: {\n * \t\tthreshold: -12\n * \t}\n * });\n */\nexport class MultibandCompressor extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(MultibandCompressor.getDefaults(), arguments)));\n        this.name = \"MultibandCompressor\";\n        const options = optionsFromArguments(MultibandCompressor.getDefaults(), arguments);\n        this._splitter = this.input = new MultibandSplit({\n            context: this.context,\n            lowFrequency: options.lowFrequency,\n            highFrequency: options.highFrequency\n        });\n        this.lowFrequency = this._splitter.lowFrequency;\n        this.highFrequency = this._splitter.highFrequency;\n        this.output = new Gain({ context: this.context });\n        this.low = new Compressor(Object.assign(options.low, { context: this.context }));\n        this.mid = new Compressor(Object.assign(options.mid, { context: this.context }));\n        this.high = new Compressor(Object.assign(options.high, { context: this.context }));\n        // connect the compressor\n        this._splitter.low.chain(this.low, this.output);\n        this._splitter.mid.chain(this.mid, this.output);\n        this._splitter.high.chain(this.high, this.output);\n        readOnly(this, [\"high\", \"mid\", \"low\", \"highFrequency\", \"lowFrequency\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            lowFrequency: 250,\n            highFrequency: 2000,\n            low: {\n                ratio: 6,\n                threshold: -30,\n                release: 0.25,\n                attack: 0.03,\n                knee: 10\n            },\n            mid: {\n                ratio: 3,\n                threshold: -24,\n                release: 0.03,\n                attack: 0.02,\n                knee: 16\n            },\n            high: {\n                ratio: 3,\n                threshold: -24,\n                release: 0.03,\n                attack: 0.02,\n                knee: 16\n            },\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._splitter.dispose();\n        this.low.dispose();\n        this.mid.dispose();\n        this.high.dispose();\n        this.output.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MultibandCompressor.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\n/**\n * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.\n * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts\n * an audio signal as the input and will apply the envelope to the amplitude\n * of the signal.\n * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).\n *\n * @offline 1.5 1\n * @example\n * const ampEnv = new Tone.AmplitudeEnvelope({\n * \tattack: 0.1,\n * \tdecay: 0.2,\n * \tsustain: 1.0,\n * \trelease: 0.8\n * }).toDestination();\n * // create an oscillator and connect it\n * const osc = new Tone.Oscillator().connect(ampEnv).start();\n * // trigger the envelopes attack and release \"8t\" apart\n * ampEnv.triggerAttackRelease(\"8t\");\n * @category Component\n */\nexport class AmplitudeEnvelope extends Envelope {\n    constructor() {\n        super(optionsFromArguments(AmplitudeEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"AmplitudeEnvelope\";\n        this._gainNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        this.output = this._gainNode;\n        this.input = this._gainNode;\n        this._sig.connect(this._gainNode.gain);\n        this.output = this._gainNode;\n        this.input = this._gainNode;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._gainNode.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AmplitudeEnvelope.js.map","import { __awaiter, __decorate } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { isArray, isObject, isString } from \"../../core/util/TypeCheck\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\nimport { assert } from \"../../core/util/Debug\";\nimport { range, timeRange } from \"../../core/util/Decorator\";\n/**\n * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)\n * envelope generator. Envelope outputs a signal which\n * can be connected to an AudioParam or Tone.Signal.\n * ```\n *           /\\\n *          /  \\\n *         /    \\\n *        /      \\\n *       /        \\___________\n *      /                     \\\n *     /                       \\\n *    /                         \\\n *   /                           \\\n * ```\n * @offline 1.5 1\n * @example\n * const env = new Tone.Envelope({\n * \tattack: 0.1,\n * \tdecay: 0.2,\n * \tsustain: 0.5,\n * \trelease: 0.8,\n * }).toDestination();\n * env.triggerAttackRelease(0.5);\n * @category Component\n */\nexport class Envelope extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"Envelope\";\n        /**\n         * the signal which is output.\n         */\n        this._sig = new Signal({\n            context: this.context,\n            value: 0,\n        });\n        /**\n         * The output signal of the envelope\n         */\n        this.output = this._sig;\n        /**\n         * Envelope has no input\n         */\n        this.input = undefined;\n        const options = optionsFromArguments(Envelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n        this.attack = options.attack;\n        this.decay = options.decay;\n        this.sustain = options.sustain;\n        this.release = options.release;\n        this.attackCurve = options.attackCurve;\n        this.releaseCurve = options.releaseCurve;\n        this.decayCurve = options.decayCurve;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            attack: 0.01,\n            attackCurve: \"linear\",\n            decay: 0.1,\n            decayCurve: \"exponential\",\n            release: 1,\n            releaseCurve: \"exponential\",\n            sustain: 0.5,\n        });\n    }\n    /**\n     * Read the current value of the envelope. Useful for\n     * synchronizing visual output to the envelope.\n     */\n    get value() {\n        return this.getValueAtTime(this.now());\n    }\n    /**\n     * Get the curve\n     * @param  curve\n     * @param  direction  In/Out\n     * @return The curve name\n     */\n    _getCurve(curve, direction) {\n        if (isString(curve)) {\n            return curve;\n        }\n        else {\n            // look up the name in the curves array\n            let curveName;\n            for (curveName in EnvelopeCurves) {\n                if (EnvelopeCurves[curveName][direction] === curve) {\n                    return curveName;\n                }\n            }\n            // return the custom curve\n            return curve;\n        }\n    }\n    /**\n     * Assign a the curve to the given name using the direction\n     * @param  name\n     * @param  direction In/Out\n     * @param  curve\n     */\n    _setCurve(name, direction, curve) {\n        // check if it's a valid type\n        if (isString(curve) && Reflect.has(EnvelopeCurves, curve)) {\n            const curveDef = EnvelopeCurves[curve];\n            if (isObject(curveDef)) {\n                if (name !== \"_decayCurve\") {\n                    this[name] = curveDef[direction];\n                }\n            }\n            else {\n                this[name] = curveDef;\n            }\n        }\n        else if (isArray(curve) && name !== \"_decayCurve\") {\n            this[name] = curve;\n        }\n        else {\n            throw new Error(\"Envelope: invalid curve: \" + curve);\n        }\n    }\n    /**\n     * The shape of the attack.\n     * Can be any of these strings:\n     * * \"linear\"\n     * * \"exponential\"\n     * * \"sine\"\n     * * \"cosine\"\n     * * \"bounce\"\n     * * \"ripple\"\n     * * \"step\"\n     *\n     * Can also be an array which describes the curve. Values\n     * in the array are evenly subdivided and linearly\n     * interpolated over the duration of the attack.\n     * @offline 1 1\n     * @example\n     * const env = new Tone.Envelope(0.4).toDestination();\n     * env.attackCurve = \"linear\";\n     * env.triggerAttack();\n     */\n    get attackCurve() {\n        return this._getCurve(this._attackCurve, \"In\");\n    }\n    set attackCurve(curve) {\n        this._setCurve(\"_attackCurve\", \"In\", curve);\n    }\n    /**\n     * The shape of the release. See the attack curve types.\n     * @offline 1 1\n     * @example\n     * const env = new Tone.Envelope({\n     * \trelease: 0.8\n     * }).toDestination();\n     * env.triggerAttack();\n     * // release curve could also be defined by an array\n     * env.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];\n     * env.triggerRelease(0.2);\n     */\n    get releaseCurve() {\n        return this._getCurve(this._releaseCurve, \"Out\");\n    }\n    set releaseCurve(curve) {\n        this._setCurve(\"_releaseCurve\", \"Out\", curve);\n    }\n    /**\n     * The shape of the decay either \"linear\" or \"exponential\"\n     * @offline 1 1\n     * @example\n     * const env = new Tone.Envelope({\n     * \tsustain: 0.1,\n     * \tdecay: 0.5\n     * }).toDestination();\n     * env.decayCurve = \"linear\";\n     * env.triggerAttack();\n     */\n    get decayCurve() {\n        return this._decayCurve;\n    }\n    set decayCurve(curve) {\n        assert([\"linear\", \"exponential\"].some(c => c === curve), `Invalid envelope curve: ${curve}`);\n        this._decayCurve = curve;\n    }\n    /**\n     * Trigger the attack/decay portion of the ADSR envelope.\n     * @param  time When the attack should start.\n     * @param velocity The velocity of the envelope scales the vales.\n     *                             number between 0-1\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator().connect(env).start();\n     * // trigger the attack 0.5 seconds from now with a velocity of 0.2\n     * env.triggerAttack(\"+0.5\", 0.2);\n     */\n    triggerAttack(time, velocity = 1) {\n        this.log(\"triggerAttack\", time, velocity);\n        time = this.toSeconds(time);\n        const originalAttack = this.toSeconds(this.attack);\n        let attack = originalAttack;\n        const decay = this.toSeconds(this.decay);\n        // check if it's not a complete attack\n        const currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            // subtract the current value from the attack time\n            const attackRate = 1 / attack;\n            const remainingDistance = 1 - currentValue;\n            // the attack is now the remaining time\n            attack = remainingDistance / attackRate;\n        }\n        // attack\n        if (attack < this.sampleTime) {\n            this._sig.cancelScheduledValues(time);\n            // case where the attack time is 0 should set instantly\n            this._sig.setValueAtTime(velocity, time);\n        }\n        else if (this._attackCurve === \"linear\") {\n            this._sig.linearRampTo(velocity, attack, time);\n        }\n        else if (this._attackCurve === \"exponential\") {\n            this._sig.targetRampTo(velocity, attack, time);\n        }\n        else {\n            this._sig.cancelAndHoldAtTime(time);\n            let curve = this._attackCurve;\n            // find the starting position in the curve\n            for (let i = 1; i < curve.length; i++) {\n                // the starting index is between the two values\n                if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {\n                    curve = this._attackCurve.slice(i);\n                    // the first index is the current value\n                    curve[0] = currentValue;\n                    break;\n                }\n            }\n            this._sig.setValueCurveAtTime(curve, time, attack, velocity);\n        }\n        // decay\n        if (decay && this.sustain < 1) {\n            const decayValue = velocity * this.sustain;\n            const decayStart = time + attack;\n            this.log(\"decay\", decayStart);\n            if (this._decayCurve === \"linear\") {\n                this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);\n            }\n            else {\n                this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);\n            }\n        }\n        return this;\n    }\n    /**\n     * Triggers the release of the envelope.\n     * @param  time When the release portion of the envelope should start.\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator({\n     * \ttype: \"sawtooth\"\n     * }).connect(env).start();\n     * env.triggerAttack();\n     * // trigger the release half a second after the attack\n     * env.triggerRelease(\"+0.5\");\n     */\n    triggerRelease(time) {\n        this.log(\"triggerRelease\", time);\n        time = this.toSeconds(time);\n        const currentValue = this.getValueAtTime(time);\n        if (currentValue > 0) {\n            const release = this.toSeconds(this.release);\n            if (release < this.sampleTime) {\n                this._sig.setValueAtTime(0, time);\n            }\n            else if (this._releaseCurve === \"linear\") {\n                this._sig.linearRampTo(0, release, time);\n            }\n            else if (this._releaseCurve === \"exponential\") {\n                this._sig.targetRampTo(0, release, time);\n            }\n            else {\n                assert(isArray(this._releaseCurve), \"releaseCurve must be either 'linear', 'exponential' or an array\");\n                this._sig.cancelAndHoldAtTime(time);\n                this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);\n            }\n        }\n        return this;\n    }\n    /**\n     * Get the scheduled value at the given time. This will\n     * return the unconverted (raw) value.\n     * @example\n     * const env = new Tone.Envelope(0.5, 1, 0.4, 2);\n     * env.triggerAttackRelease(2);\n     * setInterval(() => console.log(env.getValueAtTime), 100);\n     */\n    getValueAtTime(time) {\n        return this._sig.getValueAtTime(time);\n    }\n    /**\n     * triggerAttackRelease is shorthand for triggerAttack, then waiting\n     * some duration, then triggerRelease.\n     * @param duration The duration of the sustain.\n     * @param time When the attack should be triggered.\n     * @param velocity The velocity of the envelope.\n     * @example\n     * const env = new Tone.AmplitudeEnvelope().toDestination();\n     * const osc = new Tone.Oscillator().connect(env).start();\n     * // trigger the release 0.5 seconds after the attack\n     * env.triggerAttackRelease(0.5);\n     */\n    triggerAttackRelease(duration, time, velocity = 1) {\n        time = this.toSeconds(time);\n        this.triggerAttack(time, velocity);\n        this.triggerRelease(time + this.toSeconds(duration));\n        return this;\n    }\n    /**\n     * Cancels all scheduled envelope changes after the given time.\n     */\n    cancel(after) {\n        this._sig.cancelScheduledValues(this.toSeconds(after));\n        return this;\n    }\n    /**\n     * Connect the envelope to a destination node.\n     */\n    connect(destination, outputNumber = 0, inputNumber = 0) {\n        connectSignal(this, destination, outputNumber, inputNumber);\n        return this;\n    }\n    /**\n     * Render the envelope curve to an array of the given length.\n     * Good for visualizing the envelope curve. Rescales the duration of the\n     * envelope to fit the length.\n     */\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const duration = length / this.context.sampleRate;\n            const context = new OfflineContext(1, duration, this.context.sampleRate);\n            // normalize the ADSR for the given duration with 20% sustain time\n            const attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);\n            const envelopeDuration = attackPortion + this.toSeconds(this.release);\n            const sustainTime = envelopeDuration * 0.1;\n            const totalDuration = envelopeDuration + sustainTime;\n            // @ts-ignore\n            const clone = new this.constructor(Object.assign(this.get(), {\n                attack: duration * this.toSeconds(this.attack) / totalDuration,\n                decay: duration * this.toSeconds(this.decay) / totalDuration,\n                release: duration * this.toSeconds(this.release) / totalDuration,\n                context\n            }));\n            clone._sig.toDestination();\n            clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);\n            const buffer = yield context.render();\n            return buffer.getChannelData(0);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._sig.dispose();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"attack\", void 0);\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"decay\", void 0);\n__decorate([\n    range(0, 1)\n], Envelope.prototype, \"sustain\", void 0);\n__decorate([\n    timeRange(0)\n], Envelope.prototype, \"release\", void 0);\n/**\n * Generate some complex envelope curves.\n */\nconst EnvelopeCurves = (() => {\n    const curveLen = 128;\n    let i;\n    let k;\n    // cosine curve\n    const cosineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        cosineCurve[i] = Math.sin((i / (curveLen - 1)) * (Math.PI / 2));\n    }\n    // ripple curve\n    const rippleCurve = [];\n    const rippleCurveFreq = 6.4;\n    for (i = 0; i < curveLen - 1; i++) {\n        k = (i / (curveLen - 1));\n        const sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;\n        rippleCurve[i] = sineWave / 10 + k * 0.83;\n    }\n    rippleCurve[curveLen - 1] = 1;\n    // stairs curve\n    const stairsCurve = [];\n    const steps = 5;\n    for (i = 0; i < curveLen; i++) {\n        stairsCurve[i] = Math.ceil((i / (curveLen - 1)) * steps) / steps;\n    }\n    // in-out easing curve\n    const sineCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));\n    }\n    // a bounce curve\n    const bounceCurve = [];\n    for (i = 0; i < curveLen; i++) {\n        k = i / (curveLen - 1);\n        const freq = Math.pow(k, 3) * 4 + 0.2;\n        const val = Math.cos(freq * Math.PI * 2 * k);\n        bounceCurve[i] = Math.abs(val * (1 - k));\n    }\n    /**\n     * Invert a value curve to make it work for the release\n     */\n    function invertCurve(curve) {\n        const out = new Array(curve.length);\n        for (let j = 0; j < curve.length; j++) {\n            out[j] = 1 - curve[j];\n        }\n        return out;\n    }\n    /**\n     * reverse the curve\n     */\n    function reverseCurve(curve) {\n        return curve.slice(0).reverse();\n    }\n    /**\n     * attack and release curve arrays\n     */\n    return {\n        bounce: {\n            In: invertCurve(bounceCurve),\n            Out: bounceCurve,\n        },\n        cosine: {\n            In: cosineCurve,\n            Out: reverseCurve(cosineCurve),\n        },\n        exponential: \"exponential\",\n        linear: \"linear\",\n        ripple: {\n            In: rippleCurve,\n            Out: invertCurve(rippleCurve),\n        },\n        sine: {\n            In: sineCurve,\n            Out: invertCurve(sineCurve),\n        },\n        step: {\n            In: stairsCurve,\n            Out: invertCurve(stairsCurve),\n        },\n    };\n})();\n//# sourceMappingURL=Envelope.js.map","import { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Envelope } from \"./Envelope\";\nimport { Scale } from \"../../signal/Scale\";\nimport { Pow } from \"../../signal/Pow\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]\n * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve\n * which it ramps.\n * @example\n * const oscillator = new Tone.Oscillator().toDestination().start();\n * const freqEnv = new Tone.FrequencyEnvelope({\n * \tattack: 0.2,\n * \tbaseFrequency: \"C2\",\n * \toctaves: 4\n * });\n * freqEnv.connect(oscillator.frequency);\n * freqEnv.triggerAttack();\n */\nexport class FrequencyEnvelope extends Envelope {\n    constructor() {\n        super(optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]));\n        this.name = \"FrequencyEnvelope\";\n        const options = optionsFromArguments(FrequencyEnvelope.getDefaults(), arguments, [\"attack\", \"decay\", \"sustain\", \"release\"]);\n        this._octaves = options.octaves;\n        this._baseFrequency = this.toFrequency(options.baseFrequency);\n        this._exponent = this.input = new Pow({\n            context: this.context,\n            value: options.exponent\n        });\n        this._scale = this.output = new Scale({\n            context: this.context,\n            min: this._baseFrequency,\n            max: this._baseFrequency * Math.pow(2, this._octaves),\n        });\n        this._sig.chain(this._exponent, this._scale);\n    }\n    static getDefaults() {\n        return Object.assign(Envelope.getDefaults(), {\n            baseFrequency: 200,\n            exponent: 1,\n            octaves: 4,\n        });\n    }\n    /**\n     * The envelope's minimum output value. This is the value which it\n     * starts at.\n     */\n    get baseFrequency() {\n        return this._baseFrequency;\n    }\n    set baseFrequency(min) {\n        const freq = this.toFrequency(min);\n        assertRange(freq, 0);\n        this._baseFrequency = freq;\n        this._scale.min = this._baseFrequency;\n        // update the max value when the min changes\n        this.octaves = this._octaves;\n    }\n    /**\n     * The number of octaves above the baseFrequency that the\n     * envelope will scale to.\n     */\n    get octaves() {\n        return this._octaves;\n    }\n    set octaves(octaves) {\n        assertRange(octaves, 0);\n        this._octaves = octaves;\n        this._scale.max = this._baseFrequency * Math.pow(2, octaves);\n    }\n    /**\n     * The envelope's exponent value.\n     */\n    get exponent() {\n        return this._exponent.value;\n    }\n    set exponent(exponent) {\n        this._exponent.value = exponent;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._exponent.dispose();\n        this._scale.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FrequencyEnvelope.js.map","import { __awaiter } from \"tslib\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { noOp } from \"../../core/util/Interface\";\n/**\n * Convolver is a wrapper around the Native Web Audio\n * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).\n * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on\n * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).\n *\n * @example\n * // initializing the convolver with an impulse response\n * const convolver = new Tone.Convolver(\"./path/to/ir.wav\").toDestination();\n * @category Component\n */\nexport class Convolver extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"Convolver\";\n        /**\n         * The native ConvolverNode\n         */\n        this._convolver = this.context.createConvolver();\n        const options = optionsFromArguments(Convolver.getDefaults(), arguments, [\"url\", \"onload\"]);\n        this._buffer = new ToneAudioBuffer(options.url, buffer => {\n            this.buffer = buffer;\n            options.onload();\n        });\n        this.input = new Gain({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        // set if it's already loaded, set it immediately\n        if (this._buffer.loaded) {\n            this.buffer = this._buffer;\n        }\n        // initially set normalization\n        this.normalize = options.normalize;\n        // connect it up\n        this.input.chain(this._convolver, this.output);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            normalize: true,\n            onload: noOp,\n        });\n    }\n    /**\n     * Load an impulse response url as an audio buffer.\n     * Decodes the audio asynchronously and invokes\n     * the callback once the audio buffer loads.\n     * @param url The url of the buffer to load. filetype support depends on the browser.\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.buffer = yield this._buffer.load(url);\n        });\n    }\n    /**\n     * The convolver's buffer\n     */\n    get buffer() {\n        if (this._buffer.length) {\n            return this._buffer;\n        }\n        else {\n            return null;\n        }\n    }\n    set buffer(buffer) {\n        if (buffer) {\n            this._buffer.set(buffer);\n        }\n        // if it's already got a buffer, create a new one\n        if (this._convolver.buffer) {\n            // disconnect the old one\n            this.input.disconnect();\n            this._convolver.disconnect();\n            // create and connect a new one\n            this._convolver = this.context.createConvolver();\n            this.input.chain(this._convolver, this.output);\n        }\n        const buff = this._buffer.get();\n        this._convolver.buffer = buff ? buff : null;\n    }\n    /**\n     * The normalize property of the ConvolverNode interface is a boolean that\n     * controls whether the impulse response from the buffer will be scaled by\n     * an equal-power normalization when the buffer attribute is set, or not.\n     */\n    get normalize() {\n        return this._convolver.normalize;\n    }\n    set normalize(norm) {\n        this._convolver.normalize = norm;\n    }\n    dispose() {\n        super.dispose();\n        this._buffer.dispose();\n        this._convolver.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Convolver.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { MultibandSplit } from \"../channel/MultibandSplit\";\n/**\n * EQ3 provides 3 equalizer bins: Low/Mid/High.\n * @category Component\n */\nexport class EQ3 extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]));\n        this.name = \"EQ3\";\n        /**\n         * the output\n         */\n        this.output = new Gain({ context: this.context });\n        this._internalChannels = [];\n        const options = optionsFromArguments(EQ3.getDefaults(), arguments, [\"low\", \"mid\", \"high\"]);\n        this.input = this._multibandSplit = new MultibandSplit({\n            context: this.context,\n            highFrequency: options.highFrequency,\n            lowFrequency: options.lowFrequency,\n        });\n        this._lowGain = new Gain({\n            context: this.context,\n            gain: options.low,\n            units: \"decibels\",\n        });\n        this._midGain = new Gain({\n            context: this.context,\n            gain: options.mid,\n            units: \"decibels\",\n        });\n        this._highGain = new Gain({\n            context: this.context,\n            gain: options.high,\n            units: \"decibels\",\n        });\n        this.low = this._lowGain.gain;\n        this.mid = this._midGain.gain;\n        this.high = this._highGain.gain;\n        this.Q = this._multibandSplit.Q;\n        this.lowFrequency = this._multibandSplit.lowFrequency;\n        this.highFrequency = this._multibandSplit.highFrequency;\n        // the frequency bands\n        this._multibandSplit.low.chain(this._lowGain, this.output);\n        this._multibandSplit.mid.chain(this._midGain, this.output);\n        this._multibandSplit.high.chain(this._highGain, this.output);\n        readOnly(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n        this._internalChannels = [this._multibandSplit];\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            high: 0,\n            highFrequency: 2500,\n            low: 0,\n            lowFrequency: 400,\n            mid: 0,\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        writable(this, [\"low\", \"mid\", \"high\", \"lowFrequency\", \"highFrequency\"]);\n        this._multibandSplit.dispose();\n        this.lowFrequency.dispose();\n        this.highFrequency.dispose();\n        this._lowGain.dispose();\n        this._midGain.dispose();\n        this._highGain.dispose();\n        this.low.dispose();\n        this.mid.dispose();\n        this.high.dispose();\n        this.Q.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=EQ3.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { ToneAudioWorklet } from \"../../core/worklet/ToneAudioWorklet\";\nimport { workletName } from \"./FeedbackCombFilter.worklet\";\n/**\n * Comb filters are basic building blocks for physical modeling. Read more\n * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).\n *\n * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the\n * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the\n * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode.\n * @category Component\n */\nexport class FeedbackCombFilter extends ToneAudioWorklet {\n    constructor() {\n        super(optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]));\n        this.name = \"FeedbackCombFilter\";\n        const options = optionsFromArguments(FeedbackCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\"]);\n        this.input = new Gain({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        this.delayTime = new Param({\n            context: this.context,\n            value: options.delayTime,\n            units: \"time\",\n            minValue: 0,\n            maxValue: 1,\n            param: this._dummyParam,\n            swappable: true,\n        });\n        this.resonance = new Param({\n            context: this.context,\n            value: options.resonance,\n            units: \"normalRange\",\n            param: this._dummyParam,\n            swappable: true,\n        });\n        readOnly(this, [\"resonance\", \"delayTime\"]);\n    }\n    _audioWorkletName() {\n        return workletName;\n    }\n    /**\n     * The default parameters\n     */\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            delayTime: 0.1,\n            resonance: 0.5,\n        });\n    }\n    onReady(node) {\n        connectSeries(this.input, node, this.output);\n        const delayTime = node.parameters.get(\"delayTime\");\n        ;\n        this.delayTime.setParam(delayTime);\n        const feedback = node.parameters.get(\"feedback\");\n        ;\n        this.resonance.setParam(feedback);\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.output.dispose();\n        this.delayTime.dispose();\n        this.resonance.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FeedbackCombFilter.js.map","import \"../../core/worklet/SingleIOProcessor.worklet\";\nimport \"../../core/worklet/DelayLine.worklet\";\nimport { registerProcessor } from \"../../core/worklet/WorkletGlobalScope\";\nexport const workletName = \"feedback-comb-filter\";\nconst feedbackCombFilter = /* javascript */ `\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName, feedbackCombFilter);\n//# sourceMappingURL=FeedbackCombFilter.worklet.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly, writable } from \"../../core/util/Interface\";\nimport { isNumber } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { assert } from \"../../core/util/Debug\";\n/**\n * Tone.Filter is a filter which allows for all of the same native methods\n * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).\n * Tone.Filter has the added ability to set the filter rolloff at -12\n * (default), -24 and -48.\n * @example\n * const filter = new Tone.Filter(1500, \"highpass\").toDestination();\n * filter.frequency.rampTo(20000, 10);\n * const noise = new Tone.Noise().connect(filter).start();\n * @category Component\n */\nexport class Filter extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]));\n        this.name = \"Filter\";\n        this.input = new Gain({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        this._filters = [];\n        const options = optionsFromArguments(Filter.getDefaults(), arguments, [\"frequency\", \"type\", \"rolloff\"]);\n        this._filters = [];\n        this.Q = new Signal({\n            context: this.context,\n            units: \"positive\",\n            value: options.Q,\n        });\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        this.gain = new Signal({\n            context: this.context,\n            units: \"decibels\",\n            value: options.gain,\n        });\n        this._type = options.type;\n        this.rolloff = options.rolloff;\n        readOnly(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            Q: 1,\n            detune: 0,\n            frequency: 350,\n            gain: 0,\n            rolloff: -12,\n            type: \"lowpass\",\n        });\n    }\n    /**\n     * The type of the filter. Types: \"lowpass\", \"highpass\",\n     * \"bandpass\", \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", or \"peaking\".\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        const types = [\"lowpass\", \"highpass\", \"bandpass\",\n            \"lowshelf\", \"highshelf\", \"notch\", \"allpass\", \"peaking\"];\n        assert(types.indexOf(type) !== -1, `Invalid filter type: ${type}`);\n        this._type = type;\n        this._filters.forEach(filter => filter.type = type);\n    }\n    /**\n     * The rolloff of the filter which is the drop in db\n     * per octave. Implemented internally by cascading filters.\n     * Only accepts the values -12, -24, -48 and -96.\n     */\n    get rolloff() {\n        return this._rolloff;\n    }\n    set rolloff(rolloff) {\n        const rolloffNum = isNumber(rolloff) ? rolloff : parseInt(rolloff, 10);\n        const possibilities = [-12, -24, -48, -96];\n        let cascadingCount = possibilities.indexOf(rolloffNum);\n        // check the rolloff is valid\n        assert(cascadingCount !== -1, `rolloff can only be ${possibilities.join(\", \")}`);\n        cascadingCount += 1;\n        this._rolloff = rolloffNum;\n        this.input.disconnect();\n        this._filters.forEach(filter => filter.disconnect());\n        this._filters = new Array(cascadingCount);\n        for (let count = 0; count < cascadingCount; count++) {\n            const filter = this.context.createBiquadFilter();\n            filter.type = this._type;\n            this.frequency.connect(filter.frequency);\n            this.detune.connect(filter.detune);\n            this.Q.connect(filter.Q);\n            this.gain.connect(filter.gain);\n            this._filters[count] = filter;\n        }\n        this._internalChannels = this._filters;\n        connectSeries(this.input, ...this._internalChannels, this.output);\n    }\n    /**\n     * Get the frequency response curve. This curve represents how the filter\n     * responses to frequencies between 20hz-20khz.\n     * @param  len The number of values to return\n     * @return The frequency response curve between 20-20kHz\n     */\n    getFrequencyResponse(len = 128) {\n        // start with all 1s\n        const totalResponse = new Float32Array(len).map(() => 1);\n        const freqValues = new Float32Array(len);\n        for (let i = 0; i < len; i++) {\n            const norm = Math.pow(i / len, 2);\n            const freq = norm * (20000 - 20) + 20;\n            freqValues[i] = freq;\n        }\n        const magValues = new Float32Array(len);\n        const phaseValues = new Float32Array(len);\n        this._filters.forEach(() => {\n            const filterClone = this.context.createBiquadFilter();\n            filterClone.type = this._type;\n            filterClone.Q.value = this.Q.value;\n            filterClone.frequency.value = this.frequency.value;\n            filterClone.gain.value = this.gain.value;\n            filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);\n            magValues.forEach((val, i) => {\n                totalResponse[i] *= val;\n            });\n        });\n        return totalResponse;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._filters.forEach(filter => {\n            filter.disconnect();\n        });\n        writable(this, [\"detune\", \"frequency\", \"gain\", \"Q\"]);\n        this.frequency.dispose();\n        this.Q.dispose();\n        this.detune.dispose();\n        this.gain.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Filter.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { FeedbackCombFilter } from \"./FeedbackCombFilter\";\nimport { OnePoleFilter } from \"./OnePoleFilter\";\n/**\n * A lowpass feedback comb filter. It is similar to\n * [[FeedbackCombFilter]], but includes a lowpass filter.\n * @category Component\n */\nexport class LowpassCombFilter extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]));\n        this.name = \"LowpassCombFilter\";\n        const options = optionsFromArguments(LowpassCombFilter.getDefaults(), arguments, [\"delayTime\", \"resonance\", \"dampening\"]);\n        this._combFilter = this.output = new FeedbackCombFilter({\n            context: this.context,\n            delayTime: options.delayTime,\n            resonance: options.resonance,\n        });\n        this.delayTime = this._combFilter.delayTime;\n        this.resonance = this._combFilter.resonance;\n        this._lowpass = this.input = new OnePoleFilter({\n            context: this.context,\n            frequency: options.dampening,\n            type: \"lowpass\",\n        });\n        // connections\n        this._lowpass.connect(this._combFilter);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            dampening: 3000,\n            delayTime: 0.1,\n            resonance: 0.5,\n        });\n    }\n    /**\n     * The dampening control of the feedback\n     */\n    get dampening() {\n        return this._lowpass.frequency;\n    }\n    set dampening(fq) {\n        this._lowpass.frequency = fq;\n    }\n    dispose() {\n        super.dispose();\n        this._combFilter.dispose();\n        this._lowpass.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=LowpassCombFilter.js.map","import { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Gain } from \"../../core/context/Gain\";\n/**\n * A one pole filter with 6db-per-octave rolloff. Either \"highpass\" or \"lowpass\".\n * Note that changing the type or frequency may result in a discontinuity which\n * can sound like a click or pop.\n * References:\n * * http://www.earlevel.com/main/2012/12/15/a-one-pole-filter/\n * * http://www.dspguide.com/ch19/2.htm\n * * https://github.com/vitaliy-bobrov/js-rocks/blob/master/src/app/audio/effects/one-pole-filters.ts\n * @category Component\n */\nexport class OnePoleFilter extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"OnePoleFilter\";\n        const options = optionsFromArguments(OnePoleFilter.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this._frequency = options.frequency;\n        this._type = options.type;\n        this.input = new Gain({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        this._createFilter();\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            frequency: 880,\n            type: \"lowpass\"\n        });\n    }\n    /**\n     * Create a filter and dispose the old one\n     */\n    _createFilter() {\n        const oldFilter = this._filter;\n        const freq = this.toFrequency(this._frequency);\n        const t = 1 / (2 * Math.PI * freq);\n        if (this._type === \"lowpass\") {\n            const a0 = 1 / (t * this.context.sampleRate);\n            const b1 = a0 - 1;\n            this._filter = this.context.createIIRFilter([a0, 0], [1, b1]);\n        }\n        else {\n            const b1 = 1 / (t * this.context.sampleRate) - 1;\n            this._filter = this.context.createIIRFilter([1, -1], [1, b1]);\n        }\n        this.input.chain(this._filter, this.output);\n        if (oldFilter) {\n            // dispose it on the next block\n            this.context.setTimeout(() => {\n                if (!this.disposed) {\n                    this.input.disconnect(oldFilter);\n                    oldFilter.disconnect();\n                }\n            }, this.blockTime);\n        }\n    }\n    /**\n     * The frequency value.\n     */\n    get frequency() {\n        return this._frequency;\n    }\n    set frequency(fq) {\n        this._frequency = fq;\n        this._createFilter();\n    }\n    /**\n     * The OnePole Filter type, either \"highpass\" or \"lowpass\"\n     */\n    get type() {\n        return this._type;\n    }\n    set type(t) {\n        this._type = t;\n        this._createFilter();\n    }\n    /**\n     * Get the frequency response curve. This curve represents how the filter\n     * responses to frequencies between 20hz-20khz.\n     * @param  len The number of values to return\n     * @return The frequency response curve between 20-20kHz\n     */\n    getFrequencyResponse(len = 128) {\n        const freqValues = new Float32Array(len);\n        for (let i = 0; i < len; i++) {\n            const norm = Math.pow(i / len, 2);\n            const freq = norm * (20000 - 20) + 20;\n            freqValues[i] = freq;\n        }\n        const magValues = new Float32Array(len);\n        const phaseValues = new Float32Array(len);\n        this._filter.getFrequencyResponse(freqValues, magValues, phaseValues);\n        return magValues;\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.output.dispose();\n        this._filter.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=OnePoleFilter.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { connectSeries, ToneAudioNode } from \"../../core/context/ToneAudioNode\";\n/**\n * PhaseShiftAllpass is an very efficient implementation of a Hilbert Transform\n * using two Allpass filter banks whose outputs have a phase difference of 90°.\n * Here the `offset90` phase is offset by +90° in relation to `output`.\n * Coefficients and structure was developed by Olli Niemitalo.\n * For more details see: http://yehar.com/blog/?p=368\n * @category Component\n */\nexport class PhaseShiftAllpass extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        this.name = \"PhaseShiftAllpass\";\n        this.input = new Gain({ context: this.context });\n        /**\n         * The phase shifted output\n         */\n        this.output = new Gain({ context: this.context });\n        /**\n         * The PhaseShifted allpass output\n         */\n        this.offset90 = new Gain({ context: this.context });\n        const allpassBank1Values = [0.6923878, 0.9360654322959, 0.9882295226860, 0.9987488452737];\n        const allpassBank2Values = [0.4021921162426, 0.8561710882420, 0.9722909545651, 0.9952884791278];\n        this._bank0 = this._createAllPassFilterBank(allpassBank1Values);\n        this._bank1 = this._createAllPassFilterBank(allpassBank2Values);\n        this._oneSampleDelay = this.context.createIIRFilter([0.0, 1.0], [1.0, 0.0]);\n        // connect Allpass filter banks\n        connectSeries(this.input, ...this._bank0, this._oneSampleDelay, this.output);\n        connectSeries(this.input, ...this._bank1, this.offset90);\n    }\n    /**\n     * Create all of the IIR filters from an array of values using the coefficient calculation.\n     */\n    _createAllPassFilterBank(bankValues) {\n        const nodes = bankValues.map(value => {\n            const coefficients = [[value * value, 0, -1], [1, 0, -(value * value)]];\n            return this.context.createIIRFilter(coefficients[0], coefficients[1]);\n        });\n        return nodes;\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.output.dispose();\n        this.offset90.dispose();\n        this._bank0.forEach(f => f.disconnect());\n        this._bank1.forEach(f => f.disconnect());\n        this._oneSampleDelay.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=PhaseShiftAllpass.js.map","export * from \"./analysis/Analyser\";\nexport * from \"./analysis/Meter\";\nexport * from \"./analysis/FFT\";\nexport * from \"./analysis/DCMeter\";\nexport * from \"./analysis/Waveform\";\nexport * from \"./analysis/Follower\";\nexport * from \"./channel/Channel\";\nexport * from \"./channel/CrossFade\";\nexport * from \"./channel/Merge\";\nexport * from \"./channel/MidSideMerge\";\nexport * from \"./channel/MidSideSplit\";\nexport * from \"./channel/MultibandSplit\";\nexport * from \"./channel/Panner\";\nexport * from \"./channel/Panner3D\";\nexport * from \"./channel/PanVol\";\nexport * from \"./channel/Recorder\";\nexport * from \"./channel/Solo\";\nexport * from \"./channel/Split\";\nexport * from \"./channel/Volume\";\nexport * from \"./dynamics/Compressor\";\nexport * from \"./dynamics/Gate\";\nexport * from \"./dynamics/Limiter\";\nexport * from \"./dynamics/MidSideCompressor\";\nexport * from \"./dynamics/MultibandCompressor\";\nexport * from \"./envelope/AmplitudeEnvelope\";\nexport * from \"./envelope/Envelope\";\nexport * from \"./envelope/FrequencyEnvelope\";\nexport * from \"./filter/EQ3\";\nexport * from \"./filter/Filter\";\nexport * from \"./filter/OnePoleFilter\";\nexport * from \"./filter/FeedbackCombFilter\";\nexport * from \"./filter/LowpassCombFilter\";\nexport * from \"./filter/Convolver\";\n//# sourceMappingURL=index.js.map","import { version } from \"../version\";\nimport { hasAudioContext, theWindow } from \"./context/AudioContext\";\nimport { Context } from \"./context/Context\";\nimport { DummyContext } from \"./context/DummyContext\";\nimport { OfflineContext } from \"./context/OfflineContext\";\nimport { isAudioContext, isOfflineAudioContext } from \"./util/AdvancedTypeCheck\";\n/**\n * This dummy context is used to avoid throwing immediate errors when importing in Node.js\n */\nconst dummyContext = new DummyContext();\n/**\n * The global audio context which is getable and assignable through\n * getContext and setContext\n */\nlet globalContext = dummyContext;\n/**\n * Returns the default system-wide [[Context]]\n * @category Core\n */\nexport function getContext() {\n    if (globalContext === dummyContext && hasAudioContext) {\n        setContext(new Context());\n    }\n    return globalContext;\n}\n/**\n * Set the default audio context\n * @category Core\n */\nexport function setContext(context) {\n    if (isAudioContext(context)) {\n        globalContext = new Context(context);\n    }\n    else if (isOfflineAudioContext(context)) {\n        globalContext = new OfflineContext(context);\n    }\n    else {\n        globalContext = context;\n    }\n}\n/**\n * Most browsers will not play _any_ audio until a user\n * clicks something (like a play button). Invoke this method\n * on a click or keypress event handler to start the audio context.\n * More about the Autoplay policy\n * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)\n * @example\n * document.querySelector(\"button\").addEventListener(\"click\", async () => {\n * \tawait Tone.start();\n * \tconsole.log(\"context started\");\n * });\n * @category Core\n */\nexport function start() {\n    return globalContext.resume();\n}\n/**\n * Log Tone.js + version in the console.\n */\nif (theWindow && !theWindow.TONE_SILENCE_LOGGING) {\n    let prefix = \"v\";\n    if (version === \"dev\") {\n        prefix = \"\";\n    }\n    const printString = ` * Tone.js ${prefix}${version} * `;\n    // eslint-disable-next-line no-console\n    console.log(`%c${printString}`, \"background: #000; color: #fff\");\n}\n//# sourceMappingURL=Global.js.map","/**\n * Tone.js\n * @author Yotam Mann\n * @license http://opensource.org/licenses/MIT MIT License\n * @copyright 2014-2019 Yotam Mann\n */\nimport { version } from \"../version\";\nimport { theWindow } from \"./context/AudioContext\";\nimport { log } from \"./util/Debug\";\n/**\n * @class  Tone is the base class of all other classes.\n * @constructor\n */\nexport class Tone {\n    constructor() {\n        //-------------------------------------\n        // \tDEBUGGING\n        //-------------------------------------\n        /**\n         * Set this debug flag to log all events that happen in this class.\n         */\n        this.debug = false;\n        //-------------------------------------\n        // \tDISPOSING\n        //-------------------------------------\n        /**\n         * Indicates if the instance was disposed\n         */\n        this._wasDisposed = false;\n    }\n    /**\n     * Returns all of the default options belonging to the class.\n     */\n    static getDefaults() {\n        return {};\n    }\n    /**\n     * Prints the outputs to the console log for debugging purposes.\n     * Prints the contents only if either the object has a property\n     * called `debug` set to true, or a variable called TONE_DEBUG_CLASS\n     * is set to the name of the class.\n     * @example\n     * const osc = new Tone.Oscillator();\n     * // prints all logs originating from this oscillator\n     * osc.debug = true;\n     * // calls to start/stop will print in the console\n     * osc.start();\n     */\n    log(...args) {\n        // if the object is either set to debug = true\n        // or if there is a string on the Tone.global.with the class name\n        if (this.debug || (theWindow && this.toString() === theWindow.TONE_DEBUG_CLASS)) {\n            log(this, ...args);\n        }\n    }\n    /**\n     * disconnect and dispose.\n     */\n    dispose() {\n        this._wasDisposed = true;\n        return this;\n    }\n    /**\n     * Indicates if the instance was disposed. 'Disposing' an\n     * instance means that all of the Web Audio nodes that were\n     * created for the instance are disconnected and freed for garbage collection.\n     */\n    get disposed() {\n        return this._wasDisposed;\n    }\n    /**\n     * Convert the class to a string\n     * @example\n     * const osc = new Tone.Oscillator();\n     * console.log(osc.toString());\n     */\n    toString() {\n        return this.name;\n    }\n}\n/**\n * The version number semver\n */\nTone.version = version;\n//# sourceMappingURL=Tone.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { noOp, readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { TickSource } from \"./TickSource\";\nimport { assertContextRunning } from \"../util/Debug\";\n/**\n * A sample accurate clock which provides a callback at the given rate.\n * While the callback is not sample-accurate (it is still susceptible to\n * loose JS timing), the time passed in as the argument to the callback\n * is precise. For most applications, it is better to use Tone.Transport\n * instead of the Clock by itself since you can synchronize multiple callbacks.\n * @example\n * // the callback will be invoked approximately once a second\n * // and will print the time exactly once a second apart.\n * const clock = new Tone.Clock(time => {\n * \tconsole.log(time);\n * }, 1);\n * clock.start();\n * @category Core\n */\nexport class Clock extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]));\n        this.name = \"Clock\";\n        /**\n         * The callback function to invoke at the scheduled tick.\n         */\n        this.callback = noOp;\n        /**\n         * The last time the loop callback was invoked\n         */\n        this._lastUpdate = 0;\n        /**\n         * Keep track of the playback state\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * Context bound reference to the _loop method\n         * This is necessary to remove the event in the end.\n         */\n        this._boundLoop = this._loop.bind(this);\n        const options = optionsFromArguments(Clock.getDefaults(), arguments, [\"callback\", \"frequency\"]);\n        this.callback = options.callback;\n        this._tickSource = new TickSource({\n            context: this.context,\n            frequency: options.frequency,\n            units: options.units,\n        });\n        this._lastUpdate = 0;\n        this.frequency = this._tickSource.frequency;\n        readOnly(this, \"frequency\");\n        // add an initial state\n        this._state.setStateAtTime(\"stopped\", 0);\n        // bind a callback to the worker thread\n        this.context.on(\"tick\", this._boundLoop);\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            callback: noOp,\n            frequency: 1,\n            units: \"hertz\",\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get state() {\n        return this._state.getValueAtTime(this.now());\n    }\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset  Where the tick counter starts counting from.\n     */\n    start(time, offset) {\n        // make sure the context is running\n        assertContextRunning(this.context);\n        // start the loop\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            this._tickSource.start(computedTime, offset);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"start\", computedTime, offset);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     * @example\n     * const clock = new Tone.Clock(time => {\n     * \tconsole.log(time);\n     * }, 1);\n     * clock.start();\n     * // stop the clock after 10 seconds\n     * clock.stop(\"+10\");\n     */\n    stop(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"stop\", computedTime);\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this._tickSource.stop(computedTime);\n        if (computedTime < this._lastUpdate) {\n            this.emit(\"stop\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    pause(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n            this._tickSource.pause(computedTime);\n            if (computedTime < this._lastUpdate) {\n                this.emit(\"pause\", computedTime);\n            }\n        }\n        return this;\n    }\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked.\n     */\n    get ticks() {\n        return Math.ceil(this.getTicksAtTime(this.now()));\n    }\n    set ticks(t) {\n        this._tickSource.ticks = t;\n    }\n    /**\n     * The time since ticks=0 that the Clock has been running. Accounts for tempo curves\n     */\n    get seconds() {\n        return this._tickSource.seconds;\n    }\n    set seconds(s) {\n        this._tickSource.seconds = s;\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        return this._tickSource.getSecondsAtTime(time);\n    }\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    setTicksAtTime(ticks, time) {\n        this._tickSource.setTicksAtTime(ticks, time);\n        return this;\n    }\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    getTimeOfTick(tick, before = this.now()) {\n        return this._tickSource.getTimeOfTick(tick, before);\n    }\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    getTicksAtTime(time) {\n        return this._tickSource.getTicksAtTime(time);\n    }\n    /**\n     * Get the time of the next tick\n     * @param  offset The tick number.\n     */\n    nextTickTime(offset, when) {\n        const computedTime = this.toSeconds(when);\n        const currentTick = this.getTicksAtTime(computedTime);\n        return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);\n    }\n    /**\n     * The scheduling loop.\n     */\n    _loop() {\n        const startTime = this._lastUpdate;\n        const endTime = this.now();\n        this._lastUpdate = endTime;\n        this.log(\"loop\", startTime, endTime);\n        if (startTime !== endTime) {\n            // the state change events\n            this._state.forEachBetween(startTime, endTime, e => {\n                switch (e.state) {\n                    case \"started\":\n                        const offset = this._tickSource.getTicksAtTime(e.time);\n                        this.emit(\"start\", e.time, offset);\n                        break;\n                    case \"stopped\":\n                        if (e.time !== 0) {\n                            this.emit(\"stop\", e.time);\n                        }\n                        break;\n                    case \"paused\":\n                        this.emit(\"pause\", e.time);\n                        break;\n                }\n            });\n            // the tick callbacks\n            this._tickSource.forEachTickBetween(startTime, endTime, (time, ticks) => {\n                this.callback(time, ticks);\n            });\n        }\n    }\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     * @example\n     * const clock = new Tone.Clock();\n     * clock.start(\"+0.1\");\n     * clock.getStateAtTime(\"+0.1\"); // returns \"started\"\n     */\n    getStateAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        return this._state.getValueAtTime(computedTime);\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.context.off(\"tick\", this._boundLoop);\n        this._tickSource.dispose();\n        this._state.dispose();\n        return this;\n    }\n}\nEmitter.mixin(Clock);\n//# sourceMappingURL=Clock.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isUndef } from \"../util/TypeCheck\";\n/**\n * A Param class just for computing ticks. Similar to the [[Param]] class,\n * but offers conversion to BPM values as well as ability to compute tick\n * duration and elapsed ticks\n */\nexport class TickParam extends Param {\n    constructor() {\n        super(optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]));\n        this.name = \"TickParam\";\n        /**\n         * The timeline which tracks all of the automations.\n         */\n        this._events = new Timeline(Infinity);\n        /**\n         * The internal holder for the multiplier value\n         */\n        this._multiplier = 1;\n        const options = optionsFromArguments(TickParam.getDefaults(), arguments, [\"value\"]);\n        // set the multiplier\n        this._multiplier = options.multiplier;\n        // clear the ticks from the beginning\n        this._events.cancel(0);\n        // set an initial event\n        this._events.add({\n            ticks: 0,\n            time: 0,\n            type: \"setValueAtTime\",\n            value: this._fromType(options.value),\n        });\n        this.setValueAtTime(options.value, 0);\n    }\n    static getDefaults() {\n        return Object.assign(Param.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    }\n    setTargetAtTime(value, time, constant) {\n        // approximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        this.setRampPoint(time);\n        const computedValue = this._fromType(value);\n        // start from previously scheduled value\n        const prevEvent = this._events.get(time);\n        const segments = Math.round(Math.max(1 / constant, 1));\n        for (let i = 0; i <= segments; i++) {\n            const segTime = constant * i + time;\n            const rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    }\n    setValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        super.setValueAtTime(value, time);\n        const event = this._events.get(computedTime);\n        const previousEvent = this._events.previousEvent(event);\n        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        super.linearRampToValueAtTime(value, time);\n        const event = this._events.get(computedTime);\n        const previousEvent = this._events.previousEvent(event);\n        const ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);\n        event.ticks = Math.max(ticksUntilTime, 0);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        // aproximate it with multiple linear ramps\n        time = this.toSeconds(time);\n        const computedVal = this._fromType(value);\n        // start from previously scheduled value\n        const prevEvent = this._events.get(time);\n        // approx 10 segments per second\n        const segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));\n        const segmentDur = ((time - prevEvent.time) / segments);\n        for (let i = 0; i <= segments; i++) {\n            const segTime = segmentDur * i + prevEvent.time;\n            const rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);\n            this.linearRampToValueAtTime(this._toType(rampVal), segTime);\n        }\n        return this;\n    }\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  event The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    _getTicksUntilEvent(event, time) {\n        if (event === null) {\n            event = {\n                ticks: 0,\n                time: 0,\n                type: \"setValueAtTime\",\n                value: 0,\n            };\n        }\n        else if (isUndef(event.ticks)) {\n            const previousEvent = this._events.previousEvent(event);\n            event.ticks = this._getTicksUntilEvent(previousEvent, event.time);\n        }\n        const val0 = this._fromType(this.getValueAtTime(event.time));\n        let val1 = this._fromType(this.getValueAtTime(time));\n        // if it's right on the line, take the previous value\n        const onTheLineEvent = this._events.get(time);\n        if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === \"setValueAtTime\") {\n            val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));\n        }\n        return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;\n    }\n    /**\n     * Returns the tick value at the time. Takes into account\n     * any automation curves scheduled on the signal.\n     * @param  time The time to get the tick count at\n     * @return The number of ticks which have elapsed at the time given any automations.\n     */\n    getTicksAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const event = this._events.get(computedTime);\n        return Math.max(this._getTicksUntilEvent(event, computedTime), 0);\n    }\n    /**\n     * Return the elapsed time of the number of ticks from the given time\n     * @param ticks The number of ticks to calculate\n     * @param  time The time to get the next tick from\n     * @return The duration of the number of ticks from the given time in seconds\n     */\n    getDurationOfTicks(ticks, time) {\n        const computedTime = this.toSeconds(time);\n        const currentTick = this.getTicksAtTime(time);\n        return this.getTimeOfTick(currentTick + ticks) - computedTime;\n    }\n    /**\n     * Given a tick, returns the time that tick occurs at.\n     * @return The time that the tick occurs.\n     */\n    getTimeOfTick(tick) {\n        const before = this._events.get(tick, \"ticks\");\n        const after = this._events.getAfter(tick, \"ticks\");\n        if (before && before.ticks === tick) {\n            return before.time;\n        }\n        else if (before && after &&\n            after.type === \"linearRampToValueAtTime\" &&\n            before.value !== after.value) {\n            const val0 = this._fromType(this.getValueAtTime(before.time));\n            const val1 = this._fromType(this.getValueAtTime(after.time));\n            const delta = (val1 - val0) / (after.time - before.time);\n            const k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));\n            const sol1 = (-val0 + k) / delta;\n            const sol2 = (-val0 - k) / delta;\n            return (sol1 > 0 ? sol1 : sol2) + before.time;\n        }\n        else if (before) {\n            if (before.value === 0) {\n                return Infinity;\n            }\n            else {\n                return before.time + (tick - before.ticks) / before.value;\n            }\n        }\n        else {\n            return tick / this._initialValue;\n        }\n    }\n    /**\n     * Convert some number of ticks their the duration in seconds accounting\n     * for any automation curves starting at the given time.\n     * @param  ticks The number of ticks to convert to seconds.\n     * @param  when  When along the automation timeline to convert the ticks.\n     * @return The duration in seconds of the ticks.\n     */\n    ticksToTime(ticks, when) {\n        return this.getDurationOfTicks(ticks, when);\n    }\n    /**\n     * The inverse of [[ticksToTime]]. Convert a duration in\n     * seconds to the corresponding number of ticks accounting for any\n     * automation curves starting at the given time.\n     * @param  duration The time interval to convert to ticks.\n     * @param  when When along the automation timeline to convert the ticks.\n     * @return The duration in ticks.\n     */\n    timeToTicks(duration, when) {\n        const computedTime = this.toSeconds(when);\n        const computedDuration = this.toSeconds(duration);\n        const startTicks = this.getTicksAtTime(computedTime);\n        const endTicks = this.getTicksAtTime(computedTime + computedDuration);\n        return endTicks - startTicks;\n    }\n    /**\n     * Convert from the type when the unit value is BPM\n     */\n    _fromType(val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return 1 / (60 / val / this.multiplier);\n        }\n        else {\n            return super._fromType(val);\n        }\n    }\n    /**\n     * Special case of type conversion where the units === \"bpm\"\n     */\n    _toType(val) {\n        if (this.units === \"bpm\" && this.multiplier) {\n            return (val / this.multiplier) * 60;\n        }\n        else {\n            return super._toType(val);\n        }\n    }\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get multiplier() {\n        return this._multiplier;\n    }\n    set multiplier(m) {\n        // get and reset the current value with the new multiplier\n        // might be necessary to clear all the previous values\n        const currentVal = this.value;\n        this._multiplier = m;\n        this.cancelScheduledValues(0);\n        this.setValueAtTime(currentVal, 0);\n    }\n}\n//# sourceMappingURL=TickParam.js.map","import { Signal } from \"../../signal/Signal\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { TickParam } from \"./TickParam\";\n/**\n * TickSignal extends Tone.Signal, but adds the capability\n * to calculate the number of elapsed ticks. exponential and target curves\n * are approximated with multiple linear ramps.\n *\n * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,\n * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)\n * describing integrating timing functions for tempo calculations.\n */\nexport class TickSignal extends Signal {\n    constructor() {\n        super(optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]));\n        this.name = \"TickSignal\";\n        const options = optionsFromArguments(TickSignal.getDefaults(), arguments, [\"value\"]);\n        this.input = this._param = new TickParam({\n            context: this.context,\n            convert: options.convert,\n            multiplier: options.multiplier,\n            param: this._constantSource.offset,\n            units: options.units,\n            value: options.value,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            multiplier: 1,\n            units: \"hertz\",\n            value: 1,\n        });\n    }\n    ticksToTime(ticks, when) {\n        return this._param.ticksToTime(ticks, when);\n    }\n    timeToTicks(duration, when) {\n        return this._param.timeToTicks(duration, when);\n    }\n    getTimeOfTick(tick) {\n        return this._param.getTimeOfTick(tick);\n    }\n    getDurationOfTicks(ticks, time) {\n        return this._param.getDurationOfTicks(ticks, time);\n    }\n    getTicksAtTime(time) {\n        return this._param.getTicksAtTime(time);\n    }\n    /**\n     * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.\n     */\n    get multiplier() {\n        return this._param.multiplier;\n    }\n    set multiplier(m) {\n        this._param.multiplier = m;\n    }\n    dispose() {\n        super.dispose();\n        this._param.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=TickSignal.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { StateTimeline } from \"../util/StateTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { TickSignal } from \"./TickSignal\";\nimport { EQ } from \"../util/Math\";\n/**\n * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.\n */\nexport class TickSource extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]));\n        this.name = \"TickSource\";\n        /**\n         * The state timeline\n         */\n        this._state = new StateTimeline();\n        /**\n         * The offset values of the ticks\n         */\n        this._tickOffset = new Timeline();\n        const options = optionsFromArguments(TickSource.getDefaults(), arguments, [\"frequency\"]);\n        this.frequency = new TickSignal({\n            context: this.context,\n            units: options.units,\n            value: options.frequency,\n        });\n        readOnly(this, \"frequency\");\n        // set the initial state\n        this._state.setStateAtTime(\"stopped\", 0);\n        // add the first event\n        this.setTicksAtTime(0, 0);\n    }\n    static getDefaults() {\n        return Object.assign({\n            frequency: 1,\n            units: \"hertz\",\n        }, ToneWithContext.getDefaults());\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\" or \"paused\".\n     */\n    get state() {\n        return this.getStateAtTime(this.now());\n    }\n    /**\n     * Start the clock at the given time. Optionally pass in an offset\n     * of where to start the tick counter from.\n     * @param  time    The time the clock should start\n     * @param offset The number of ticks to start the source at\n     */\n    start(time, offset) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) !== \"started\") {\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (isDefined(offset)) {\n                this.setTicksAtTime(offset, computedTime);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the clock. Stopping the clock resets the tick counter to 0.\n     * @param time The time when the clock should stop.\n     */\n    stop(time) {\n        const computedTime = this.toSeconds(time);\n        // cancel the previous stop\n        if (this._state.getValueAtTime(computedTime) === \"stopped\") {\n            const event = this._state.get(computedTime);\n            if (event && event.time > 0) {\n                this._tickOffset.cancel(event.time);\n                this._state.cancel(event.time);\n            }\n        }\n        this._state.cancel(computedTime);\n        this._state.setStateAtTime(\"stopped\", computedTime);\n        this.setTicksAtTime(0, computedTime);\n        return this;\n    }\n    /**\n     * Pause the clock. Pausing does not reset the tick counter.\n     * @param time The time when the clock should stop.\n     */\n    pause(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            this._state.setStateAtTime(\"paused\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.\n     * @param time When to clear the events after\n     */\n    cancel(time) {\n        time = this.toSeconds(time);\n        this._state.cancel(time);\n        this._tickOffset.cancel(time);\n        return this;\n    }\n    /**\n     * Get the elapsed ticks at the given time\n     * @param  time  When to get the tick value\n     * @return The number of ticks\n     */\n    getTicksAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const stopEvent = this._state.getLastState(\"stopped\", computedTime);\n        // this event allows forEachBetween to iterate until the current time\n        const tmpEvent = { state: \"paused\", time: computedTime };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        let lastState = stopEvent;\n        let elapsedTicks = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, e => {\n            let periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            const offsetEvent = this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedTicks = offsetEvent.ticks;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedTicks += this.frequency.getTicksAtTime(e.time) - this.frequency.getTicksAtTime(periodStartTime);\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedTicks;\n    }\n    /**\n     * The number of times the callback was invoked. Starts counting at 0\n     * and increments after the callback was invoked. Returns -1 when stopped.\n     */\n    get ticks() {\n        return this.getTicksAtTime(this.now());\n    }\n    set ticks(t) {\n        this.setTicksAtTime(t, this.now());\n    }\n    /**\n     * The time since ticks=0 that the TickSource has been running. Accounts\n     * for tempo curves\n     */\n    get seconds() {\n        return this.getSecondsAtTime(this.now());\n    }\n    set seconds(s) {\n        const now = this.now();\n        const ticks = this.frequency.timeToTicks(s, now);\n        this.setTicksAtTime(ticks, now);\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        time = this.toSeconds(time);\n        const stopEvent = this._state.getLastState(\"stopped\", time);\n        // this event allows forEachBetween to iterate until the current time\n        const tmpEvent = { state: \"paused\", time };\n        this._state.add(tmpEvent);\n        // keep track of the previous offset event\n        let lastState = stopEvent;\n        let elapsedSeconds = 0;\n        // iterate through all the events since the last stop\n        this._state.forEachBetween(stopEvent.time, time + this.sampleTime, e => {\n            let periodStartTime = lastState.time;\n            // if there is an offset event in this period use that\n            const offsetEvent = this._tickOffset.get(e.time);\n            if (offsetEvent && offsetEvent.time >= lastState.time) {\n                elapsedSeconds = offsetEvent.seconds;\n                periodStartTime = offsetEvent.time;\n            }\n            if (lastState.state === \"started\" && e.state !== \"started\") {\n                elapsedSeconds += e.time - periodStartTime;\n            }\n            lastState = e;\n        });\n        // remove the temporary event\n        this._state.remove(tmpEvent);\n        // return the ticks\n        return elapsedSeconds;\n    }\n    /**\n     * Set the clock's ticks at the given time.\n     * @param  ticks The tick value to set\n     * @param  time  When to set the tick value\n     */\n    setTicksAtTime(ticks, time) {\n        time = this.toSeconds(time);\n        this._tickOffset.cancel(time);\n        this._tickOffset.add({\n            seconds: this.frequency.getDurationOfTicks(ticks, time),\n            ticks,\n            time,\n        });\n        return this;\n    }\n    /**\n     * Returns the scheduled state at the given time.\n     * @param  time  The time to query.\n     */\n    getStateAtTime(time) {\n        time = this.toSeconds(time);\n        return this._state.getValueAtTime(time);\n    }\n    /**\n     * Get the time of the given tick. The second argument\n     * is when to test before. Since ticks can be set (with setTicksAtTime)\n     * there may be multiple times for a given tick value.\n     * @param  tick The tick number.\n     * @param  before When to measure the tick value from.\n     * @return The time of the tick\n     */\n    getTimeOfTick(tick, before = this.now()) {\n        const offset = this._tickOffset.get(before);\n        const event = this._state.get(before);\n        const startTime = Math.max(offset.time, event.time);\n        const absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;\n        return this.frequency.getTimeOfTick(absoluteTicks);\n    }\n    /**\n     * Invoke the callback event at all scheduled ticks between the\n     * start time and the end time\n     * @param  startTime  The beginning of the search range\n     * @param  endTime    The end of the search range\n     * @param  callback   The callback to invoke with each tick\n     */\n    forEachTickBetween(startTime, endTime, callback) {\n        // only iterate through the sections where it is \"started\"\n        let lastStateEvent = this._state.get(startTime);\n        this._state.forEachBetween(startTime, endTime, event => {\n            if (lastStateEvent && lastStateEvent.state === \"started\" && event.state !== \"started\") {\n                this.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - this.sampleTime, callback);\n            }\n            lastStateEvent = event;\n        });\n        let error = null;\n        if (lastStateEvent && lastStateEvent.state === \"started\") {\n            const maxStartTime = Math.max(lastStateEvent.time, startTime);\n            // figure out the difference between the frequency ticks and the\n            const startTicks = this.frequency.getTicksAtTime(maxStartTime);\n            const ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);\n            const diff = startTicks - ticksAtStart;\n            let offset = Math.ceil(diff) - diff;\n            // guard against floating point issues\n            offset = EQ(offset, 1) ? 0 : offset;\n            let nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);\n            while (nextTickTime < endTime) {\n                try {\n                    callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));\n                }\n                catch (e) {\n                    error = e;\n                    break;\n                }\n                nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);\n            }\n        }\n        if (error) {\n            throw error;\n        }\n        return this;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._state.dispose();\n        this._tickOffset.dispose();\n        this.frequency.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=TickSource.js.map","/**\n * A class which provides a reliable callback using either\n * a Web Worker, or if that isn't supported, falls back to setTimeout.\n */\nexport class Ticker {\n    constructor(callback, type, updateInterval) {\n        this._callback = callback;\n        this._type = type;\n        this._updateInterval = updateInterval;\n        // create the clock source for the first time\n        this._createClock();\n    }\n    /**\n     * Generate a web worker\n     */\n    _createWorker() {\n        const blob = new Blob([\n            /* javascript */ `\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ${(this._updateInterval * 1000).toFixed(1)};\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t`\n        ], { type: \"text/javascript\" });\n        const blobUrl = URL.createObjectURL(blob);\n        const worker = new Worker(blobUrl);\n        worker.onmessage = this._callback.bind(this);\n        this._worker = worker;\n    }\n    /**\n     * Create a timeout loop\n     */\n    _createTimeout() {\n        this._timeout = setTimeout(() => {\n            this._createTimeout();\n            this._callback();\n        }, this._updateInterval * 1000);\n    }\n    /**\n     * Create the clock source.\n     */\n    _createClock() {\n        if (this._type === \"worker\") {\n            try {\n                this._createWorker();\n            }\n            catch (e) {\n                // workers not supported, fallback to timeout\n                this._type = \"timeout\";\n                this._createClock();\n            }\n        }\n        else if (this._type === \"timeout\") {\n            this._createTimeout();\n        }\n    }\n    /**\n     * Clean up the current clock source\n     */\n    _disposeClock() {\n        if (this._timeout) {\n            clearTimeout(this._timeout);\n            this._timeout = 0;\n        }\n        if (this._worker) {\n            this._worker.terminate();\n            this._worker.onmessage = null;\n        }\n    }\n    /**\n     * The rate in seconds the ticker will update\n     */\n    get updateInterval() {\n        return this._updateInterval;\n    }\n    set updateInterval(interval) {\n        this._updateInterval = Math.max(interval, 128 / 44100);\n        if (this._type === \"worker\") {\n            this._worker.postMessage(Math.max(interval * 1000, 1));\n        }\n    }\n    /**\n     * The type of the ticker, either a worker or a timeout\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._disposeClock();\n        this._type = type;\n        this._createClock();\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        this._disposeClock();\n    }\n}\n//# sourceMappingURL=Ticker.js.map","import { TimeClass } from \"../../core/type/Time\";\nimport { TimelineValue } from \"../../core/util/TimelineValue\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\nimport { Gain } from \"../context/Gain\";\nimport { ToneWithContext } from \"../context/ToneWithContext\";\nimport { TicksClass } from \"../type/Ticks\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Emitter } from \"../util/Emitter\";\nimport { readOnly, writable } from \"../util/Interface\";\nimport { IntervalTimeline } from \"../util/IntervalTimeline\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isArray, isDefined } from \"../util/TypeCheck\";\nimport { Clock } from \"./Clock\";\nimport { TransportEvent } from \"./TransportEvent\";\nimport { TransportRepeatEvent } from \"./TransportRepeatEvent\";\n/**\n * Transport for timing musical events.\n * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)\n * Transport timing events pass in the exact time of the scheduled event\n * in the argument of the callback function. Pass that time value to the object\n * you're scheduling. <br><br>\n * A single transport is created for you when the library is initialized.\n * <br><br>\n * The transport emits the events: \"start\", \"stop\", \"pause\", and \"loop\" which are\n * called with the time of that event as the argument.\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination();\n * // repeated event every 8th note\n * Tone.Transport.scheduleRepeat((time) => {\n * \t// use the callback time to schedule events\n * \tosc.start(time).stop(time + 0.1);\n * }, \"8n\");\n * // transport must be started before it starts invoking events\n * Tone.Transport.start();\n * @category Core\n */\nexport class Transport extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Transport.getDefaults(), arguments));\n        this.name = \"Transport\";\n        //-------------------------------------\n        // \tLOOPING\n        //-------------------------------------\n        /**\n         * If the transport loops or not.\n         */\n        this._loop = new TimelineValue(false);\n        /**\n         * The loop start position in ticks\n         */\n        this._loopStart = 0;\n        /**\n         * The loop end position in ticks\n         */\n        this._loopEnd = 0;\n        //-------------------------------------\n        // \tTIMELINE EVENTS\n        //-------------------------------------\n        /**\n         * All the events in an object to keep track by ID\n         */\n        this._scheduledEvents = {};\n        /**\n         * The scheduled events.\n         */\n        this._timeline = new Timeline();\n        /**\n         * Repeated events\n         */\n        this._repeatedEvents = new IntervalTimeline();\n        /**\n         * All of the synced Signals\n         */\n        this._syncedSignals = [];\n        /**\n         * The swing amount\n         */\n        this._swingAmount = 0;\n        const options = optionsFromArguments(Transport.getDefaults(), arguments);\n        // CLOCK/TEMPO\n        this._ppq = options.ppq;\n        this._clock = new Clock({\n            callback: this._processTick.bind(this),\n            context: this.context,\n            frequency: 0,\n            units: \"bpm\",\n        });\n        this._bindClockEvents();\n        this.bpm = this._clock.frequency;\n        this._clock.frequency.multiplier = options.ppq;\n        this.bpm.setValueAtTime(options.bpm, 0);\n        readOnly(this, \"bpm\");\n        this._timeSignature = options.timeSignature;\n        // SWING\n        this._swingTicks = options.ppq / 2; // 8n\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            bpm: 120,\n            loopEnd: \"4m\",\n            loopStart: 0,\n            ppq: 192,\n            swing: 0,\n            swingSubdivision: \"8n\",\n            timeSignature: 4,\n        });\n    }\n    //-------------------------------------\n    // \tTICKS\n    //-------------------------------------\n    /**\n     * called on every tick\n     * @param  tickTime clock relative tick time\n     */\n    _processTick(tickTime, ticks) {\n        // handle swing\n        if (this._swingAmount > 0 &&\n            ticks % this._ppq !== 0 && // not on a downbeat\n            ticks % (this._swingTicks * 2) !== 0) {\n            // add some swing\n            const progress = (ticks % (this._swingTicks * 2)) / (this._swingTicks * 2);\n            const amount = Math.sin((progress) * Math.PI) * this._swingAmount;\n            tickTime += new TicksClass(this.context, this._swingTicks * 2 / 3).toSeconds() * amount;\n        }\n        // do the loop test\n        if (this._loop.get(tickTime)) {\n            if (ticks >= this._loopEnd) {\n                this.emit(\"loopEnd\", tickTime);\n                this._clock.setTicksAtTime(this._loopStart, tickTime);\n                ticks = this._loopStart;\n                this.emit(\"loopStart\", tickTime, this._clock.getSecondsAtTime(tickTime));\n                this.emit(\"loop\", tickTime);\n            }\n        }\n        // invoke the timeline events scheduled on this tick\n        this._timeline.forEachAtTime(ticks, event => event.invoke(tickTime));\n    }\n    //-------------------------------------\n    // \tSCHEDULABLE EVENTS\n    //-------------------------------------\n    /**\n     * Schedule an event along the timeline.\n     * @param callback The callback to be invoked at the time.\n     * @param time The time to invoke the callback at.\n     * @return The id of the event which can be used for canceling the event.\n     * @example\n     * // schedule an event on the 16th measure\n     * Tone.Transport.schedule((time) => {\n     * \t// invoked on measure 16\n     * \tconsole.log(\"measure 16!\");\n     * }, \"16:0:0\");\n     */\n    schedule(callback, time) {\n        const event = new TransportEvent(this, {\n            callback,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    }\n    /**\n     * Schedule a repeated event along the timeline. The event will fire\n     * at the `interval` starting at the `startTime` and for the specified\n     * `duration`.\n     * @param  callback   The callback to invoke.\n     * @param  interval   The duration between successive callbacks. Must be a positive number.\n     * @param  startTime  When along the timeline the events should start being invoked.\n     * @param  duration How long the event should repeat.\n     * @return  The ID of the scheduled event. Use this to cancel the event.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // a callback invoked every eighth note after the first measure\n     * Tone.Transport.scheduleRepeat((time) => {\n     * \tosc.start(time).stop(time + 0.1);\n     * }, \"8n\", \"1m\");\n     */\n    scheduleRepeat(callback, interval, startTime, duration = Infinity) {\n        const event = new TransportRepeatEvent(this, {\n            callback,\n            duration: new TimeClass(this.context, duration).toTicks(),\n            interval: new TimeClass(this.context, interval).toTicks(),\n            time: new TransportTimeClass(this.context, startTime).toTicks(),\n        });\n        // kick it off if the Transport is started\n        // @ts-ignore\n        return this._addEvent(event, this._repeatedEvents);\n    }\n    /**\n     * Schedule an event that will be removed after it is invoked.\n     * @param callback The callback to invoke once.\n     * @param time The time the callback should be invoked.\n     * @returns The ID of the scheduled event.\n     */\n    scheduleOnce(callback, time) {\n        const event = new TransportEvent(this, {\n            callback,\n            once: true,\n            time: new TransportTimeClass(this.context, time).toTicks(),\n        });\n        return this._addEvent(event, this._timeline);\n    }\n    /**\n     * Clear the passed in event id from the timeline\n     * @param eventId The id of the event.\n     */\n    clear(eventId) {\n        if (this._scheduledEvents.hasOwnProperty(eventId)) {\n            const item = this._scheduledEvents[eventId.toString()];\n            item.timeline.remove(item.event);\n            item.event.dispose();\n            delete this._scheduledEvents[eventId.toString()];\n        }\n        return this;\n    }\n    /**\n     * Add an event to the correct timeline. Keep track of the\n     * timeline it was added to.\n     * @returns the event id which was just added\n     */\n    _addEvent(event, timeline) {\n        this._scheduledEvents[event.id.toString()] = {\n            event,\n            timeline,\n        };\n        timeline.add(event);\n        return event.id;\n    }\n    /**\n     * Remove scheduled events from the timeline after\n     * the given time. Repeated events will be removed\n     * if their startTime is after the given time\n     * @param after Clear all events after this time.\n     */\n    cancel(after = 0) {\n        const computedAfter = this.toTicks(after);\n        this._timeline.forEachFrom(computedAfter, event => this.clear(event.id));\n        this._repeatedEvents.forEachFrom(computedAfter, event => this.clear(event.id));\n        return this;\n    }\n    //-------------------------------------\n    // \tSTART/STOP/PAUSE\n    //-------------------------------------\n    /**\n     * Bind start/stop/pause events from the clock and emit them.\n     */\n    _bindClockEvents() {\n        this._clock.on(\"start\", (time, offset) => {\n            offset = new TicksClass(this.context, offset).toSeconds();\n            this.emit(\"start\", time, offset);\n        });\n        this._clock.on(\"stop\", (time) => {\n            this.emit(\"stop\", time);\n        });\n        this._clock.on(\"pause\", (time) => {\n            this.emit(\"pause\", time);\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\", \"stopped\", or \"paused\"\n     */\n    get state() {\n        return this._clock.getStateAtTime(this.now());\n    }\n    /**\n     * Start the transport and all sources synced to the transport.\n     * @param  time The time when the transport should start.\n     * @param  offset The timeline offset to start the transport.\n     * @example\n     * // start the transport in one second starting at beginning of the 5th measure.\n     * Tone.Transport.start(\"+1\", \"4:0:0\");\n     */\n    start(time, offset) {\n        let offsetTicks;\n        if (isDefined(offset)) {\n            offsetTicks = this.toTicks(offset);\n        }\n        // start the clock\n        this._clock.start(time, offsetTicks);\n        return this;\n    }\n    /**\n     * Stop the transport and all sources synced to the transport.\n     * @param time The time when the transport should stop.\n     * @example\n     * Tone.Transport.stop();\n     */\n    stop(time) {\n        this._clock.stop(time);\n        return this;\n    }\n    /**\n     * Pause the transport and all sources synced to the transport.\n     */\n    pause(time) {\n        this._clock.pause(time);\n        return this;\n    }\n    /**\n     * Toggle the current state of the transport. If it is\n     * started, it will stop it, otherwise it will start the Transport.\n     * @param  time The time of the event\n     */\n    toggle(time) {\n        time = this.toSeconds(time);\n        if (this._clock.getStateAtTime(time) !== \"started\") {\n            this.start(time);\n        }\n        else {\n            this.stop(time);\n        }\n        return this;\n    }\n    //-------------------------------------\n    // \tSETTERS/GETTERS\n    //-------------------------------------\n    /**\n     * The time signature as just the numerator over 4.\n     * For example 4/4 would be just 4 and 6/8 would be 3.\n     * @example\n     * // common time\n     * Tone.Transport.timeSignature = 4;\n     * // 7/8\n     * Tone.Transport.timeSignature = [7, 8];\n     * // this will be reduced to a single number\n     * Tone.Transport.timeSignature; // returns 3.5\n     */\n    get timeSignature() {\n        return this._timeSignature;\n    }\n    set timeSignature(timeSig) {\n        if (isArray(timeSig)) {\n            timeSig = (timeSig[0] / timeSig[1]) * 4;\n        }\n        this._timeSignature = timeSig;\n    }\n    /**\n     * When the Transport.loop = true, this is the starting position of the loop.\n     */\n    get loopStart() {\n        return new TimeClass(this.context, this._loopStart, \"i\").toSeconds();\n    }\n    set loopStart(startPosition) {\n        this._loopStart = this.toTicks(startPosition);\n    }\n    /**\n     * When the Transport.loop = true, this is the ending position of the loop.\n     */\n    get loopEnd() {\n        return new TimeClass(this.context, this._loopEnd, \"i\").toSeconds();\n    }\n    set loopEnd(endPosition) {\n        this._loopEnd = this.toTicks(endPosition);\n    }\n    /**\n     * If the transport loops or not.\n     */\n    get loop() {\n        return this._loop.get(this.now());\n    }\n    set loop(loop) {\n        this._loop.set(loop, this.now());\n    }\n    /**\n     * Set the loop start and stop at the same time.\n     * @example\n     * // loop over the first measure\n     * Tone.Transport.setLoopPoints(0, \"1m\");\n     * Tone.Transport.loop = true;\n     */\n    setLoopPoints(startPosition, endPosition) {\n        this.loopStart = startPosition;\n        this.loopEnd = endPosition;\n        return this;\n    }\n    /**\n     * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.\n     */\n    get swing() {\n        return this._swingAmount;\n    }\n    set swing(amount) {\n        // scale the values to a normal range\n        this._swingAmount = amount;\n    }\n    /**\n     * Set the subdivision which the swing will be applied to.\n     * The default value is an 8th note. Value must be less\n     * than a quarter note.\n     */\n    get swingSubdivision() {\n        return new TicksClass(this.context, this._swingTicks).toNotation();\n    }\n    set swingSubdivision(subdivision) {\n        this._swingTicks = this.toTicks(subdivision);\n    }\n    /**\n     * The Transport's position in Bars:Beats:Sixteenths.\n     * Setting the value will jump to that position right away.\n     */\n    get position() {\n        const now = this.now();\n        const ticks = this._clock.getTicksAtTime(now);\n        return new TicksClass(this.context, ticks).toBarsBeatsSixteenths();\n    }\n    set position(progress) {\n        const ticks = this.toTicks(progress);\n        this.ticks = ticks;\n    }\n    /**\n     * The Transport's position in seconds\n     * Setting the value will jump to that position right away.\n     */\n    get seconds() {\n        return this._clock.seconds;\n    }\n    set seconds(s) {\n        const now = this.now();\n        const ticks = this._clock.frequency.timeToTicks(s, now);\n        this.ticks = ticks;\n    }\n    /**\n     * The Transport's loop position as a normalized value. Always\n     * returns 0 if the transport if loop is not true.\n     */\n    get progress() {\n        if (this.loop) {\n            const now = this.now();\n            const ticks = this._clock.getTicksAtTime(now);\n            return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The transports current tick position.\n     */\n    get ticks() {\n        return this._clock.ticks;\n    }\n    set ticks(t) {\n        if (this._clock.ticks !== t) {\n            const now = this.now();\n            // stop everything synced to the transport\n            if (this.state === \"started\") {\n                const ticks = this._clock.getTicksAtTime(now);\n                // schedule to start on the next tick, #573\n                const time = this._clock.getTimeOfTick(Math.ceil(ticks));\n                this.emit(\"stop\", time);\n                this._clock.setTicksAtTime(t, time);\n                // restart it with the new time\n                this.emit(\"start\", time, this._clock.getSecondsAtTime(time));\n            }\n            else {\n                this._clock.setTicksAtTime(t, now);\n            }\n        }\n    }\n    /**\n     * Get the clock's ticks at the given time.\n     * @param  time  When to get the tick value\n     * @return The tick value at the given time.\n     */\n    getTicksAtTime(time) {\n        return Math.round(this._clock.getTicksAtTime(time));\n    }\n    /**\n     * Return the elapsed seconds at the given time.\n     * @param  time  When to get the elapsed seconds\n     * @return  The number of elapsed seconds\n     */\n    getSecondsAtTime(time) {\n        return this._clock.getSecondsAtTime(time);\n    }\n    /**\n     * Pulses Per Quarter note. This is the smallest resolution\n     * the Transport timing supports. This should be set once\n     * on initialization and not set again. Changing this value\n     * after other objects have been created can cause problems.\n     */\n    get PPQ() {\n        return this._clock.frequency.multiplier;\n    }\n    set PPQ(ppq) {\n        this._clock.frequency.multiplier = ppq;\n    }\n    //-------------------------------------\n    // \tSYNCING\n    //-------------------------------------\n    /**\n     * Returns the time aligned to the next subdivision\n     * of the Transport. If the Transport is not started,\n     * it will return 0.\n     * Note: this will not work precisely during tempo ramps.\n     * @param  subdivision  The subdivision to quantize to\n     * @return  The context time of the next subdivision.\n     * @example\n     * // the transport must be started, otherwise returns 0\n     * Tone.Transport.start();\n     * Tone.Transport.nextSubdivision(\"4n\");\n     */\n    nextSubdivision(subdivision) {\n        subdivision = this.toTicks(subdivision);\n        if (this.state !== \"started\") {\n            // if the transport's not started, return 0\n            return 0;\n        }\n        else {\n            const now = this.now();\n            // the remainder of the current ticks and the subdivision\n            const transportPos = this.getTicksAtTime(now);\n            const remainingTicks = subdivision - transportPos % subdivision;\n            return this._clock.nextTickTime(remainingTicks, now);\n        }\n    }\n    /**\n     * Attaches the signal to the tempo control signal so that\n     * any changes in the tempo will change the signal in the same\n     * ratio.\n     *\n     * @param signal\n     * @param ratio Optionally pass in the ratio between the two signals.\n     * \t\t\tOtherwise it will be computed based on their current values.\n     */\n    syncSignal(signal, ratio) {\n        if (!ratio) {\n            // get the sync ratio\n            const now = this.now();\n            if (signal.getValueAtTime(now) !== 0) {\n                const bpm = this.bpm.getValueAtTime(now);\n                const computedFreq = 1 / (60 / bpm / this.PPQ);\n                ratio = signal.getValueAtTime(now) / computedFreq;\n            }\n            else {\n                ratio = 0;\n            }\n        }\n        const ratioSignal = new Gain(ratio);\n        // @ts-ignore\n        this.bpm.connect(ratioSignal);\n        // @ts-ignore\n        ratioSignal.connect(signal._param);\n        this._syncedSignals.push({\n            initial: signal.value,\n            ratio: ratioSignal,\n            signal,\n        });\n        signal.value = 0;\n        return this;\n    }\n    /**\n     * Unsyncs a previously synced signal from the transport's control.\n     * See Transport.syncSignal.\n     */\n    unsyncSignal(signal) {\n        for (let i = this._syncedSignals.length - 1; i >= 0; i--) {\n            const syncedSignal = this._syncedSignals[i];\n            if (syncedSignal.signal === signal) {\n                syncedSignal.ratio.dispose();\n                syncedSignal.signal.value = syncedSignal.initial;\n                this._syncedSignals.splice(i, 1);\n            }\n        }\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._clock.dispose();\n        writable(this, \"bpm\");\n        this._timeline.dispose();\n        this._repeatedEvents.dispose();\n        return this;\n    }\n}\nEmitter.mixin(Transport);\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.transport = new Transport({ context });\n});\nonContextClose(context => {\n    context.transport.dispose();\n});\n//# sourceMappingURL=Transport.js.map","import { noOp } from \"../util/Interface\";\n/**\n * TransportEvent is an internal class used by [[Transport]]\n * to schedule events. Do no invoke this class directly, it is\n * handled from within Tone.Transport.\n */\nexport class TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        /**\n         * The unique id of the event\n         */\n        this.id = TransportEvent._eventId++;\n        const options = Object.assign(TransportEvent.getDefaults(), opts);\n        this.transport = transport;\n        this.callback = options.callback;\n        this._once = options.once;\n        this.time = options.time;\n    }\n    static getDefaults() {\n        return {\n            callback: noOp,\n            once: false,\n            time: 0,\n        };\n    }\n    /**\n     * Invoke the event callback.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        if (this.callback) {\n            this.callback(time);\n            if (this._once) {\n                this.transport.clear(this.id);\n            }\n        }\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        this.callback = undefined;\n        return this;\n    }\n}\n/**\n * Current ID counter\n */\nTransportEvent._eventId = 0;\n//# sourceMappingURL=TransportEvent.js.map","import { TicksClass } from \"../type/Ticks\";\nimport { TransportEvent } from \"./TransportEvent\";\n/**\n * TransportRepeatEvent is an internal class used by Tone.Transport\n * to schedule repeat events. This class should not be instantiated directly.\n */\nexport class TransportRepeatEvent extends TransportEvent {\n    /**\n     * @param transport The transport object which the event belongs to\n     */\n    constructor(transport, opts) {\n        super(transport, opts);\n        /**\n         * The ID of the current timeline event\n         */\n        this._currentId = -1;\n        /**\n         * The ID of the next timeline event\n         */\n        this._nextId = -1;\n        /**\n         * The time of the next event\n         */\n        this._nextTick = this.time;\n        /**\n         * a reference to the bound start method\n         */\n        this._boundRestart = this._restart.bind(this);\n        const options = Object.assign(TransportRepeatEvent.getDefaults(), opts);\n        this.duration = new TicksClass(transport.context, options.duration).valueOf();\n        this._interval = new TicksClass(transport.context, options.interval).valueOf();\n        this._nextTick = options.time;\n        this.transport.on(\"start\", this._boundRestart);\n        this.transport.on(\"loopStart\", this._boundRestart);\n        this.context = this.transport.context;\n        this._restart();\n    }\n    static getDefaults() {\n        return Object.assign({}, TransportEvent.getDefaults(), {\n            duration: Infinity,\n            interval: 1,\n            once: false,\n        });\n    }\n    /**\n     * Invoke the callback. Returns the tick time which\n     * the next event should be scheduled at.\n     * @param  time  The AudioContext time in seconds of the event\n     */\n    invoke(time) {\n        // create more events if necessary\n        this._createEvents(time);\n        // call the super class\n        super.invoke(time);\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    _createEvents(time) {\n        // schedule the next event\n        const ticks = this.transport.getTicksAtTime(time);\n        if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {\n            this._nextTick += this._interval;\n            this._currentId = this._nextId;\n            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        }\n    }\n    /**\n     * Push more events onto the timeline to keep up with the position of the timeline\n     */\n    _restart(time) {\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this._nextTick = this.time;\n        const ticks = this.transport.getTicksAtTime(time);\n        if (ticks > this.time) {\n            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;\n        }\n        this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n        this._nextTick += this._interval;\n        this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new TicksClass(this.context, this._nextTick).toSeconds());\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.transport.clear(this._currentId);\n        this.transport.clear(this._nextId);\n        this.transport.off(\"start\", this._boundRestart);\n        this.transport.off(\"loopStart\", this._boundRestart);\n        return this;\n    }\n}\n//# sourceMappingURL=TransportRepeatEvent.js.map","import { AudioContext as stdAudioContext, AudioWorkletNode as stdAudioWorkletNode, OfflineAudioContext as stdOfflineAudioContext } from \"standardized-audio-context\";\nimport { assert } from \"../util/Debug\";\nimport { isDefined } from \"../util/TypeCheck\";\n/**\n * Create a new AudioContext\n */\nexport function createAudioContext(options) {\n    return new stdAudioContext(options);\n}\n/**\n * Create a new OfflineAudioContext\n */\nexport function createOfflineAudioContext(channels, length, sampleRate) {\n    return new stdOfflineAudioContext(channels, length, sampleRate);\n}\n/**\n * A reference to the window object\n * @hidden\n */\nexport const theWindow = typeof self === \"object\" ? self : null;\n/**\n * If the browser has a window object which has an AudioContext\n * @hidden\n */\nexport const hasAudioContext = theWindow &&\n    (theWindow.hasOwnProperty(\"AudioContext\") || theWindow.hasOwnProperty(\"webkitAudioContext\"));\nexport function createAudioWorkletNode(context, name, options) {\n    assert(isDefined(stdAudioWorkletNode), \"This node only works in a secure context (https or localhost)\");\n    // @ts-ignore\n    return new stdAudioWorkletNode(context, name, options);\n}\n/**\n * This promise resolves to a boolean which indicates if the\n * functionality is supported within the currently used browse.\n * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)\n */\nexport { isSupported as supported } from \"standardized-audio-context\";\n//# sourceMappingURL=AudioContext.js.map","import { Emitter } from \"../util/Emitter\";\nexport class BaseContext extends Emitter {\n    constructor() {\n        super(...arguments);\n        this.isOffline = false;\n    }\n}\n//# sourceMappingURL=BaseContext.js.map","import { __awaiter } from \"tslib\";\nimport { Ticker } from \"../clock/Ticker\";\nimport { isAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined, isString } from \"../util/TypeCheck\";\nimport { createAudioContext, createAudioWorkletNode } from \"./AudioContext\";\nimport { closeContext, initializeContext } from \"./ContextInitialization\";\nimport { BaseContext } from \"./BaseContext\";\nimport { assert } from \"../util/Debug\";\n/**\n * Wrapper around the native AudioContext.\n * @category Core\n */\nexport class Context extends BaseContext {\n    constructor() {\n        super();\n        this.name = \"Context\";\n        /**\n         * An object containing all of the constants AudioBufferSourceNodes\n         */\n        this._constants = new Map();\n        /**\n         * All of the setTimeout events.\n         */\n        this._timeouts = new Timeline();\n        /**\n         * The timeout id counter\n         */\n        this._timeoutIds = 0;\n        /**\n         * Private indicator if the context has been initialized\n         */\n        this._initialized = false;\n        /**\n         * Indicates if the context is an OfflineAudioContext or an AudioContext\n         */\n        this.isOffline = false;\n        //--------------------------------------------\n        // AUDIO WORKLET\n        //--------------------------------------------\n        /**\n         * Maps a module name to promise of the addModule method\n         */\n        this._workletModules = new Map();\n        const options = optionsFromArguments(Context.getDefaults(), arguments, [\"context\"]);\n        if (options.context) {\n            this._context = options.context;\n        }\n        else {\n            this._context = createAudioContext({\n                latencyHint: options.latencyHint,\n            });\n        }\n        this._ticker = new Ticker(this.emit.bind(this, \"tick\"), options.clockSource, options.updateInterval);\n        this.on(\"tick\", this._timeoutLoop.bind(this));\n        // fwd events from the context\n        this._context.onstatechange = () => {\n            this.emit(\"statechange\", this.state);\n        };\n        this._setLatencyHint(options.latencyHint);\n        this.lookAhead = options.lookAhead;\n    }\n    static getDefaults() {\n        return {\n            clockSource: \"worker\",\n            latencyHint: \"interactive\",\n            lookAhead: 0.1,\n            updateInterval: 0.05,\n        };\n    }\n    /**\n     * Finish setting up the context. **You usually do not need to do this manually.**\n     */\n    initialize() {\n        if (!this._initialized) {\n            // add any additional modules\n            initializeContext(this);\n            this._initialized = true;\n        }\n        return this;\n    }\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAnalyser() {\n        return this._context.createAnalyser();\n    }\n    createOscillator() {\n        return this._context.createOscillator();\n    }\n    createBufferSource() {\n        return this._context.createBufferSource();\n    }\n    createBiquadFilter() {\n        return this._context.createBiquadFilter();\n    }\n    createBuffer(numberOfChannels, length, sampleRate) {\n        return this._context.createBuffer(numberOfChannels, length, sampleRate);\n    }\n    createChannelMerger(numberOfInputs) {\n        return this._context.createChannelMerger(numberOfInputs);\n    }\n    createChannelSplitter(numberOfOutputs) {\n        return this._context.createChannelSplitter(numberOfOutputs);\n    }\n    createConstantSource() {\n        return this._context.createConstantSource();\n    }\n    createConvolver() {\n        return this._context.createConvolver();\n    }\n    createDelay(maxDelayTime) {\n        return this._context.createDelay(maxDelayTime);\n    }\n    createDynamicsCompressor() {\n        return this._context.createDynamicsCompressor();\n    }\n    createGain() {\n        return this._context.createGain();\n    }\n    createIIRFilter(feedForward, feedback) {\n        // @ts-ignore\n        return this._context.createIIRFilter(feedForward, feedback);\n    }\n    createPanner() {\n        return this._context.createPanner();\n    }\n    createPeriodicWave(real, imag, constraints) {\n        return this._context.createPeriodicWave(real, imag, constraints);\n    }\n    createStereoPanner() {\n        return this._context.createStereoPanner();\n    }\n    createWaveShaper() {\n        return this._context.createWaveShaper();\n    }\n    createMediaStreamSource(stream) {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaStreamSource(stream);\n    }\n    createMediaStreamDestination() {\n        assert(isAudioContext(this._context), \"Not available if OfflineAudioContext\");\n        const context = this._context;\n        return context.createMediaStreamDestination();\n    }\n    decodeAudioData(audioData) {\n        return this._context.decodeAudioData(audioData);\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get currentTime() {\n        return this._context.currentTime;\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get state() {\n        return this._context.state;\n    }\n    /**\n     * The current time in seconds of the AudioContext.\n     */\n    get sampleRate() {\n        return this._context.sampleRate;\n    }\n    /**\n     * The listener\n     */\n    get listener() {\n        this.initialize();\n        return this._listener;\n    }\n    set listener(l) {\n        assert(!this._initialized, \"The listener cannot be set after initialization.\");\n        this._listener = l;\n    }\n    /**\n     * There is only one Transport per Context. It is created on initialization.\n     */\n    get transport() {\n        this.initialize();\n        return this._transport;\n    }\n    set transport(t) {\n        assert(!this._initialized, \"The transport cannot be set after initialization.\");\n        this._transport = t;\n    }\n    /**\n     * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.\n     */\n    get draw() {\n        this.initialize();\n        return this._draw;\n    }\n    set draw(d) {\n        assert(!this._initialized, \"Draw cannot be set after initialization.\");\n        this._draw = d;\n    }\n    /**\n     * A reference to the Context's destination node.\n     */\n    get destination() {\n        this.initialize();\n        return this._destination;\n    }\n    set destination(d) {\n        assert(!this._initialized, \"The destination cannot be set after initialization.\");\n        this._destination = d;\n    }\n    /**\n     * Create an audio worklet node from a name and options. The module\n     * must first be loaded using [[addAudioWorkletModule]].\n     */\n    createAudioWorkletNode(name, options) {\n        return createAudioWorkletNode(this.rawContext, name, options);\n    }\n    /**\n     * Add an AudioWorkletProcessor module\n     * @param url The url of the module\n     * @param name The name of the module\n     */\n    addAudioWorkletModule(url, name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(isDefined(this.rawContext.audioWorklet), \"AudioWorkletNode is only available in a secure context (https or localhost)\");\n            if (!this._workletModules.has(name)) {\n                this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));\n            }\n            yield this._workletModules.get(name);\n        });\n    }\n    /**\n     * Returns a promise which resolves when all of the worklets have been loaded on this context\n     */\n    workletsAreReady() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const promises = [];\n            this._workletModules.forEach(promise => promises.push(promise));\n            yield Promise.all(promises);\n        });\n    }\n    //---------------------------\n    // TICKER\n    //---------------------------\n    /**\n     * How often the interval callback is invoked.\n     * This number corresponds to how responsive the scheduling\n     * can be. context.updateInterval + context.lookAhead gives you the\n     * total latency between scheduling an event and hearing it.\n     */\n    get updateInterval() {\n        return this._ticker.updateInterval;\n    }\n    set updateInterval(interval) {\n        this._ticker.updateInterval = interval;\n    }\n    /**\n     * What the source of the clock is, either \"worker\" (default),\n     * \"timeout\", or \"offline\" (none).\n     */\n    get clockSource() {\n        return this._ticker.type;\n    }\n    set clockSource(type) {\n        this._ticker.type = type;\n    }\n    /**\n     * The type of playback, which affects tradeoffs between audio\n     * output latency and responsiveness.\n     * In addition to setting the value in seconds, the latencyHint also\n     * accepts the strings \"interactive\" (prioritizes low latency),\n     * \"playback\" (prioritizes sustained playback), \"balanced\" (balances\n     * latency and performance), and \"fastest\" (lowest latency, might glitch more often).\n     * @example\n     * // prioritize sustained playback\n     * const context = new Tone.Context({ latencyHint: \"playback\" });\n     * // set this context as the global Context\n     * Tone.setContext(context);\n     */\n    get latencyHint() {\n        return this._latencyHint;\n    }\n    /**\n     * Update the lookAhead and updateInterval based on the latencyHint\n     */\n    _setLatencyHint(hint) {\n        let lookAheadValue = 0;\n        this._latencyHint = hint;\n        if (isString(hint)) {\n            switch (hint) {\n                case \"interactive\":\n                    lookAheadValue = 0.1;\n                    break;\n                case \"playback\":\n                    lookAheadValue = 0.5;\n                    break;\n                case \"balanced\":\n                    lookAheadValue = 0.25;\n                    break;\n            }\n        }\n        this.lookAhead = lookAheadValue;\n        this.updateInterval = lookAheadValue / 2;\n    }\n    /**\n     * The unwrapped AudioContext or OfflineAudioContext\n     */\n    get rawContext() {\n        return this._context;\n    }\n    /**\n     * The current audio context time plus a short [[lookAhead]].\n     */\n    now() {\n        return this._context.currentTime + this.lookAhead;\n    }\n    /**\n     * The current audio context time without the [[lookAhead]].\n     * In most cases it is better to use [[now]] instead of [[immediate]] since\n     * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,\n     * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]\n     * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.\n     */\n    immediate() {\n        return this._context.currentTime;\n    }\n    /**\n     * Starts the audio context from a suspended state. This is required\n     * to initially start the AudioContext. See [[Tone.start]]\n     */\n    resume() {\n        if (this._context.state === \"suspended\" && isAudioContext(this._context)) {\n            return this._context.resume();\n        }\n        else {\n            return Promise.resolve();\n        }\n    }\n    /**\n     * Close the context. Once closed, the context can no longer be used and\n     * any AudioNodes created from the context will be silent.\n     */\n    close() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isAudioContext(this._context)) {\n                yield this._context.close();\n            }\n            if (this._initialized) {\n                closeContext(this);\n            }\n        });\n    }\n    /**\n     * **Internal** Generate a looped buffer at some constant value.\n     */\n    getConstant(val) {\n        if (this._constants.has(val)) {\n            return this._constants.get(val);\n        }\n        else {\n            const buffer = this._context.createBuffer(1, 128, this._context.sampleRate);\n            const arr = buffer.getChannelData(0);\n            for (let i = 0; i < arr.length; i++) {\n                arr[i] = val;\n            }\n            const constant = this._context.createBufferSource();\n            constant.channelCount = 1;\n            constant.channelCountMode = \"explicit\";\n            constant.buffer = buffer;\n            constant.loop = true;\n            constant.start(0);\n            this._constants.set(val, constant);\n            return constant;\n        }\n    }\n    /**\n     * Clean up. Also closes the audio context.\n     */\n    dispose() {\n        super.dispose();\n        this._ticker.dispose();\n        this._timeouts.dispose();\n        Object.keys(this._constants).map(val => this._constants[val].disconnect());\n        return this;\n    }\n    //---------------------------\n    // TIMEOUTS\n    //---------------------------\n    /**\n     * The private loop which keeps track of the context scheduled timeouts\n     * Is invoked from the clock source\n     */\n    _timeoutLoop() {\n        const now = this.now();\n        let firstEvent = this._timeouts.peek();\n        while (this._timeouts.length && firstEvent && firstEvent.time <= now) {\n            // invoke the callback\n            firstEvent.callback();\n            // shift the first event off\n            this._timeouts.shift();\n            // get the next one\n            firstEvent = this._timeouts.peek();\n        }\n    }\n    /**\n     * A setTimeout which is guaranteed by the clock source.\n     * Also runs in the offline context.\n     * @param  fn       The callback to invoke\n     * @param  timeout  The timeout in seconds\n     * @returns ID to use when invoking Context.clearTimeout\n     */\n    setTimeout(fn, timeout) {\n        this._timeoutIds++;\n        const now = this.now();\n        this._timeouts.add({\n            callback: fn,\n            id: this._timeoutIds,\n            time: now + timeout,\n        });\n        return this._timeoutIds;\n    }\n    /**\n     * Clears a previously scheduled timeout with Tone.context.setTimeout\n     * @param  id  The ID returned from setTimeout\n     */\n    clearTimeout(id) {\n        this._timeouts.forEach(event => {\n            if (event.id === id) {\n                this._timeouts.remove(event);\n            }\n        });\n        return this;\n    }\n    /**\n     * Clear the function scheduled by [[setInterval]]\n     */\n    clearInterval(id) {\n        return this.clearTimeout(id);\n    }\n    /**\n     * Adds a repeating event to the context's callback clock\n     */\n    setInterval(fn, interval) {\n        const id = ++this._timeoutIds;\n        const intervalFn = () => {\n            const now = this.now();\n            this._timeouts.add({\n                callback: () => {\n                    // invoke the callback\n                    fn();\n                    // invoke the event to repeat it\n                    intervalFn();\n                },\n                id,\n                time: now + interval,\n            });\n        };\n        // kick it off\n        intervalFn();\n        return id;\n    }\n}\n//# sourceMappingURL=Context.js.map","//-------------------------------------\n// INITIALIZING NEW CONTEXT\n//-------------------------------------\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyNewContext = [];\n/**\n * Used internally to setup a new Context\n */\nexport function onContextInit(cb) {\n    notifyNewContext.push(cb);\n}\n/**\n * Invoke any classes which need to also be initialized when a new context is created.\n */\nexport function initializeContext(ctx) {\n    // add any additional modules\n    notifyNewContext.forEach(cb => cb(ctx));\n}\n/**\n * Array of callbacks to invoke when a new context is created\n */\nconst notifyCloseContext = [];\n/**\n * Used internally to tear down a Context\n */\nexport function onContextClose(cb) {\n    notifyCloseContext.push(cb);\n}\nexport function closeContext(ctx) {\n    // add any additional modules\n    notifyCloseContext.forEach(cb => cb(ctx));\n}\n//# sourceMappingURL=ContextInitialization.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).\n * @category Core\n * @offline 0.5 1\n * @example\n * const delay = new Tone.Delay(0.1).toDestination();\n * // connect the signal to both the delay and the destination\n * const pulse = new Tone.PulseOscillator().fan(delay, Tone.Destination);\n * // start and stop the pulse\n * pulse.start(0).stop(0.01);\n */\nexport class Delay extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]));\n        this.name = \"Delay\";\n        const options = optionsFromArguments(Delay.getDefaults(), arguments, [\"delayTime\", \"maxDelay\"]);\n        const maxDelayInSeconds = this.toSeconds(options.maxDelay);\n        this._maxDelay = Math.max(maxDelayInSeconds, this.toSeconds(options.delayTime));\n        this._delayNode = this.input = this.output = this.context.createDelay(maxDelayInSeconds);\n        this.delayTime = new Param({\n            context: this.context,\n            param: this._delayNode.delayTime,\n            units: \"time\",\n            value: options.delayTime,\n            minValue: 0,\n            maxValue: this.maxDelay,\n        });\n        readOnly(this, \"delayTime\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            delayTime: 0,\n            maxDelay: 1,\n        });\n    }\n    /**\n     * The maximum delay time. This cannot be changed after\n     * the value is passed into the constructor.\n     */\n    get maxDelay() {\n        return this._maxDelay;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._delayNode.disconnect();\n        this.delayTime.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Delay.js.map","import { Volume } from \"../../component/channel/Volume\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\nimport { Gain } from \"./Gain\";\nimport { connectSeries, ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A single master output which is connected to the\n * AudioDestinationNode (aka your speakers).\n * It provides useful conveniences such as the ability\n * to set the volume and mute the entire application.\n * It also gives you the ability to apply master effects to your application.\n *\n * @example\n * const oscillator = new Tone.Oscillator().start();\n * // the audio will go from the oscillator to the speakers\n * oscillator.connect(Tone.Destination);\n * // a convenience for connecting to the master output is also provided:\n * oscillator.toDestination();\n * @category Core\n */\nexport class Destination extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Destination.getDefaults(), arguments));\n        this.name = \"Destination\";\n        this.input = new Volume({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        /**\n         * The volume of the master output.\n         */\n        this.volume = this.input.volume;\n        const options = optionsFromArguments(Destination.getDefaults(), arguments);\n        connectSeries(this.input, this.output, this.context.rawContext.destination);\n        this.mute = options.mute;\n        this._internalChannels = [this.input, this.context.rawContext.destination, this.output];\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const oscillator = new Tone.Oscillator().start().toDestination();\n     * setTimeout(() => {\n     * \t// mute the output\n     * \tTone.Destination.mute = true;\n     * }, 1000);\n     */\n    get mute() {\n        return this.input.mute;\n    }\n    set mute(mute) {\n        this.input.mute = mute;\n    }\n    /**\n     * Add a master effects chain. NOTE: this will disconnect any nodes which were previously\n     * chained in the master effects chain.\n     * @param args All arguments will be connected in a row and the Master will be routed through it.\n     * @example\n     * // route all audio through a filter and compressor\n     * const lowpass = new Tone.Filter(800, \"lowpass\");\n     * const compressor = new Tone.Compressor(-18);\n     * Tone.Destination.chain(lowpass, compressor);\n     */\n    chain(...args) {\n        this.input.disconnect();\n        args.unshift(this.input);\n        args.push(this.output);\n        connectSeries(...args);\n        return this;\n    }\n    /**\n     * The maximum number of channels the system can output\n     * @example\n     * console.log(Tone.Destination.maxChannelCount);\n     */\n    get maxChannelCount() {\n        return this.context.rawContext.destination.maxChannelCount;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this.volume.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.destination = new Destination({ context });\n});\nonContextClose(context => {\n    context.destination.dispose();\n});\n//# sourceMappingURL=Destination.js.map","import { __awaiter } from \"tslib\";\nimport { BaseContext } from \"./BaseContext\";\nexport class DummyContext extends BaseContext {\n    constructor() {\n        super(...arguments);\n        this.lookAhead = 0;\n        this.latencyHint = 0;\n        this.isOffline = false;\n    }\n    //---------------------------\n    // BASE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAnalyser() {\n        return {};\n    }\n    createOscillator() {\n        return {};\n    }\n    createBufferSource() {\n        return {};\n    }\n    createBiquadFilter() {\n        return {};\n    }\n    createBuffer(_numberOfChannels, _length, _sampleRate) {\n        return {};\n    }\n    createChannelMerger(_numberOfInputs) {\n        return {};\n    }\n    createChannelSplitter(_numberOfOutputs) {\n        return {};\n    }\n    createConstantSource() {\n        return {};\n    }\n    createConvolver() {\n        return {};\n    }\n    createDelay(_maxDelayTime) {\n        return {};\n    }\n    createDynamicsCompressor() {\n        return {};\n    }\n    createGain() {\n        return {};\n    }\n    createIIRFilter(_feedForward, _feedback) {\n        return {};\n    }\n    createPanner() {\n        return {};\n    }\n    createPeriodicWave(_real, _imag, _constraints) {\n        return {};\n    }\n    createStereoPanner() {\n        return {};\n    }\n    createWaveShaper() {\n        return {};\n    }\n    createMediaStreamSource(_stream) {\n        return {};\n    }\n    createMediaStreamDestination() {\n        return {};\n    }\n    decodeAudioData(_audioData) {\n        return Promise.resolve({});\n    }\n    //---------------------------\n    // TONE AUDIO CONTEXT METHODS\n    //---------------------------\n    createAudioWorkletNode(_name, _options) {\n        return {};\n    }\n    get rawContext() {\n        return {};\n    }\n    addAudioWorkletModule(_url, _name) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return Promise.resolve();\n        });\n    }\n    resume() {\n        return Promise.resolve();\n    }\n    setTimeout(_fn, _timeout) {\n        return 0;\n    }\n    clearTimeout(_id) {\n        return this;\n    }\n    setInterval(_fn, _interval) {\n        return 0;\n    }\n    clearInterval(_id) {\n        return this;\n    }\n    getConstant(_val) {\n        return {};\n    }\n    get currentTime() {\n        return 0;\n    }\n    get state() {\n        return {};\n    }\n    get sampleRate() {\n        return 0;\n    }\n    get listener() {\n        return {};\n    }\n    get transport() {\n        return {};\n    }\n    get draw() {\n        return {};\n    }\n    set draw(_d) { }\n    get destination() {\n        return {};\n    }\n    set destination(_d) { }\n    now() {\n        return 0;\n    }\n    immediate() {\n        return 0;\n    }\n}\n//# sourceMappingURL=DummyContext.js.map","import { Param } from \"../context/Param\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { readOnly } from \"../util/Interface\";\nimport { ToneAudioNode } from \"./ToneAudioNode\";\n/**\n * A thin wrapper around the Native Web Audio GainNode.\n * The GainNode is a basic building block of the Web Audio\n * API and is useful for routing audio and adjusting gains.\n * @category Core\n * @offline 0.7 1\n * @example\n * const gainNode = new Tone.Gain(0).toDestination();\n * const osc = new Tone.Oscillator(30).connect(gainNode).start();\n * gainNode.gain.rampTo(1, 0.1);\n * gainNode.gain.rampTo(0, 0.4, 0.2);\n */\nexport class Gain extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]));\n        this.name = \"Gain\";\n        /**\n         * The wrapped GainNode.\n         */\n        this._gainNode = this.context.createGain();\n        // input = output\n        this.input = this._gainNode;\n        this.output = this._gainNode;\n        const options = optionsFromArguments(Gain.getDefaults(), arguments, [\"gain\", \"units\"]);\n        this.gain = new Param({\n            context: this.context,\n            convert: options.convert,\n            param: this._gainNode.gain,\n            units: options.units,\n            value: options.gain,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        readOnly(this, \"gain\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            gain: 1,\n            units: \"gain\",\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._gainNode.disconnect();\n        this.gain.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Gain.js.map","import { ToneAudioNode } from \"./ToneAudioNode\";\nimport { Param } from \"./Param\";\nimport { onContextClose, onContextInit } from \"./ContextInitialization\";\n/**\n * Tone.Listener is a thin wrapper around the AudioListener. Listener combined\n * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you\n * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from\n * a first-person perspective. There is only one listener per audio context.\n */\nexport class Listener extends ToneAudioNode {\n    constructor() {\n        super(...arguments);\n        this.name = \"Listener\";\n        this.positionX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionX,\n        });\n        this.positionY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionY,\n        });\n        this.positionZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.positionZ,\n        });\n        this.forwardX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardX,\n        });\n        this.forwardY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardY,\n        });\n        this.forwardZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.forwardZ,\n        });\n        this.upX = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upX,\n        });\n        this.upY = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upY,\n        });\n        this.upZ = new Param({\n            context: this.context,\n            param: this.context.rawContext.listener.upZ,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            positionX: 0,\n            positionY: 0,\n            positionZ: 0,\n            forwardX: 0,\n            forwardY: 0,\n            forwardZ: -1,\n            upX: 0,\n            upY: 1,\n            upZ: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.positionX.dispose();\n        this.positionY.dispose();\n        this.positionZ.dispose();\n        this.forwardX.dispose();\n        this.forwardY.dispose();\n        this.forwardZ.dispose();\n        this.upX.dispose();\n        this.upY.dispose();\n        this.upZ.dispose();\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.listener = new Listener({ context });\n});\nonContextClose(context => {\n    context.listener.dispose();\n});\n//# sourceMappingURL=Listener.js.map","import { __awaiter } from \"tslib\";\nimport { getContext, setContext } from \"../Global\";\nimport { OfflineContext } from \"./OfflineContext\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.\n * The OfflineAudioContext is capable of rendering much faster than real time in many cases.\n * The callback function also passes in an offline instance of [[Context]] which can be used\n * to schedule events along the Transport.\n * @param  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.\n * @param  duration     the amount of time to record for.\n * @return  The promise which is invoked with the ToneAudioBuffer of the recorded output.\n * @example\n * // render 2 seconds of the oscillator\n * Tone.Offline(() => {\n * \t// only nodes created in this callback will be recorded\n * \tconst oscillator = new Tone.Oscillator().toDestination().start(0);\n * }, 2).then((buffer) => {\n * \t// do something with the output buffer\n * \tconsole.log(buffer);\n * });\n * @example\n * // can also schedule events along the Transport\n * // using the passed in Offline Transport\n * Tone.Offline(({ transport }) => {\n * \tconst osc = new Tone.Oscillator().toDestination();\n * \ttransport.schedule(time => {\n * \t\tosc.start(time).stop(time + 0.1);\n * \t}, 1);\n * \t// make sure to start the transport\n * \ttransport.start(0.2);\n * }, 4).then((buffer) => {\n * \t// do something with the output buffer\n * \tconsole.log(buffer);\n * });\n * @category Core\n */\nexport function Offline(callback, duration, channels = 2, sampleRate = getContext().sampleRate) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // set the OfflineAudioContext based on the current context\n        const originalContext = getContext();\n        const context = new OfflineContext(channels, duration, sampleRate);\n        setContext(context);\n        // invoke the callback/scheduling\n        yield callback(context);\n        // then render the audio\n        const bufferPromise = context.render();\n        // return the original AudioContext\n        setContext(originalContext);\n        // await the rendering\n        const buffer = yield bufferPromise;\n        // return the audio\n        return new ToneAudioBuffer(buffer);\n    });\n}\n//# sourceMappingURL=Offline.js.map","import { __awaiter } from \"tslib\";\nimport { createOfflineAudioContext } from \"../context/AudioContext\";\nimport { Context } from \"../context/Context\";\nimport { isOfflineAudioContext } from \"../util/AdvancedTypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\n/**\n * Wrapper around the OfflineAudioContext\n * @category Core\n * @example\n * // generate a single channel, 0.5 second buffer\n * const context = new Tone.OfflineContext(1, 0.5);\n * const osc = new Tone.Oscillator({ context });\n * context.render().then(buffer => {\n * \tconsole.log(buffer.numberOfChannels, buffer.duration);\n * });\n */\nexport class OfflineContext extends Context {\n    constructor() {\n        super({\n            clockSource: \"offline\",\n            context: isOfflineAudioContext(arguments[0]) ?\n                arguments[0] : createOfflineAudioContext(arguments[0], arguments[1] * arguments[2], arguments[2]),\n            lookAhead: 0,\n            updateInterval: isOfflineAudioContext(arguments[0]) ?\n                128 / arguments[0].sampleRate : 128 / arguments[2],\n        });\n        this.name = \"OfflineContext\";\n        /**\n         * An artificial clock source\n         */\n        this._currentTime = 0;\n        this.isOffline = true;\n        this._duration = isOfflineAudioContext(arguments[0]) ?\n            arguments[0].length / arguments[0].sampleRate : arguments[1];\n    }\n    /**\n     * Override the now method to point to the internal clock time\n     */\n    now() {\n        return this._currentTime;\n    }\n    /**\n     * Same as this.now()\n     */\n    get currentTime() {\n        return this._currentTime;\n    }\n    /**\n     * Render just the clock portion of the audio context.\n     */\n    _renderClock(asynchronous) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let index = 0;\n            while (this._duration - this._currentTime >= 0) {\n                // invoke all the callbacks on that time\n                this.emit(\"tick\");\n                // increment the clock in block-sized chunks\n                this._currentTime += 128 / this.sampleRate;\n                // yield once a second of audio\n                index++;\n                const yieldEvery = Math.floor(this.sampleRate / 128);\n                if (asynchronous && index % yieldEvery === 0) {\n                    yield new Promise(done => setTimeout(done, 1));\n                }\n            }\n        });\n    }\n    /**\n     * Render the output of the OfflineContext\n     * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.\n     */\n    render(asynchronous = true) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.workletsAreReady();\n            yield this._renderClock(asynchronous);\n            const buffer = yield this._context.startRendering();\n            return new ToneAudioBuffer(buffer);\n        });\n    }\n    /**\n     * Close the context\n     */\n    close() {\n        return Promise.resolve();\n    }\n}\n//# sourceMappingURL=OfflineContext.js.map","import { dbToGain, gainToDb } from \"../type/Conversions\";\nimport { isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { Timeline } from \"../util/Timeline\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { EQ } from \"../util/Math\";\nimport { assert, assertRange } from \"../util/Debug\";\n/**\n * Param wraps the native Web Audio's AudioParam to provide\n * additional unit conversion functionality. It also\n * serves as a base-class for classes which have a single,\n * automatable parameter.\n */\nexport class Param extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]));\n        this.name = \"Param\";\n        this.overridden = false;\n        /**\n         * The minimum output value\n         */\n        this._minOutput = 1e-7;\n        const options = optionsFromArguments(Param.getDefaults(), arguments, [\"param\", \"units\", \"convert\"]);\n        assert(isDefined(options.param) &&\n            (isAudioParam(options.param) || options.param instanceof Param), \"param must be an AudioParam\");\n        while (!isAudioParam(options.param)) {\n            options.param = options.param._param;\n        }\n        this._swappable = isDefined(options.swappable) ? options.swappable : false;\n        if (this._swappable) {\n            this.input = this.context.createGain();\n            // initialize\n            this._param = options.param;\n            this.input.connect(this._param);\n        }\n        else {\n            this._param = this.input = options.param;\n        }\n        this._events = new Timeline(1000);\n        this._initialValue = this._param.defaultValue;\n        this.units = options.units;\n        this.convert = options.convert;\n        this._minValue = options.minValue;\n        this._maxValue = options.maxValue;\n        // if the value is defined, set it immediately\n        if (isDefined(options.value) && options.value !== this._toType(this._initialValue)) {\n            this.setValueAtTime(options.value, 0);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            convert: true,\n            units: \"number\",\n        });\n    }\n    get value() {\n        const now = this.now();\n        return this.getValueAtTime(now);\n    }\n    set value(value) {\n        this.cancelScheduledValues(this.now());\n        this.setValueAtTime(value, this.now());\n    }\n    get minValue() {\n        // if it's not the default minValue, return it\n        if (isDefined(this._minValue)) {\n            return this._minValue;\n        }\n        else if (this.units === \"time\" || this.units === \"frequency\" ||\n            this.units === \"normalRange\" || this.units === \"positive\" ||\n            this.units === \"transportTime\" || this.units === \"ticks\" ||\n            this.units === \"bpm\" || this.units === \"hertz\" || this.units === \"samples\") {\n            return 0;\n        }\n        else if (this.units === \"audioRange\") {\n            return -1;\n        }\n        else if (this.units === \"decibels\") {\n            return -Infinity;\n        }\n        else {\n            return this._param.minValue;\n        }\n    }\n    get maxValue() {\n        if (isDefined(this._maxValue)) {\n            return this._maxValue;\n        }\n        else if (this.units === \"normalRange\" ||\n            this.units === \"audioRange\") {\n            return 1;\n        }\n        else {\n            return this._param.maxValue;\n        }\n    }\n    /**\n     * Type guard based on the unit name\n     */\n    _is(arg, type) {\n        return this.units === type;\n    }\n    /**\n     * Make sure the value is always in the defined range\n     */\n    _assertRange(value) {\n        if (isDefined(this.maxValue) && isDefined(this.minValue)) {\n            assertRange(value, this._fromType(this.minValue), this._fromType(this.maxValue));\n        }\n        return value;\n    }\n    /**\n     * Convert the given value from the type specified by Param.units\n     * into the destination value (such as Gain or Frequency).\n     */\n    _fromType(val) {\n        if (this.convert && !this.overridden) {\n            if (this._is(val, \"time\")) {\n                return this.toSeconds(val);\n            }\n            else if (this._is(val, \"decibels\")) {\n                return dbToGain(val);\n            }\n            else if (this._is(val, \"frequency\")) {\n                return this.toFrequency(val);\n            }\n            else {\n                return val;\n            }\n        }\n        else if (this.overridden) {\n            // if it's overridden, should only schedule 0s\n            return 0;\n        }\n        else {\n            return val;\n        }\n    }\n    /**\n     * Convert the parameters value into the units specified by Param.units.\n     */\n    _toType(val) {\n        if (this.convert && this.units === \"decibels\") {\n            return gainToDb(val);\n        }\n        else {\n            return val;\n        }\n    }\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // all docs are generated from ParamInterface.ts\n    //-------------------------------------\n    setValueAtTime(value, time) {\n        const computedTime = this.toSeconds(time);\n        const numericValue = this._fromType(value);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(time)}`);\n        this._assertRange(numericValue);\n        this.log(this.units, \"setValueAtTime\", value, computedTime);\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: numericValue,\n        });\n        this._param.setValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    getValueAtTime(time) {\n        const computedTime = Math.max(this.toSeconds(time), 0);\n        const after = this._events.getAfter(computedTime);\n        const before = this._events.get(computedTime);\n        let value = this._initialValue;\n        // if it was set by\n        if (before === null) {\n            value = this._initialValue;\n        }\n        else if (before.type === \"setTargetAtTime\" && (after === null || after.type === \"setValueAtTime\")) {\n            const previous = this._events.getBefore(before.time);\n            let previousVal;\n            if (previous === null) {\n                previousVal = this._initialValue;\n            }\n            else {\n                previousVal = previous.value;\n            }\n            if (before.type === \"setTargetAtTime\") {\n                value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);\n            }\n        }\n        else if (after === null) {\n            value = before.value;\n        }\n        else if (after.type === \"linearRampToValueAtTime\" || after.type === \"exponentialRampToValueAtTime\") {\n            let beforeValue = before.value;\n            if (before.type === \"setTargetAtTime\") {\n                const previous = this._events.getBefore(before.time);\n                if (previous === null) {\n                    beforeValue = this._initialValue;\n                }\n                else {\n                    beforeValue = previous.value;\n                }\n            }\n            if (after.type === \"linearRampToValueAtTime\") {\n                value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n            else {\n                value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);\n            }\n        }\n        else {\n            value = before.value;\n        }\n        return this._toType(value);\n    }\n    setRampPoint(time) {\n        time = this.toSeconds(time);\n        let currentVal = this.getValueAtTime(time);\n        this.cancelAndHoldAtTime(time);\n        if (this._fromType(currentVal) === 0) {\n            currentVal = this._toType(this._minOutput);\n        }\n        this.setValueAtTime(currentVal, time);\n        return this;\n    }\n    linearRampToValueAtTime(value, endTime) {\n        const numericValue = this._fromType(value);\n        const computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n        this._assertRange(numericValue);\n        this._events.add({\n            time: computedTime,\n            type: \"linearRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"linearRampToValueAtTime\", value, computedTime);\n        this._param.linearRampToValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, endTime) {\n        let numericValue = this._fromType(value);\n        numericValue = Math.max(this._minOutput, numericValue);\n        this._assertRange(numericValue);\n        const computedTime = this.toSeconds(endTime);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(value)}, ${JSON.stringify(endTime)}`);\n        // store the event\n        this._events.add({\n            time: computedTime,\n            type: \"exponentialRampToValueAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"exponentialRampToValueAtTime\", value, computedTime);\n        this._param.exponentialRampToValueAtTime(numericValue, computedTime);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        startTime = this.toSeconds(startTime);\n        this.setRampPoint(startTime);\n        this.exponentialApproachValueAtTime(value, startTime, rampTime);\n        return this;\n    }\n    exponentialApproachValueAtTime(value, time, rampTime) {\n        time = this.toSeconds(time);\n        rampTime = this.toSeconds(rampTime);\n        const timeConstant = Math.log(rampTime + 1) / Math.log(200);\n        this.setTargetAtTime(value, time, timeConstant);\n        // at 90% start a linear ramp to the final value\n        this.cancelAndHoldAtTime(time + rampTime * 0.9);\n        this.linearRampToValueAtTime(value, time + rampTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        const numericValue = this._fromType(value);\n        // The value will never be able to approach without timeConstant > 0.\n        assert(isFinite(timeConstant) && timeConstant > 0, \"timeConstant must be a number greater than 0\");\n        const computedTime = this.toSeconds(startTime);\n        this._assertRange(numericValue);\n        assert(isFinite(numericValue) && isFinite(computedTime), `Invalid argument(s) to setTargetAtTime: ${JSON.stringify(value)}, ${JSON.stringify(startTime)}`);\n        this._events.add({\n            constant: timeConstant,\n            time: computedTime,\n            type: \"setTargetAtTime\",\n            value: numericValue,\n        });\n        this.log(this.units, \"setTargetAtTime\", value, computedTime, timeConstant);\n        this._param.setTargetAtTime(numericValue, computedTime, timeConstant);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling = 1) {\n        duration = this.toSeconds(duration);\n        startTime = this.toSeconds(startTime);\n        const startingValue = this._fromType(values[0]) * scaling;\n        this.setValueAtTime(this._toType(startingValue), startTime);\n        const segTime = duration / (values.length - 1);\n        for (let i = 1; i < values.length; i++) {\n            const numericValue = this._fromType(values[i]) * scaling;\n            this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);\n        }\n        return this;\n    }\n    cancelScheduledValues(time) {\n        const computedTime = this.toSeconds(time);\n        assert(isFinite(computedTime), `Invalid argument to cancelScheduledValues: ${JSON.stringify(time)}`);\n        this._events.cancel(computedTime);\n        this._param.cancelScheduledValues(computedTime);\n        this.log(this.units, \"cancelScheduledValues\", computedTime);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        const computedTime = this.toSeconds(time);\n        const valueAtTime = this._fromType(this.getValueAtTime(computedTime));\n        // remove the schedule events\n        assert(isFinite(computedTime), `Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(time)}`);\n        this.log(this.units, \"cancelAndHoldAtTime\", computedTime, \"value=\" + valueAtTime);\n        // if there is an event at the given computedTime\n        // and that even is not a \"set\"\n        const before = this._events.get(computedTime);\n        const after = this._events.getAfter(computedTime);\n        if (before && EQ(before.time, computedTime)) {\n            // remove everything after\n            if (after) {\n                this._param.cancelScheduledValues(after.time);\n                this._events.cancel(after.time);\n            }\n            else {\n                this._param.cancelAndHoldAtTime(computedTime);\n                this._events.cancel(computedTime + this.sampleTime);\n            }\n        }\n        else if (after) {\n            this._param.cancelScheduledValues(after.time);\n            // cancel the next event(s)\n            this._events.cancel(after.time);\n            if (after.type === \"linearRampToValueAtTime\") {\n                this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n            else if (after.type === \"exponentialRampToValueAtTime\") {\n                this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);\n            }\n        }\n        // set the value at the given time\n        this._events.add({\n            time: computedTime,\n            type: \"setValueAtTime\",\n            value: valueAtTime,\n        });\n        this._param.setValueAtTime(valueAtTime, computedTime);\n        return this;\n    }\n    rampTo(value, rampTime = 0.1, startTime) {\n        if (this.units === \"frequency\" || this.units === \"bpm\" || this.units === \"decibels\") {\n            this.exponentialRampTo(value, rampTime, startTime);\n        }\n        else {\n            this.linearRampTo(value, rampTime, startTime);\n        }\n        return this;\n    }\n    /**\n     * Apply all of the previously scheduled events to the passed in Param or AudioParam.\n     * The applied values will start at the context's current time and schedule\n     * all of the events which are scheduled on this Param onto the passed in param.\n     */\n    apply(param) {\n        const now = this.context.currentTime;\n        // set the param's value at the current time and schedule everything else\n        param.setValueAtTime(this.getValueAtTime(now), now);\n        // if the previous event was a curve, then set the rest of it\n        const previousEvent = this._events.get(now);\n        if (previousEvent && previousEvent.type === \"setTargetAtTime\") {\n            // approx it until the next event with linear ramps\n            const nextEvent = this._events.getAfter(previousEvent.time);\n            // or for 2 seconds if there is no event\n            const endTime = nextEvent ? nextEvent.time : now + 2;\n            const subdivisions = (endTime - now) / 10;\n            for (let i = now; i < endTime; i += subdivisions) {\n                param.linearRampToValueAtTime(this.getValueAtTime(i), i);\n            }\n        }\n        this._events.forEachAfter(this.context.currentTime, event => {\n            if (event.type === \"cancelScheduledValues\") {\n                param.cancelScheduledValues(event.time);\n            }\n            else if (event.type === \"setTargetAtTime\") {\n                param.setTargetAtTime(event.value, event.time, event.constant);\n            }\n            else {\n                param[event.type](event.value, event.time);\n            }\n        });\n        return this;\n    }\n    /**\n     * Replace the Param's internal AudioParam. Will apply scheduled curves\n     * onto the parameter and replace the connections.\n     */\n    setParam(param) {\n        assert(this._swappable, \"The Param must be assigned as 'swappable' in the constructor\");\n        const input = this.input;\n        input.disconnect(this._param);\n        this.apply(param);\n        this._param = param;\n        input.connect(this._param);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._events.dispose();\n        return this;\n    }\n    get defaultValue() {\n        return this._toType(this._param.defaultValue);\n    }\n    //-------------------------------------\n    // \tAUTOMATION CURVE CALCULATIONS\n    // \tMIT License, copyright (c) 2014 Jordan Santell\n    //-------------------------------------\n    // Calculates the the value along the curve produced by setTargetAtTime\n    _exponentialApproach(t0, v0, v1, timeConstant, t) {\n        return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);\n    }\n    // Calculates the the value along the curve produced by linearRampToValueAtTime\n    _linearInterpolate(t0, v0, t1, v1, t) {\n        return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));\n    }\n    // Calculates the the value along the curve produced by exponentialRampToValueAtTime\n    _exponentialInterpolate(t0, v0, t1, v1, t) {\n        return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));\n    }\n}\n//# sourceMappingURL=Param.js.map","import { __awaiter } from \"tslib\";\nimport { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { isAudioBuffer } from \"../util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isArray, isNumber, isString } from \"../util/TypeCheck\";\nimport { assert } from \"../util/Debug\";\n/**\n * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all\n * classes that make requests for audio files such as Tone.Player,\n * Tone.Sampler and Tone.Convolver.\n * Aside from load callbacks from individual buffers, ToneAudioBuffer\n * provides events which keep track of the loading progress\n * of _all_ of the buffers. These are ToneAudioBuffer.on(\"load\" / \"progress\" / \"error\")\n * @example\n * const buffer = new Tone.ToneAudioBuffer(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n * \tconsole.log(\"loaded\");\n * });\n * @category Core\n */\nexport class ToneAudioBuffer extends Tone {\n    constructor() {\n        super();\n        this.name = \"ToneAudioBuffer\";\n        /**\n         * Callback when the buffer is loaded.\n         */\n        this.onload = noOp;\n        const options = optionsFromArguments(ToneAudioBuffer.getDefaults(), arguments, [\"url\", \"onload\", \"onerror\"]);\n        this.reverse = options.reverse;\n        this.onload = options.onload;\n        if (options.url && isAudioBuffer(options.url) || options.url instanceof ToneAudioBuffer) {\n            this.set(options.url);\n        }\n        else if (isString(options.url)) {\n            // initiate the download\n            this.load(options.url).catch(options.onerror);\n        }\n    }\n    static getDefaults() {\n        return {\n            onerror: noOp,\n            onload: noOp,\n            reverse: false,\n        };\n    }\n    /**\n     * The sample rate of the AudioBuffer\n     */\n    get sampleRate() {\n        if (this._buffer) {\n            return this._buffer.sampleRate;\n        }\n        else {\n            return getContext().sampleRate;\n        }\n    }\n    /**\n     * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.\n     */\n    set(buffer) {\n        if (buffer instanceof ToneAudioBuffer) {\n            // if it's loaded, set it\n            if (buffer.loaded) {\n                this._buffer = buffer.get();\n            }\n            else {\n                // otherwise when it's loaded, invoke it's callback\n                buffer.onload = () => {\n                    this.set(buffer);\n                    this.onload(this);\n                };\n            }\n        }\n        else {\n            this._buffer = buffer;\n        }\n        // reverse it initially\n        if (this._reversed) {\n            this._reverse();\n        }\n        return this;\n    }\n    /**\n     * The audio buffer stored in the object.\n     */\n    get() {\n        return this._buffer;\n    }\n    /**\n     * Makes an fetch request for the selected url then decodes the file as an audio buffer.\n     * Invokes the callback once the audio buffer loads.\n     * @param url The url of the buffer to load. filetype support depends on the browser.\n     * @returns A Promise which resolves with this ToneAudioBuffer\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doneLoading = ToneAudioBuffer.load(url).then(audioBuffer => {\n                this.set(audioBuffer);\n                // invoke the onload method\n                this.onload(this);\n            });\n            ToneAudioBuffer.downloads.push(doneLoading);\n            try {\n                yield doneLoading;\n            }\n            finally {\n                // remove the downloaded file\n                const index = ToneAudioBuffer.downloads.indexOf(doneLoading);\n                ToneAudioBuffer.downloads.splice(index, 1);\n            }\n            return this;\n        });\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._buffer = undefined;\n        return this;\n    }\n    /**\n     * Set the audio buffer from the array.\n     * To create a multichannel AudioBuffer, pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     */\n    fromArray(array) {\n        const isMultidimensional = isArray(array) && array[0].length > 0;\n        const channels = isMultidimensional ? array.length : 1;\n        const len = isMultidimensional ? array[0].length : array.length;\n        const context = getContext();\n        const buffer = context.createBuffer(channels, len, context.sampleRate);\n        const multiChannelArray = !isMultidimensional && channels === 1 ?\n            [array] : array;\n        for (let c = 0; c < channels; c++) {\n            buffer.copyToChannel(multiChannelArray[c], c);\n        }\n        this._buffer = buffer;\n        return this;\n    }\n    /**\n     * Sums multiple channels into 1 channel\n     * @param chanNum Optionally only copy a single channel from the array.\n     */\n    toMono(chanNum) {\n        if (isNumber(chanNum)) {\n            this.fromArray(this.toArray(chanNum));\n        }\n        else {\n            let outputArray = new Float32Array(this.length);\n            const numChannels = this.numberOfChannels;\n            for (let channel = 0; channel < numChannels; channel++) {\n                const channelArray = this.toArray(channel);\n                for (let i = 0; i < channelArray.length; i++) {\n                    outputArray[i] += channelArray[i];\n                }\n            }\n            // divide by the number of channels\n            outputArray = outputArray.map(sample => sample / numChannels);\n            this.fromArray(outputArray);\n        }\n        return this;\n    }\n    /**\n     * Get the buffer as an array. Single channel buffers will return a 1-dimensional\n     * Float32Array, and multichannel buffers will return multidimensional arrays.\n     * @param channel Optionally only copy a single channel from the array.\n     */\n    toArray(channel) {\n        if (isNumber(channel)) {\n            return this.getChannelData(channel);\n        }\n        else if (this.numberOfChannels === 1) {\n            return this.toArray(0);\n        }\n        else {\n            const ret = [];\n            for (let c = 0; c < this.numberOfChannels; c++) {\n                ret[c] = this.getChannelData(c);\n            }\n            return ret;\n        }\n    }\n    /**\n     * Returns the Float32Array representing the PCM audio data for the specific channel.\n     * @param  channel  The channel number to return\n     * @return The audio as a TypedArray\n     */\n    getChannelData(channel) {\n        if (this._buffer) {\n            return this._buffer.getChannelData(channel);\n        }\n        else {\n            return new Float32Array(0);\n        }\n    }\n    /**\n     * Cut a subsection of the array and return a buffer of the\n     * subsection. Does not modify the original buffer\n     * @param start The time to start the slice\n     * @param end The end time to slice. If none is given will default to the end of the buffer\n     */\n    slice(start, end = this.duration) {\n        const startSamples = Math.floor(start * this.sampleRate);\n        const endSamples = Math.floor(end * this.sampleRate);\n        assert(startSamples < endSamples, \"The start time must be less than the end time\");\n        const length = endSamples - startSamples;\n        const retBuffer = getContext().createBuffer(this.numberOfChannels, length, this.sampleRate);\n        for (let channel = 0; channel < this.numberOfChannels; channel++) {\n            retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);\n        }\n        return new ToneAudioBuffer(retBuffer);\n    }\n    /**\n     * Reverse the buffer.\n     */\n    _reverse() {\n        if (this.loaded) {\n            for (let i = 0; i < this.numberOfChannels; i++) {\n                this.getChannelData(i).reverse();\n            }\n        }\n        return this;\n    }\n    /**\n     * If the buffer is loaded or not\n     */\n    get loaded() {\n        return this.length > 0;\n    }\n    /**\n     * The duration of the buffer in seconds.\n     */\n    get duration() {\n        if (this._buffer) {\n            return this._buffer.duration;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The length of the buffer in samples\n     */\n    get length() {\n        if (this._buffer) {\n            return this._buffer.length;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The number of discrete audio channels. Returns 0 if no buffer is loaded.\n     */\n    get numberOfChannels() {\n        if (this._buffer) {\n            return this._buffer.numberOfChannels;\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * Reverse the buffer.\n     */\n    get reverse() {\n        return this._reversed;\n    }\n    set reverse(rev) {\n        if (this._reversed !== rev) {\n            this._reversed = rev;\n            this._reverse();\n        }\n    }\n    /**\n     * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,\n     * pass in a multidimensional array.\n     * @param array The array to fill the audio buffer\n     * @return A ToneAudioBuffer created from the array\n     */\n    static fromArray(array) {\n        return (new ToneAudioBuffer()).fromArray(array);\n    }\n    /**\n     * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer\n     * @param  url The url to load.\n     * @return A promise which resolves to a ToneAudioBuffer\n     */\n    static fromUrl(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const buffer = new ToneAudioBuffer();\n            return yield buffer.load(url);\n        });\n    }\n    /**\n     * Loads a url using fetch and returns the AudioBuffer.\n     */\n    static load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // test if the url contains multiple extensions\n            const matches = url.match(/\\[(.+\\|?)+\\]$/);\n            if (matches) {\n                const extensions = matches[1].split(\"|\");\n                let extension = extensions[0];\n                for (const ext of extensions) {\n                    if (ToneAudioBuffer.supportsType(ext)) {\n                        extension = ext;\n                        break;\n                    }\n                }\n                url = url.replace(matches[0], extension);\n            }\n            // make sure there is a slash between the baseUrl and the url\n            const baseUrl = ToneAudioBuffer.baseUrl === \"\" || ToneAudioBuffer.baseUrl.endsWith(\"/\") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + \"/\";\n            const response = yield fetch(baseUrl + url);\n            if (!response.ok) {\n                throw new Error(`could not load url: ${url}`);\n            }\n            const arrayBuffer = yield response.arrayBuffer();\n            const audioBuffer = yield getContext().decodeAudioData(arrayBuffer);\n            return audioBuffer;\n        });\n    }\n    /**\n     * Checks a url's extension to see if the current browser can play that file type.\n     * @param url The url/extension to test\n     * @return If the file extension can be played\n     * @static\n     * @example\n     * Tone.ToneAudioBuffer.supportsType(\"wav\"); // returns true\n     * Tone.ToneAudioBuffer.supportsType(\"path/to/file.wav\"); // returns true\n     */\n    static supportsType(url) {\n        const extensions = url.split(\".\");\n        const extension = extensions[extensions.length - 1];\n        const response = document.createElement(\"audio\").canPlayType(\"audio/\" + extension);\n        return response !== \"\";\n    }\n    /**\n     * Returns a Promise which resolves when all of the buffers have loaded\n     */\n    static loaded() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // this makes sure that the function is always async\n            yield Promise.resolve();\n            while (ToneAudioBuffer.downloads.length) {\n                yield ToneAudioBuffer.downloads[0];\n            }\n        });\n    }\n}\n//-------------------------------------\n// STATIC METHODS\n//-------------------------------------\n/**\n * A path which is prefixed before every url.\n */\nToneAudioBuffer.baseUrl = \"\";\n/**\n * All of the downloads\n */\nToneAudioBuffer.downloads = [];\n//# sourceMappingURL=ToneAudioBuffer.js.map","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"../util/Defaults\";\nimport { noOp } from \"../util/Interface\";\nimport { isString } from \"../util/TypeCheck\";\nimport { ToneAudioBuffer } from \"./ToneAudioBuffer\";\nimport { assert } from \"../util/Debug\";\n/**\n * A data structure for holding multiple buffers in a Map-like datastructure.\n *\n * @example\n * const pianoSamples = new Tone.ToneAudioBuffers({\n * \tC1: \"https://tonejs.github.io/examples/audio/casio/C1.mp3\",\n * \tC2: \"https://tonejs.github.io/examples/audio/casio/C2.mp3\",\n * }, () => {\n * \tconst player = new Tone.Player().toDestination();\n * \t// play one of the samples when they all load\n * \tplayer.buffer = pianoSamples.get(\"C2\");\n * \tplayer.start();\n * });\n * @example\n * // To pass in additional parameters in the second parameter\n * const buffers = new Tone.ToneAudioBuffers({\n * \t urls: {\n * \t\t C1: \"C1.mp3\",\n * \t\t C2: \"C2.mp3\",\n * \t },\n * \t onload: () => console.log(\"loaded\"),\n * \t baseUrl: \"https://tonejs.github.io/examples/audio/casio/\"\n * });\n * @category Core\n */\nexport class ToneAudioBuffers extends Tone {\n    constructor() {\n        super();\n        this.name = \"ToneAudioBuffers\";\n        /**\n         * All of the buffers\n         */\n        this._buffers = new Map();\n        /**\n         * Keep track of the number of loaded buffers\n         */\n        this._loadingCount = 0;\n        const options = optionsFromArguments(ToneAudioBuffers.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        this.baseUrl = options.baseUrl;\n        // add each one\n        Object.keys(options.urls).forEach(name => {\n            this._loadingCount++;\n            const url = options.urls[name];\n            this.add(name, url, this._bufferLoaded.bind(this, options.onload), options.onerror);\n        });\n    }\n    static getDefaults() {\n        return {\n            baseUrl: \"\",\n            onerror: noOp,\n            onload: noOp,\n            urls: {},\n        };\n    }\n    /**\n     * True if the buffers object has a buffer by that name.\n     * @param  name  The key or index of the buffer.\n     */\n    has(name) {\n        return this._buffers.has(name.toString());\n    }\n    /**\n     * Get a buffer by name. If an array was loaded,\n     * then use the array index.\n     * @param  name  The key or index of the buffer.\n     */\n    get(name) {\n        assert(this.has(name), `ToneAudioBuffers has no buffer named: ${name}`);\n        return this._buffers.get(name.toString());\n    }\n    /**\n     * A buffer was loaded. decrement the counter.\n     */\n    _bufferLoaded(callback) {\n        this._loadingCount--;\n        if (this._loadingCount === 0 && callback) {\n            callback();\n        }\n    }\n    /**\n     * If the buffers are loaded or not\n     */\n    get loaded() {\n        return Array.from(this._buffers).every(([_, buffer]) => buffer.loaded);\n    }\n    /**\n     * Add a buffer by name and url to the Buffers\n     * @param  name      A unique name to give the buffer\n     * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     * @param  onerror  Invoked if the buffer can't be loaded\n     */\n    add(name, url, callback = noOp, onerror = noOp) {\n        if (isString(url)) {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(this.baseUrl + url, callback, onerror));\n        }\n        else {\n            this._buffers.set(name.toString(), new ToneAudioBuffer(url, callback, onerror));\n        }\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._buffers.forEach(buffer => buffer.dispose());\n        this._buffers.clear();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneAudioBuffers.js.map","import { isAudioNode, isAudioParam } from \"../util/AdvancedTypeCheck\";\nimport { isDefined } from \"../util/TypeCheck\";\nimport { Param } from \"./Param\";\nimport { ToneWithContext } from \"./ToneWithContext\";\nimport { assert, warn } from \"../util/Debug\";\n/**\n * ToneAudioNode is the base class for classes which process audio.\n */\nexport class ToneAudioNode extends ToneWithContext {\n    constructor() {\n        super(...arguments);\n        /**\n         * The name of the class\n         */\n        this.name = \"ToneAudioNode\";\n        /**\n         * List all of the node that must be set to match the ChannelProperties\n         */\n        this._internalChannels = [];\n    }\n    /**\n     * The number of inputs feeding into the AudioNode.\n     * For source nodes, this will be 0.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfInputs);\n     */\n    get numberOfInputs() {\n        if (isDefined(this.input)) {\n            if (isAudioParam(this.input) || this.input instanceof Param) {\n                return 1;\n            }\n            else {\n                return this.input.numberOfInputs;\n            }\n        }\n        else {\n            return 0;\n        }\n    }\n    /**\n     * The number of outputs of the AudioNode.\n     * @example\n     * const node = new Tone.Gain();\n     * console.log(node.numberOfOutputs);\n     */\n    get numberOfOutputs() {\n        if (isDefined(this.output)) {\n            return this.output.numberOfOutputs;\n        }\n        else {\n            return 0;\n        }\n    }\n    //-------------------------------------\n    // AUDIO PROPERTIES\n    //-------------------------------------\n    /**\n     * Used to decide which nodes to get/set properties on\n     */\n    _isAudioNode(node) {\n        return isDefined(node) && (node instanceof ToneAudioNode || isAudioNode(node));\n    }\n    /**\n     * Get all of the audio nodes (either internal or input/output) which together\n     * make up how the class node responds to channel input/output\n     */\n    _getInternalNodes() {\n        const nodeList = this._internalChannels.slice(0);\n        if (this._isAudioNode(this.input)) {\n            nodeList.push(this.input);\n        }\n        if (this._isAudioNode(this.output)) {\n            if (this.input !== this.output) {\n                nodeList.push(this.output);\n            }\n        }\n        return nodeList;\n    }\n    /**\n     * Set the audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     * @param options\n     */\n    _setChannelProperties(options) {\n        const nodeList = this._getInternalNodes();\n        nodeList.forEach(node => {\n            node.channelCount = options.channelCount;\n            node.channelCountMode = options.channelCountMode;\n            node.channelInterpretation = options.channelInterpretation;\n        });\n    }\n    /**\n     * Get the current audio options for this node such as channelInterpretation\n     * channelCount, etc.\n     */\n    _getChannelProperties() {\n        const nodeList = this._getInternalNodes();\n        assert(nodeList.length > 0, \"ToneAudioNode does not have any internal nodes\");\n        // use the first node to get properties\n        // they should all be the same\n        const node = nodeList[0];\n        return {\n            channelCount: node.channelCount,\n            channelCountMode: node.channelCountMode,\n            channelInterpretation: node.channelInterpretation,\n        };\n    }\n    /**\n     * channelCount is the number of channels used when up-mixing and down-mixing\n     * connections to any inputs to the node. The default value is 2 except for\n     * specific nodes where its value is specially determined.\n     */\n    get channelCount() {\n        return this._getChannelProperties().channelCount;\n    }\n    set channelCount(channelCount) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelCount }));\n    }\n    /**\n     * channelCountMode determines how channels will be counted when up-mixing and\n     * down-mixing connections to any inputs to the node.\n     * The default value is \"max\". This attribute has no effect for nodes with no inputs.\n     * * \"max\" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.\n     * * \"clamped-max\" - computedNumberOfChannels is determined as for \"max\" and then clamped to a maximum value of the given channelCount.\n     * * \"explicit\" - computedNumberOfChannels is the exact value as specified by the channelCount.\n     */\n    get channelCountMode() {\n        return this._getChannelProperties().channelCountMode;\n    }\n    set channelCountMode(channelCountMode) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelCountMode }));\n    }\n    /**\n     * channelInterpretation determines how individual channels will be treated\n     * when up-mixing and down-mixing connections to any inputs to the node.\n     * The default value is \"speakers\".\n     */\n    get channelInterpretation() {\n        return this._getChannelProperties().channelInterpretation;\n    }\n    set channelInterpretation(channelInterpretation) {\n        const props = this._getChannelProperties();\n        // merge it with the other properties\n        this._setChannelProperties(Object.assign(props, { channelInterpretation }));\n    }\n    //-------------------------------------\n    // CONNECTIONS\n    //-------------------------------------\n    /**\n     * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode\n     * @param destination The output to connect to\n     * @param outputNum The output to connect from\n     * @param inputNum The input to connect to\n     */\n    connect(destination, outputNum = 0, inputNum = 0) {\n        connect(this, destination, outputNum, inputNum);\n        return this;\n    }\n    /**\n     * Connect the output to the context's destination node.\n     * @example\n     * const osc = new Tone.Oscillator().start();\n     * osc.toDestination();\n     */\n    toDestination() {\n        this.connect(this.context.destination);\n        return this;\n    }\n    /**\n     * Connect the output to the context's destination node.\n     * See [[toDestination]]\n     * @deprecated\n     */\n    toMaster() {\n        warn(\"toMaster() has been renamed toDestination()\");\n        return this.toDestination();\n    }\n    /**\n     * disconnect the output\n     */\n    disconnect(destination, outputNum = 0, inputNum = 0) {\n        disconnect(this, destination, outputNum, inputNum);\n        return this;\n    }\n    /**\n     * Connect the output of this node to the rest of the nodes in series.\n     * @example\n     * const osc = new Tone.Oscillator().start();\n     * const filter = new Tone.Filter();\n     * const volume = new Tone.Volume(-8);\n     * // connect a node to the filter, volume and then to the master output\n     * osc.chain(filter, volume, Tone.Destination);\n     */\n    chain(...nodes) {\n        connectSeries(this, ...nodes);\n        return this;\n    }\n    /**\n     * connect the output of this node to the rest of the nodes in parallel.\n     */\n    fan(...nodes) {\n        nodes.forEach(node => this.connect(node));\n        return this;\n    }\n    /**\n     * Dispose and disconnect\n     */\n    dispose() {\n        super.dispose();\n        if (isDefined(this.input)) {\n            if (this.input instanceof ToneAudioNode) {\n                this.input.dispose();\n            }\n            else if (isAudioNode(this.input)) {\n                this.input.disconnect();\n            }\n        }\n        if (isDefined(this.output)) {\n            if (this.output instanceof ToneAudioNode) {\n                this.output.dispose();\n            }\n            else if (isAudioNode(this.output)) {\n                this.output.disconnect();\n            }\n        }\n        this._internalChannels = [];\n        return this;\n    }\n}\n//-------------------------------------\n// CONNECTIONS\n//-------------------------------------\n/**\n * connect together all of the arguments in series\n * @param nodes\n */\nexport function connectSeries(...nodes) {\n    const first = nodes.shift();\n    nodes.reduce((prev, current) => {\n        if (prev instanceof ToneAudioNode) {\n            prev.connect(current);\n        }\n        else if (isAudioNode(prev)) {\n            connect(prev, current);\n        }\n        return current;\n    }, first);\n}\n/**\n * Connect two nodes together so that signal flows from the\n * first node to the second. Optionally specify the input and output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function connect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n    assert(isDefined(srcNode), \"Cannot connect from undefined node\");\n    assert(isDefined(dstNode), \"Cannot connect to undefined node\");\n    if (dstNode instanceof ToneAudioNode || isAudioNode(dstNode)) {\n        assert(dstNode.numberOfInputs > 0, \"Cannot connect to node with no inputs\");\n    }\n    assert(srcNode.numberOfOutputs > 0, \"Cannot connect from node with no outputs\");\n    // resolve the input of the dstNode\n    while ((dstNode instanceof ToneAudioNode || dstNode instanceof Param)) {\n        if (isDefined(dstNode.input)) {\n            dstNode = dstNode.input;\n        }\n    }\n    while (srcNode instanceof ToneAudioNode) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    // make the connection\n    if (isAudioParam(dstNode)) {\n        srcNode.connect(dstNode, outputNumber);\n    }\n    else {\n        srcNode.connect(dstNode, outputNumber, inputNumber);\n    }\n}\n/**\n * Disconnect a node from all nodes or optionally include a destination node and input/output channels.\n * @param srcNode The source node\n * @param dstNode The destination node\n * @param outputNumber The output channel of the srcNode\n * @param inputNumber The input channel of the dstNode\n */\nexport function disconnect(srcNode, dstNode, outputNumber = 0, inputNumber = 0) {\n    // resolve the destination node\n    if (isDefined(dstNode)) {\n        while (dstNode instanceof ToneAudioNode) {\n            dstNode = dstNode.input;\n        }\n    }\n    // resolve the src node\n    while (!(isAudioNode(srcNode))) {\n        if (isDefined(srcNode.output)) {\n            srcNode = srcNode.output;\n        }\n    }\n    if (isAudioParam(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber);\n    }\n    else if (isAudioNode(dstNode)) {\n        srcNode.disconnect(dstNode, outputNumber, inputNumber);\n    }\n    else {\n        srcNode.disconnect();\n    }\n}\n//# sourceMappingURL=ToneAudioNode.js.map","import { getContext } from \"../Global\";\nimport { Tone } from \"../Tone\";\nimport { FrequencyClass } from \"../type/Frequency\";\nimport { TimeClass } from \"../type/Time\";\nimport { TransportTimeClass } from \"../type/TransportTime\";\nimport { getDefaultsFromInstance, optionsFromArguments } from \"../util/Defaults\";\nimport { isArray, isBoolean, isDefined, isNumber, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * The Base class for all nodes that have an AudioContext.\n */\nexport class ToneWithContext extends Tone {\n    constructor() {\n        super();\n        const options = optionsFromArguments(ToneWithContext.getDefaults(), arguments, [\"context\"]);\n        if (this.defaultContext) {\n            this.context = this.defaultContext;\n        }\n        else {\n            this.context = options.context;\n        }\n    }\n    static getDefaults() {\n        return {\n            context: getContext(),\n        };\n    }\n    /**\n     * Return the current time of the Context clock plus the lookAhead.\n     * @example\n     * setInterval(() => {\n     * \tconsole.log(Tone.now());\n     * }, 100)\n     */\n    now() {\n        return this.context.currentTime + this.context.lookAhead;\n    }\n    /**\n     * Return the current time of the Context clock without any lookAhead.\n     * @example\n     * setInterval(() => {\n     * \tconsole.log(Tone.immediate());\n     * }, 100)\n     */\n    immediate() {\n        return this.context.currentTime;\n    }\n    /**\n     * The duration in seconds of one sample.\n     * @example\n     * console.log(Tone.Transport.sampleTime);\n     */\n    get sampleTime() {\n        return 1 / this.context.sampleRate;\n    }\n    /**\n     * The number of seconds of 1 processing block (128 samples)\n     * @example\n     * console.log(Tone.Destination.blockTime);\n     */\n    get blockTime() {\n        return 128 / this.context.sampleRate;\n    }\n    /**\n     * Convert the incoming time to seconds\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toSeconds(\"4n\"));\n     */\n    toSeconds(time) {\n        return new TimeClass(this.context, time).toSeconds();\n    }\n    /**\n     * Convert the input to a frequency number\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toFrequency(\"4n\"));\n     */\n    toFrequency(freq) {\n        return new FrequencyClass(this.context, freq).toFrequency();\n    }\n    /**\n     * Convert the input time into ticks\n     * @example\n     * const gain = new Tone.Gain();\n     * console.log(gain.toTicks(\"4n\"));\n     */\n    toTicks(time) {\n        return new TransportTimeClass(this.context, time).toTicks();\n    }\n    //-------------------------------------\n    // \tGET/SET\n    //-------------------------------------\n    /**\n     * Get a subset of the properties which are in the partial props\n     */\n    _getPartialProperties(props) {\n        const options = this.get();\n        // remove attributes from the prop that are not in the partial\n        Object.keys(options).forEach(name => {\n            if (isUndef(props[name])) {\n                delete options[name];\n            }\n        });\n        return options;\n    }\n    /**\n     * Get the object's attributes.\n     * @example\n     * const osc = new Tone.Oscillator();\n     * console.log(osc.get());\n     */\n    get() {\n        const defaults = getDefaultsFromInstance(this);\n        Object.keys(defaults).forEach(attribute => {\n            if (Reflect.has(this, attribute)) {\n                const member = this[attribute];\n                if (isDefined(member) && isDefined(member.value) && isDefined(member.setValueAtTime)) {\n                    defaults[attribute] = member.value;\n                }\n                else if (member instanceof ToneWithContext) {\n                    defaults[attribute] = member._getPartialProperties(defaults[attribute]);\n                    // otherwise make sure it's a serializable type\n                }\n                else if (isArray(member) || isNumber(member) || isString(member) || isBoolean(member)) {\n                    defaults[attribute] = member;\n                }\n                else {\n                    // remove all undefined and unserializable attributes\n                    delete defaults[attribute];\n                }\n            }\n        });\n        return defaults;\n    }\n    /**\n     * Set multiple properties at once with an object.\n     * @example\n     * const filter = new Tone.Filter();\n     * // set values using an object\n     * filter.set({\n     * \tfrequency: 300,\n     * \ttype: \"highpass\"\n     * });\n     */\n    set(props) {\n        Object.keys(props).forEach(attribute => {\n            if (Reflect.has(this, attribute) && isDefined(this[attribute])) {\n                if (this[attribute] && isDefined(this[attribute].value) && isDefined(this[attribute].setValueAtTime)) {\n                    // small optimization\n                    if (this[attribute].value !== props[attribute]) {\n                        this[attribute].value = props[attribute];\n                    }\n                }\n                else if (this[attribute] instanceof ToneWithContext) {\n                    this[attribute].set(props[attribute]);\n                }\n                else {\n                    this[attribute] = props[attribute];\n                }\n            }\n        });\n        return this;\n    }\n}\n//# sourceMappingURL=ToneWithContext.js.map","export * from \"./clock/Clock\";\nexport * from \"./clock/Transport\";\nexport * from \"./context/Context\";\nexport * from \"./context/BaseContext\";\nexport * from \"./context/Delay\";\nexport * from \"./context/Destination\";\nexport * from \"./context/Gain\";\nexport * from \"./context/Offline\";\nexport * from \"./context/OfflineContext\";\nexport * from \"./context/Param\";\nexport * from \"./context/ToneAudioBuffer\";\nexport * from \"./context/ToneAudioBuffers\";\nexport * from \"./context/ToneAudioNode\";\nexport * from \"./type/Frequency\";\nexport * from \"./type/Midi\";\nexport * from \"./type/Time\";\nexport * from \"./type/Ticks\";\nexport * from \"./type/TransportTime\";\nexport * from \"./util/Draw\";\nexport * from \"./util/Emitter\";\nexport * from \"./util/IntervalTimeline\";\nexport * from \"./util/StateTimeline\";\nexport * from \"./util/Timeline\";\nexport * from \"./util/TypeCheck\";\nexport { dbToGain, gainToDb, intervalToFrequencyRatio, ftom, mtof } from \"./type/Conversions\";\nexport { optionsFromArguments, defaultArg } from \"./util/Defaults\";\n// get the units and export them under the \"Unit\" namespace\nimport * as Unit from \"./type/Units\";\nexport { Unit };\n// export the debug stuff as Debug\nimport * as debug from \"./util/Debug\";\nexport { debug };\n//# sourceMappingURL=index.js.map","/**\n * Equal power gain scale. Good for cross-fading.\n * @param  percent (0-1)\n */\nexport function equalPowerScale(percent) {\n    const piFactor = 0.5 * Math.PI;\n    return Math.sin(percent * piFactor);\n}\n/**\n * Convert decibels into gain.\n */\nexport function dbToGain(db) {\n    return Math.pow(10, db / 20);\n}\n/**\n * Convert gain to decibels.\n */\nexport function gainToDb(gain) {\n    return 20 * (Math.log(gain) / Math.LN10);\n}\n/**\n * Convert an interval (in semitones) to a frequency ratio.\n * @param interval the number of semitones above the base note\n * @example\n * Tone.intervalToFrequencyRatio(0); // 1\n * Tone.intervalToFrequencyRatio(12); // 2\n * Tone.intervalToFrequencyRatio(-12); // 0.5\n */\nexport function intervalToFrequencyRatio(interval) {\n    return Math.pow(2, (interval / 12));\n}\n/**\n * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n * to generate all the other pitch values from notes. A4's values in Hertz.\n */\nlet A4 = 440;\nexport function getA4() {\n    return A4;\n}\nexport function setA4(freq) {\n    A4 = freq;\n}\n/**\n * Convert a frequency value to a MIDI note.\n * @param frequency The value to frequency value to convert.\n * @example\n * Tone.ftom(440); // returns 69\n */\nexport function ftom(frequency) {\n    return Math.round(ftomf(frequency));\n}\n/**\n * Convert a frequency to a floating point midi value\n */\nexport function ftomf(frequency) {\n    return 69 + 12 * Math.log2(frequency / A4);\n}\n/**\n * Convert a MIDI note to frequency value.\n * @param  midi The midi number to convert.\n * @return The corresponding frequency value\n * @example\n * Tone.mtof(69); // 440\n */\nexport function mtof(midi) {\n    return A4 * Math.pow(2, (midi - 69) / 12);\n}\n//# sourceMappingURL=Conversions.js.map","import { getContext } from \"../Global\";\nimport { intervalToFrequencyRatio, mtof } from \"./Conversions\";\nimport { ftom, getA4, setA4 } from \"./Conversions\";\nimport { TimeClass } from \"./Time\";\n/**\n * Frequency is a primitive type for encoding Frequency values.\n * Eventually all time values are evaluated to hertz using the `eval` method.\n * @example\n * Tone.Frequency(\"C3\"); // 261\n * Tone.Frequency(38, \"midi\");\n * Tone.Frequency(\"C3\").transpose(4);\n * @category Unit\n */\nexport class FrequencyClass extends TimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"Frequency\";\n        this.defaultUnits = \"hz\";\n    }\n    /**\n     * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used\n     * to generate all the other pitch values from notes. A4's values in Hertz.\n     */\n    static get A4() {\n        return getA4();\n    }\n    static set A4(freq) {\n        setA4(freq);\n    }\n    //-------------------------------------\n    // \tAUGMENT BASE EXPRESSIONS\n    //-------------------------------------\n    _getExpressions() {\n        return Object.assign({}, super._getExpressions(), {\n            midi: {\n                regexp: /^(\\d+(?:\\.\\d+)?midi)/,\n                method(value) {\n                    if (this.defaultUnits === \"midi\") {\n                        return value;\n                    }\n                    else {\n                        return FrequencyClass.mtof(value);\n                    }\n                },\n            },\n            note: {\n                regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,\n                method(pitch, octave) {\n                    const index = noteToScaleIndex[pitch.toLowerCase()];\n                    const noteNumber = index + (parseInt(octave, 10) + 1) * 12;\n                    if (this.defaultUnits === \"midi\") {\n                        return noteNumber;\n                    }\n                    else {\n                        return FrequencyClass.mtof(noteNumber);\n                    }\n                },\n            },\n            tr: {\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?/,\n                method(m, q, s) {\n                    let total = 1;\n                    if (m && m !== \"0\") {\n                        total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total *= this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n            },\n        });\n    }\n    //-------------------------------------\n    // \tEXPRESSIONS\n    //-------------------------------------\n    /**\n     * Transposes the frequency by the given number of semitones.\n     * @return  A new transposed frequency\n     * @example\n     * Tone.Frequency(\"A4\").transpose(3); // \"C5\"\n     */\n    transpose(interval) {\n        return new FrequencyClass(this.context, this.valueOf() * intervalToFrequencyRatio(interval));\n    }\n    /**\n     * Takes an array of semitone intervals and returns\n     * an array of frequencies transposed by those intervals.\n     * @return  Returns an array of Frequencies\n     * @example\n     * Tone.Frequency(\"A4\").harmonize([0, 3, 7]); // [\"A4\", \"C5\", \"E5\"]\n     */\n    harmonize(intervals) {\n        return intervals.map(interval => {\n            return this.transpose(interval);\n        });\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Frequency(\"C4\").toMidi(); // 60\n     */\n    toMidi() {\n        return ftom(this.valueOf());\n    }\n    /**\n     * Return the value of the frequency in Scientific Pitch Notation\n     * @example\n     * Tone.Frequency(69, \"midi\").toNote(); // \"A4\"\n     */\n    toNote() {\n        const freq = this.toFrequency();\n        const log = Math.log2(freq / FrequencyClass.A4);\n        let noteNumber = Math.round(12 * log) + 57;\n        const octave = Math.floor(noteNumber / 12);\n        if (octave < 0) {\n            noteNumber += -12 * octave;\n        }\n        const noteName = scaleIndexToNote[noteNumber % 12];\n        return noteName + octave.toString();\n    }\n    /**\n     * Return the duration of one cycle in seconds.\n     */\n    toSeconds() {\n        return 1 / super.toSeconds();\n    }\n    /**\n     * Return the duration of one cycle in ticks\n     */\n    toTicks() {\n        const quarterTime = this._beatsToUnits(1);\n        const quarters = this.valueOf() / quarterTime;\n        return Math.floor(quarters * this._getPPQ());\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS HELPERS\n    //-------------------------------------\n    /**\n     * With no arguments, return 0\n     */\n    _noArg() {\n        return 0;\n    }\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return freq;\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return 1 / ((ticks * 60) / (this._getBpm() * this._getPPQ()));\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return 1 / super._beatsToUnits(beats);\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return 1 / seconds;\n    }\n    /**\n     * Convert a MIDI note to frequency value.\n     * @param  midi The midi number to convert.\n     * @return The corresponding frequency value\n     */\n    static mtof(midi) {\n        return mtof(midi);\n    }\n    /**\n     * Convert a frequency value to a MIDI note.\n     * @param frequency The value to frequency value to convert.\n     */\n    static ftom(frequency) {\n        return ftom(frequency);\n    }\n}\n//-------------------------------------\n// \tFREQUENCY CONVERSIONS\n//-------------------------------------\n/**\n * Note to scale index.\n * @hidden\n */\nconst noteToScaleIndex = {\n    cbb: -2, cb: -1, c: 0, \"c#\": 1, cx: 2,\n    dbb: 0, db: 1, d: 2, \"d#\": 3, dx: 4,\n    ebb: 2, eb: 3, e: 4, \"e#\": 5, ex: 6,\n    fbb: 3, fb: 4, f: 5, \"f#\": 6, fx: 7,\n    gbb: 5, gb: 6, g: 7, \"g#\": 8, gx: 9,\n    abb: 7, ab: 8, a: 9, \"a#\": 10, ax: 11,\n    bbb: 9, bb: 10, b: 11, \"b#\": 12, bx: 13,\n};\n/**\n * scale index to note (sharps)\n * @hidden\n */\nconst scaleIndexToNote = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\nexport function Frequency(value, units) {\n    return new FrequencyClass(getContext(), value, units);\n}\n//# sourceMappingURL=Frequency.js.map","import { getContext } from \"../Global\";\nimport { ftom, mtof } from \"./Conversions\";\nimport { FrequencyClass } from \"./Frequency\";\n/**\n * Midi is a primitive type for encoding Time values.\n * Midi can be constructed with or without the `new` keyword. Midi can be passed\n * into the parameter of any method which takes time as an argument.\n * @category Unit\n */\nexport class MidiClass extends FrequencyClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"MidiClass\";\n        this.defaultUnits = \"midi\";\n    }\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return ftom(super._frequencyToUnits(freq));\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return ftom(super._ticksToUnits(ticks));\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return ftom(super._beatsToUnits(beats));\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return ftom(super._secondsToUnits(seconds));\n    }\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Midi(60).toMidi(); // 60\n     */\n    toMidi() {\n        return this.valueOf();\n    }\n    /**\n     * Return the value of the frequency as a MIDI note\n     * @example\n     * Tone.Midi(60).toFrequency(); // 261.6255653005986\n     */\n    toFrequency() {\n        return mtof(this.toMidi());\n    }\n    /**\n     * Transposes the frequency by the given number of semitones.\n     * @return A new transposed MidiClass\n     * @example\n     * Tone.Midi(\"A4\").transpose(3); // \"C5\"\n     */\n    transpose(interval) {\n        return new MidiClass(this.context, this.toMidi() + interval);\n    }\n}\n/**\n * Convert a value into a FrequencyClass object.\n * @category Unit\n */\nexport function Midi(value, units) {\n    return new MidiClass(getContext(), value, units);\n}\n//# sourceMappingURL=Midi.js.map","import { getContext } from \"../Global\";\nimport { TransportTimeClass } from \"./TransportTime\";\n/**\n * Ticks is a primitive type for encoding Time values.\n * Ticks can be constructed with or without the `new` keyword. Ticks can be passed\n * into the parameter of any method which takes time as an argument.\n * @example\n * const t = Tone.Ticks(\"4n\"); // a quarter note as ticks\n * @category Unit\n */\nexport class TicksClass extends TransportTimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"Ticks\";\n        this.defaultUnits = \"i\";\n    }\n    /**\n     * Get the current time in the given units\n     */\n    _now() {\n        return this.context.transport.ticks;\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return this._getPPQ() * beats;\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return ticks;\n    }\n    /**\n     * Return the time in ticks\n     */\n    toTicks() {\n        return this.valueOf();\n    }\n    /**\n     * Return the time in seconds\n     */\n    toSeconds() {\n        return (this.valueOf() / this._getPPQ()) * (60 / this._getBpm());\n    }\n}\n/**\n * Convert a time representation to ticks\n * @category Unit\n */\nexport function Ticks(value, units) {\n    return new TicksClass(getContext(), value, units);\n}\n//# sourceMappingURL=Ticks.js.map","import { getContext } from \"../Global\";\nimport { ftom } from \"./Conversions\";\nimport { TimeBaseClass } from \"./TimeBase\";\n/**\n * TimeClass is a primitive type for encoding and decoding Time values.\n * TimeClass can be passed into the parameter of any method which takes time as an argument.\n * @param  val    The time value.\n * @param  units  The units of the value.\n * @example\n * const time = Tone.Time(\"4n\"); // a quarter note\n * @category Unit\n */\nexport class TimeClass extends TimeBaseClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"TimeClass\";\n    }\n    _getExpressions() {\n        return Object.assign(super._getExpressions(), {\n            now: {\n                method: (capture) => {\n                    return this._now() + new this.constructor(this.context, capture).valueOf();\n                },\n                regexp: /^\\+(.+)/,\n            },\n            quantize: {\n                method: (capture) => {\n                    const quantTo = new TimeClass(this.context, capture).valueOf();\n                    return this._secondsToUnits(this.context.transport.nextSubdivision(quantTo));\n                },\n                regexp: /^@(.+)/,\n            },\n        });\n    }\n    /**\n     * Quantize the time by the given subdivision. Optionally add a\n     * percentage which will move the time value towards the ideal\n     * quantized value by that percentage.\n     * @param  subdiv    The subdivision to quantize to\n     * @param  percent  Move the time value towards the quantized value by a percentage.\n     * @example\n     * Tone.Time(21).quantize(2); // returns 22\n     * Tone.Time(0.6).quantize(\"4n\", 0.5); // returns 0.55\n     */\n    quantize(subdiv, percent = 1) {\n        const subdivision = new this.constructor(this.context, subdiv).valueOf();\n        const value = this.valueOf();\n        const multiple = Math.round(value / subdivision);\n        const ideal = multiple * subdivision;\n        const diff = ideal - value;\n        return value + diff * percent;\n    }\n    //-------------------------------------\n    // CONVERSIONS\n    //-------------------------------------\n    /**\n     * Convert a Time to Notation. The notation values are will be the\n     * closest representation between 1m to 128th note.\n     * @return {Notation}\n     * @example\n     * // if the Transport is at 120bpm:\n     * Tone.Time(2).toNotation(); // returns \"1m\"\n     */\n    toNotation() {\n        const time = this.toSeconds();\n        const testNotations = [\"1m\"];\n        for (let power = 1; power < 9; power++) {\n            const subdiv = Math.pow(2, power);\n            testNotations.push(subdiv + \"n.\");\n            testNotations.push(subdiv + \"n\");\n            testNotations.push(subdiv + \"t\");\n        }\n        testNotations.push(\"0\");\n        // find the closets notation representation\n        let closest = testNotations[0];\n        let closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();\n        testNotations.forEach(notation => {\n            const notationSeconds = new TimeClass(this.context, notation).toSeconds();\n            if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {\n                closest = notation;\n                closestSeconds = notationSeconds;\n            }\n        });\n        return closest;\n    }\n    /**\n     * Return the time encoded as Bars:Beats:Sixteenths.\n     */\n    toBarsBeatsSixteenths() {\n        const quarterTime = this._beatsToUnits(1);\n        let quarters = this.valueOf() / quarterTime;\n        quarters = parseFloat(quarters.toFixed(4));\n        const measures = Math.floor(quarters / this._getTimeSignature());\n        let sixteenths = (quarters % 1) * 4;\n        quarters = Math.floor(quarters) % this._getTimeSignature();\n        const sixteenthString = sixteenths.toString();\n        if (sixteenthString.length > 3) {\n            // the additional parseFloat removes insignificant trailing zeroes\n            sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));\n        }\n        const progress = [measures, quarters, sixteenths];\n        return progress.join(\":\");\n    }\n    /**\n     * Return the time in ticks.\n     */\n    toTicks() {\n        const quarterTime = this._beatsToUnits(1);\n        const quarters = this.valueOf() / quarterTime;\n        return Math.round(quarters * this._getPPQ());\n    }\n    /**\n     * Return the time in seconds.\n     */\n    toSeconds() {\n        return this.valueOf();\n    }\n    /**\n     * Return the value as a midi note.\n     */\n    toMidi() {\n        return ftom(this.toFrequency());\n    }\n    _now() {\n        return this.context.now();\n    }\n}\n/**\n * Create a TimeClass from a time string or number.\n * @param value A value which reprsents time\n * @param units The value's units if they can't be inferred by the value.\n * @category Unit\n */\nexport function Time(value, units) {\n    return new TimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=Time.js.map","import { Tone } from \"../Tone\";\nimport { isDefined, isObject, isString, isUndef } from \"../util/TypeCheck\";\n/**\n * TimeBase is a flexible encoding of time which can be evaluated to and from a string.\n */\nexport class TimeBaseClass extends Tone {\n    /**\n     * @param context The context associated with the time value. Used to compute\n     * Transport and context-relative timing.\n     * @param  value  The time value as a number, string or object\n     * @param  units  Unit values\n     */\n    constructor(context, value, units) {\n        super();\n        /**\n         * The default units\n         */\n        this.defaultUnits = \"s\";\n        this._val = value;\n        this._units = units;\n        this.context = context;\n        this._expressions = this._getExpressions();\n    }\n    /**\n     * All of the time encoding expressions\n     */\n    _getExpressions() {\n        return {\n            hz: {\n                method: (value) => {\n                    return this._frequencyToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)hz$/i,\n            },\n            i: {\n                method: (value) => {\n                    return this._ticksToUnits(parseInt(value, 10));\n                },\n                regexp: /^(\\d+)i$/i,\n            },\n            m: {\n                method: (value) => {\n                    return this._beatsToUnits(parseInt(value, 10) * this._getTimeSignature());\n                },\n                regexp: /^(\\d+)m$/i,\n            },\n            n: {\n                method: (value, dot) => {\n                    const numericValue = parseInt(value, 10);\n                    const scalar = dot === \".\" ? 1.5 : 1;\n                    if (numericValue === 1) {\n                        return this._beatsToUnits(this._getTimeSignature()) * scalar;\n                    }\n                    else {\n                        return this._beatsToUnits(4 / numericValue) * scalar;\n                    }\n                },\n                regexp: /^(\\d+)n(\\.?)$/i,\n            },\n            number: {\n                method: (value) => {\n                    return this._expressions[this.defaultUnits].method.call(this, value);\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)$/,\n            },\n            s: {\n                method: (value) => {\n                    return this._secondsToUnits(parseFloat(value));\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?)s$/,\n            },\n            samples: {\n                method: (value) => {\n                    return parseInt(value, 10) / this.context.sampleRate;\n                },\n                regexp: /^(\\d+)samples$/,\n            },\n            t: {\n                method: (value) => {\n                    const numericValue = parseInt(value, 10);\n                    return this._beatsToUnits(8 / (Math.floor(numericValue) * 3));\n                },\n                regexp: /^(\\d+)t$/i,\n            },\n            tr: {\n                method: (m, q, s) => {\n                    let total = 0;\n                    if (m && m !== \"0\") {\n                        total += this._beatsToUnits(this._getTimeSignature() * parseFloat(m));\n                    }\n                    if (q && q !== \"0\") {\n                        total += this._beatsToUnits(parseFloat(q));\n                    }\n                    if (s && s !== \"0\") {\n                        total += this._beatsToUnits(parseFloat(s) / 4);\n                    }\n                    return total;\n                },\n                regexp: /^(\\d+(?:\\.\\d+)?):(\\d+(?:\\.\\d+)?):?(\\d+(?:\\.\\d+)?)?$/,\n            },\n        };\n    }\n    //-------------------------------------\n    // \tVALUE OF\n    //-------------------------------------\n    /**\n     * Evaluate the time value. Returns the time in seconds.\n     */\n    valueOf() {\n        if (this._val instanceof TimeBaseClass) {\n            this.fromType(this._val);\n        }\n        if (isUndef(this._val)) {\n            return this._noArg();\n        }\n        else if (isString(this._val) && isUndef(this._units)) {\n            for (const units in this._expressions) {\n                if (this._expressions[units].regexp.test(this._val.trim())) {\n                    this._units = units;\n                    break;\n                }\n            }\n        }\n        else if (isObject(this._val)) {\n            let total = 0;\n            for (const typeName in this._val) {\n                if (isDefined(this._val[typeName])) {\n                    const quantity = this._val[typeName];\n                    // @ts-ignore\n                    const time = (new this.constructor(this.context, typeName)).valueOf() * quantity;\n                    total += time;\n                }\n            }\n            return total;\n        }\n        if (isDefined(this._units)) {\n            const expr = this._expressions[this._units];\n            const matching = this._val.toString().trim().match(expr.regexp);\n            if (matching) {\n                return expr.method.apply(this, matching.slice(1));\n            }\n            else {\n                return expr.method.call(this, this._val);\n            }\n        }\n        else if (isString(this._val)) {\n            return parseFloat(this._val);\n        }\n        else {\n            return this._val;\n        }\n    }\n    //-------------------------------------\n    // \tUNIT CONVERSIONS\n    //-------------------------------------\n    /**\n     * Returns the value of a frequency in the current units\n     */\n    _frequencyToUnits(freq) {\n        return 1 / freq;\n    }\n    /**\n     * Return the value of the beats in the current units\n     */\n    _beatsToUnits(beats) {\n        return (60 / this._getBpm()) * beats;\n    }\n    /**\n     * Returns the value of a second in the current units\n     */\n    _secondsToUnits(seconds) {\n        return seconds;\n    }\n    /**\n     * Returns the value of a tick in the current time units\n     */\n    _ticksToUnits(ticks) {\n        return (ticks * (this._beatsToUnits(1)) / this._getPPQ());\n    }\n    /**\n     * With no arguments, return 'now'\n     */\n    _noArg() {\n        return this._now();\n    }\n    //-------------------------------------\n    // \tTEMPO CONVERSIONS\n    //-------------------------------------\n    /**\n     * Return the bpm\n     */\n    _getBpm() {\n        return this.context.transport.bpm.value;\n    }\n    /**\n     * Return the timeSignature\n     */\n    _getTimeSignature() {\n        return this.context.transport.timeSignature;\n    }\n    /**\n     * Return the PPQ or 192 if Transport is not available\n     */\n    _getPPQ() {\n        return this.context.transport.PPQ;\n    }\n    //-------------------------------------\n    // \tCONVERSION INTERFACE\n    //-------------------------------------\n    /**\n     * Coerce a time type into this units type.\n     * @param type Any time type units\n     */\n    fromType(type) {\n        this._units = undefined;\n        switch (this.defaultUnits) {\n            case \"s\":\n                this._val = type.toSeconds();\n                break;\n            case \"i\":\n                this._val = type.toTicks();\n                break;\n            case \"hz\":\n                this._val = type.toFrequency();\n                break;\n            case \"midi\":\n                this._val = type.toMidi();\n                break;\n        }\n        return this;\n    }\n    /**\n     * Return the value in hertz\n     */\n    toFrequency() {\n        return 1 / this.toSeconds();\n    }\n    /**\n     * Return the time in samples\n     */\n    toSamples() {\n        return this.toSeconds() * this.context.sampleRate;\n    }\n    /**\n     * Return the time in milliseconds.\n     */\n    toMilliseconds() {\n        return this.toSeconds() * 1000;\n    }\n}\n//# sourceMappingURL=TimeBase.js.map","import { getContext } from \"../Global\";\nimport { TimeClass } from \"./Time\";\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to Tone.Time, but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport class TransportTimeClass extends TimeClass {\n    constructor() {\n        super(...arguments);\n        this.name = \"TransportTime\";\n    }\n    /**\n     * Return the current time in whichever context is relevant\n     */\n    _now() {\n        return this.context.transport.seconds;\n    }\n}\n/**\n * TransportTime is a the time along the Transport's\n * timeline. It is similar to [[Time]], but instead of evaluating\n * against the AudioContext's clock, it is evaluated against\n * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).\n * @category Unit\n */\nexport function TransportTime(value, units) {\n    return new TransportTimeClass(getContext(), value, units);\n}\n//# sourceMappingURL=TransportTime.js.map","//# sourceMappingURL=Units.js.map","import { isAnyAudioContext, isAnyAudioNode, isAnyAudioParam, isAnyOfflineAudioContext, } from \"standardized-audio-context\";\n/**\n * Test if the given value is an instanceof AudioParam\n */\nexport function isAudioParam(arg) {\n    return isAnyAudioParam(arg);\n}\n/**\n * Test if the given value is an instanceof AudioNode\n */\nexport function isAudioNode(arg) {\n    return isAnyAudioNode(arg);\n}\n/**\n * Test if the arg is instanceof an OfflineAudioContext\n */\nexport function isOfflineAudioContext(arg) {\n    return isAnyOfflineAudioContext(arg);\n}\n/**\n * Test if the arg is an instanceof AudioContext\n */\nexport function isAudioContext(arg) {\n    return isAnyAudioContext(arg);\n}\n/**\n * Test if the arg is instanceof an AudioBuffer\n */\nexport function isAudioBuffer(arg) {\n    return arg instanceof AudioBuffer;\n}\n//# sourceMappingURL=AdvancedTypeCheck.js.map","/**\n * Assert that the statement is true, otherwise invoke the error.\n * @param statement\n * @param error The message which is passed into an Error\n */\nexport function assert(statement, error) {\n    if (!statement) {\n        throw new Error(error);\n    }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertRange(value, gte, lte = Infinity) {\n    if (!(gte <= value && value <= lte)) {\n        throw new RangeError(`Value must be within [${gte}, ${lte}], got: ${value}`);\n    }\n}\n/**\n * Make sure that the given value is within the range\n */\nexport function assertContextRunning(context) {\n    // add a warning if the context is not started\n    if (!context.isOffline && context.state !== \"running\") {\n        warn(\"The AudioContext is \\\"suspended\\\". Invoke Tone.start() from a user action to start the audio.\");\n    }\n}\n/**\n * The default logger is the console\n */\nlet defaultLogger = console;\n/**\n * Set the logging interface\n */\nexport function setLogger(logger) {\n    defaultLogger = logger;\n}\n/**\n * Log anything\n */\nexport function log(...args) {\n    defaultLogger.log(...args);\n}\n/**\n * Warn anything\n */\nexport function warn(...args) {\n    defaultLogger.warn(...args);\n}\n//# sourceMappingURL=Debug.js.map","import { assertRange } from \"./Debug\";\n/**\n * Assert that the number is in the given range.\n */\nexport function range(min, max = Infinity) {\n    const valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(newValue, min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n/**\n * Convert the time to seconds and assert that the time is in between the two\n * values when being set.\n */\nexport function timeRange(min, max = Infinity) {\n    const valueMap = new WeakMap();\n    return function (target, propertyKey) {\n        Reflect.defineProperty(target, propertyKey, {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n                return valueMap.get(this);\n            },\n            set: function (newValue) {\n                assertRange(this.toSeconds(newValue), min, max);\n                valueMap.set(this, newValue);\n            }\n        });\n    };\n}\n//# sourceMappingURL=Decorator.js.map","import { isAudioBuffer, isAudioNode, isAudioParam } from \"./AdvancedTypeCheck\";\nimport { isDefined, isObject, isUndef } from \"./TypeCheck\";\n/**\n * Some objects should not be merged\n */\nfunction noCopy(key, arg) {\n    return key === \"value\" || isAudioParam(arg) || isAudioNode(arg) || isAudioBuffer(arg);\n}\nexport function deepMerge(target, ...sources) {\n    if (!sources.length) {\n        return target;\n    }\n    const source = sources.shift();\n    if (isObject(target) && isObject(source)) {\n        for (const key in source) {\n            if (noCopy(key, source[key])) {\n                target[key] = source[key];\n            }\n            else if (isObject(source[key])) {\n                if (!target[key]) {\n                    Object.assign(target, { [key]: {} });\n                }\n                deepMerge(target[key], source[key]);\n            }\n            else {\n                Object.assign(target, { [key]: source[key] });\n            }\n        }\n    }\n    // @ts-ignore\n    return deepMerge(target, ...sources);\n}\n/**\n * Returns true if the two arrays have the same value for each of the elements\n */\nexport function deepEquals(arrayA, arrayB) {\n    return arrayA.length === arrayB.length && arrayA.every((element, index) => arrayB[index] === element);\n}\n/**\n * Convert an args array into an object.\n */\nexport function optionsFromArguments(defaults, argsArray, keys = [], objKey) {\n    const opts = {};\n    const args = Array.from(argsArray);\n    // if the first argument is an object and has an object key\n    if (isObject(args[0]) && objKey && !Reflect.has(args[0], objKey)) {\n        // if it's not part of the defaults\n        const partOfDefaults = Object.keys(args[0]).some(key => Reflect.has(defaults, key));\n        if (!partOfDefaults) {\n            // merge that key\n            deepMerge(opts, { [objKey]: args[0] });\n            // remove the obj key from the keys\n            keys.splice(keys.indexOf(objKey), 1);\n            // shift the first argument off\n            args.shift();\n        }\n    }\n    if (args.length === 1 && isObject(args[0])) {\n        deepMerge(opts, args[0]);\n    }\n    else {\n        for (let i = 0; i < keys.length; i++) {\n            if (isDefined(args[i])) {\n                opts[keys[i]] = args[i];\n            }\n        }\n    }\n    return deepMerge(defaults, opts);\n}\n/**\n * Return this instances default values by calling Constructor.getDefaults()\n */\nexport function getDefaultsFromInstance(instance) {\n    return instance.constructor.getDefaults();\n}\n/**\n * Returns the fallback if the given object is undefined.\n * Take an array of arguments and return a formatted options object.\n */\nexport function defaultArg(given, fallback) {\n    if (isUndef(given)) {\n        return fallback;\n    }\n    else {\n        return given;\n    }\n}\n/**\n * Remove all of the properties belonging to omit from obj.\n */\nexport function omitFromObject(obj, omit) {\n    omit.forEach(prop => {\n        if (Reflect.has(obj, prop)) {\n            delete obj[prop];\n        }\n    });\n    return obj;\n}\n//# sourceMappingURL=Defaults.js.map","import { ToneWithContext } from \"../context/ToneWithContext\";\nimport { Timeline } from \"./Timeline\";\nimport { onContextClose, onContextInit } from \"../context/ContextInitialization\";\n/**\n * Draw is useful for synchronizing visuals and audio events.\n * Callbacks from Tone.Transport or any of the Tone.Event classes\n * always happen _before_ the scheduled time and are not synchronized\n * to the animation frame so they are not good for triggering tightly\n * synchronized visuals and sound. Draw makes it easy to schedule\n * callbacks using the AudioContext time and uses requestAnimationFrame.\n * @example\n * Tone.Transport.schedule((time) => {\n * \t// use the time argument to schedule a callback with Draw\n * \tTone.Draw.schedule(() => {\n * \t\t// do drawing or DOM manipulation here\n * \t\tconsole.log(time);\n * \t}, time);\n * }, \"+0.5\");\n * Tone.Transport.start();\n * @category Core\n */\nexport class Draw extends ToneWithContext {\n    constructor() {\n        super(...arguments);\n        this.name = \"Draw\";\n        /**\n         * The duration after which events are not invoked.\n         */\n        this.expiration = 0.25;\n        /**\n         * The amount of time before the scheduled time\n         * that the callback can be invoked. Default is\n         * half the time of an animation frame (0.008 seconds).\n         */\n        this.anticipation = 0.008;\n        /**\n         * All of the events.\n         */\n        this._events = new Timeline();\n        /**\n         * The draw loop\n         */\n        this._boundDrawLoop = this._drawLoop.bind(this);\n        /**\n         * The animation frame id\n         */\n        this._animationFrame = -1;\n    }\n    /**\n     * Schedule a function at the given time to be invoked\n     * on the nearest animation frame.\n     * @param  callback  Callback is invoked at the given time.\n     * @param  time      The time relative to the AudioContext time to invoke the callback.\n     * @example\n     * Tone.Transport.scheduleRepeat(time => {\n     * \tTone.Draw.schedule(() => console.log(time), time);\n     * }, 1);\n     * Tone.Transport.start();\n     */\n    schedule(callback, time) {\n        this._events.add({\n            callback,\n            time: this.toSeconds(time),\n        });\n        // start the draw loop on the first event\n        if (this._events.length === 1) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n        return this;\n    }\n    /**\n     * Cancel events scheduled after the given time\n     * @param  after  Time after which scheduled events will be removed from the scheduling timeline.\n     */\n    cancel(after) {\n        this._events.cancel(this.toSeconds(after));\n        return this;\n    }\n    /**\n     * The draw loop\n     */\n    _drawLoop() {\n        const now = this.context.currentTime;\n        while (this._events.length && this._events.peek().time - this.anticipation <= now) {\n            const event = this._events.shift();\n            if (event && now - event.time <= this.expiration) {\n                event.callback();\n            }\n        }\n        if (this._events.length > 0) {\n            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);\n        }\n    }\n    dispose() {\n        super.dispose();\n        this._events.dispose();\n        cancelAnimationFrame(this._animationFrame);\n        return this;\n    }\n}\n//-------------------------------------\n// \tINITIALIZATION\n//-------------------------------------\nonContextInit(context => {\n    context.draw = new Draw({ context });\n});\nonContextClose(context => {\n    context.draw.dispose();\n});\n//# sourceMappingURL=Draw.js.map","import { Tone } from \"../Tone\";\nimport { isUndef } from \"./TypeCheck\";\n/**\n * Emitter gives classes which extend it\n * the ability to listen for and emit events.\n * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).\n * MIT (c) 2011 Jerome Etienne.\n */\nexport class Emitter extends Tone {\n    constructor() {\n        super(...arguments);\n        this.name = \"Emitter\";\n    }\n    /**\n     * Bind a callback to a specific event.\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    on(event, callback) {\n        // split the event\n        const events = event.split(/\\W+/);\n        events.forEach(eventName => {\n            if (isUndef(this._events)) {\n                this._events = {};\n            }\n            if (!this._events.hasOwnProperty(eventName)) {\n                this._events[eventName] = [];\n            }\n            this._events[eventName].push(callback);\n        });\n        return this;\n    }\n    /**\n     * Bind a callback which is only invoked once\n     * @param  event     The name of the event to listen for.\n     * @param  callback  The callback to invoke when the event is emitted\n     */\n    once(event, callback) {\n        const boundCallback = (...args) => {\n            // invoke the callback\n            callback(...args);\n            // remove the event\n            this.off(event, boundCallback);\n        };\n        this.on(event, boundCallback);\n        return this;\n    }\n    /**\n     * Remove the event listener.\n     * @param  event     The event to stop listening to.\n     * @param  callback  The callback which was bound to the event with Emitter.on.\n     *                   If no callback is given, all callbacks events are removed.\n     */\n    off(event, callback) {\n        const events = event.split(/\\W+/);\n        events.forEach(eventName => {\n            if (isUndef(this._events)) {\n                this._events = {};\n            }\n            if (this._events.hasOwnProperty(event)) {\n                if (isUndef(callback)) {\n                    this._events[event] = [];\n                }\n                else {\n                    const eventList = this._events[event];\n                    for (let i = 0; i < eventList.length; i++) {\n                        if (eventList[i] === callback) {\n                            eventList.splice(i, 1);\n                        }\n                    }\n                }\n            }\n        });\n        return this;\n    }\n    /**\n     * Invoke all of the callbacks bound to the event\n     * with any arguments passed in.\n     * @param  event  The name of the event.\n     * @param args The arguments to pass to the functions listening.\n     */\n    emit(event, ...args) {\n        if (this._events) {\n            if (this._events.hasOwnProperty(event)) {\n                const eventList = this._events[event].slice(0);\n                for (let i = 0, len = eventList.length; i < len; i++) {\n                    eventList[i].apply(this, args);\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * Add Emitter functions (on/off/emit) to the object\n     */\n    static mixin(constr) {\n        // instance._events = {};\n        [\"on\", \"once\", \"off\", \"emit\"].forEach(name => {\n            const property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);\n            Object.defineProperty(constr.prototype, name, property);\n        });\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._events = undefined;\n        return this;\n    }\n}\n//# sourceMappingURL=Emitter.js.map","import { isArray } from \"./TypeCheck\";\n/**\n * Make the property not writable using `defineProperty`. Internal use only.\n */\nexport function readOnly(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => readOnly(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            enumerable: true,\n            writable: false,\n        });\n    }\n}\n/**\n * Make an attribute writeable. Internal use only.\n */\nexport function writable(target, property) {\n    if (isArray(property)) {\n        property.forEach(str => writable(target, str));\n    }\n    else {\n        Object.defineProperty(target, property, {\n            writable: true,\n        });\n    }\n}\nexport const noOp = () => {\n    // no operation here!\n};\n//# sourceMappingURL=Interface.js.map","import { Tone } from \"../Tone\";\nimport { isDefined } from \"./TypeCheck\";\nimport { assert } from \"./Debug\";\n/**\n * Similar to Tone.Timeline, but all events represent\n * intervals with both \"time\" and \"duration\" times. The\n * events are placed in a tree structure optimized\n * for querying an intersection point with the timeline\n * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)\n * to represent the data.\n */\nexport class IntervalTimeline extends Tone {\n    constructor() {\n        super(...arguments);\n        this.name = \"IntervalTimeline\";\n        /**\n         * The root node of the inteval tree\n         */\n        this._root = null;\n        /**\n         * Keep track of the length of the timeline.\n         */\n        this._length = 0;\n    }\n    /**\n     * The event to add to the timeline. All events must\n     * have a time and duration value\n     * @param  event  The event to add to the timeline\n     */\n    add(event) {\n        assert(isDefined(event.time), \"Events must have a time property\");\n        assert(isDefined(event.duration), \"Events must have a duration parameter\");\n        event.time = event.time.valueOf();\n        let node = new IntervalNode(event.time, event.time + event.duration, event);\n        if (this._root === null) {\n            this._root = node;\n        }\n        else {\n            this._root.insert(node);\n        }\n        this._length++;\n        // Restructure tree to be balanced\n        while (node !== null) {\n            node.updateHeight();\n            node.updateMax();\n            this._rebalance(node);\n            node = node.parent;\n        }\n        return this;\n    }\n    /**\n     * Remove an event from the timeline.\n     * @param  event  The event to remove from the timeline\n     */\n    remove(event) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(event.time, results);\n            for (const node of results) {\n                if (node.event === event) {\n                    this._removeNode(node);\n                    this._length--;\n                    break;\n                }\n            }\n        }\n        return this;\n    }\n    /**\n     * The number of items in the timeline.\n     * @readOnly\n     */\n    get length() {\n        return this._length;\n    }\n    /**\n     * Remove events whose time time is after the given time\n     * @param  after  The time to query.\n     */\n    cancel(after) {\n        this.forEachFrom(after, event => this.remove(event));\n        return this;\n    }\n    /**\n     * Set the root node as the given node\n     */\n    _setRoot(node) {\n        this._root = node;\n        if (this._root !== null) {\n            this._root.parent = null;\n        }\n    }\n    /**\n     * Replace the references to the node in the node's parent\n     * with the replacement node.\n     */\n    _replaceNodeInParent(node, replacement) {\n        if (node.parent !== null) {\n            if (node.isLeftChild()) {\n                node.parent.left = replacement;\n            }\n            else {\n                node.parent.right = replacement;\n            }\n            this._rebalance(node.parent);\n        }\n        else {\n            this._setRoot(replacement);\n        }\n    }\n    /**\n     * Remove the node from the tree and replace it with\n     * a successor which follows the schema.\n     */\n    _removeNode(node) {\n        if (node.left === null && node.right === null) {\n            this._replaceNodeInParent(node, null);\n        }\n        else if (node.right === null) {\n            this._replaceNodeInParent(node, node.left);\n        }\n        else if (node.left === null) {\n            this._replaceNodeInParent(node, node.right);\n        }\n        else {\n            const balance = node.getBalance();\n            let replacement;\n            let temp = null;\n            if (balance > 0) {\n                if (node.left.right === null) {\n                    replacement = node.left;\n                    replacement.right = node.right;\n                    temp = replacement;\n                }\n                else {\n                    replacement = node.left.right;\n                    while (replacement.right !== null) {\n                        replacement = replacement.right;\n                    }\n                    if (replacement.parent) {\n                        replacement.parent.right = replacement.left;\n                        temp = replacement.parent;\n                        replacement.left = node.left;\n                        replacement.right = node.right;\n                    }\n                }\n            }\n            else if (node.right.left === null) {\n                replacement = node.right;\n                replacement.left = node.left;\n                temp = replacement;\n            }\n            else {\n                replacement = node.right.left;\n                while (replacement.left !== null) {\n                    replacement = replacement.left;\n                }\n                if (replacement.parent) {\n                    replacement.parent.left = replacement.right;\n                    temp = replacement.parent;\n                    replacement.left = node.left;\n                    replacement.right = node.right;\n                }\n            }\n            if (node.parent !== null) {\n                if (node.isLeftChild()) {\n                    node.parent.left = replacement;\n                }\n                else {\n                    node.parent.right = replacement;\n                }\n            }\n            else {\n                this._setRoot(replacement);\n            }\n            if (temp) {\n                this._rebalance(temp);\n            }\n        }\n        node.dispose();\n    }\n    /**\n     * Rotate the tree to the left\n     */\n    _rotateLeft(node) {\n        const parent = node.parent;\n        const isLeftChild = node.isLeftChild();\n        // Make node.right the new root of this sub tree (instead of node)\n        const pivotNode = node.right;\n        if (pivotNode) {\n            node.right = pivotNode.left;\n            pivotNode.left = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    }\n    /**\n     * Rotate the tree to the right\n     */\n    _rotateRight(node) {\n        const parent = node.parent;\n        const isLeftChild = node.isLeftChild();\n        // Make node.left the new root of this sub tree (instead of node)\n        const pivotNode = node.left;\n        if (pivotNode) {\n            node.left = pivotNode.right;\n            pivotNode.right = node;\n        }\n        if (parent !== null) {\n            if (isLeftChild) {\n                parent.left = pivotNode;\n            }\n            else {\n                parent.right = pivotNode;\n            }\n        }\n        else {\n            this._setRoot(pivotNode);\n        }\n    }\n    /**\n     * Balance the BST\n     */\n    _rebalance(node) {\n        const balance = node.getBalance();\n        if (balance > 1 && node.left) {\n            if (node.left.getBalance() < 0) {\n                this._rotateLeft(node.left);\n            }\n            else {\n                this._rotateRight(node);\n            }\n        }\n        else if (balance < -1 && node.right) {\n            if (node.right.getBalance() > 0) {\n                this._rotateRight(node.right);\n            }\n            else {\n                this._rotateLeft(node);\n            }\n        }\n    }\n    /**\n     * Get an event whose time and duration span the give time. Will\n     * return the match whose \"time\" value is closest to the given time.\n     * @return  The event which spans the desired time\n     */\n    get(time) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(time, results);\n            if (results.length > 0) {\n                let max = results[0];\n                for (let i = 1; i < results.length; i++) {\n                    if (results[i].low > max.low) {\n                        max = results[i];\n                    }\n                }\n                return max.event;\n            }\n        }\n        return null;\n    }\n    /**\n     * Iterate over everything in the timeline.\n     * @param  callback The callback to invoke with every item\n     */\n    forEach(callback) {\n        if (this._root !== null) {\n            const allNodes = [];\n            this._root.traverse(node => allNodes.push(node));\n            allNodes.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array in which the given time\n     * overlaps with the time and duration time of the event.\n     * @param  time The time to check if items are overlapping\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAtTime(time, callback) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.search(time, results);\n            results.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array in which the time is greater\n     * than or equal to the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachFrom(time, callback) {\n        if (this._root !== null) {\n            const results = [];\n            this._root.searchAfter(time, results);\n            results.forEach(node => {\n                if (node.event) {\n                    callback(node.event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        if (this._root !== null) {\n            this._root.traverse(node => node.dispose());\n        }\n        this._root = null;\n        return this;\n    }\n}\n//-------------------------------------\n// \tINTERVAL NODE HELPER\n//-------------------------------------\n/**\n * Represents a node in the binary search tree, with the addition\n * of a \"high\" value which keeps track of the highest value of\n * its children.\n * References:\n * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/\n * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf\n * @param low\n * @param high\n */\nclass IntervalNode {\n    constructor(low, high, event) {\n        // the nodes to the left\n        this._left = null;\n        // the nodes to the right\n        this._right = null;\n        // the parent node\n        this.parent = null;\n        // the number of child nodes\n        this.height = 0;\n        this.event = event;\n        // the low value\n        this.low = low;\n        // the high value\n        this.high = high;\n        // the high value for this and all child nodes\n        this.max = this.high;\n    }\n    /**\n     * Insert a node into the correct spot in the tree\n     */\n    insert(node) {\n        if (node.low <= this.low) {\n            if (this.left === null) {\n                this.left = node;\n            }\n            else {\n                this.left.insert(node);\n            }\n        }\n        else if (this.right === null) {\n            this.right = node;\n        }\n        else {\n            this.right.insert(node);\n        }\n    }\n    /**\n     * Search the tree for nodes which overlap\n     * with the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    search(point, results) {\n        // If p is to the right of the rightmost point of any interval\n        // in this node and all children, there won't be any matches.\n        if (point > this.max) {\n            return;\n        }\n        // Search left children\n        if (this.left !== null) {\n            this.left.search(point, results);\n        }\n        // Check this node\n        if (this.low <= point && this.high > point) {\n            results.push(this);\n        }\n        // If p is to the left of the time of this interval,\n        // then it can't be in any child to the right.\n        if (this.low > point) {\n            return;\n        }\n        // Search right children\n        if (this.right !== null) {\n            this.right.search(point, results);\n        }\n    }\n    /**\n     * Search the tree for nodes which are less\n     * than the given point\n     * @param  point  The point to query\n     * @param  results  The array to put the results\n     */\n    searchAfter(point, results) {\n        // Check this node\n        if (this.low >= point) {\n            results.push(this);\n            if (this.left !== null) {\n                this.left.searchAfter(point, results);\n            }\n        }\n        // search the right side\n        if (this.right !== null) {\n            this.right.searchAfter(point, results);\n        }\n    }\n    /**\n     * Invoke the callback on this element and both it's branches\n     * @param  {Function}  callback\n     */\n    traverse(callback) {\n        callback(this);\n        if (this.left !== null) {\n            this.left.traverse(callback);\n        }\n        if (this.right !== null) {\n            this.right.traverse(callback);\n        }\n    }\n    /**\n     * Update the height of the node\n     */\n    updateHeight() {\n        if (this.left !== null && this.right !== null) {\n            this.height = Math.max(this.left.height, this.right.height) + 1;\n        }\n        else if (this.right !== null) {\n            this.height = this.right.height + 1;\n        }\n        else if (this.left !== null) {\n            this.height = this.left.height + 1;\n        }\n        else {\n            this.height = 0;\n        }\n    }\n    /**\n     * Update the height of the node\n     */\n    updateMax() {\n        this.max = this.high;\n        if (this.left !== null) {\n            this.max = Math.max(this.max, this.left.max);\n        }\n        if (this.right !== null) {\n            this.max = Math.max(this.max, this.right.max);\n        }\n    }\n    /**\n     * The balance is how the leafs are distributed on the node\n     * @return  Negative numbers are balanced to the right\n     */\n    getBalance() {\n        let balance = 0;\n        if (this.left !== null && this.right !== null) {\n            balance = this.left.height - this.right.height;\n        }\n        else if (this.left !== null) {\n            balance = this.left.height + 1;\n        }\n        else if (this.right !== null) {\n            balance = -(this.right.height + 1);\n        }\n        return balance;\n    }\n    /**\n     * @returns true if this node is the left child of its parent\n     */\n    isLeftChild() {\n        return this.parent !== null && this.parent.left === this;\n    }\n    /**\n     * get/set the left node\n     */\n    get left() {\n        return this._left;\n    }\n    set left(node) {\n        this._left = node;\n        if (node !== null) {\n            node.parent = this;\n        }\n        this.updateHeight();\n        this.updateMax();\n    }\n    /**\n     * get/set the right node\n     */\n    get right() {\n        return this._right;\n    }\n    set right(node) {\n        this._right = node;\n        if (node !== null) {\n            node.parent = this;\n        }\n        this.updateHeight();\n        this.updateMax();\n    }\n    /**\n     * null out references.\n     */\n    dispose() {\n        this.parent = null;\n        this._left = null;\n        this._right = null;\n        this.event = null;\n    }\n}\n//# sourceMappingURL=IntervalTimeline.js.map","/**\n * The threshold for correctness for operators. Less than one sample even\n * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).\n */\nconst EPSILON = 1e-6;\n/**\n * Test if A is greater than B\n */\nexport function GT(a, b) {\n    return a > b + EPSILON;\n}\n/**\n * Test if A is greater than or equal to B\n */\nexport function GTE(a, b) {\n    return GT(a, b) || EQ(a, b);\n}\n/**\n * Test if A is less than B\n */\nexport function LT(a, b) {\n    return a + EPSILON < b;\n}\n/**\n * Test if A is less than B\n */\nexport function EQ(a, b) {\n    return Math.abs(a - b) < EPSILON;\n}\n/**\n * Clamp the value within the given range\n */\nexport function clamp(value, min, max) {\n    return Math.max(Math.min(value, max), min);\n}\n//# sourceMappingURL=Math.js.map","import { Timeline } from \"./Timeline\";\nimport { assertRange } from \"./Debug\";\n/**\n * A Timeline State. Provides the methods: `setStateAtTime(\"state\", time)` and `getValueAtTime(time)`\n * @param initial The initial state of the StateTimeline.  Defaults to `undefined`\n */\nexport class StateTimeline extends Timeline {\n    constructor(initial = \"stopped\") {\n        super();\n        this.name = \"StateTimeline\";\n        this._initial = initial;\n        this.setStateAtTime(this._initial, 0);\n    }\n    /**\n     * Returns the scheduled state scheduled before or at\n     * the given time.\n     * @param  time  The time to query.\n     * @return  The name of the state input in setStateAtTime.\n     */\n    getValueAtTime(time) {\n        const event = this.get(time);\n        if (event !== null) {\n            return event.state;\n        }\n        else {\n            return this._initial;\n        }\n    }\n    /**\n     * Add a state to the timeline.\n     * @param  state The name of the state to set.\n     * @param  time  The time to query.\n     * @param options Any additional options that are needed in the timeline.\n     */\n    setStateAtTime(state, time, options) {\n        assertRange(time, 0);\n        this.add(Object.assign({}, options, {\n            state,\n            time,\n        }));\n        return this;\n    }\n    /**\n     * Return the event before the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check before\n     * @return  The event with the given state before the time\n     */\n    getLastState(state, time) {\n        // time = this.toSeconds(time);\n        const index = this._search(time);\n        for (let i = index; i >= 0; i--) {\n            const event = this._timeline[i];\n            if (event.state === state) {\n                return event;\n            }\n        }\n    }\n    /**\n     * Return the event after the time with the given state\n     * @param  state The state to look for\n     * @param  time  When to check from\n     * @return  The event with the given state after the time\n     */\n    getNextState(state, time) {\n        // time = this.toSeconds(time);\n        const index = this._search(time);\n        if (index !== -1) {\n            for (let i = index; i < this._timeline.length; i++) {\n                const event = this._timeline[i];\n                if (event.state === state) {\n                    return event;\n                }\n            }\n        }\n    }\n}\n//# sourceMappingURL=StateTimeline.js.map","import { Tone } from \"../Tone\";\nimport { optionsFromArguments } from \"./Defaults\";\nimport { assert } from \"./Debug\";\nimport { EQ, GT, GTE, LT } from \"./Math\";\n/**\n * A Timeline class for scheduling and maintaining state\n * along a timeline. All events must have a \"time\" property.\n * Internally, events are stored in time order for fast\n * retrieval.\n */\nexport class Timeline extends Tone {\n    constructor() {\n        super();\n        this.name = \"Timeline\";\n        /**\n         * The array of scheduled timeline events\n         */\n        this._timeline = [];\n        const options = optionsFromArguments(Timeline.getDefaults(), arguments, [\"memory\"]);\n        this.memory = options.memory;\n        this.increasing = options.increasing;\n    }\n    static getDefaults() {\n        return {\n            memory: Infinity,\n            increasing: false,\n        };\n    }\n    /**\n     * The number of items in the timeline.\n     */\n    get length() {\n        return this._timeline.length;\n    }\n    /**\n     * Insert an event object onto the timeline. Events must have a \"time\" attribute.\n     * @param event  The event object to insert into the timeline.\n     */\n    add(event) {\n        // the event needs to have a time attribute\n        assert(Reflect.has(event, \"time\"), \"Timeline: events must have a time attribute\");\n        event.time = event.time.valueOf();\n        if (this.increasing && this.length) {\n            const lastValue = this._timeline[this.length - 1];\n            assert(GTE(event.time, lastValue.time), \"The time must be greater than or equal to the last scheduled time\");\n            this._timeline.push(event);\n        }\n        else {\n            const index = this._search(event.time);\n            this._timeline.splice(index + 1, 0, event);\n        }\n        // if the length is more than the memory, remove the previous ones\n        if (this.length > this.memory) {\n            const diff = this.length - this.memory;\n            this._timeline.splice(0, diff);\n        }\n        return this;\n    }\n    /**\n     * Remove an event from the timeline.\n     * @param  {Object}  event  The event object to remove from the list.\n     * @returns {Timeline} this\n     */\n    remove(event) {\n        const index = this._timeline.indexOf(event);\n        if (index !== -1) {\n            this._timeline.splice(index, 1);\n        }\n        return this;\n    }\n    /**\n     * Get the nearest event whose time is less than or equal to the given time.\n     * @param  time  The time to query.\n     */\n    get(time, param = \"time\") {\n        const index = this._search(time, param);\n        if (index !== -1) {\n            return this._timeline[index];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Return the first event in the timeline without removing it\n     * @returns {Object} The first event object\n     */\n    peek() {\n        return this._timeline[0];\n    }\n    /**\n     * Return the first event in the timeline and remove it\n     */\n    shift() {\n        return this._timeline.shift();\n    }\n    /**\n     * Get the event which is scheduled after the given time.\n     * @param  time  The time to query.\n     */\n    getAfter(time, param = \"time\") {\n        const index = this._search(time, param);\n        if (index + 1 < this._timeline.length) {\n            return this._timeline[index + 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Get the event before the event at the given time.\n     * @param  time  The time to query.\n     */\n    getBefore(time) {\n        const len = this._timeline.length;\n        // if it's after the last item, return the last item\n        if (len > 0 && this._timeline[len - 1].time < time) {\n            return this._timeline[len - 1];\n        }\n        const index = this._search(time);\n        if (index - 1 >= 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Cancel events at and after the given time\n     * @param  after  The time to query.\n     */\n    cancel(after) {\n        if (this._timeline.length > 1) {\n            let index = this._search(after);\n            if (index >= 0) {\n                if (EQ(this._timeline[index].time, after)) {\n                    // get the first item with that time\n                    for (let i = index; i >= 0; i--) {\n                        if (EQ(this._timeline[i].time, after)) {\n                            index = i;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                    this._timeline = this._timeline.slice(0, index);\n                }\n                else {\n                    this._timeline = this._timeline.slice(0, index + 1);\n                }\n            }\n            else {\n                this._timeline = [];\n            }\n        }\n        else if (this._timeline.length === 1) {\n            // the first item's time\n            if (GTE(this._timeline[0].time, after)) {\n                this._timeline = [];\n            }\n        }\n        return this;\n    }\n    /**\n     * Cancel events before or equal to the given time.\n     * @param  time  The time to cancel before.\n     */\n    cancelBefore(time) {\n        const index = this._search(time);\n        if (index >= 0) {\n            this._timeline = this._timeline.slice(index + 1);\n        }\n        return this;\n    }\n    /**\n     * Returns the previous event if there is one. null otherwise\n     * @param  event The event to find the previous one of\n     * @return The event right before the given event\n     */\n    previousEvent(event) {\n        const index = this._timeline.indexOf(event);\n        if (index > 0) {\n            return this._timeline[index - 1];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Does a binary search on the timeline array and returns the\n     * nearest event index whose time is after or equal to the given time.\n     * If a time is searched before the first index in the timeline, -1 is returned.\n     * If the time is after the end, the index of the last item is returned.\n     */\n    _search(time, param = \"time\") {\n        if (this._timeline.length === 0) {\n            return -1;\n        }\n        let beginning = 0;\n        const len = this._timeline.length;\n        let end = len;\n        if (len > 0 && this._timeline[len - 1][param] <= time) {\n            return len - 1;\n        }\n        while (beginning < end) {\n            // calculate the midpoint for roughly equal partition\n            let midPoint = Math.floor(beginning + (end - beginning) / 2);\n            const event = this._timeline[midPoint];\n            const nextEvent = this._timeline[midPoint + 1];\n            if (EQ(event[param], time)) {\n                // choose the last one that has the same time\n                for (let i = midPoint; i < this._timeline.length; i++) {\n                    const testEvent = this._timeline[i];\n                    if (EQ(testEvent[param], time)) {\n                        midPoint = i;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                return midPoint;\n            }\n            else if (LT(event[param], time) && GT(nextEvent[param], time)) {\n                return midPoint;\n            }\n            else if (GT(event[param], time)) {\n                // search lower\n                end = midPoint;\n            }\n            else {\n                // search upper\n                beginning = midPoint + 1;\n            }\n        }\n        return -1;\n    }\n    /**\n     * Internal iterator. Applies extra safety checks for\n     * removing items from the array.\n     */\n    _iterate(callback, lowerBound = 0, upperBound = this._timeline.length - 1) {\n        this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);\n    }\n    /**\n     * Iterate over everything in the array\n     * @param  callback The callback to invoke with every item\n     */\n    forEach(callback) {\n        this._iterate(callback);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at or before the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachBefore(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const upperBound = this._search(time);\n        if (upperBound !== -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array after the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAfter(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const lowerBound = this._search(time);\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array between the startTime and endTime.\n     * The timerange is inclusive of the startTime, but exclusive of the endTime.\n     * range = [startTime, endTime).\n     * @param  startTime The time to check if items are before\n     * @param  endTime The end of the test interval.\n     * @param  callback The callback to invoke with every item\n     */\n    forEachBetween(startTime, endTime, callback) {\n        let lowerBound = this._search(startTime);\n        let upperBound = this._search(endTime);\n        if (lowerBound !== -1 && upperBound !== -1) {\n            if (this._timeline[lowerBound].time !== startTime) {\n                lowerBound += 1;\n            }\n            // exclusive of the end time\n            if (this._timeline[upperBound].time === endTime) {\n                upperBound -= 1;\n            }\n            this._iterate(callback, lowerBound, upperBound);\n        }\n        else if (lowerBound === -1) {\n            this._iterate(callback, 0, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at or after the given time. Similar to\n     * forEachAfter, but includes the item(s) at the given time.\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachFrom(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        let lowerBound = this._search(time);\n        // work backwards until the event time is less than time\n        while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {\n            lowerBound--;\n        }\n        this._iterate(callback, lowerBound + 1);\n        return this;\n    }\n    /**\n     * Iterate over everything in the array at the given time\n     * @param  time The time to check if items are before\n     * @param  callback The callback to invoke with every item\n     */\n    forEachAtTime(time, callback) {\n        // iterate over the items in reverse so that removing an item doesn't break things\n        const upperBound = this._search(time);\n        if (upperBound !== -1 && EQ(this._timeline[upperBound].time, time)) {\n            let lowerBound = upperBound;\n            for (let i = upperBound; i >= 0; i--) {\n                if (EQ(this._timeline[i].time, time)) {\n                    lowerBound = i;\n                }\n                else {\n                    break;\n                }\n            }\n            this._iterate(event => {\n                callback(event);\n            }, lowerBound, upperBound);\n        }\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._timeline = [];\n        return this;\n    }\n}\n//# sourceMappingURL=Timeline.js.map","import { Timeline } from \"./Timeline\";\nimport { Tone } from \"../Tone\";\n/**\n * Represents a single value which is gettable and settable in a timed way\n */\nexport class TimelineValue extends Tone {\n    /**\n     * @param initialValue The value to return if there is no scheduled values\n     */\n    constructor(initialValue) {\n        super();\n        this.name = \"TimelineValue\";\n        /**\n         * The timeline which stores the values\n         */\n        this._timeline = new Timeline({ memory: 10 });\n        this._initialValue = initialValue;\n    }\n    /**\n     * Set the value at the given time\n     */\n    set(value, time) {\n        this._timeline.add({\n            value, time\n        });\n        return this;\n    }\n    /**\n     * Get the value at the given time\n     */\n    get(time) {\n        const event = this._timeline.get(time);\n        if (event) {\n            return event.value;\n        }\n        else {\n            return this._initialValue;\n        }\n    }\n}\n//# sourceMappingURL=TimelineValue.js.map","/**\n * Test if the arg is undefined\n */\nexport function isUndef(arg) {\n    return typeof arg === \"undefined\";\n}\n/**\n * Test if the arg is not undefined\n */\nexport function isDefined(arg) {\n    return !isUndef(arg);\n}\n/**\n * Test if the arg is a function\n */\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\n/**\n * Test if the argument is a number.\n */\nexport function isNumber(arg) {\n    return (typeof arg === \"number\");\n}\n/**\n * Test if the given argument is an object literal (i.e. `{}`);\n */\nexport function isObject(arg) {\n    return (Object.prototype.toString.call(arg) === \"[object Object]\" && arg.constructor === Object);\n}\n/**\n * Test if the argument is a boolean.\n */\nexport function isBoolean(arg) {\n    return (typeof arg === \"boolean\");\n}\n/**\n * Test if the argument is an Array\n */\nexport function isArray(arg) {\n    return (Array.isArray(arg));\n}\n/**\n * Test if the argument is a string.\n */\nexport function isString(arg) {\n    return (typeof arg === \"string\");\n}\n/**\n * Test if the argument is in the form of a note in scientific pitch notation.\n * e.g. \"C4\"\n */\nexport function isNote(arg) {\n    return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);\n}\n//# sourceMappingURL=TypeCheck.js.map","import { addToWorklet } from \"./WorkletGlobalScope\";\nconst delayLine = /* javascript */ `\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n`;\naddToWorklet(delayLine);\n//# sourceMappingURL=DelayLine.worklet.js.map","import \"./ToneAudioWorkletProcessor.worklet\";\nimport { addToWorklet } from \"./WorkletGlobalScope\";\nexport const singleIOProcess = /* javascript */ `\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n`;\naddToWorklet(singleIOProcess);\n//# sourceMappingURL=SingleIOProcessor.worklet.js.map","import { ToneAudioNode } from \"../context/ToneAudioNode\";\nimport { noOp } from \"../util/Interface\";\nimport { getWorkletGlobalScope } from \"./WorkletGlobalScope\";\nexport class ToneAudioWorklet extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        this.name = \"ToneAudioWorklet\";\n        /**\n         * The constructor options for the node\n         */\n        this.workletOptions = {};\n        /**\n         * Callback which is invoked when there is an error in the processing\n         */\n        this.onprocessorerror = noOp;\n        const blobUrl = URL.createObjectURL(new Blob([getWorkletGlobalScope()], { type: \"text/javascript\" }));\n        const name = this._audioWorkletName();\n        this._dummyGain = this.context.createGain();\n        this._dummyParam = this._dummyGain.gain;\n        // Register the processor\n        this.context.addAudioWorkletModule(blobUrl, name).then(() => {\n            // create the worklet when it's read\n            if (!this.disposed) {\n                this._worklet = this.context.createAudioWorkletNode(name, this.workletOptions);\n                this._worklet.onprocessorerror = this.onprocessorerror.bind(this);\n                this.onReady(this._worklet);\n            }\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._dummyGain.disconnect();\n        if (this._worklet) {\n            this._worklet.port.postMessage(\"dispose\");\n            this._worklet.disconnect();\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=ToneAudioWorklet.js.map","import { addToWorklet } from \"./WorkletGlobalScope\";\nconst toneAudioWorkletProcessor = /* javascript */ `\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n`;\naddToWorklet(toneAudioWorkletProcessor);\n//# sourceMappingURL=ToneAudioWorkletProcessor.worklet.js.map","/**\n * All of the classes or functions which are loaded into the AudioWorkletGlobalScope\n */\nconst workletContext = new Set();\n/**\n * Add a class to the AudioWorkletGlobalScope\n */\nexport function addToWorklet(classOrFunction) {\n    workletContext.add(classOrFunction);\n}\n/**\n * Register a processor in the AudioWorkletGlobalScope with the given name\n */\nexport function registerProcessor(name, classDesc) {\n    const processor = /* javascript */ `registerProcessor(\"${name}\", ${classDesc})`;\n    workletContext.add(processor);\n}\n/**\n * Get all of the modules which have been registered to the AudioWorkletGlobalScope\n */\nexport function getWorkletGlobalScope() {\n    return Array.from(workletContext).join(\"\\n\");\n}\n//# sourceMappingURL=WorkletGlobalScope.js.map","import { Filter } from \"../component/filter/Filter\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.\n * Setting the LFO rate and depth allows for control over the filter modulation rate\n * and depth.\n *\n * @example\n * // create an autofilter and start it's LFO\n * const autoFilter = new Tone.AutoFilter(\"4n\").toDestination().start();\n * // route an oscillator through the filter and start it\n * const oscillator = new Tone.Oscillator().connect(autoFilter).start();\n * @category Effect\n */\nexport class AutoFilter extends LFOEffect {\n    constructor() {\n        super(optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]));\n        this.name = \"AutoFilter\";\n        const options = optionsFromArguments(AutoFilter.getDefaults(), arguments, [\"frequency\", \"baseFrequency\", \"octaves\"]);\n        this.filter = new Filter(Object.assign(options.filter, {\n            context: this.context,\n        }));\n        // connections\n        this.connectEffect(this.filter);\n        this._lfo.connect(this.filter.frequency);\n        this.octaves = options.octaves;\n        this.baseFrequency = options.baseFrequency;\n    }\n    static getDefaults() {\n        return Object.assign(LFOEffect.getDefaults(), {\n            baseFrequency: 200,\n            octaves: 2.6,\n            filter: {\n                type: \"lowpass\",\n                rolloff: -12,\n                Q: 1,\n            }\n        });\n    }\n    /**\n     * The minimum value of the filter's cutoff frequency.\n     */\n    get baseFrequency() {\n        return this._lfo.min;\n    }\n    set baseFrequency(freq) {\n        this._lfo.min = this.toFrequency(freq);\n        // and set the max\n        this.octaves = this._octaves;\n    }\n    /**\n     * The maximum value of the filter's cutoff frequency.\n     */\n    get octaves() {\n        return this._octaves;\n    }\n    set octaves(oct) {\n        this._octaves = oct;\n        this._lfo.max = this._lfo.min * Math.pow(2, oct);\n    }\n    dispose() {\n        super.dispose();\n        this.filter.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AutoFilter.js.map","import { Panner } from \"../component/channel/Panner\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFOEffect } from \"./LFOEffect\";\n/**\n * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.\n * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).\n *\n * @example\n * // create an autopanner and start it\n * const autoPanner = new Tone.AutoPanner(\"4n\").toDestination().start();\n * // route an oscillator through the panner and start it\n * const oscillator = new Tone.Oscillator().connect(autoPanner).start();\n * @category Effect\n */\nexport class AutoPanner extends LFOEffect {\n    constructor() {\n        super(optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]));\n        this.name = \"AutoPanner\";\n        const options = optionsFromArguments(AutoPanner.getDefaults(), arguments, [\"frequency\"]);\n        this._panner = new Panner({\n            context: this.context,\n            channelCount: options.channelCount\n        });\n        // connections\n        this.connectEffect(this._panner);\n        this._lfo.connect(this._panner.pan);\n        this._lfo.min = -1;\n        this._lfo.max = 1;\n    }\n    static getDefaults() {\n        return Object.assign(LFOEffect.getDefaults(), {\n            channelCount: 1\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._panner.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AutoPanner.js.map","import { Effect } from \"./Effect\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Follower } from \"../component/analysis/Follower\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Gain } from \"../core/context/Gain\";\nimport { dbToGain, gainToDb } from \"../core/type/Conversions\";\nimport { ScaleExp } from \"../signal/ScaleExp\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * AutoWah connects a [[Follower]] to a [[Filter]].\n * The frequency of the filter, follows the input amplitude curve.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).\n *\n * @example\n * const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();\n * // initialize the synth and connect to autowah\n * const synth = new Tone.Synth().connect(autoWah);\n * // Q value influences the effect of the wah - default is 2\n * autoWah.Q.value = 6;\n * // more audible on higher notes\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Effect\n */\nexport class AutoWah extends Effect {\n    constructor() {\n        super(optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"]));\n        this.name = \"AutoWah\";\n        const options = optionsFromArguments(AutoWah.getDefaults(), arguments, [\"baseFrequency\", \"octaves\", \"sensitivity\"]);\n        this._follower = new Follower({\n            context: this.context,\n            smoothing: options.follower,\n        });\n        this._sweepRange = new ScaleExp({\n            context: this.context,\n            min: 0,\n            max: 1,\n            exponent: 0.5,\n        });\n        this._baseFrequency = this.toFrequency(options.baseFrequency);\n        this._octaves = options.octaves;\n        this._inputBoost = new Gain({ context: this.context });\n        this._bandpass = new Filter({\n            context: this.context,\n            rolloff: -48,\n            frequency: 0,\n            Q: options.Q,\n        });\n        this._peaking = new Filter({\n            context: this.context,\n            type: \"peaking\"\n        });\n        this._peaking.gain.value = options.gain;\n        this.gain = this._peaking.gain;\n        this.Q = this._bandpass.Q;\n        // the control signal path\n        this.effectSend.chain(this._inputBoost, this._follower, this._sweepRange);\n        this._sweepRange.connect(this._bandpass.frequency);\n        this._sweepRange.connect(this._peaking.frequency);\n        // the filtered path\n        this.effectSend.chain(this._bandpass, this._peaking, this.effectReturn);\n        // set the initial value\n        this._setSweepRange();\n        this.sensitivity = options.sensitivity;\n        readOnly(this, [\"gain\", \"Q\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            baseFrequency: 100,\n            octaves: 6,\n            sensitivity: 0,\n            Q: 2,\n            gain: 2,\n            follower: 0.2,\n        });\n    }\n    /**\n     * The number of octaves that the filter will sweep above the baseFrequency.\n     */\n    get octaves() {\n        return this._octaves;\n    }\n    set octaves(octaves) {\n        this._octaves = octaves;\n        this._setSweepRange();\n    }\n    /**\n     * The follower's smoothing time\n     */\n    get follower() {\n        return this._follower.smoothing;\n    }\n    set follower(follower) {\n        this._follower.smoothing = follower;\n    }\n    /**\n     * The base frequency from which the sweep will start from.\n     */\n    get baseFrequency() {\n        return this._baseFrequency;\n    }\n    set baseFrequency(baseFreq) {\n        this._baseFrequency = this.toFrequency(baseFreq);\n        this._setSweepRange();\n    }\n    /**\n     * The sensitivity to control how responsive to the input signal the filter is.\n     */\n    get sensitivity() {\n        return gainToDb(1 / this._inputBoost.gain.value);\n    }\n    set sensitivity(sensitivity) {\n        this._inputBoost.gain.value = 1 / dbToGain(sensitivity);\n    }\n    /**\n     * sets the sweep range of the scaler\n     */\n    _setSweepRange() {\n        this._sweepRange.min = this._baseFrequency;\n        this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);\n    }\n    dispose() {\n        super.dispose();\n        this._follower.dispose();\n        this._sweepRange.dispose();\n        this._bandpass.dispose();\n        this._peaking.dispose();\n        this._inputBoost.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AutoWah.js.map","import { ToneAudioWorklet } from \"../core/worklet/ToneAudioWorklet\";\nimport { Effect } from \"./Effect\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { workletName } from \"./BitCrusher.worklet\";\n/**\n * BitCrusher down-samples the incoming signal to a different bit depth.\n * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing\n * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).\n * @example\n * // initialize crusher and route a synth through it\n * const crusher = new Tone.BitCrusher(4).toDestination();\n * const synth = new Tone.Synth().connect(crusher);\n * synth.triggerAttackRelease(\"C2\", 2);\n *\n * @category Effect\n */\nexport class BitCrusher extends Effect {\n    constructor() {\n        super(optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]));\n        this.name = \"BitCrusher\";\n        const options = optionsFromArguments(BitCrusher.getDefaults(), arguments, [\"bits\"]);\n        this._bitCrusherWorklet = new BitCrusherWorklet({\n            context: this.context,\n            bits: options.bits,\n        });\n        // connect it up\n        this.connectEffect(this._bitCrusherWorklet);\n        this.bits = this._bitCrusherWorklet.bits;\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            bits: 4,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._bitCrusherWorklet.dispose();\n        return this;\n    }\n}\n/**\n * Internal class which creates an AudioWorklet to do the bit crushing\n */\nclass BitCrusherWorklet extends ToneAudioWorklet {\n    constructor() {\n        super(optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments));\n        this.name = \"BitCrusherWorklet\";\n        const options = optionsFromArguments(BitCrusherWorklet.getDefaults(), arguments);\n        this.input = new Gain({ context: this.context });\n        this.output = new Gain({ context: this.context });\n        this.bits = new Param({\n            context: this.context,\n            value: options.bits,\n            units: \"positive\",\n            minValue: 1,\n            maxValue: 16,\n            param: this._dummyParam,\n            swappable: true,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioWorklet.getDefaults(), {\n            bits: 12,\n        });\n    }\n    _audioWorkletName() {\n        return workletName;\n    }\n    onReady(node) {\n        connectSeries(this.input, node, this.output);\n        const bits = node.parameters.get(\"bits\");\n        this.bits.setParam(bits);\n    }\n    dispose() {\n        super.dispose();\n        this.input.dispose();\n        this.output.dispose();\n        this.bits.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=BitCrusher.js.map","import \"../core/worklet/SingleIOProcessor.worklet\";\nimport { registerProcessor } from \"../core/worklet/WorkletGlobalScope\";\nexport const workletName = \"bit-crusher\";\nexport const bitCrusherWorklet = /* javascript */ `\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n`;\nregisterProcessor(workletName, bitCrusherWorklet);\n//# sourceMappingURL=BitCrusher.worklet.js.map","import { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\n/**\n * Chebyshev is a waveshaper which is good\n * for making different types of distortion sounds.\n * Note that odd orders sound very different from even ones,\n * and order = 1 is no change.\n * Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).\n * @example\n * // create a new cheby\n * const cheby = new Tone.Chebyshev(50).toDestination();\n * // create a monosynth connected to our cheby\n * const synth = new Tone.MonoSynth().connect(cheby);\n * synth.triggerAttackRelease(\"C2\", 0.4);\n * @category Effect\n */\nexport class Chebyshev extends Effect {\n    constructor() {\n        super(optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"]));\n        this.name = \"Chebyshev\";\n        const options = optionsFromArguments(Chebyshev.getDefaults(), arguments, [\"order\"]);\n        this._shaper = new WaveShaper({\n            context: this.context,\n            length: 4096\n        });\n        this._order = options.order;\n        this.connectEffect(this._shaper);\n        this.order = options.order;\n        this.oversample = options.oversample;\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            order: 1,\n            oversample: \"none\"\n        });\n    }\n    /**\n     * get the coefficient for that degree\n     * @param  x the x value\n     * @param  degree\n     * @param  memo memoize the computed value. this speeds up computation greatly.\n     */\n    _getCoefficient(x, degree, memo) {\n        if (memo.has(degree)) {\n            return memo.get(degree);\n        }\n        else if (degree === 0) {\n            memo.set(degree, 0);\n        }\n        else if (degree === 1) {\n            memo.set(degree, x);\n        }\n        else {\n            memo.set(degree, 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo));\n        }\n        return memo.get(degree);\n    }\n    /**\n     * The order of the Chebyshev polynomial which creates the equation which is applied to the incoming\n     * signal through a Tone.WaveShaper. The equations are in the form:\n     * ```\n     * order 2: 2x^2 + 1\n     * order 3: 4x^3 + 3x\n     * ```\n     * @min 1\n     * @max 100\n     */\n    get order() {\n        return this._order;\n    }\n    set order(order) {\n        this._order = order;\n        this._shaper.setMap((x => {\n            return this._getCoefficient(x, order, new Map());\n        }));\n    }\n    /**\n     * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get oversample() {\n        return this._shaper.oversample;\n    }\n    set oversample(oversampling) {\n        this._shaper.oversample = oversampling;\n    }\n    dispose() {\n        super.dispose();\n        this._shaper.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Chebyshev.js.map","import { StereoFeedbackEffect } from \"../effect/StereoFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.\n * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects.\n * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).\n * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).\n *\n * @example\n * const chorus = new Tone.Chorus(4, 2.5, 0.5);\n * const synth = new Tone.PolySynth().connect(chorus);\n * synth.triggerAttackRelease([\"C3\", \"E3\", \"G3\"], \"8n\");\n *\n * @category Effect\n */\nexport class Chorus extends StereoFeedbackEffect {\n    constructor() {\n        super(optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]));\n        this.name = \"Chorus\";\n        const options = optionsFromArguments(Chorus.getDefaults(), arguments, [\"frequency\", \"delayTime\", \"depth\"]);\n        this._depth = options.depth;\n        this._delayTime = options.delayTime / 1000;\n        this._lfoL = new LFO({\n            context: this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1,\n        });\n        this._lfoR = new LFO({\n            context: this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1,\n            phase: 180\n        });\n        this._delayNodeL = new Delay({ context: this.context });\n        this._delayNodeR = new Delay({ context: this.context });\n        this.frequency = this._lfoL.frequency;\n        readOnly(this, [\"frequency\"]);\n        // have one LFO frequency control the other\n        this._lfoL.frequency.connect(this._lfoR.frequency);\n        // connections\n        this.connectEffectLeft(this._delayNodeL);\n        this.connectEffectRight(this._delayNodeR);\n        // lfo setup\n        this._lfoL.connect(this._delayNodeL.delayTime);\n        this._lfoR.connect(this._delayNodeR.delayTime);\n        // set the initial values\n        this.depth = this._depth;\n        this.type = options.type;\n        this.spread = options.spread;\n    }\n    static getDefaults() {\n        return Object.assign(StereoFeedbackEffect.getDefaults(), {\n            frequency: 1.5,\n            delayTime: 3.5,\n            depth: 0.7,\n            type: \"sine\",\n            spread: 180,\n            feedback: 0,\n            wet: 0.5,\n        });\n    }\n    /**\n     * The depth of the effect. A depth of 1 makes the delayTime\n     * modulate between 0 and 2*delayTime (centered around the delayTime).\n     */\n    get depth() {\n        return this._depth;\n    }\n    set depth(depth) {\n        this._depth = depth;\n        const deviation = this._delayTime * depth;\n        this._lfoL.min = Math.max(this._delayTime - deviation, 0);\n        this._lfoL.max = this._delayTime + deviation;\n        this._lfoR.min = Math.max(this._delayTime - deviation, 0);\n        this._lfoR.max = this._delayTime + deviation;\n    }\n    /**\n     * The delayTime in milliseconds of the chorus. A larger delayTime\n     * will give a more pronounced effect. Nominal range a delayTime\n     * is between 2 and 20ms.\n     */\n    get delayTime() {\n        return this._delayTime * 1000;\n    }\n    set delayTime(delayTime) {\n        this._delayTime = delayTime / 1000;\n        this.depth = this._depth;\n    }\n    /**\n     * The oscillator type of the LFO.\n     */\n    get type() {\n        return this._lfoL.type;\n    }\n    set type(type) {\n        this._lfoL.type = type;\n        this._lfoR.type = type;\n    }\n    /**\n     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n     * When set to 180, LFO's will be panned hard left and right respectively.\n     */\n    get spread() {\n        return this._lfoR.phase - this._lfoL.phase;\n    }\n    set spread(spread) {\n        this._lfoL.phase = 90 - (spread / 2);\n        this._lfoR.phase = (spread / 2) + 90;\n    }\n    /**\n     * Start the effect.\n     */\n    start(time) {\n        this._lfoL.start(time);\n        this._lfoR.start(time);\n        return this;\n    }\n    /**\n     * Stop the lfo\n     */\n    stop(time) {\n        this._lfoL.stop(time);\n        this._lfoR.stop(time);\n        return this;\n    }\n    /**\n     * Sync the filter to the transport. See [[LFO.sync]]\n     */\n    sync() {\n        this._lfoL.sync();\n        this._lfoR.sync();\n        return this;\n    }\n    /**\n     * Unsync the filter from the transport.\n     */\n    unsync() {\n        this._lfoL.unsync();\n        this._lfoR.unsync();\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._lfoL.dispose();\n        this._lfoR.dispose();\n        this._delayNodeL.dispose();\n        this._delayNodeR.dispose();\n        this.frequency.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Chorus.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { WaveShaper } from \"../signal/WaveShaper\";\nimport { Effect } from \"./Effect\";\n/**\n * A simple distortion effect using Tone.WaveShaper.\n * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).\n *\n * @example\n * const dist = new Tone.Distortion(0.8).toDestination();\n * const fm = new Tone.FMSynth().connect(dist);\n * fm.triggerAttackRelease(\"A1\", \"8n\");\n * @category Effect\n */\nexport class Distortion extends Effect {\n    constructor() {\n        super(optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]));\n        this.name = \"Distortion\";\n        const options = optionsFromArguments(Distortion.getDefaults(), arguments, [\"distortion\"]);\n        this._shaper = new WaveShaper({\n            context: this.context,\n            length: 4096,\n        });\n        this._distortion = options.distortion;\n        this.connectEffect(this._shaper);\n        this.distortion = options.distortion;\n        this.oversample = options.oversample;\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            distortion: 0.4,\n            oversample: \"none\",\n        });\n    }\n    /**\n     * The amount of distortion. Nominal range is between 0 and 1.\n     */\n    get distortion() {\n        return this._distortion;\n    }\n    set distortion(amount) {\n        this._distortion = amount;\n        const k = amount * 100;\n        const deg = Math.PI / 180;\n        this._shaper.setMap((x) => {\n            if (Math.abs(x) < 0.001) {\n                // should output 0 when input is 0\n                return 0;\n            }\n            else {\n                return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));\n            }\n        });\n    }\n    /**\n     * The oversampling of the effect. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get oversample() {\n        return this._shaper.oversample;\n    }\n    set oversample(oversampling) {\n        this._shaper.oversample = oversampling;\n    }\n    dispose() {\n        super.dispose();\n        this._shaper.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Distortion.js.map","import { CrossFade } from \"../component/channel/CrossFade\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Effect is the base class for effects. Connect the effect between\n * the effectSend and effectReturn GainNodes, then control the amount of\n * effect which goes to the output using the wet control.\n */\nexport class Effect extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        this.name = \"Effect\";\n        /**\n         * the drywet knob to control the amount of effect\n         */\n        this._dryWet = new CrossFade({ context: this.context });\n        /**\n         * The wet control is how much of the effected\n         * will pass through to the output. 1 = 100% effected\n         * signal, 0 = 100% dry signal.\n         */\n        this.wet = this._dryWet.fade;\n        /**\n         * connect the effectSend to the input of hte effect\n         */\n        this.effectSend = new Gain({ context: this.context });\n        /**\n         * connect the output of the effect to the effectReturn\n         */\n        this.effectReturn = new Gain({ context: this.context });\n        /**\n         * The effect input node\n         */\n        this.input = new Gain({ context: this.context });\n        /**\n         * The effect output\n         */\n        this.output = this._dryWet;\n        // connections\n        this.input.fan(this._dryWet.a, this.effectSend);\n        this.effectReturn.connect(this._dryWet.b);\n        this.wet.setValueAtTime(options.wet, 0);\n        this._internalChannels = [this.effectReturn, this.effectSend];\n        readOnly(this, \"wet\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            wet: 1,\n        });\n    }\n    /**\n     * chains the effect in between the effectSend and effectReturn\n     */\n    connectEffect(effect) {\n        // add it to the internal channels\n        this._internalChannels.push(effect);\n        this.effectSend.chain(effect, this.effectReturn);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._dryWet.dispose();\n        this.effectSend.dispose();\n        this.effectReturn.dispose();\n        this.wet.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Effect.js.map","import { Delay } from \"../core/context/Delay\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { FeedbackEffect } from \"./FeedbackEffect\";\n/**\n * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.\n *\n * @param delayTime The delay applied to the incoming signal.\n * @param feedback The amount of the effected signal which is fed back through the delay.\n * @example\n * const feedbackDelay = new Tone.FeedbackDelay(\"8n\", 0.5).toDestination();\n * const tom = new Tone.MembraneSynth({\n * \toctaves: 4,\n * \tpitchDecay: 0.1\n * }).connect(feedbackDelay);\n * tom.triggerAttackRelease(\"A2\", \"32n\");\n * @category Effect\n */\nexport class FeedbackDelay extends FeedbackEffect {\n    constructor() {\n        super(optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n        this.name = \"FeedbackDelay\";\n        const options = optionsFromArguments(FeedbackDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n        this._delayNode = new Delay({\n            context: this.context,\n            delayTime: options.delayTime,\n            maxDelay: options.maxDelay,\n        });\n        this.delayTime = this._delayNode.delayTime;\n        // connect it up\n        this.connectEffect(this._delayNode);\n        readOnly(this, \"delayTime\");\n    }\n    static getDefaults() {\n        return Object.assign(FeedbackEffect.getDefaults(), {\n            delayTime: 0.25,\n            maxDelay: 1,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._delayNode.dispose();\n        this.delayTime.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FeedbackDelay.js.map","import { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Effect } from \"./Effect\";\n/**\n * FeedbackEffect provides a loop between an audio source and its own output.\n * This is a base-class for feedback effects.\n */\nexport class FeedbackEffect extends Effect {\n    constructor(options) {\n        super(options);\n        this.name = \"FeedbackEffect\";\n        this._feedbackGain = new Gain({\n            context: this.context,\n            gain: options.feedback,\n            units: \"normalRange\",\n        });\n        this.feedback = this._feedbackGain.gain;\n        readOnly(this, \"feedback\");\n        // the feedback loop\n        this.effectReturn.chain(this._feedbackGain, this.effectSend);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            feedback: 0.125,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._feedbackGain.dispose();\n        this.feedback.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FeedbackEffect.js.map","import { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Signal } from \"../signal/Signal\";\nimport { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\n/**\n * An array of comb filter delay values from Freeverb implementation\n */\nconst combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];\n/**\n * An array of allpass filter frequency values from Freeverb implementation\n */\nconst allpassFilterFrequencies = [225, 556, 441, 341];\n/**\n * Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).\n * Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).\n * Freeverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms\n * @example\n * const freeverb = new Tone.Freeverb().toDestination();\n * freeverb.dampening = 1000;\n * // routing synth through the reverb\n * const synth = new Tone.NoiseSynth().connect(freeverb);\n * synth.triggerAttackRelease(0.05);\n * @category Effect\n */\nexport class Freeverb extends StereoEffect {\n    constructor() {\n        super(optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"]));\n        this.name = \"Freeverb\";\n        /**\n         * the comb filters\n         */\n        this._combFilters = [];\n        /**\n         * the allpass filters on the left\n         */\n        this._allpassFiltersL = [];\n        /**\n         * the allpass filters on the right\n         */\n        this._allpassFiltersR = [];\n        const options = optionsFromArguments(Freeverb.getDefaults(), arguments, [\"roomSize\", \"dampening\"]);\n        this.roomSize = new Signal({\n            context: this.context,\n            value: options.roomSize,\n            units: \"normalRange\",\n        });\n        // make the allpass filters on the right\n        this._allpassFiltersL = allpassFilterFrequencies.map(freq => {\n            const allpassL = this.context.createBiquadFilter();\n            allpassL.type = \"allpass\";\n            allpassL.frequency.value = freq;\n            return allpassL;\n        });\n        // make the allpass filters on the left\n        this._allpassFiltersR = allpassFilterFrequencies.map(freq => {\n            const allpassR = this.context.createBiquadFilter();\n            allpassR.type = \"allpass\";\n            allpassR.frequency.value = freq;\n            return allpassR;\n        });\n        // make the comb filters\n        this._combFilters = combFilterTunings.map((delayTime, index) => {\n            const lfpf = new LowpassCombFilter({\n                context: this.context,\n                dampening: options.dampening,\n                delayTime,\n            });\n            if (index < combFilterTunings.length / 2) {\n                this.connectEffectLeft(lfpf, ...this._allpassFiltersL);\n            }\n            else {\n                this.connectEffectRight(lfpf, ...this._allpassFiltersR);\n            }\n            this.roomSize.connect(lfpf.resonance);\n            return lfpf;\n        });\n        readOnly(this, [\"roomSize\"]);\n    }\n    static getDefaults() {\n        return Object.assign(StereoEffect.getDefaults(), {\n            roomSize: 0.7,\n            dampening: 3000\n        });\n    }\n    /**\n     * The amount of dampening of the reverberant signal.\n     */\n    get dampening() {\n        return this._combFilters[0].dampening;\n    }\n    set dampening(d) {\n        this._combFilters.forEach(c => c.dampening = d);\n    }\n    dispose() {\n        super.dispose();\n        this._allpassFiltersL.forEach(al => al.disconnect());\n        this._allpassFiltersR.forEach(ar => ar.disconnect());\n        this._combFilters.forEach(cf => cf.dispose());\n        this.roomSize.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Freeverb.js.map","import { PhaseShiftAllpass } from \"../component/filter/PhaseShiftAllpass\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Effect } from \"../effect/Effect\";\nimport { Add } from \"../signal/Add\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\nimport { Oscillator } from \"../source/oscillator/Oscillator\";\nimport { ToneOscillatorNode } from \"../source/oscillator/ToneOscillatorNode\";\n/**\n * FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount.\n * The amount can be changed at audio rate and the effect is applied in real time.\n * The frequency shifting is implemented with a technique called single side band modulation using a ring modulator.\n * Note: Contrary to pitch shifting, all frequencies are shifted by the same amount,\n * destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion.\n * The algorithm will produces some aliasing towards the high end, especially if your source material\n * contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling\n * buffers in real time, so it is not possible to fix it properly. Depending on the use case it might\n * be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.\n * You can find a very detailed description of the algorithm here: https://larzeitlin.github.io/RMFS/\n *\n * @example\n * const input = new Tone.Oscillator(230, \"sawtooth\").start();\n * const shift = new Tone.FrequencyShifter(42).toDestination();\n * input.connect(shift);\n * @category Effect\n */\nexport class FrequencyShifter extends Effect {\n    constructor() {\n        super(optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"]));\n        this.name = \"FrequencyShifter\";\n        const options = optionsFromArguments(FrequencyShifter.getDefaults(), arguments, [\"frequency\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n            minValue: -this.context.sampleRate / 2,\n            maxValue: this.context.sampleRate / 2,\n        });\n        this._sine = new ToneOscillatorNode({\n            context: this.context,\n            type: \"sine\",\n        });\n        this._cosine = new Oscillator({\n            context: this.context,\n            phase: -90,\n            type: \"sine\",\n        });\n        this._sineMultiply = new Multiply({ context: this.context });\n        this._cosineMultiply = new Multiply({ context: this.context });\n        this._negate = new Negate({ context: this.context });\n        this._add = new Add({ context: this.context });\n        this._phaseShifter = new PhaseShiftAllpass({ context: this.context });\n        this.effectSend.connect(this._phaseShifter);\n        // connect the carrier frequency signal to the two oscillators\n        this.frequency.fan(this._sine.frequency, this._cosine.frequency);\n        this._phaseShifter.offset90.connect(this._cosineMultiply);\n        this._cosine.connect(this._cosineMultiply.factor);\n        this._phaseShifter.connect(this._sineMultiply);\n        this._sine.connect(this._sineMultiply.factor);\n        this._sineMultiply.connect(this._negate);\n        this._cosineMultiply.connect(this._add);\n        this._negate.connect(this._add.addend);\n        this._add.connect(this.effectReturn);\n        // start the oscillators at the same time\n        const now = this.immediate();\n        this._sine.start(now);\n        this._cosine.start(now);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            frequency: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this._add.dispose();\n        this._cosine.dispose();\n        this._cosineMultiply.dispose();\n        this._negate.dispose();\n        this._phaseShifter.dispose();\n        this._sine.dispose();\n        this._sineMultiply.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FrequencyShifter.js.map","import { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FeedbackCombFilter } from \"../component/filter/FeedbackCombFilter\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * an array of the comb filter delay time values\n */\nconst combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];\n/**\n * the resonances of each of the comb filters\n */\nconst combFilterResonances = [0.773, 0.802, 0.753, 0.733];\n/**\n * the allpass filter frequencies\n */\nconst allpassFilterFreqs = [347, 113, 37];\n/**\n * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)\n * tuned by John Chowning in 1970.\n * It is made up of three allpass filters and four [[FeedbackCombFilter]].\n * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms\n *\n * @example\n * const reverb = new Tone.JCReverb(0.4).toDestination();\n * const delay = new Tone.FeedbackDelay(0.5);\n * // connecting the synth to reverb through delay\n * const synth = new Tone.DuoSynth().chain(delay, reverb);\n * synth.triggerAttackRelease(\"A4\", \"8n\");\n *\n * @category Effect\n */\nexport class JCReverb extends StereoEffect {\n    constructor() {\n        super(optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]));\n        this.name = \"JCReverb\";\n        /**\n         * a series of allpass filters\n         */\n        this._allpassFilters = [];\n        /**\n         * parallel feedback comb filters\n         */\n        this._feedbackCombFilters = [];\n        const options = optionsFromArguments(JCReverb.getDefaults(), arguments, [\"roomSize\"]);\n        this.roomSize = new Signal({\n            context: this.context,\n            value: options.roomSize,\n            units: \"normalRange\",\n        });\n        this._scaleRoomSize = new Scale({\n            context: this.context,\n            min: -0.733,\n            max: 0.197,\n        });\n        // make the allpass filters\n        this._allpassFilters = allpassFilterFreqs.map(freq => {\n            const allpass = this.context.createBiquadFilter();\n            allpass.type = \"allpass\";\n            allpass.frequency.value = freq;\n            return allpass;\n        });\n        // and the comb filters\n        this._feedbackCombFilters = combFilterDelayTimes.map((delayTime, index) => {\n            const fbcf = new FeedbackCombFilter({\n                context: this.context,\n                delayTime,\n            });\n            this._scaleRoomSize.connect(fbcf.resonance);\n            fbcf.resonance.value = combFilterResonances[index];\n            if (index < combFilterDelayTimes.length / 2) {\n                this.connectEffectLeft(...this._allpassFilters, fbcf);\n            }\n            else {\n                this.connectEffectRight(...this._allpassFilters, fbcf);\n            }\n            return fbcf;\n        });\n        // chain the allpass filters together\n        this.roomSize.connect(this._scaleRoomSize);\n        readOnly(this, [\"roomSize\"]);\n    }\n    static getDefaults() {\n        return Object.assign(StereoEffect.getDefaults(), {\n            roomSize: 0.5,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._allpassFilters.forEach(apf => apf.disconnect());\n        this._feedbackCombFilters.forEach(fbcf => fbcf.dispose());\n        this.roomSize.dispose();\n        this._scaleRoomSize.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=JCReverb.js.map","import { Effect } from \"../effect/Effect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for LFO-based effects.\n */\nexport class LFOEffect extends Effect {\n    constructor(options) {\n        super(options);\n        this.name = \"LFOEffect\";\n        this._lfo = new LFO({\n            context: this.context,\n            frequency: options.frequency,\n            amplitude: options.depth,\n        });\n        this.depth = this._lfo.amplitude;\n        this.frequency = this._lfo.frequency;\n        this.type = options.type;\n        readOnly(this, [\"frequency\", \"depth\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            frequency: 1,\n            type: \"sine\",\n            depth: 1,\n        });\n    }\n    /**\n     * Start the effect.\n     */\n    start(time) {\n        this._lfo.start(time);\n        return this;\n    }\n    /**\n     * Stop the lfo\n     */\n    stop(time) {\n        this._lfo.stop(time);\n        return this;\n    }\n    /**\n     * Sync the filter to the transport. See [[LFO.sync]]\n     */\n    sync() {\n        this._lfo.sync();\n        return this;\n    }\n    /**\n     * Unsync the filter from the transport.\n     */\n    unsync() {\n        this._lfo.unsync();\n        return this;\n    }\n    /**\n     * The type of the LFO's oscillator: See [[Oscillator.type]]\n     * @example\n     * const autoFilter = new Tone.AutoFilter().start().toDestination();\n     * const noise = new Tone.Noise().start().connect(autoFilter);\n     * autoFilter.type = \"square\";\n     */\n    get type() {\n        return this._lfo.type;\n    }\n    set type(type) {\n        this._lfo.type = type;\n    }\n    dispose() {\n        super.dispose();\n        this._lfo.dispose();\n        this.frequency.dispose();\n        this.depth.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=LFOEffect.js.map","import { Effect } from \"./Effect\";\nimport { MidSideSplit } from \"../component/channel/MidSideSplit\";\nimport { MidSideMerge } from \"../component/channel/MidSideMerge\";\n/**\n * Mid/Side processing separates the the 'mid' signal\n * (which comes out of both the left and the right channel)\n * and the 'side' (which only comes out of the the side channels)\n * and effects them separately before being recombined.\n * Applies a Mid/Side seperation and recombination.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * This is a base-class for Mid/Side Effects.\n */\nexport class MidSideEffect extends Effect {\n    constructor(options) {\n        super(options);\n        this.name = \"MidSideEffect\";\n        this._midSideMerge = new MidSideMerge({ context: this.context });\n        this._midSideSplit = new MidSideSplit({ context: this.context });\n        this._midSend = this._midSideSplit.mid;\n        this._sideSend = this._midSideSplit.side;\n        this._midReturn = this._midSideMerge.mid;\n        this._sideReturn = this._midSideMerge.side;\n        // the connections\n        this.effectSend.connect(this._midSideSplit);\n        this._midSideMerge.connect(this.effectReturn);\n    }\n    /**\n     * Connect the mid chain of the effect\n     */\n    connectEffectMid(...nodes) {\n        this._midSend.chain(...nodes, this._midReturn);\n    }\n    /**\n     * Connect the side chain of the effect\n     */\n    connectEffectSide(...nodes) {\n        this._sideSend.chain(...nodes, this._sideReturn);\n    }\n    dispose() {\n        super.dispose();\n        this._midSideSplit.dispose();\n        this._midSideMerge.dispose();\n        this._midSend.dispose();\n        this._sideSend.dispose();\n        this._midReturn.dispose();\n        this._sideReturn.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MidSideEffect.js.map","import { StereoEffect } from \"./StereoEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Phaser is a phaser effect. Phasers work by changing the phase\n * of different frequency components of an incoming signal. Read more on\n * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).\n * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).\n * @example\n * const phaser = new Tone.Phaser({\n * \tfrequency: 15,\n * \toctaves: 5,\n * \tbaseFrequency: 1000\n * }).toDestination();\n * const synth = new Tone.FMSynth().connect(phaser);\n * synth.triggerAttackRelease(\"E3\", \"2n\");\n * @category Effect\n */\nexport class Phaser extends StereoEffect {\n    constructor() {\n        super(optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]));\n        this.name = \"Phaser\";\n        const options = optionsFromArguments(Phaser.getDefaults(), arguments, [\"frequency\", \"octaves\", \"baseFrequency\"]);\n        this._lfoL = new LFO({\n            context: this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1\n        });\n        this._lfoR = new LFO({\n            context: this.context,\n            frequency: options.frequency,\n            min: 0,\n            max: 1,\n            phase: 180,\n        });\n        this._baseFrequency = this.toFrequency(options.baseFrequency);\n        this._octaves = options.octaves;\n        this.Q = new Signal({\n            context: this.context,\n            value: options.Q,\n            units: \"positive\",\n        });\n        this._filtersL = this._makeFilters(options.stages, this._lfoL);\n        this._filtersR = this._makeFilters(options.stages, this._lfoR);\n        this.frequency = this._lfoL.frequency;\n        this.frequency.value = options.frequency;\n        // connect them up\n        this.connectEffectLeft(...this._filtersL);\n        this.connectEffectRight(...this._filtersR);\n        // control the frequency with one LFO\n        this._lfoL.frequency.connect(this._lfoR.frequency);\n        // set the options\n        this.baseFrequency = options.baseFrequency;\n        this.octaves = options.octaves;\n        // start the lfo\n        this._lfoL.start();\n        this._lfoR.start();\n        readOnly(this, [\"frequency\", \"Q\"]);\n    }\n    static getDefaults() {\n        return Object.assign(StereoEffect.getDefaults(), {\n            frequency: 0.5,\n            octaves: 3,\n            stages: 10,\n            Q: 10,\n            baseFrequency: 350,\n        });\n    }\n    _makeFilters(stages, connectToFreq) {\n        const filters = [];\n        // make all the filters\n        for (let i = 0; i < stages; i++) {\n            const filter = this.context.createBiquadFilter();\n            filter.type = \"allpass\";\n            this.Q.connect(filter.Q);\n            connectToFreq.connect(filter.frequency);\n            filters.push(filter);\n        }\n        return filters;\n    }\n    /**\n     * The number of octaves the phase goes above the baseFrequency\n     */\n    get octaves() {\n        return this._octaves;\n    }\n    set octaves(octaves) {\n        this._octaves = octaves;\n        const max = this._baseFrequency * Math.pow(2, octaves);\n        this._lfoL.max = max;\n        this._lfoR.max = max;\n    }\n    /**\n     * The the base frequency of the filters.\n     */\n    get baseFrequency() {\n        return this._baseFrequency;\n    }\n    set baseFrequency(freq) {\n        this._baseFrequency = this.toFrequency(freq);\n        this._lfoL.min = this._baseFrequency;\n        this._lfoR.min = this._baseFrequency;\n        this.octaves = this._octaves;\n    }\n    dispose() {\n        super.dispose();\n        this.Q.dispose();\n        this._lfoL.dispose();\n        this._lfoR.dispose();\n        this._filtersL.forEach(f => f.disconnect());\n        this._filtersR.forEach(f => f.disconnect());\n        this.frequency.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Phaser.js.map","import { StereoXFeedbackEffect } from \"./StereoXFeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Delay } from \"../core/context/Delay\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * PingPongDelay is a feedback delay effect where the echo is heard\n * first in one channel and next in the opposite channel. In a stereo\n * system these are the right and left channels.\n * PingPongDelay in more simplified terms is two Tone.FeedbackDelays\n * with independent delay values. Each delay is routed to one channel\n * (left or right), and the channel triggered second will always\n * trigger at the same interval after the first.\n * @example\n * const pingPong = new Tone.PingPongDelay(\"4n\", 0.2).toDestination();\n * const drum = new Tone.MembraneSynth().connect(pingPong);\n * drum.triggerAttackRelease(\"C4\", \"32n\");\n * @category Effect\n */\nexport class PingPongDelay extends StereoXFeedbackEffect {\n    constructor() {\n        super(optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]));\n        this.name = \"PingPongDelay\";\n        const options = optionsFromArguments(PingPongDelay.getDefaults(), arguments, [\"delayTime\", \"feedback\"]);\n        this._leftDelay = new Delay({\n            context: this.context,\n            maxDelay: options.maxDelay,\n        });\n        this._rightDelay = new Delay({\n            context: this.context,\n            maxDelay: options.maxDelay\n        });\n        this._rightPreDelay = new Delay({\n            context: this.context,\n            maxDelay: options.maxDelay\n        });\n        this.delayTime = new Signal({\n            context: this.context,\n            units: \"time\",\n            value: options.delayTime,\n        });\n        // connect it up\n        this.connectEffectLeft(this._leftDelay);\n        this.connectEffectRight(this._rightPreDelay, this._rightDelay);\n        this.delayTime.fan(this._leftDelay.delayTime, this._rightDelay.delayTime, this._rightPreDelay.delayTime);\n        // rearranged the feedback to be after the rightPreDelay\n        this._feedbackL.disconnect();\n        this._feedbackL.connect(this._rightDelay);\n        readOnly(this, [\"delayTime\"]);\n    }\n    static getDefaults() {\n        return Object.assign(StereoXFeedbackEffect.getDefaults(), {\n            delayTime: 0.25,\n            maxDelay: 1\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._leftDelay.dispose();\n        this._rightDelay.dispose();\n        this._rightPreDelay.dispose();\n        this.delayTime.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PingPongDelay.js.map","import { FeedbackEffect } from \"./FeedbackEffect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\n/**\n * PitchShift does near-realtime pitch shifting to the incoming signal.\n * The effect is achieved by speeding up or slowing down the delayTime\n * of a DelayNode using a sawtooth wave.\n * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).\n * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).\n * @category Effect\n */\nexport class PitchShift extends FeedbackEffect {\n    constructor() {\n        super(optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]));\n        this.name = \"PitchShift\";\n        const options = optionsFromArguments(PitchShift.getDefaults(), arguments, [\"pitch\"]);\n        this._frequency = new Signal({ context: this.context });\n        this._delayA = new Delay({\n            maxDelay: 1,\n            context: this.context\n        });\n        this._lfoA = new LFO({\n            context: this.context,\n            min: 0,\n            max: 0.1,\n            type: \"sawtooth\"\n        }).connect(this._delayA.delayTime);\n        this._delayB = new Delay({\n            maxDelay: 1,\n            context: this.context\n        });\n        this._lfoB = new LFO({\n            context: this.context,\n            min: 0,\n            max: 0.1,\n            type: \"sawtooth\",\n            phase: 180\n        }).connect(this._delayB.delayTime);\n        this._crossFade = new CrossFade({ context: this.context });\n        this._crossFadeLFO = new LFO({\n            context: this.context,\n            min: 0,\n            max: 1,\n            type: \"triangle\",\n            phase: 90\n        }).connect(this._crossFade.fade);\n        this._feedbackDelay = new Delay({\n            delayTime: options.delayTime,\n            context: this.context,\n        });\n        this.delayTime = this._feedbackDelay.delayTime;\n        readOnly(this, \"delayTime\");\n        this._pitch = options.pitch;\n        this._windowSize = options.windowSize;\n        // connect the two delay lines up\n        this._delayA.connect(this._crossFade.a);\n        this._delayB.connect(this._crossFade.b);\n        // connect the frequency\n        this._frequency.fan(this._lfoA.frequency, this._lfoB.frequency, this._crossFadeLFO.frequency);\n        // route the input\n        this.effectSend.fan(this._delayA, this._delayB);\n        this._crossFade.chain(this._feedbackDelay, this.effectReturn);\n        // start the LFOs at the same time\n        const now = this.now();\n        this._lfoA.start(now);\n        this._lfoB.start(now);\n        this._crossFadeLFO.start(now);\n        // set the initial value\n        this.windowSize = this._windowSize;\n    }\n    static getDefaults() {\n        return Object.assign(FeedbackEffect.getDefaults(), {\n            pitch: 0,\n            windowSize: 0.1,\n            delayTime: 0,\n            feedback: 0\n        });\n    }\n    /**\n     * Repitch the incoming signal by some interval (measured in semi-tones).\n     * @example\n     * const pitchShift = new Tone.PitchShift().toDestination();\n     * const osc = new Tone.Oscillator().connect(pitchShift).start().toDestination();\n     * pitchShift.pitch = -12; // down one octave\n     * pitchShift.pitch = 7; // up a fifth\n     */\n    get pitch() {\n        return this._pitch;\n    }\n    set pitch(interval) {\n        this._pitch = interval;\n        let factor = 0;\n        if (interval < 0) {\n            this._lfoA.min = 0;\n            this._lfoA.max = this._windowSize;\n            this._lfoB.min = 0;\n            this._lfoB.max = this._windowSize;\n            factor = intervalToFrequencyRatio(interval - 1) + 1;\n        }\n        else {\n            this._lfoA.min = this._windowSize;\n            this._lfoA.max = 0;\n            this._lfoB.min = this._windowSize;\n            this._lfoB.max = 0;\n            factor = intervalToFrequencyRatio(interval) - 1;\n        }\n        this._frequency.value = factor * (1.2 / this._windowSize);\n    }\n    /**\n     * The window size corresponds roughly to the sample length in a looping sampler.\n     * Smaller values are desirable for a less noticeable delay time of the pitch shifted\n     * signal, but larger values will result in smoother pitch shifting for larger intervals.\n     * A nominal range of 0.03 to 0.1 is recommended.\n     */\n    get windowSize() {\n        return this._windowSize;\n    }\n    set windowSize(size) {\n        this._windowSize = this.toSeconds(size);\n        this.pitch = this._pitch;\n    }\n    dispose() {\n        super.dispose();\n        this._frequency.dispose();\n        this._delayA.dispose();\n        this._delayB.dispose();\n        this._lfoA.dispose();\n        this._lfoB.dispose();\n        this._crossFade.dispose();\n        this._crossFadeLFO.dispose();\n        this._feedbackDelay.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PitchShift.js.map","import { __awaiter } from \"tslib\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Effect } from \"./Effect\";\nimport { OfflineContext } from \"../core/context/OfflineContext\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assertRange } from \"../core/util/Debug\";\n/**\n * Simple convolution created with decaying noise.\n * Generates an Impulse Response Buffer\n * with Tone.Offline then feeds the IR into ConvolverNode.\n * The impulse response generation is async, so you have\n * to wait until [[ready]] resolves before it will make a sound.\n *\n * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).\n * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.\n *\n * @category Effect\n */\nexport class Reverb extends Effect {\n    constructor() {\n        super(optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]));\n        this.name = \"Reverb\";\n        /**\n         * Convolver node\n         */\n        this._convolver = this.context.createConvolver();\n        /**\n         * Resolves when the reverb buffer is generated. Whenever either [[decay]]\n         * or [[preDelay]] are set, you have to wait until [[ready]] resolves\n         * before the IR is generated with the latest values.\n         */\n        this.ready = Promise.resolve();\n        const options = optionsFromArguments(Reverb.getDefaults(), arguments, [\"decay\"]);\n        this._decay = options.decay;\n        this._preDelay = options.preDelay;\n        this.generate();\n        this.connectEffect(this._convolver);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            decay: 1.5,\n            preDelay: 0.01,\n        });\n    }\n    /**\n     * The duration of the reverb.\n     */\n    get decay() {\n        return this._decay;\n    }\n    set decay(time) {\n        time = this.toSeconds(time);\n        assertRange(time, 0.001);\n        this._decay = time;\n        this.generate();\n    }\n    /**\n     * The amount of time before the reverb is fully ramped in.\n     */\n    get preDelay() {\n        return this._preDelay;\n    }\n    set preDelay(time) {\n        time = this.toSeconds(time);\n        assertRange(time, 0);\n        this._preDelay = time;\n        this.generate();\n    }\n    /**\n     * Generate the Impulse Response. Returns a promise while the IR is being generated.\n     * @return Promise which returns this object.\n     */\n    generate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const previousReady = this.ready;\n            // create a noise burst which decays over the duration in each channel\n            const context = new OfflineContext(2, this._decay + this._preDelay, this.context.sampleRate);\n            const noiseL = new Noise({ context });\n            const noiseR = new Noise({ context });\n            const merge = new Merge({ context });\n            noiseL.connect(merge, 0, 0);\n            noiseR.connect(merge, 0, 1);\n            const gainNode = new Gain({ context }).toDestination();\n            merge.connect(gainNode);\n            noiseL.start(0);\n            noiseR.start(0);\n            // predelay\n            gainNode.gain.setValueAtTime(0, 0);\n            gainNode.gain.setValueAtTime(1, this._preDelay);\n            // decay\n            gainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay);\n            // render the buffer\n            const renderPromise = context.render();\n            this.ready = renderPromise.then(noOp);\n            // wait for the previous `ready` to resolve\n            yield previousReady;\n            // set the buffer\n            this._convolver.buffer = (yield renderPromise).get();\n            return this;\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._convolver.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=Reverb.js.map","import { connect, connectSeries, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { CrossFade } from \"../component/channel/CrossFade\";\nimport { Split } from \"../component/channel/Split\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Merge } from \"../component/channel/Merge\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base class for Stereo effects.\n */\nexport class StereoEffect extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        this.name = \"StereoEffect\";\n        this.input = new Gain({ context: this.context });\n        // force mono sources to be stereo\n        this.input.channelCount = 2;\n        this.input.channelCountMode = \"explicit\";\n        this._dryWet = this.output = new CrossFade({\n            context: this.context,\n            fade: options.wet\n        });\n        this.wet = this._dryWet.fade;\n        this._split = new Split({ context: this.context, channels: 2 });\n        this._merge = new Merge({ context: this.context, channels: 2 });\n        // connections\n        this.input.connect(this._split);\n        // dry wet connections\n        this.input.connect(this._dryWet.a);\n        this._merge.connect(this._dryWet.b);\n        readOnly(this, [\"wet\"]);\n    }\n    /**\n     * Connect the left part of the effect\n     */\n    connectEffectLeft(...nodes) {\n        this._split.connect(nodes[0], 0, 0);\n        connectSeries(...nodes);\n        connect(nodes[nodes.length - 1], this._merge, 0, 0);\n    }\n    /**\n     * Connect the right part of the effect\n     */\n    connectEffectRight(...nodes) {\n        this._split.connect(nodes[0], 1, 0);\n        connectSeries(...nodes);\n        connect(nodes[nodes.length - 1], this._merge, 0, 1);\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            wet: 1,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._dryWet.dispose();\n        this._split.dispose();\n        this._merge.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=StereoEffect.js.map","import { StereoEffect } from \"./StereoEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Gain } from \"../core/context/Gain\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Split } from \"../component/channel/Split\";\nimport { Merge } from \"../component/channel/Merge\";\n/**\n * Just like a stereo feedback effect, but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +---+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit\n * +-->                          +----->        +---->                          +---+\n * |                                                                                |\n * +--------------------------------+ feedbackR <-----------------------------------+\n * ```\n */\nexport class StereoFeedbackEffect extends StereoEffect {\n    constructor(options) {\n        super(options);\n        this.feedback = new Signal({\n            context: this.context,\n            value: options.feedback,\n            units: \"normalRange\"\n        });\n        this._feedbackL = new Gain({ context: this.context });\n        this._feedbackR = new Gain({ context: this.context });\n        this._feedbackSplit = new Split({ context: this.context, channels: 2 });\n        this._feedbackMerge = new Merge({ context: this.context, channels: 2 });\n        this._merge.connect(this._feedbackSplit);\n        this._feedbackMerge.connect(this._split);\n        // the left output connected to the left input\n        this._feedbackSplit.connect(this._feedbackL, 0, 0);\n        this._feedbackL.connect(this._feedbackMerge, 0, 0);\n        // the right output connected to the right input\n        this._feedbackSplit.connect(this._feedbackR, 1, 0);\n        this._feedbackR.connect(this._feedbackMerge, 0, 1);\n        // the feedback control\n        this.feedback.fan(this._feedbackL.gain, this._feedbackR.gain);\n        readOnly(this, [\"feedback\"]);\n    }\n    static getDefaults() {\n        return Object.assign(StereoEffect.getDefaults(), {\n            feedback: 0.5,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.feedback.dispose();\n        this._feedbackL.dispose();\n        this._feedbackR.dispose();\n        this._feedbackSplit.dispose();\n        this._feedbackMerge.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=StereoFeedbackEffect.js.map","import { MidSideEffect } from \"../effect/MidSideEffect\";\nimport { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Subtract } from \"../signal/Subtract\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { connect } from \"../core/context/ToneAudioNode\";\n/**\n * Applies a width factor to the mid/side seperation.\n * 0 is all mid and 1 is all side.\n * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).\n * ```\n * Mid *= 2*(1-width)<br>\n * Side *= 2*width\n * ```\n * @category Effect\n */\nexport class StereoWidener extends MidSideEffect {\n    constructor() {\n        super(optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]));\n        this.name = \"StereoWidener\";\n        const options = optionsFromArguments(StereoWidener.getDefaults(), arguments, [\"width\"]);\n        this.width = new Signal({\n            context: this.context,\n            value: options.width,\n            units: \"normalRange\",\n        });\n        readOnly(this, [\"width\"]);\n        this._twoTimesWidthMid = new Multiply({\n            context: this.context,\n            value: 2,\n        });\n        this._twoTimesWidthSide = new Multiply({\n            context: this.context,\n            value: 2,\n        });\n        this._midMult = new Multiply({ context: this.context });\n        this._twoTimesWidthMid.connect(this._midMult.factor);\n        this.connectEffectMid(this._midMult);\n        this._oneMinusWidth = new Subtract({ context: this.context });\n        this._oneMinusWidth.connect(this._twoTimesWidthMid);\n        connect(this.context.getConstant(1), this._oneMinusWidth);\n        this.width.connect(this._oneMinusWidth.subtrahend);\n        this._sideMult = new Multiply({ context: this.context });\n        this.width.connect(this._twoTimesWidthSide);\n        this._twoTimesWidthSide.connect(this._sideMult.factor);\n        this.connectEffectSide(this._sideMult);\n    }\n    static getDefaults() {\n        return Object.assign(MidSideEffect.getDefaults(), {\n            width: 0.5,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.width.dispose();\n        this._midMult.dispose();\n        this._sideMult.dispose();\n        this._twoTimesWidthMid.dispose();\n        this._twoTimesWidthSide.dispose();\n        this._oneMinusWidth.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=StereoWidener.js.map","import { StereoFeedbackEffect } from \"./StereoFeedbackEffect\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right\n * and right to left instead of on the same channel.\n * ```\n * +--------------------------------+ feedbackL <-----------------------------------+\n * |                                                                                |\n * +-->                          +----->        +---->                          +-----+\n *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |\n * +-->                          +----->        +---->                          +---+ |\n * |                                                                                  |\n * +--------------------------------+ feedbackR <-------------------------------------+\n * ```\n */\nexport class StereoXFeedbackEffect extends StereoFeedbackEffect {\n    constructor(options) {\n        super(options);\n        // the left output connected to the right input\n        this._feedbackL.disconnect();\n        this._feedbackL.connect(this._feedbackMerge, 0, 1);\n        // the left output connected to the right input\n        this._feedbackR.disconnect();\n        this._feedbackR.connect(this._feedbackMerge, 0, 0);\n        readOnly(this, [\"feedback\"]);\n    }\n}\n//# sourceMappingURL=StereoXFeedbackEffect.js.map","import { StereoEffect } from \"./StereoEffect\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Signal } from \"../signal/Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Tremolo modulates the amplitude of an incoming signal using an [[LFO]].\n * The effect is a stereo effect where the modulation phase is inverted in each channel.\n *\n * @example\n * // create a tremolo and start it's LFO\n * const tremolo = new Tone.Tremolo(9, 0.75).toDestination().start();\n * // route an oscillator through the tremolo and start it\n * const oscillator = new Tone.Oscillator().connect(tremolo).start();\n *\n * @category Effect\n */\nexport class Tremolo extends StereoEffect {\n    constructor() {\n        super(optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n        this.name = \"Tremolo\";\n        const options = optionsFromArguments(Tremolo.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n        this._lfoL = new LFO({\n            context: this.context,\n            type: options.type,\n            min: 1,\n            max: 0,\n        });\n        this._lfoR = new LFO({\n            context: this.context,\n            type: options.type,\n            min: 1,\n            max: 0,\n        });\n        this._amplitudeL = new Gain({ context: this.context });\n        this._amplitudeR = new Gain({ context: this.context });\n        this.frequency = new Signal({\n            context: this.context,\n            value: options.frequency,\n            units: \"frequency\",\n        });\n        this.depth = new Signal({\n            context: this.context,\n            value: options.depth,\n            units: \"normalRange\",\n        });\n        readOnly(this, [\"frequency\", \"depth\"]);\n        this.connectEffectLeft(this._amplitudeL);\n        this.connectEffectRight(this._amplitudeR);\n        this._lfoL.connect(this._amplitudeL.gain);\n        this._lfoR.connect(this._amplitudeR.gain);\n        this.frequency.fan(this._lfoL.frequency, this._lfoR.frequency);\n        this.depth.fan(this._lfoR.amplitude, this._lfoL.amplitude);\n        this.spread = options.spread;\n    }\n    static getDefaults() {\n        return Object.assign(StereoEffect.getDefaults(), {\n            frequency: 10,\n            type: \"sine\",\n            depth: 0.5,\n            spread: 180,\n        });\n    }\n    /**\n     * Start the tremolo.\n     */\n    start(time) {\n        this._lfoL.start(time);\n        this._lfoR.start(time);\n        return this;\n    }\n    /**\n     * Stop the tremolo.\n     */\n    stop(time) {\n        this._lfoL.stop(time);\n        this._lfoR.stop(time);\n        return this;\n    }\n    /**\n     * Sync the effect to the transport.\n     */\n    sync() {\n        this._lfoL.sync();\n        this._lfoR.sync();\n        this.context.transport.syncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Unsync the filter from the transport\n     */\n    unsync() {\n        this._lfoL.unsync();\n        this._lfoR.unsync();\n        this.context.transport.unsyncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * The oscillator type.\n     */\n    get type() {\n        return this._lfoL.type;\n    }\n    set type(type) {\n        this._lfoL.type = type;\n        this._lfoR.type = type;\n    }\n    /**\n     * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.\n     * When set to 180, LFO's will be panned hard left and right respectively.\n     */\n    get spread() {\n        return this._lfoR.phase - this._lfoL.phase; // 180\n    }\n    set spread(spread) {\n        this._lfoL.phase = 90 - (spread / 2);\n        this._lfoR.phase = (spread / 2) + 90;\n    }\n    dispose() {\n        super.dispose();\n        this._lfoL.dispose();\n        this._lfoR.dispose();\n        this._amplitudeL.dispose();\n        this._amplitudeR.dispose();\n        this.frequency.dispose();\n        this.depth.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Tremolo.js.map","import { Effect } from \"./Effect\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Delay } from \"../core/context/Delay\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO\n * modulates the delayTime of the delay, causing the pitch to rise and fall.\n * @category Effect\n */\nexport class Vibrato extends Effect {\n    constructor() {\n        super(optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]));\n        this.name = \"Vibrato\";\n        const options = optionsFromArguments(Vibrato.getDefaults(), arguments, [\"frequency\", \"depth\"]);\n        this._delayNode = new Delay({\n            context: this.context,\n            delayTime: 0,\n            maxDelay: options.maxDelay,\n        });\n        this._lfo = new LFO({\n            context: this.context,\n            type: options.type,\n            min: 0,\n            max: options.maxDelay,\n            frequency: options.frequency,\n            phase: -90 // offse the phase so the resting position is in the center\n        }).start().connect(this._delayNode.delayTime);\n        this.frequency = this._lfo.frequency;\n        this.depth = this._lfo.amplitude;\n        this.depth.value = options.depth;\n        readOnly(this, [\"frequency\", \"depth\"]);\n        this.effectSend.chain(this._delayNode, this.effectReturn);\n    }\n    static getDefaults() {\n        return Object.assign(Effect.getDefaults(), {\n            maxDelay: 0.005,\n            frequency: 5,\n            depth: 0.1,\n            type: \"sine\"\n        });\n    }\n    /**\n     * Type of oscillator attached to the Vibrato.\n     */\n    get type() {\n        return this._lfo.type;\n    }\n    set type(type) {\n        this._lfo.type = type;\n    }\n    dispose() {\n        super.dispose();\n        this._delayNode.dispose();\n        this._lfo.dispose();\n        this.frequency.dispose();\n        this.depth.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Vibrato.js.map","export * from \"./AutoFilter\";\nexport * from \"./AutoPanner\";\nexport * from \"./AutoWah\";\nexport * from \"./BitCrusher\";\nexport * from \"./Chebyshev\";\nexport * from \"./Chorus\";\nexport * from \"./Distortion\";\nexport * from \"./FeedbackDelay\";\nexport * from \"./FrequencyShifter\";\nexport * from \"./Freeverb\";\nexport * from \"./JCReverb\";\nexport * from \"./PingPongDelay\";\nexport * from \"./PitchShift\";\nexport * from \"./Phaser\";\nexport * from \"./Reverb\";\nexport * from \"./StereoWidener\";\nexport * from \"./Tremolo\";\nexport * from \"./Vibrato\";\n//# sourceMappingURL=index.js.map","import { ToneEvent } from \"./ToneEvent\";\nimport { ToneWithContext } from \"../core/context/ToneWithContext\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\n/**\n * Loop creates a looped callback at the\n * specified interval. The callback can be\n * started, stopped and scheduled along\n * the Transport's timeline.\n * @example\n * const loop = new Tone.Loop((time) => {\n * \t// triggered every eighth note.\n * \tconsole.log(time);\n * }, \"8n\").start(0);\n * Tone.Transport.start();\n * @category Event\n */\nexport class Loop extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]));\n        this.name = \"Loop\";\n        const options = optionsFromArguments(Loop.getDefaults(), arguments, [\"callback\", \"interval\"]);\n        this._event = new ToneEvent({\n            context: this.context,\n            callback: this._tick.bind(this),\n            loop: true,\n            loopEnd: options.interval,\n            playbackRate: options.playbackRate,\n            probability: options.probability\n        });\n        this.callback = options.callback;\n        // set the iterations\n        this.iterations = options.iterations;\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            interval: \"4n\",\n            callback: noOp,\n            playbackRate: 1,\n            iterations: Infinity,\n            probability: 1,\n            mute: false,\n            humanize: false\n        });\n    }\n    /**\n     * Start the loop at the specified time along the Transport's timeline.\n     * @param  time  When to start the Loop.\n     */\n    start(time) {\n        this._event.start(time);\n        return this;\n    }\n    /**\n     * Stop the loop at the given time.\n     * @param  time  When to stop the Loop.\n     */\n    stop(time) {\n        this._event.stop(time);\n        return this;\n    }\n    /**\n     * Cancel all scheduled events greater than or equal to the given time\n     * @param  time  The time after which events will be cancel.\n     */\n    cancel(time) {\n        this._event.cancel(time);\n        return this;\n    }\n    /**\n     * Internal function called when the notes should be called\n     * @param time  The time the event occurs\n     */\n    _tick(time) {\n        this.callback(time);\n    }\n    /**\n     * The state of the Loop, either started or stopped.\n     */\n    get state() {\n        return this._event.state;\n    }\n    /**\n     * The progress of the loop as a value between 0-1. 0, when the loop is stopped or done iterating.\n     */\n    get progress() {\n        return this._event.progress;\n    }\n    /**\n     * The time between successive callbacks.\n     * @example\n     * const loop = new Tone.Loop();\n     * loop.interval = \"8n\"; // loop every 8n\n     */\n    get interval() {\n        return this._event.loopEnd;\n    }\n    set interval(interval) {\n        this._event.loopEnd = interval;\n    }\n    /**\n     * The playback rate of the loop. The normal playback rate is 1 (no change).\n     * A `playbackRate` of 2 would be twice as fast.\n     */\n    get playbackRate() {\n        return this._event.playbackRate;\n    }\n    set playbackRate(rate) {\n        this._event.playbackRate = rate;\n    }\n    /**\n     * Random variation +/-0.01s to the scheduled time.\n     * Or give it a time value which it will randomize by.\n     */\n    get humanize() {\n        return this._event.humanize;\n    }\n    set humanize(variation) {\n        this._event.humanize = variation;\n    }\n    /**\n     * The probably of the callback being invoked.\n     */\n    get probability() {\n        return this._event.probability;\n    }\n    set probability(prob) {\n        this._event.probability = prob;\n    }\n    /**\n     * Muting the Loop means that no callbacks are invoked.\n     */\n    get mute() {\n        return this._event.mute;\n    }\n    set mute(mute) {\n        this._event.mute = mute;\n    }\n    /**\n     * The number of iterations of the loop. The default value is `Infinity` (loop forever).\n     */\n    get iterations() {\n        if (this._event.loop === true) {\n            return Infinity;\n        }\n        else {\n            return this._event.loop;\n        }\n    }\n    set iterations(iters) {\n        if (iters === Infinity) {\n            this._event.loop = true;\n        }\n        else {\n            this._event.loop = iters;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this._event.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Loop.js.map","import { TicksClass } from \"../core/type/Ticks\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isArray, isDefined, isObject, isUndef } from \"../core/util/TypeCheck\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * Part is a collection ToneEvents which can be started/stopped and looped as a single unit.\n *\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const part = new Tone.Part(((time, note) => {\n * \t// the notes given as the second element in the array\n * \t// will be passed in as the second argument\n * \tsynth.triggerAttackRelease(note, \"8n\", time);\n * }), [[0, \"C2\"], [\"0:2\", \"C3\"], [\"0:3:2\", \"G2\"]]);\n * @example\n * const synth = new Tone.Synth().toDestination();\n * // use an array of objects as long as the object has a \"time\" attribute\n * const part = new Tone.Part(((time, value) => {\n * \t// the value is an object which contains both the note and the velocity\n * \tsynth.triggerAttackRelease(value.note, \"8n\", time, value.velocity);\n * }), [{ time: 0, note: \"C3\", velocity: 0.9 },\n * \t{ time: \"0:2\", note: \"C4\", velocity: 0.5 }\n * ]).start(0);\n * @category Event\n */\nexport class Part extends ToneEvent {\n    constructor() {\n        super(optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]));\n        this.name = \"Part\";\n        /**\n         * Tracks the scheduled events\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * The events that belong to this part\n         */\n        this._events = new Set();\n        const options = optionsFromArguments(Part.getDefaults(), arguments, [\"callback\", \"events\"]);\n        // make sure things are assigned in the right order\n        this._state.increasing = true;\n        // add the events\n        options.events.forEach(event => {\n            if (isArray(event)) {\n                this.add(event[0], event[1]);\n            }\n            else {\n                this.add(event);\n            }\n        });\n    }\n    static getDefaults() {\n        return Object.assign(ToneEvent.getDefaults(), {\n            events: [],\n        });\n    }\n    /**\n     * Start the part at the given time.\n     * @param  time    When to start the part.\n     * @param  offset  The offset from the start of the part to begin playing at.\n     */\n    start(time, offset) {\n        const ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) !== \"started\") {\n            offset = defaultArg(offset, this._loop ? this._loopStart : 0);\n            if (this._loop) {\n                offset = defaultArg(offset, this._loopStart);\n            }\n            else {\n                offset = defaultArg(offset, 0);\n            }\n            const computedOffset = this.toTicks(offset);\n            this._state.add({\n                id: -1,\n                offset: computedOffset,\n                state: \"started\",\n                time: ticks,\n            });\n            this._forEach(event => {\n                this._startNote(event, ticks, computedOffset);\n            });\n        }\n        return this;\n    }\n    /**\n     * Start the event in the given event at the correct time given\n     * the ticks and offset and looping.\n     * @param  event\n     * @param  ticks\n     * @param  offset\n     */\n    _startNote(event, ticks, offset) {\n        ticks -= offset;\n        if (this._loop) {\n            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {\n                if (event.startOffset < offset) {\n                    // start it on the next loop\n                    ticks += this._getLoopDuration();\n                }\n                event.start(new TicksClass(this.context, ticks));\n            }\n            else if (event.startOffset < this._loopStart && event.startOffset >= offset) {\n                event.loop = false;\n                event.start(new TicksClass(this.context, ticks));\n            }\n        }\n        else if (event.startOffset >= offset) {\n            event.start(new TicksClass(this.context, ticks));\n        }\n    }\n    get startOffset() {\n        return this._startOffset;\n    }\n    set startOffset(offset) {\n        this._startOffset = offset;\n        this._forEach(event => {\n            event.startOffset += this._startOffset;\n        });\n    }\n    /**\n     * Stop the part at the given time.\n     * @param  time  When to stop the part.\n     */\n    stop(time) {\n        const ticks = this.toTicks(time);\n        this._state.cancel(ticks);\n        this._state.setStateAtTime(\"stopped\", ticks);\n        this._forEach(event => {\n            event.stop(time);\n        });\n        return this;\n    }\n    /**\n     * Get/Set an Event's value at the given time.\n     * If a value is passed in and no event exists at\n     * the given time, one will be created with that value.\n     * If two events are at the same time, the first one will\n     * be returned.\n     * @example\n     * const part = new Tone.Part();\n     * part.at(\"1m\"); // returns the part at the first measure\n     * part.at(\"2m\", \"C2\"); // set the value at \"2m\" to C2.\n     * // if an event didn't exist at that time, it will be created.\n     * @param time The time of the event to get or set.\n     * @param value If a value is passed in, the value of the event at the given time will be set to it.\n     */\n    at(time, value) {\n        const timeInTicks = new TransportTimeClass(this.context, time).toTicks();\n        const tickTime = new TicksClass(this.context, 1).toSeconds();\n        const iterator = this._events.values();\n        let result = iterator.next();\n        while (!result.done) {\n            const event = result.value;\n            if (Math.abs(timeInTicks - event.startOffset) < tickTime) {\n                if (isDefined(value)) {\n                    event.value = value;\n                }\n                return event;\n            }\n            result = iterator.next();\n        }\n        // if there was no event at that time, create one\n        if (isDefined(value)) {\n            this.add(time, value);\n            // return the new event\n            return this.at(time);\n        }\n        else {\n            return null;\n        }\n    }\n    add(time, value) {\n        // extract the parameters\n        if (time instanceof Object && Reflect.has(time, \"time\")) {\n            value = time;\n            time = value.time;\n        }\n        const ticks = this.toTicks(time);\n        let event;\n        if (value instanceof ToneEvent) {\n            event = value;\n            event.callback = this._tick.bind(this);\n        }\n        else {\n            event = new ToneEvent({\n                callback: this._tick.bind(this),\n                context: this.context,\n                value,\n            });\n        }\n        // the start offset\n        event.startOffset = ticks;\n        // initialize the values\n        event.set({\n            humanize: this.humanize,\n            loop: this.loop,\n            loopEnd: this.loopEnd,\n            loopStart: this.loopStart,\n            playbackRate: this.playbackRate,\n            probability: this.probability,\n        });\n        this._events.add(event);\n        // start the note if it should be played right now\n        this._restartEvent(event);\n        return this;\n    }\n    /**\n     * Restart the given event\n     */\n    _restartEvent(event) {\n        this._state.forEach((stateEvent) => {\n            if (stateEvent.state === \"started\") {\n                this._startNote(event, stateEvent.time, stateEvent.offset);\n            }\n            else {\n                // stop the note\n                event.stop(new TicksClass(this.context, stateEvent.time));\n            }\n        });\n    }\n    remove(time, value) {\n        // extract the parameters\n        if (isObject(time) && time.hasOwnProperty(\"time\")) {\n            value = time;\n            time = value.time;\n        }\n        time = this.toTicks(time);\n        this._events.forEach(event => {\n            if (event.startOffset === time) {\n                if (isUndef(value) || (isDefined(value) && event.value === value)) {\n                    this._events.delete(event);\n                    event.dispose();\n                }\n            }\n        });\n        return this;\n    }\n    /**\n     * Remove all of the notes from the group.\n     */\n    clear() {\n        this._forEach(event => event.dispose());\n        this._events.clear();\n        return this;\n    }\n    /**\n     * Cancel scheduled state change events: i.e. \"start\" and \"stop\".\n     * @param after The time after which to cancel the scheduled events.\n     */\n    cancel(after) {\n        this._forEach(event => event.cancel(after));\n        this._state.cancel(this.toTicks(after));\n        return this;\n    }\n    /**\n     * Iterate over all of the events\n     */\n    _forEach(callback) {\n        if (this._events) {\n            this._events.forEach(event => {\n                if (event instanceof Part) {\n                    event._forEach(callback);\n                }\n                else {\n                    callback(event);\n                }\n            });\n        }\n        return this;\n    }\n    /**\n     * Set the attribute of all of the events\n     * @param  attr  the attribute to set\n     * @param  value      The value to set it to\n     */\n    _setAll(attr, value) {\n        this._forEach(event => {\n            event[attr] = value;\n        });\n    }\n    /**\n     * Internal tick method\n     * @param  time  The time of the event in seconds\n     */\n    _tick(time, value) {\n        if (!this.mute) {\n            this.callback(time, value);\n        }\n    }\n    /**\n     * Determine if the event should be currently looping\n     * given the loop boundries of this Part.\n     * @param  event  The event to test\n     */\n    _testLoopBoundries(event) {\n        if (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {\n            event.cancel(0);\n        }\n        else if (event.state === \"stopped\") {\n            // reschedule it if it's stopped\n            this._restartEvent(event);\n        }\n    }\n    get probability() {\n        return this._probability;\n    }\n    set probability(prob) {\n        this._probability = prob;\n        this._setAll(\"probability\", prob);\n    }\n    get humanize() {\n        return this._humanize;\n    }\n    set humanize(variation) {\n        this._humanize = variation;\n        this._setAll(\"humanize\", variation);\n    }\n    /**\n     * If the part should loop or not\n     * between Part.loopStart and\n     * Part.loopEnd. If set to true,\n     * the part will loop indefinitely,\n     * if set to a number greater than 1\n     * it will play a specific number of\n     * times, if set to false, 0 or 1, the\n     * part will only play once.\n     * @example\n     * const part = new Tone.Part();\n     * // loop the part 8 times\n     * part.loop = 8;\n     */\n    get loop() {\n        return this._loop;\n    }\n    set loop(loop) {\n        this._loop = loop;\n        this._forEach(event => {\n            event.loopStart = this.loopStart;\n            event.loopEnd = this.loopEnd;\n            event.loop = loop;\n            this._testLoopBoundries(event);\n        });\n    }\n    /**\n     * The loopEnd point determines when it will\n     * loop if Part.loop is true.\n     */\n    get loopEnd() {\n        return new TicksClass(this.context, this._loopEnd).toSeconds();\n    }\n    set loopEnd(loopEnd) {\n        this._loopEnd = this.toTicks(loopEnd);\n        if (this._loop) {\n            this._forEach(event => {\n                event.loopEnd = loopEnd;\n                this._testLoopBoundries(event);\n            });\n        }\n    }\n    /**\n     * The loopStart point determines when it will\n     * loop if Part.loop is true.\n     */\n    get loopStart() {\n        return new TicksClass(this.context, this._loopStart).toSeconds();\n    }\n    set loopStart(loopStart) {\n        this._loopStart = this.toTicks(loopStart);\n        if (this._loop) {\n            this._forEach(event => {\n                event.loopStart = this.loopStart;\n                this._testLoopBoundries(event);\n            });\n        }\n    }\n    /**\n     * The playback rate of the part\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        this._setAll(\"playbackRate\", rate);\n    }\n    /**\n     * The number of scheduled notes in the part.\n     */\n    get length() {\n        return this._events.size;\n    }\n    dispose() {\n        super.dispose();\n        this.clear();\n        return this;\n    }\n}\n//# sourceMappingURL=Part.js.map","import { Loop } from \"./Loop\";\nimport { PatternGenerator } from \"./PatternGenerator\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\n/**\n * Pattern arpeggiates between the given notes\n * in a number of patterns.\n * @example\n * const pattern = new Tone.Pattern((time, note) => {\n * \t// the order of the notes passed in depends on the pattern\n * }, [\"C2\", \"D4\", \"E5\", \"A6\"], \"upDown\");\n * @category Event\n */\nexport class Pattern extends Loop {\n    constructor() {\n        super(optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]));\n        this.name = \"Pattern\";\n        const options = optionsFromArguments(Pattern.getDefaults(), arguments, [\"callback\", \"values\", \"pattern\"]);\n        this.callback = options.callback;\n        this._values = options.values;\n        this._pattern = PatternGenerator(options.values, options.pattern);\n        this._type = options.pattern;\n    }\n    static getDefaults() {\n        return Object.assign(Loop.getDefaults(), {\n            pattern: \"up\",\n            values: [],\n            callback: noOp,\n        });\n    }\n    /**\n     * Internal function called when the notes should be called\n     */\n    _tick(time) {\n        const value = this._pattern.next();\n        this._value = value.value;\n        this.callback(time, this._value);\n    }\n    /**\n     * The array of events.\n     */\n    get values() {\n        return this._values;\n    }\n    set values(val) {\n        this._values = val;\n        // reset the pattern\n        this.pattern = this._type;\n    }\n    /**\n     * The current value of the pattern.\n     */\n    get value() {\n        return this._value;\n    }\n    /**\n     * The pattern type. See Tone.CtrlPattern for the full list of patterns.\n     */\n    get pattern() {\n        return this._type;\n    }\n    set pattern(pattern) {\n        this._type = pattern;\n        this._pattern = PatternGenerator(this._values, this._type);\n    }\n}\n//# sourceMappingURL=Pattern.js.map","import { assert } from \"../core/util/Debug\";\nimport { clamp } from \"../core/util/Math\";\n/**\n * Start at the first value and go up to the last\n */\nfunction* upPatternGen(values) {\n    let index = 0;\n    while (index < values.length) {\n        index = clampToArraySize(index, values);\n        yield values[index];\n        index++;\n    }\n}\n/**\n * Start at the last value and go down to 0\n */\nfunction* downPatternGen(values) {\n    let index = values.length - 1;\n    while (index >= 0) {\n        index = clampToArraySize(index, values);\n        yield values[index];\n        index--;\n    }\n}\n/**\n * Infinitely yield the generator\n */\nfunction* infiniteGen(values, gen) {\n    while (true) {\n        yield* gen(values);\n    }\n}\n/**\n * Make sure that the index is in the given range\n */\nfunction clampToArraySize(index, values) {\n    return clamp(index, 0, values.length - 1);\n}\n/**\n * Alternate between two generators\n */\nfunction* alternatingGenerator(values, directionUp) {\n    let index = directionUp ? 0 : values.length - 1;\n    while (true) {\n        index = clampToArraySize(index, values);\n        yield values[index];\n        if (directionUp) {\n            index++;\n            if (index >= values.length - 1) {\n                directionUp = false;\n            }\n        }\n        else {\n            index--;\n            if (index <= 0) {\n                directionUp = true;\n            }\n        }\n    }\n}\n/**\n * Starting from the bottom move up 2, down 1\n */\nfunction* jumpUp(values) {\n    let index = 0;\n    let stepIndex = 0;\n    while (index < values.length) {\n        index = clampToArraySize(index, values);\n        yield values[index];\n        stepIndex++;\n        index += (stepIndex % 2 ? 2 : -1);\n    }\n}\n/**\n * Starting from the top move down 2, up 1\n */\nfunction* jumpDown(values) {\n    let index = values.length - 1;\n    let stepIndex = 0;\n    while (index >= 0) {\n        index = clampToArraySize(index, values);\n        yield values[index];\n        stepIndex++;\n        index += (stepIndex % 2 ? -2 : 1);\n    }\n}\n/**\n * Choose a random index each time\n */\nfunction* randomGen(values) {\n    while (true) {\n        const randomIndex = Math.floor(Math.random() * values.length);\n        yield values[randomIndex];\n    }\n}\n/**\n * Randomly go through all of the values once before choosing a new random order\n */\nfunction* randomOnce(values) {\n    // create an array of indices\n    const copy = [];\n    for (let i = 0; i < values.length; i++) {\n        copy.push(i);\n    }\n    while (copy.length > 0) {\n        // random choose an index, and then remove it so it's not chosen again\n        const randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);\n        const index = clampToArraySize(randVal[0], values);\n        yield values[index];\n    }\n}\n/**\n * Randomly choose to walk up or down 1 index in the values array\n */\nfunction* randomWalk(values) {\n    // randomly choose a starting index in the values array\n    let index = Math.floor(Math.random() * values.length);\n    while (true) {\n        if (index === 0) {\n            index++; // at bottom of array, so force upward step\n        }\n        else if (index === values.length - 1) {\n            index--; // at top of array, so force downward step\n        }\n        else if (Math.random() < 0.5) { // else choose random downward or upward step\n            index--;\n        }\n        else {\n            index++;\n        }\n        yield values[index];\n    }\n}\n/**\n * PatternGenerator returns a generator which will iterate over the given array\n * of values and yield the items according to the passed in pattern\n * @param values An array of values to iterate over\n * @param pattern The name of the pattern use when iterating over\n * @param index Where to start in the offset of the values array\n */\nexport function* PatternGenerator(values, pattern = \"up\", index = 0) {\n    // safeguards\n    assert(values.length > 0, \"The array must have more than one value in it\");\n    switch (pattern) {\n        case \"up\":\n            yield* infiniteGen(values, upPatternGen);\n        case \"down\":\n            yield* infiniteGen(values, downPatternGen);\n        case \"upDown\":\n            yield* alternatingGenerator(values, true);\n        case \"downUp\":\n            yield* alternatingGenerator(values, false);\n        case \"alternateUp\":\n            yield* infiniteGen(values, jumpUp);\n        case \"alternateDown\":\n            yield* infiniteGen(values, jumpDown);\n        case \"random\":\n            yield* randomGen(values);\n        case \"randomOnce\":\n            yield* infiniteGen(values, randomOnce);\n        case \"randomWalk\":\n            yield* randomWalk(values);\n    }\n}\n//# sourceMappingURL=PatternGenerator.js.map","import { TicksClass } from \"../core/type/Ticks\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isString } from \"../core/util/TypeCheck\";\nimport { Part } from \"./Part\";\nimport { ToneEvent } from \"./ToneEvent\";\n/**\n * A sequence is an alternate notation of a part. Instead\n * of passing in an array of [time, event] pairs, pass\n * in an array of events which will be spaced at the\n * given subdivision. Sub-arrays will subdivide that beat\n * by the number of items are in the array.\n * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)\n * @example\n * const synth = new Tone.Synth().toDestination();\n * const seq = new Tone.Sequence((time, note) => {\n * \tsynth.triggerAttackRelease(note, 0.1, time);\n * \t// subdivisions are given as subarrays\n * }, [\"C4\", [\"E4\", \"D4\", \"E4\"], \"G4\", [\"A4\", \"G4\"]]).start(0);\n * Tone.Transport.start();\n * @category Event\n */\nexport class Sequence extends ToneEvent {\n    constructor() {\n        super(optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]));\n        this.name = \"Sequence\";\n        /**\n         * The object responsible for scheduling all of the events\n         */\n        this._part = new Part({\n            callback: this._seqCallback.bind(this),\n            context: this.context,\n        });\n        /**\n         * private reference to all of the sequence proxies\n         */\n        this._events = [];\n        /**\n         * The proxied array\n         */\n        this._eventsArray = [];\n        const options = optionsFromArguments(Sequence.getDefaults(), arguments, [\"callback\", \"events\", \"subdivision\"]);\n        this._subdivision = this.toTicks(options.subdivision);\n        this.events = options.events;\n        // set all of the values\n        this.loop = options.loop;\n        this.loopStart = options.loopStart;\n        this.loopEnd = options.loopEnd;\n        this.playbackRate = options.playbackRate;\n        this.probability = options.probability;\n        this.humanize = options.humanize;\n        this.mute = options.mute;\n        this.playbackRate = options.playbackRate;\n    }\n    static getDefaults() {\n        return Object.assign(omitFromObject(ToneEvent.getDefaults(), [\"value\"]), {\n            events: [],\n            loop: true,\n            loopEnd: 0,\n            loopStart: 0,\n            subdivision: \"8n\",\n        });\n    }\n    /**\n     * The internal callback for when an event is invoked\n     */\n    _seqCallback(time, value) {\n        if (value !== null) {\n            this.callback(time, value);\n        }\n    }\n    /**\n     * The sequence\n     */\n    get events() {\n        return this._events;\n    }\n    set events(s) {\n        this.clear();\n        this._eventsArray = s;\n        this._events = this._createSequence(this._eventsArray);\n        this._eventsUpdated();\n    }\n    /**\n     * Start the part at the given time.\n     * @param  time    When to start the part.\n     * @param  offset  The offset index to start at\n     */\n    start(time, offset) {\n        this._part.start(time, offset ? this._indexTime(offset) : offset);\n        return this;\n    }\n    /**\n     * Stop the part at the given time.\n     * @param  time  When to stop the part.\n     */\n    stop(time) {\n        this._part.stop(time);\n        return this;\n    }\n    /**\n     * The subdivision of the sequence. This can only be\n     * set in the constructor. The subdivision is the\n     * interval between successive steps.\n     */\n    get subdivision() {\n        return new TicksClass(this.context, this._subdivision).toSeconds();\n    }\n    /**\n     * Create a sequence proxy which can be monitored to create subsequences\n     */\n    _createSequence(array) {\n        return new Proxy(array, {\n            get: (target, property) => {\n                // property is index in this case\n                return target[property];\n            },\n            set: (target, property, value) => {\n                if (isString(property) && isFinite(parseInt(property, 10))) {\n                    if (isArray(value)) {\n                        target[property] = this._createSequence(value);\n                    }\n                    else {\n                        target[property] = value;\n                    }\n                }\n                else {\n                    target[property] = value;\n                }\n                this._eventsUpdated();\n                // return true to accept the changes\n                return true;\n            },\n        });\n    }\n    /**\n     * When the sequence has changed, all of the events need to be recreated\n     */\n    _eventsUpdated() {\n        this._part.clear();\n        this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset);\n        // update the loopEnd\n        this.loopEnd = this.loopEnd;\n    }\n    /**\n     * reschedule all of the events that need to be rescheduled\n     */\n    _rescheduleSequence(sequence, subdivision, startOffset) {\n        sequence.forEach((value, index) => {\n            const eventOffset = index * (subdivision) + startOffset;\n            if (isArray(value)) {\n                this._rescheduleSequence(value, subdivision / value.length, eventOffset);\n            }\n            else {\n                const startTime = new TicksClass(this.context, eventOffset, \"i\").toSeconds();\n                this._part.add(startTime, value);\n            }\n        });\n    }\n    /**\n     * Get the time of the index given the Sequence's subdivision\n     * @param  index\n     * @return The time of that index\n     */\n    _indexTime(index) {\n        return new TicksClass(this.context, index * (this._subdivision) + this.startOffset).toSeconds();\n    }\n    /**\n     * Clear all of the events\n     */\n    clear() {\n        this._part.clear();\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._part.dispose();\n        return this;\n    }\n    //-------------------------------------\n    // PROXY CALLS\n    //-------------------------------------\n    get loop() {\n        return this._part.loop;\n    }\n    set loop(l) {\n        this._part.loop = l;\n    }\n    /**\n     * The index at which the sequence should start looping\n     */\n    get loopStart() {\n        return this._loopStart;\n    }\n    set loopStart(index) {\n        this._loopStart = index;\n        this._part.loopStart = this._indexTime(index);\n    }\n    /**\n     * The index at which the sequence should end looping\n     */\n    get loopEnd() {\n        return this._loopEnd;\n    }\n    set loopEnd(index) {\n        this._loopEnd = index;\n        if (index === 0) {\n            this._part.loopEnd = this._indexTime(this._eventsArray.length);\n        }\n        else {\n            this._part.loopEnd = this._indexTime(index);\n        }\n    }\n    get startOffset() {\n        return this._part.startOffset;\n    }\n    set startOffset(start) {\n        this._part.startOffset = start;\n    }\n    get playbackRate() {\n        return this._part.playbackRate;\n    }\n    set playbackRate(rate) {\n        this._part.playbackRate = rate;\n    }\n    get probability() {\n        return this._part.probability;\n    }\n    set probability(prob) {\n        this._part.probability = prob;\n    }\n    get progress() {\n        return this._part.progress;\n    }\n    get humanize() {\n        return this._part.humanize;\n    }\n    set humanize(variation) {\n        this._part.humanize = variation;\n    }\n    /**\n     * The number of scheduled events\n     */\n    get length() {\n        return this._part.length;\n    }\n}\n//# sourceMappingURL=Sequence.js.map","import \"../core/clock/Transport\";\nimport { ToneWithContext } from \"../core/context/ToneWithContext\";\nimport { TicksClass } from \"../core/type/Ticks\";\nimport { defaultArg, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isBoolean, isNumber } from \"../core/util/TypeCheck\";\n/**\n * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable\n * callback for a single or repeatable events along the timeline.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * const chordEvent = new Tone.ToneEvent(((time, chord) => {\n * \t// the chord as well as the exact time of the event\n * \t// are passed in as arguments to the callback function\n * \tsynth.triggerAttackRelease(chord, 0.5, time);\n * }), [\"D4\", \"E4\", \"F4\"]);\n * // start the chord at the beginning of the transport timeline\n * chordEvent.start();\n * // loop it every measure for 8 measures\n * chordEvent.loop = 8;\n * chordEvent.loopEnd = \"1m\";\n * @category Event\n */\nexport class ToneEvent extends ToneWithContext {\n    constructor() {\n        super(optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]));\n        this.name = \"ToneEvent\";\n        /**\n         * Tracks the scheduled events\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * A delay time from when the event is scheduled to start\n         */\n        this._startOffset = 0;\n        const options = optionsFromArguments(ToneEvent.getDefaults(), arguments, [\"callback\", \"value\"]);\n        this._loop = options.loop;\n        this.callback = options.callback;\n        this.value = options.value;\n        this._loopStart = this.toTicks(options.loopStart);\n        this._loopEnd = this.toTicks(options.loopEnd);\n        this._playbackRate = options.playbackRate;\n        this._probability = options.probability;\n        this._humanize = options.humanize;\n        this.mute = options.mute;\n        this._playbackRate = options.playbackRate;\n        this._state.increasing = true;\n        // schedule the events for the first time\n        this._rescheduleEvents();\n    }\n    static getDefaults() {\n        return Object.assign(ToneWithContext.getDefaults(), {\n            callback: noOp,\n            humanize: false,\n            loop: false,\n            loopEnd: \"1m\",\n            loopStart: 0,\n            mute: false,\n            playbackRate: 1,\n            probability: 1,\n            value: null,\n        });\n    }\n    /**\n     * Reschedule all of the events along the timeline\n     * with the updated values.\n     * @param after Only reschedules events after the given time.\n     */\n    _rescheduleEvents(after = -1) {\n        // if no argument is given, schedules all of the events\n        this._state.forEachFrom(after, event => {\n            let duration;\n            if (event.state === \"started\") {\n                if (event.id !== -1) {\n                    this.context.transport.clear(event.id);\n                }\n                const startTick = event.time + Math.round(this.startOffset / this._playbackRate);\n                if (this._loop === true || isNumber(this._loop) && this._loop > 1) {\n                    duration = Infinity;\n                    if (isNumber(this._loop)) {\n                        duration = (this._loop) * this._getLoopDuration();\n                    }\n                    const nextEvent = this._state.getAfter(startTick);\n                    if (nextEvent !== null) {\n                        duration = Math.min(duration, nextEvent.time - startTick);\n                    }\n                    if (duration !== Infinity) {\n                        // schedule a stop since it's finite duration\n                        this._state.setStateAtTime(\"stopped\", startTick + duration + 1, { id: -1 });\n                        duration = new TicksClass(this.context, duration);\n                    }\n                    const interval = new TicksClass(this.context, this._getLoopDuration());\n                    event.id = this.context.transport.scheduleRepeat(this._tick.bind(this), interval, new TicksClass(this.context, startTick), duration);\n                }\n                else {\n                    event.id = this.context.transport.schedule(this._tick.bind(this), new TicksClass(this.context, startTick));\n                }\n            }\n        });\n    }\n    /**\n     * Returns the playback state of the note, either \"started\" or \"stopped\".\n     */\n    get state() {\n        return this._state.getValueAtTime(this.context.transport.ticks);\n    }\n    /**\n     * The start from the scheduled start time.\n     */\n    get startOffset() {\n        return this._startOffset;\n    }\n    set startOffset(offset) {\n        this._startOffset = offset;\n    }\n    /**\n     * The probability of the notes being triggered.\n     */\n    get probability() {\n        return this._probability;\n    }\n    set probability(prob) {\n        this._probability = prob;\n    }\n    /**\n     * If set to true, will apply small random variation\n     * to the callback time. If the value is given as a time, it will randomize\n     * by that amount.\n     * @example\n     * const event = new Tone.ToneEvent();\n     * event.humanize = true;\n     */\n    get humanize() {\n        return this._humanize;\n    }\n    set humanize(variation) {\n        this._humanize = variation;\n    }\n    /**\n     * Start the note at the given time.\n     * @param  time  When the event should start.\n     */\n    start(time) {\n        const ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) === \"stopped\") {\n            this._state.add({\n                id: -1,\n                state: \"started\",\n                time: ticks,\n            });\n            this._rescheduleEvents(ticks);\n        }\n        return this;\n    }\n    /**\n     * Stop the Event at the given time.\n     * @param  time  When the event should stop.\n     */\n    stop(time) {\n        this.cancel(time);\n        const ticks = this.toTicks(time);\n        if (this._state.getValueAtTime(ticks) === \"started\") {\n            this._state.setStateAtTime(\"stopped\", ticks, { id: -1 });\n            const previousEvent = this._state.getBefore(ticks);\n            let reschedulTime = ticks;\n            if (previousEvent !== null) {\n                reschedulTime = previousEvent.time;\n            }\n            this._rescheduleEvents(reschedulTime);\n        }\n        return this;\n    }\n    /**\n     * Cancel all scheduled events greater than or equal to the given time\n     * @param  time  The time after which events will be cancel.\n     */\n    cancel(time) {\n        time = defaultArg(time, -Infinity);\n        const ticks = this.toTicks(time);\n        this._state.forEachFrom(ticks, event => {\n            this.context.transport.clear(event.id);\n        });\n        this._state.cancel(ticks);\n        return this;\n    }\n    /**\n     * The callback function invoker. Also\n     * checks if the Event is done playing\n     * @param  time  The time of the event in seconds\n     */\n    _tick(time) {\n        const ticks = this.context.transport.getTicksAtTime(time);\n        if (!this.mute && this._state.getValueAtTime(ticks) === \"started\") {\n            if (this.probability < 1 && Math.random() > this.probability) {\n                return;\n            }\n            if (this.humanize) {\n                let variation = 0.02;\n                if (!isBoolean(this.humanize)) {\n                    variation = this.toSeconds(this.humanize);\n                }\n                time += (Math.random() * 2 - 1) * variation;\n            }\n            this.callback(time, this.value);\n        }\n    }\n    /**\n     * Get the duration of the loop.\n     */\n    _getLoopDuration() {\n        return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);\n    }\n    /**\n     * If the note should loop or not\n     * between ToneEvent.loopStart and\n     * ToneEvent.loopEnd. If set to true,\n     * the event will loop indefinitely,\n     * if set to a number greater than 1\n     * it will play a specific number of\n     * times, if set to false, 0 or 1, the\n     * part will only play once.\n     */\n    get loop() {\n        return this._loop;\n    }\n    set loop(loop) {\n        this._loop = loop;\n        this._rescheduleEvents();\n    }\n    /**\n     * The playback rate of the note. Defaults to 1.\n     * @example\n     * const note = new Tone.ToneEvent();\n     * note.loop = true;\n     * // repeat the note twice as fast\n     * note.playbackRate = 2;\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        this._rescheduleEvents();\n    }\n    /**\n     * The loopEnd point is the time the event will loop\n     * if ToneEvent.loop is true.\n     */\n    get loopEnd() {\n        return new TicksClass(this.context, this._loopEnd).toSeconds();\n    }\n    set loopEnd(loopEnd) {\n        this._loopEnd = this.toTicks(loopEnd);\n        if (this._loop) {\n            this._rescheduleEvents();\n        }\n    }\n    /**\n     * The time when the loop should start.\n     */\n    get loopStart() {\n        return new TicksClass(this.context, this._loopStart).toSeconds();\n    }\n    set loopStart(loopStart) {\n        this._loopStart = this.toTicks(loopStart);\n        if (this._loop) {\n            this._rescheduleEvents();\n        }\n    }\n    /**\n     * The current progress of the loop interval.\n     * Returns 0 if the event is not started yet or\n     * it is not set to loop.\n     */\n    get progress() {\n        if (this._loop) {\n            const ticks = this.context.transport.ticks;\n            const lastEvent = this._state.get(ticks);\n            if (lastEvent !== null && lastEvent.state === \"started\") {\n                const loopDuration = this._getLoopDuration();\n                const progress = (ticks - lastEvent.time) % loopDuration;\n                return progress / loopDuration;\n            }\n            else {\n                return 0;\n            }\n        }\n        else {\n            return 0;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.cancel();\n        this._state.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneEvent.js.map","export * from \"./Loop\";\nexport * from \"./Part\";\nexport * from \"./Pattern\";\nexport * from \"./Sequence\";\nexport * from \"./ToneEvent\";\n//# sourceMappingURL=index.js.map","export { getContext, setContext } from \"./core/Global\";\nexport * from \"./classes\";\nexport * from \"./version\";\nimport { getContext } from \"./core/Global\";\nimport { ToneAudioBuffer } from \"./core/context/ToneAudioBuffer\";\nexport { start } from \"./core/Global\";\nexport { supported } from \"./core/context/AudioContext\";\n/**\n * The current audio context time of the global [[Context]].\n * See [[Context.now]]\n * @category Core\n */\nexport const now = getContext().now.bind(getContext());\n/**\n * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]\n * See [[Context.immediate]]\n * @category Core\n */\nexport const immediate = getContext().immediate.bind(getContext());\n/**\n * The Transport object belonging to the global Tone.js Context.\n * See [[Transport]]\n * @category Core\n */\nexport const Transport = getContext().transport;\n/**\n * The Destination (output) belonging to the global Tone.js Context.\n * See [[Destination]]\n * @category Core\n */\nexport const Destination = getContext().destination;\n/**\n * The [[Listener]] belonging to the global Tone.js Context.\n * @category Core\n */\nexport const Listener = getContext().listener;\n/**\n * Draw is used to synchronize the draw frame with the Transport's callbacks.\n * See [[Draw]]\n * @category Core\n */\nexport const Draw = getContext().draw;\n/**\n * A reference to the global context\n * See [[Context]]\n * @category Core\n */\nexport const context = getContext();\n/**\n * Promise which resolves when all of the loading promises are resolved.\n * Alias for static [[ToneAudioBuffer.loaded]] method.\n * @category Core\n */\nexport const loaded = ToneAudioBuffer.loaded.bind(ToneAudioBuffer);\n// this fills in name changes from 13.x to 14.x\nimport { ToneAudioBuffers } from \"./core/context/ToneAudioBuffers\";\nimport { ToneBufferSource } from \"./source/buffer/ToneBufferSource\";\nexport const Buffer = ToneAudioBuffer;\nexport const Buffers = ToneAudioBuffers;\nexport const BufferSource = ToneBufferSource;\n//# sourceMappingURL=index.js.map","import { AudioToGain } from \"../signal/AudioToGain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * AMSynth uses the output of one Tone.Synth to modulate the\n * amplitude of another Tone.Synth. The harmonicity (the ratio between\n * the two signals) affects the timbre of the output signal greatly.\n * Read more about Amplitude Modulation Synthesis on\n * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).\n *\n * @example\n * const synth = new Tone.AMSynth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"4n\");\n *\n * @category Instrument\n */\nexport class AMSynth extends ModulationSynth {\n    constructor() {\n        super(optionsFromArguments(AMSynth.getDefaults(), arguments));\n        this.name = \"AMSynth\";\n        this._modulationScale = new AudioToGain({\n            context: this.context,\n        });\n        // control the two voices frequency\n        this.frequency.connect(this._carrier.frequency);\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this.detune.fan(this._carrier.detune, this._modulator.detune);\n        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n        this._carrier.chain(this._modulationNode, this.output);\n    }\n    dispose() {\n        super.dispose();\n        this._modulationScale.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AMSynth.js.map","import { Monophonic } from \"./Monophonic\";\nimport { MonoSynth } from \"./MonoSynth\";\nimport { Signal } from \"../signal/Signal\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { LFO } from \"../source/oscillator/LFO\";\nimport { Gain, } from \"../core/context/Gain\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * DuoSynth is a monophonic synth composed of two [[MonoSynths]] run in parallel with control over the\n * frequency ratio between the two voices and vibrato effect.\n * @example\n * const duoSynth = new Tone.DuoSynth().toDestination();\n * duoSynth.triggerAttackRelease(\"C4\", \"2n\");\n * @category Instrument\n */\nexport class DuoSynth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(DuoSynth.getDefaults(), arguments));\n        this.name = \"DuoSynth\";\n        const options = optionsFromArguments(DuoSynth.getDefaults(), arguments);\n        this.voice0 = new MonoSynth(Object.assign(options.voice0, {\n            context: this.context,\n            onsilence: () => this.onsilence(this)\n        }));\n        this.voice1 = new MonoSynth(Object.assign(options.voice1, {\n            context: this.context,\n        }));\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        this._vibrato = new LFO({\n            frequency: options.vibratoRate,\n            context: this.context,\n            min: -50,\n            max: 50\n        });\n        // start the vibrato immediately\n        this._vibrato.start();\n        this.vibratoRate = this._vibrato.frequency;\n        this._vibratoGain = new Gain({\n            context: this.context,\n            units: \"normalRange\",\n            gain: options.vibratoAmount\n        });\n        this.vibratoAmount = this._vibratoGain.gain;\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: 440\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune\n        });\n        // control the two voices frequency\n        this.frequency.connect(this.voice0.frequency);\n        this.frequency.chain(this.harmonicity, this.voice1.frequency);\n        this._vibrato.connect(this._vibratoGain);\n        this._vibratoGain.fan(this.voice0.detune, this.voice1.detune);\n        this.detune.fan(this.voice0.detune, this.voice1.detune);\n        this.voice0.connect(this.output);\n        this.voice1.connect(this.output);\n        readOnly(this, [\"voice0\", \"voice1\", \"frequency\", \"vibratoAmount\", \"vibratoRate\"]);\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.voice0.envelope.getValueAtTime(time) + this.voice1.envelope.getValueAtTime(time);\n    }\n    static getDefaults() {\n        return deepMerge(Monophonic.getDefaults(), {\n            vibratoAmount: 0.5,\n            vibratoRate: 5,\n            harmonicity: 1.5,\n            voice0: deepMerge(omitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())), {\n                filterEnvelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                },\n                envelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                }\n            }),\n            voice1: deepMerge(omitFromObject(MonoSynth.getDefaults(), Object.keys(Monophonic.getDefaults())), {\n                filterEnvelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                },\n                envelope: {\n                    attack: 0.01,\n                    decay: 0.0,\n                    sustain: 1,\n                    release: 0.5\n                }\n            }),\n        });\n    }\n    /**\n     * Trigger the attack portion of the note\n     */\n    _triggerEnvelopeAttack(time, velocity) {\n        // @ts-ignore\n        this.voice0._triggerEnvelopeAttack(time, velocity);\n        // @ts-ignore\n        this.voice1._triggerEnvelopeAttack(time, velocity);\n    }\n    /**\n     * Trigger the release portion of the note\n     */\n    _triggerEnvelopeRelease(time) {\n        // @ts-ignore\n        this.voice0._triggerEnvelopeRelease(time);\n        // @ts-ignore\n        this.voice1._triggerEnvelopeRelease(time);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this.voice0.dispose();\n        this.voice1.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._vibrato.dispose();\n        this.vibratoRate.dispose();\n        this._vibratoGain.dispose();\n        this.harmonicity.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=DuoSynth.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { ModulationSynth } from \"./ModulationSynth\";\n/**\n * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates\n * the frequency of a second Tone.Synth. A lot of spectral content\n * can be explored using the modulationIndex parameter. Read more about\n * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).\n *\n * @example\n * const fmSynth = new Tone.FMSynth().toDestination();\n * fmSynth.triggerAttackRelease(\"C5\", \"4n\");\n *\n * @category Instrument\n */\nexport class FMSynth extends ModulationSynth {\n    constructor() {\n        super(optionsFromArguments(FMSynth.getDefaults(), arguments));\n        this.name = \"FMSynth\";\n        const options = optionsFromArguments(FMSynth.getDefaults(), arguments);\n        this.modulationIndex = new Multiply({\n            context: this.context,\n            value: options.modulationIndex,\n        });\n        // control the two voices frequency\n        this.frequency.connect(this._carrier.frequency);\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this.frequency.chain(this.modulationIndex, this._modulationNode);\n        this.detune.fan(this._carrier.detune, this._modulator.detune);\n        this._modulator.connect(this._modulationNode.gain);\n        this._modulationNode.connect(this._carrier.frequency);\n        this._carrier.connect(this.output);\n    }\n    static getDefaults() {\n        return Object.assign(ModulationSynth.getDefaults(), {\n            modulationIndex: 10,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.modulationIndex.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FMSynth.js.map","import { Volume } from \"../component/channel/Volume\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Base-class for all instruments\n */\nexport class Instrument extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Instrument.getDefaults(), arguments));\n        /**\n         * Keep track of all events scheduled to the transport\n         * when the instrument is 'synced'\n         */\n        this._scheduledEvents = [];\n        /**\n         * If the instrument is currently synced\n         */\n        this._synced = false;\n        this._original_triggerAttack = this.triggerAttack;\n        this._original_triggerRelease = this.triggerRelease;\n        const options = optionsFromArguments(Instrument.getDefaults(), arguments);\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            volume: 0,\n        });\n    }\n    /**\n     * Sync the instrument to the Transport. All subsequent calls of\n     * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.\n     * @example\n     * const fmSynth = new Tone.FMSynth().toDestination();\n     * fmSynth.volume.value = -6;\n     * fmSynth.sync();\n     * // schedule 3 notes when the transport first starts\n     * fmSynth.triggerAttackRelease(\"C4\", \"8n\", 0);\n     * fmSynth.triggerAttackRelease(\"E4\", \"8n\", \"8n\");\n     * fmSynth.triggerAttackRelease(\"G4\", \"8n\", \"4n\");\n     * // start the transport to hear the notes\n     * Tone.Transport.start();\n     */\n    sync() {\n        if (!this._synced) {\n            this._synced = true;\n            this._syncMethod(\"triggerAttack\", 1);\n            this._syncMethod(\"triggerRelease\", 0);\n        }\n        return this;\n    }\n    /**\n     * Wrap the given method so that it can be synchronized\n     * @param method Which method to wrap and sync\n     * @param  timePosition What position the time argument appears in\n     */\n    _syncMethod(method, timePosition) {\n        const originalMethod = this[\"_original_\" + method] = this[method];\n        this[method] = (...args) => {\n            const time = args[timePosition];\n            const id = this.context.transport.schedule((t) => {\n                args[timePosition] = t;\n                originalMethod.apply(this, args);\n            }, time);\n            this._scheduledEvents.push(id);\n        };\n    }\n    /**\n     * Unsync the instrument from the Transport\n     */\n    unsync() {\n        this._scheduledEvents.forEach(id => this.context.transport.clear(id));\n        this._scheduledEvents = [];\n        if (this._synced) {\n            this._synced = false;\n            this.triggerAttack = this._original_triggerAttack;\n            this.triggerRelease = this._original_triggerRelease;\n        }\n        return this;\n    }\n    /**\n     * Trigger the attack and then the release after the duration.\n     * @param  note     The note to trigger.\n     * @param  duration How long the note should be held for before\n     *                         triggering the release. This value must be greater than 0.\n     * @param time  When the note should be triggered.\n     * @param  velocity The velocity the note should be triggered at.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * // trigger \"C4\" for the duration of an 8th note\n     * synth.triggerAttackRelease(\"C4\", \"8n\");\n     */\n    triggerAttackRelease(note, duration, time, velocity) {\n        const computedTime = this.toSeconds(time);\n        const computedDuration = this.toSeconds(duration);\n        this.triggerAttack(note, computedTime, velocity);\n        this.triggerRelease(computedTime + computedDuration);\n        return this;\n    }\n    /**\n     * clean up\n     * @returns {Instrument} this\n     */\n    dispose() {\n        super.dispose();\n        this._volume.dispose();\n        this.unsync();\n        this._scheduledEvents = [];\n        return this;\n    }\n}\n//# sourceMappingURL=Instrument.js.map","import { __decorate } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { deepMerge, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"./Monophonic\";\nimport { Synth } from \"./Synth\";\nimport { range, timeRange } from \"../core/util/Decorator\";\n/**\n * MembraneSynth makes kick and tom sounds using a single oscillator\n * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator\n * is routed through a Tone.AmplitudeEnvelope to the output. The drum\n * quality of the sound comes from the frequency envelope applied\n * during MembraneSynth.triggerAttack(note). The frequency envelope\n * starts at <code>note * .octaves</code> and ramps to <code>note</code>\n * over the duration of <code>.pitchDecay</code>.\n * @example\n * const synth = new Tone.MembraneSynth().toDestination();\n * synth.triggerAttackRelease(\"C2\", \"8n\");\n * @category Instrument\n */\nexport class MembraneSynth extends Synth {\n    constructor() {\n        super(optionsFromArguments(MembraneSynth.getDefaults(), arguments));\n        this.name = \"MembraneSynth\";\n        /**\n         * Portamento is ignored in this synth. use pitch decay instead.\n         */\n        this.portamento = 0;\n        const options = optionsFromArguments(MembraneSynth.getDefaults(), arguments);\n        this.pitchDecay = options.pitchDecay;\n        this.octaves = options.octaves;\n        readOnly(this, [\"oscillator\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return deepMerge(Monophonic.getDefaults(), Synth.getDefaults(), {\n            envelope: {\n                attack: 0.001,\n                attackCurve: \"exponential\",\n                decay: 0.4,\n                release: 1.4,\n                sustain: 0.01,\n            },\n            octaves: 10,\n            oscillator: {\n                type: \"sine\",\n            },\n            pitchDecay: 0.05,\n        });\n    }\n    setNote(note, time) {\n        const seconds = this.toSeconds(time);\n        const hertz = this.toFrequency(note instanceof FrequencyClass ? note.toFrequency() : note);\n        const maxNote = hertz * this.octaves;\n        this.oscillator.frequency.setValueAtTime(maxNote, seconds);\n        this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        return this;\n    }\n}\n__decorate([\n    range(0)\n], MembraneSynth.prototype, \"octaves\", void 0);\n__decorate([\n    timeRange(0)\n], MembraneSynth.prototype, \"pitchDecay\", void 0);\n//# sourceMappingURL=MembraneSynth.js.map","import { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Scale } from \"../signal/Scale\";\nimport { Signal } from \"../signal/Signal\";\nimport { FMOscillator } from \"../source/oscillator/FMOscillator\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Inharmonic ratio of frequencies based on the Roland TR-808\n * Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model\n */\nconst inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];\n/**\n * A highly inharmonic and spectrally complex source with a highpass filter\n * and amplitude envelope which is good for making metallophone sounds.\n * Based on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).\n * Inspiration from [Sound on Sound](https://shorturl.at/rSZ12).\n * @category Instrument\n */\nexport class MetalSynth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(MetalSynth.getDefaults(), arguments));\n        this.name = \"MetalSynth\";\n        /**\n         * The array of FMOscillators\n         */\n        this._oscillators = [];\n        /**\n         * The frequency multipliers\n         */\n        this._freqMultipliers = [];\n        const options = optionsFromArguments(MetalSynth.getDefaults(), arguments);\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n        });\n        this._amplitude = new Gain({\n            context: this.context,\n            gain: 0,\n        }).connect(this.output);\n        this._highpass = new Filter({\n            // Q: -3.0102999566398125,\n            Q: 0,\n            context: this.context,\n            type: \"highpass\",\n        }).connect(this._amplitude);\n        for (let i = 0; i < inharmRatios.length; i++) {\n            const osc = new FMOscillator({\n                context: this.context,\n                harmonicity: options.harmonicity,\n                modulationIndex: options.modulationIndex,\n                modulationType: \"square\",\n                onstop: i === 0 ? () => this.onsilence(this) : noOp,\n                type: \"square\",\n            });\n            osc.connect(this._highpass);\n            this._oscillators[i] = osc;\n            const mult = new Multiply({\n                context: this.context,\n                value: inharmRatios[i],\n            });\n            this._freqMultipliers[i] = mult;\n            this.frequency.chain(mult, osc.frequency);\n            this.detune.connect(osc.detune);\n        }\n        this._filterFreqScaler = new Scale({\n            context: this.context,\n            max: 7000,\n            min: this.toFrequency(options.resonance),\n        });\n        this.envelope = new Envelope({\n            attack: options.envelope.attack,\n            attackCurve: \"linear\",\n            context: this.context,\n            decay: options.envelope.decay,\n            release: options.envelope.release,\n            sustain: 0,\n        });\n        this.envelope.chain(this._filterFreqScaler, this._highpass.frequency);\n        this.envelope.connect(this._amplitude.gain);\n        // set the octaves\n        this._octaves = options.octaves;\n        this.octaves = options.octaves;\n    }\n    static getDefaults() {\n        return deepMerge(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.001,\n                decay: 1.4,\n                release: 0.2,\n            }),\n            harmonicity: 5.1,\n            modulationIndex: 32,\n            octaves: 1.5,\n            resonance: 4000,\n        });\n    }\n    /**\n     * Trigger the attack.\n     * @param time When the attack should be triggered.\n     * @param velocity The velocity that the envelope should be triggered at.\n     */\n    _triggerEnvelopeAttack(time, velocity = 1) {\n        this.envelope.triggerAttack(time, velocity);\n        this._oscillators.forEach(osc => osc.start(time));\n        if (this.envelope.sustain === 0) {\n            this._oscillators.forEach(osc => {\n                osc.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n            });\n        }\n        return this;\n    }\n    /**\n     * Trigger the release of the envelope.\n     * @param time When the release should be triggered.\n     */\n    _triggerEnvelopeRelease(time) {\n        this.envelope.triggerRelease(time);\n        this._oscillators.forEach(osc => osc.stop(time + this.toSeconds(this.envelope.release)));\n        return this;\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    /**\n     * The modulationIndex of the oscillators which make up the source.\n     * see [[FMOscillator.modulationIndex]]\n     * @min 1\n     * @max 100\n     */\n    get modulationIndex() {\n        return this._oscillators[0].modulationIndex.value;\n    }\n    set modulationIndex(val) {\n        this._oscillators.forEach(osc => (osc.modulationIndex.value = val));\n    }\n    /**\n     * The harmonicity of the oscillators which make up the source.\n     * see Tone.FMOscillator.harmonicity\n     * @min 0.1\n     * @max 10\n     */\n    get harmonicity() {\n        return this._oscillators[0].harmonicity.value;\n    }\n    set harmonicity(val) {\n        this._oscillators.forEach(osc => (osc.harmonicity.value = val));\n    }\n    /**\n     * The lower level of the highpass filter which is attached to the envelope.\n     * This value should be between [0, 7000]\n     * @min 0\n     * @max 7000\n     */\n    get resonance() {\n        return this._filterFreqScaler.min;\n    }\n    set resonance(val) {\n        this._filterFreqScaler.min = this.toFrequency(val);\n        this.octaves = this._octaves;\n    }\n    /**\n     * The number of octaves above the \"resonance\" frequency\n     * that the filter ramps during the attack/decay envelope\n     * @min 0\n     * @max 8\n     */\n    get octaves() {\n        return this._octaves;\n    }\n    set octaves(val) {\n        this._octaves = val;\n        this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, val);\n    }\n    dispose() {\n        super.dispose();\n        this._oscillators.forEach(osc => osc.dispose());\n        this._freqMultipliers.forEach(freqMult => freqMult.dispose());\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._filterFreqScaler.dispose();\n        this._amplitude.dispose();\n        this.envelope.dispose();\n        this._highpass.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MetalSynth.js.map","import { Signal } from \"../signal/Signal\";\nimport { Multiply } from \"../signal/Multiply\";\nimport { Gain } from \"../core/context/Gain\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Monophonic } from \"./Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Synth } from \"./Synth\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * Base class for both AM and FM synths\n */\nexport class ModulationSynth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(ModulationSynth.getDefaults(), arguments));\n        this.name = \"ModulationSynth\";\n        const options = optionsFromArguments(ModulationSynth.getDefaults(), arguments);\n        this._carrier = new Synth({\n            context: this.context,\n            oscillator: options.oscillator,\n            envelope: options.envelope,\n            onsilence: () => this.onsilence(this),\n            volume: -10,\n        });\n        this._modulator = new Synth({\n            context: this.context,\n            oscillator: options.modulation,\n            envelope: options.modulationEnvelope,\n            volume: -10,\n        });\n        this.oscillator = this._carrier.oscillator;\n        this.envelope = this._carrier.envelope;\n        this.modulation = this._modulator.oscillator;\n        this.modulationEnvelope = this._modulator.envelope;\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n        });\n        this.detune = new Signal({\n            context: this.context,\n            value: options.detune,\n            units: \"cents\"\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            value: options.harmonicity,\n            minValue: 0,\n        });\n        this._modulationNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        readOnly(this, [\"frequency\", \"harmonicity\", \"oscillator\", \"envelope\", \"modulation\", \"modulationEnvelope\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Monophonic.getDefaults(), {\n            harmonicity: 3,\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), [\n                ...Object.keys(Source.getDefaults()),\n                \"frequency\",\n                \"detune\"\n            ]), {\n                type: \"sine\"\n            }),\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.01,\n                decay: 0.01,\n                sustain: 1,\n                release: 0.5\n            }),\n            modulation: Object.assign(omitFromObject(OmniOscillator.getDefaults(), [\n                ...Object.keys(Source.getDefaults()),\n                \"frequency\",\n                \"detune\"\n            ]), {\n                type: \"square\"\n            }),\n            modulationEnvelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.5,\n                decay: 0.0,\n                sustain: 1,\n                release: 0.5\n            })\n        });\n    }\n    /**\n     * Trigger the attack portion of the note\n     */\n    _triggerEnvelopeAttack(time, velocity) {\n        // @ts-ignore\n        this._carrier._triggerEnvelopeAttack(time, velocity);\n        // @ts-ignore\n        this._modulator._triggerEnvelopeAttack(time, velocity);\n    }\n    /**\n     * Trigger the release portion of the note\n     */\n    _triggerEnvelopeRelease(time) {\n        // @ts-ignore\n        this._carrier._triggerEnvelopeRelease(time);\n        // @ts-ignore\n        this._modulator._triggerEnvelopeRelease(time);\n        return this;\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    dispose() {\n        super.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this.harmonicity.dispose();\n        this._modulationNode.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ModulationSynth.js.map","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Filter } from \"../component/filter/Filter\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { Monophonic } from \"../instrument/Monophonic\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { FrequencyEnvelope } from \"../component/envelope/FrequencyEnvelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\n/**\n * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.\n * The amplitude of the Oscillator and the cutoff frequency of the\n * Filter are controlled by Envelopes.\n * <img src=\"https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240\">\n * @example\n * const synth = new Tone.MonoSynth({\n * \toscillator: {\n * \t\ttype: \"square\"\n * \t},\n * \tenvelope: {\n * \t\tattack: 0.1\n * \t}\n * }).toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class MonoSynth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(MonoSynth.getDefaults(), arguments));\n        this.name = \"MonoSynth\";\n        const options = optionsFromArguments(MonoSynth.getDefaults(), arguments);\n        this.oscillator = new OmniOscillator(Object.assign(options.oscillator, {\n            context: this.context,\n            detune: options.detune,\n            onstop: () => this.onsilence(this),\n        }));\n        this.frequency = this.oscillator.frequency;\n        this.detune = this.oscillator.detune;\n        this.filter = new Filter(Object.assign(options.filter, { context: this.context }));\n        this.filterEnvelope = new FrequencyEnvelope(Object.assign(options.filterEnvelope, { context: this.context }));\n        this.envelope = new AmplitudeEnvelope(Object.assign(options.envelope, { context: this.context }));\n        // connect the oscillators to the output\n        this.oscillator.chain(this.filter, this.envelope, this.output);\n        // connect the filter envelope\n        this.filterEnvelope.connect(this.filter.frequency);\n        readOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"filter\", \"filterEnvelope\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.005,\n                decay: 0.1,\n                release: 1,\n                sustain: 0.9,\n            }),\n            filter: Object.assign(omitFromObject(Filter.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                Q: 1,\n                rolloff: -12,\n                type: \"lowpass\",\n            }),\n            filterEnvelope: Object.assign(omitFromObject(FrequencyEnvelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.6,\n                baseFrequency: 200,\n                decay: 0.2,\n                exponent: 2,\n                octaves: 3,\n                release: 2,\n                sustain: 0.5,\n            }),\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), Object.keys(Source.getDefaults())), {\n                type: \"sawtooth\",\n            }),\n        });\n    }\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    _triggerEnvelopeAttack(time, velocity = 1) {\n        this.envelope.triggerAttack(time, velocity);\n        this.filterEnvelope.triggerAttack(time);\n        this.oscillator.start(time);\n        if (this.envelope.sustain === 0) {\n            const computedAttack = this.toSeconds(this.envelope.attack);\n            const computedDecay = this.toSeconds(this.envelope.decay);\n            this.oscillator.stop(time + computedAttack + computedDecay);\n        }\n    }\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n    _triggerEnvelopeRelease(time) {\n        this.envelope.triggerRelease(time);\n        this.filterEnvelope.triggerRelease(time);\n        this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    dispose() {\n        super.dispose();\n        this.oscillator.dispose();\n        this.envelope.dispose();\n        this.filterEnvelope.dispose();\n        this.filter.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=MonoSynth.js.map","import { __decorate } from \"tslib\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { timeRange } from \"../core/util/Decorator\";\n/**\n * Abstract base class for other monophonic instruments to extend.\n */\nexport class Monophonic extends Instrument {\n    constructor() {\n        super(optionsFromArguments(Monophonic.getDefaults(), arguments));\n        const options = optionsFromArguments(Monophonic.getDefaults(), arguments);\n        this.portamento = options.portamento;\n        this.onsilence = options.onsilence;\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            detune: 0,\n            onsilence: noOp,\n            portamento: 0,\n        });\n    }\n    /**\n     * Trigger the attack of the note optionally with a given velocity.\n     * @param  note The note to trigger.\n     * @param  time When the note should start.\n     * @param  velocity The velocity scaler determines how \"loud\" the note will be triggered.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * // trigger the note a half second from now at half velocity\n     * synth.triggerAttack(\"C4\", \"+0.5\", 0.5);\n     */\n    triggerAttack(note, time, velocity = 1) {\n        this.log(\"triggerAttack\", note, time, velocity);\n        const seconds = this.toSeconds(time);\n        this._triggerEnvelopeAttack(seconds, velocity);\n        this.setNote(note, seconds);\n        return this;\n    }\n    /**\n     * Trigger the release portion of the envelope\n     * @param  time If no time is given, the release happens immediatly\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // trigger the release a second from now\n     * synth.triggerRelease(\"+1\");\n     */\n    triggerRelease(time) {\n        this.log(\"triggerRelease\", time);\n        const seconds = this.toSeconds(time);\n        this._triggerEnvelopeRelease(seconds);\n        return this;\n    }\n    /**\n     * Set the note at the given time. If no time is given, the note\n     * will set immediately.\n     * @param note The note to change to.\n     * @param  time The time when the note should be set.\n     * @example\n     * const synth = new Tone.Synth().toDestination();\n     * synth.triggerAttack(\"C4\");\n     * // change to F#6 in one quarter note from now.\n     * synth.setNote(\"F#6\", \"+4n\");\n     */\n    setNote(note, time) {\n        const computedTime = this.toSeconds(time);\n        const computedFrequency = note instanceof FrequencyClass ? note.toFrequency() : note;\n        if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {\n            const portTime = this.toSeconds(this.portamento);\n            this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);\n        }\n        else {\n            this.frequency.setValueAtTime(computedFrequency, computedTime);\n        }\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Monophonic.prototype, \"portamento\", void 0);\n//# sourceMappingURL=Monophonic.js.map","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument } from \"./Instrument\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { Source } from \"../source/Source\";\n/**\n * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]].\n * ```\n * +-------+   +-------------------+\n * | Noise +>--> AmplitudeEnvelope +>--> Output\n * +-------+   +-------------------+\n * ```\n * @example\n * const noiseSynth = new Tone.NoiseSynth().toDestination();\n * noiseSynth.triggerAttackRelease(\"8n\", 0.05);\n * @category Instrument\n */\nexport class NoiseSynth extends Instrument {\n    constructor() {\n        super(optionsFromArguments(NoiseSynth.getDefaults(), arguments));\n        this.name = \"NoiseSynth\";\n        const options = optionsFromArguments(NoiseSynth.getDefaults(), arguments);\n        this.noise = new Noise(Object.assign({\n            context: this.context,\n        }, options.noise));\n        this.envelope = new AmplitudeEnvelope(Object.assign({\n            context: this.context,\n        }, options.envelope));\n        // connect the noise to the output\n        this.noise.chain(this.envelope, this.output);\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                decay: 0.1,\n                sustain: 0.0,\n            }),\n            noise: Object.assign(omitFromObject(Noise.getDefaults(), Object.keys(Source.getDefaults())), {\n                type: \"white\",\n            }),\n        });\n    }\n    /**\n     * Start the attack portion of the envelopes. Unlike other\n     * instruments, Tone.NoiseSynth doesn't have a note.\n     * @example\n     * const noiseSynth = new Tone.NoiseSynth().toDestination();\n     * noiseSynth.triggerAttack();\n     */\n    triggerAttack(time, velocity = 1) {\n        time = this.toSeconds(time);\n        // the envelopes\n        this.envelope.triggerAttack(time, velocity);\n        // start the noise\n        this.noise.start(time);\n        if (this.envelope.sustain === 0) {\n            this.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));\n        }\n        return this;\n    }\n    /**\n     * Start the release portion of the envelopes.\n     */\n    triggerRelease(time) {\n        time = this.toSeconds(time);\n        this.envelope.triggerRelease(time);\n        this.noise.stop(time + this.toSeconds(this.envelope.release));\n        return this;\n    }\n    sync() {\n        this._syncMethod(\"triggerAttack\", 0);\n        this._syncMethod(\"triggerRelease\", 0);\n        return this;\n    }\n    triggerAttackRelease(duration, time, velocity = 1) {\n        time = this.toSeconds(time);\n        duration = this.toSeconds(duration);\n        this.triggerAttack(time, velocity);\n        this.triggerRelease(time + duration);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this.noise.dispose();\n        this.envelope.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=NoiseSynth.js.map","import { LowpassCombFilter } from \"../component/filter/LowpassCombFilter\";\nimport { deepMerge } from \"../core/util/Defaults\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Noise } from \"../source/Noise\";\nimport { Instrument } from \"./Instrument\";\n/**\n * Karplus-String string synthesis.\n * @example\n * const plucky = new Tone.PluckSynth().toDestination();\n * plucky.triggerAttack(\"C4\", \"+0.5\");\n * plucky.triggerAttack(\"C3\", \"+1\");\n * plucky.triggerAttack(\"C2\", \"+1.5\");\n * plucky.triggerAttack(\"C1\", \"+2\");\n * @category Instrument\n */\nexport class PluckSynth extends Instrument {\n    constructor() {\n        super(optionsFromArguments(PluckSynth.getDefaults(), arguments));\n        this.name = \"PluckSynth\";\n        const options = optionsFromArguments(PluckSynth.getDefaults(), arguments);\n        this._noise = new Noise({\n            context: this.context,\n            type: \"pink\"\n        });\n        this.attackNoise = options.attackNoise;\n        this._lfcf = new LowpassCombFilter({\n            context: this.context,\n            dampening: options.dampening,\n            resonance: options.resonance,\n        });\n        this.resonance = options.resonance;\n        this.release = options.release;\n        this._noise.connect(this._lfcf);\n        this._lfcf.connect(this.output);\n    }\n    static getDefaults() {\n        return deepMerge(Instrument.getDefaults(), {\n            attackNoise: 1,\n            dampening: 4000,\n            resonance: 0.7,\n            release: 1,\n        });\n    }\n    /**\n     * The dampening control. i.e. the lowpass filter frequency of the comb filter\n     * @min 0\n     * @max 7000\n     */\n    get dampening() {\n        return this._lfcf.dampening;\n    }\n    set dampening(fq) {\n        this._lfcf.dampening = fq;\n    }\n    triggerAttack(note, time) {\n        const freq = this.toFrequency(note);\n        time = this.toSeconds(time);\n        const delayAmount = 1 / freq;\n        this._lfcf.delayTime.setValueAtTime(delayAmount, time);\n        this._noise.start(time);\n        this._noise.stop(time + delayAmount * this.attackNoise);\n        this._lfcf.resonance.cancelScheduledValues(time);\n        this._lfcf.resonance.setValueAtTime(this.resonance, time);\n        return this;\n    }\n    /**\n     * Ramp down the [[resonance]] to 0 over the duration of the release time.\n     */\n    triggerRelease(time) {\n        this._lfcf.resonance.linearRampTo(0, this.release, time);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._noise.dispose();\n        this._lfcf.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PluckSynth.js.map","import { MidiClass } from \"../core/type/Midi\";\nimport { deepMerge, omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"./Instrument\";\nimport { Synth } from \"./Synth\";\nimport { assert, warn } from \"../core/util/Debug\";\n/**\n * PolySynth handles voice creation and allocation for any\n * instruments passed in as the second paramter. PolySynth is\n * not a synthesizer by itself, it merely manages voices of\n * one of the other types of synths, allowing any of the\n * monophonic synthesizers to be polyphonic.\n *\n * @example\n * const synth = new Tone.PolySynth().toDestination();\n * // set the attributes across all the voices using 'set'\n * synth.set({ detune: -1200 });\n * // play a chord\n * synth.triggerAttackRelease([\"C4\", \"E4\", \"A4\"], 1);\n * @category Instrument\n */\nexport class PolySynth extends Instrument {\n    constructor() {\n        super(optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]));\n        this.name = \"PolySynth\";\n        /**\n         * The voices which are not currently in use\n         */\n        this._availableVoices = [];\n        /**\n         * The currently active voices\n         */\n        this._activeVoices = [];\n        /**\n         * All of the allocated voices for this synth.\n         */\n        this._voices = [];\n        /**\n         * The GC timeout. Held so that it could be cancelled when the node is disposed.\n         */\n        this._gcTimeout = -1;\n        /**\n         * A moving average of the number of active voices\n         */\n        this._averageActiveVoices = 0;\n        const options = optionsFromArguments(PolySynth.getDefaults(), arguments, [\"voice\", \"options\"]);\n        // check against the old API (pre 14.3.0)\n        assert(!isNumber(options.voice), \"DEPRECATED: The polyphony count is no longer the first argument.\");\n        const defaults = options.voice.getDefaults();\n        this.options = Object.assign(defaults, options.options);\n        this.voice = options.voice;\n        this.maxPolyphony = options.maxPolyphony;\n        // create the first voice\n        this._dummyVoice = this._getNextAvailableVoice();\n        // remove it from the voices list\n        const index = this._voices.indexOf(this._dummyVoice);\n        this._voices.splice(index, 1);\n        // kick off the GC interval\n        this._gcTimeout = this.context.setInterval(this._collectGarbage.bind(this), 1);\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            maxPolyphony: 32,\n            options: {},\n            voice: Synth,\n        });\n    }\n    /**\n     * The number of active voices.\n     */\n    get activeVoices() {\n        return this._activeVoices.length;\n    }\n    /**\n     * Invoked when the source is done making sound, so that it can be\n     * readded to the pool of available voices\n     */\n    _makeVoiceAvailable(voice) {\n        this._availableVoices.push(voice);\n        // remove the midi note from 'active voices'\n        const activeVoiceIndex = this._activeVoices.findIndex((e) => e.voice === voice);\n        this._activeVoices.splice(activeVoiceIndex, 1);\n    }\n    /**\n     * Get an available voice from the pool of available voices.\n     * If one is not available and the maxPolyphony limit is reached,\n     * steal a voice, otherwise return null.\n     */\n    _getNextAvailableVoice() {\n        // if there are available voices, return the first one\n        if (this._availableVoices.length) {\n            return this._availableVoices.shift();\n        }\n        else if (this._voices.length < this.maxPolyphony) {\n            // otherwise if there is still more maxPolyphony, make a new voice\n            const voice = new this.voice(Object.assign(this.options, {\n                context: this.context,\n                onsilence: this._makeVoiceAvailable.bind(this),\n            }));\n            voice.connect(this.output);\n            this._voices.push(voice);\n            return voice;\n        }\n        else {\n            warn(\"Max polyphony exceeded. Note dropped.\");\n        }\n    }\n    /**\n     * Occasionally check if there are any allocated voices which can be cleaned up.\n     */\n    _collectGarbage() {\n        this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);\n        if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {\n            // take off an available note\n            const firstAvail = this._availableVoices.shift();\n            const index = this._voices.indexOf(firstAvail);\n            this._voices.splice(index, 1);\n            if (!this.context.isOffline) {\n                firstAvail.dispose();\n            }\n        }\n    }\n    /**\n     * Internal method which triggers the attack\n     */\n    _triggerAttack(notes, time, velocity) {\n        notes.forEach(note => {\n            const midiNote = new MidiClass(this.context, note).toMidi();\n            const voice = this._getNextAvailableVoice();\n            if (voice) {\n                voice.triggerAttack(note, time, velocity);\n                this._activeVoices.push({\n                    midi: midiNote, voice, released: false,\n                });\n                this.log(\"triggerAttack\", note, time);\n            }\n        });\n    }\n    /**\n     * Internal method which triggers the release\n     */\n    _triggerRelease(notes, time) {\n        notes.forEach(note => {\n            const midiNote = new MidiClass(this.context, note).toMidi();\n            const event = this._activeVoices.find(({ midi, released }) => midi === midiNote && !released);\n            if (event) {\n                // trigger release on that note\n                event.voice.triggerRelease(time);\n                // mark it as released\n                event.released = true;\n                this.log(\"triggerRelease\", note, time);\n            }\n        });\n    }\n    /**\n     * Schedule the attack/release events. If the time is in the future, then it should set a timeout\n     * to wait for just-in-time scheduling\n     */\n    _scheduleEvent(type, notes, time, velocity) {\n        assert(!this.disposed, \"Synth was already disposed\");\n        // if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout\n        if (time <= this.now()) {\n            // do it immediately\n            if (type === \"attack\") {\n                this._triggerAttack(notes, time, velocity);\n            }\n            else {\n                this._triggerRelease(notes, time);\n            }\n        }\n        else {\n            // schedule it to start in the future\n            this.context.setTimeout(() => {\n                this._scheduleEvent(type, notes, time, velocity);\n            }, time - this.now());\n        }\n    }\n    /**\n     * Trigger the attack portion of the note\n     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n     * @param  time  The start time of the note.\n     * @param velocity The velocity of the note.\n     * @example\n     * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();\n     * // trigger a chord immediately with a velocity of 0.2\n     * synth.triggerAttack([\"Ab3\", \"C4\", \"F5\"], Tone.now(), 0.2);\n     */\n    triggerAttack(notes, time, velocity) {\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        const computedTime = this.toSeconds(time);\n        this._scheduleEvent(\"attack\", notes, computedTime, velocity);\n        return this;\n    }\n    /**\n     * Trigger the release of the note. Unlike monophonic instruments,\n     * a note (or array of notes) needs to be passed in as the first argument.\n     * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.\n     * @param  time  When the release will be triggered.\n     * @example\n     * @example\n     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n     * poly.triggerAttack([\"Ab3\", \"C4\", \"F5\"]);\n     * // trigger the release of the given notes.\n     * poly.triggerRelease([\"Ab3\", \"C4\"], \"+1\");\n     * poly.triggerRelease(\"F5\", \"+3\");\n     */\n    triggerRelease(notes, time) {\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        const computedTime = this.toSeconds(time);\n        this._scheduleEvent(\"release\", notes, computedTime);\n        return this;\n    }\n    /**\n     * Trigger the attack and release after the specified duration\n     * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.\n     * @param  duration the duration of the note\n     * @param  time  if no time is given, defaults to now\n     * @param  velocity the velocity of the attack (0-1)\n     * @example\n     * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();\n     * // can pass in an array of durations as well\n     * poly.triggerAttackRelease([\"Eb3\", \"G4\", \"Bb4\", \"D5\"], [4, 3, 2, 1]);\n     */\n    triggerAttackRelease(notes, duration, time, velocity) {\n        const computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            assert(isArray(notes), \"If the duration is an array, the notes must also be an array\");\n            notes = notes;\n            for (let i = 0; i < notes.length; i++) {\n                const d = duration[Math.min(i, duration.length - 1)];\n                const durationSeconds = this.toSeconds(d);\n                assert(durationSeconds > 0, \"The duration must be greater than 0\");\n                this.triggerRelease(notes[i], computedTime + durationSeconds);\n            }\n        }\n        else {\n            const durationSeconds = this.toSeconds(duration);\n            assert(durationSeconds > 0, \"The duration must be greater than 0\");\n            this.triggerRelease(notes, computedTime + durationSeconds);\n        }\n        return this;\n    }\n    sync() {\n        this._syncMethod(\"triggerAttack\", 1);\n        this._syncMethod(\"triggerRelease\", 1);\n        return this;\n    }\n    /**\n     * Set a member/attribute of the voices\n     * @example\n     * const poly = new Tone.PolySynth().toDestination();\n     * // set all of the voices using an options object for the synth type\n     * poly.set({\n     * \tenvelope: {\n     * \t\tattack: 0.25\n     * \t}\n     * });\n     * poly.triggerAttackRelease(\"Bb3\", 0.2);\n     */\n    set(options) {\n        // remove options which are controlled by the PolySynth\n        const sanitizedOptions = omitFromObject(options, [\"onsilence\", \"context\"]);\n        // store all of the options\n        this.options = deepMerge(this.options, sanitizedOptions);\n        this._voices.forEach(voice => voice.set(sanitizedOptions));\n        this._dummyVoice.set(sanitizedOptions);\n        return this;\n    }\n    get() {\n        return this._dummyVoice.get();\n    }\n    /**\n     * Trigger the release portion of all the currently active voices immediately.\n     * Useful for silencing the synth.\n     */\n    releaseAll() {\n        const now = this.now();\n        this._activeVoices.forEach(({ voice }) => {\n            voice.triggerRelease(now);\n        });\n        this._activeVoices = [];\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._dummyVoice.dispose();\n        this._voices.forEach(v => v.dispose());\n        this._activeVoices = [];\n        this._availableVoices = [];\n        this.context.clearInterval(this._gcTimeout);\n        return this;\n    }\n}\n//# sourceMappingURL=PolySynth.js.map","import { __decorate } from \"tslib\";\nimport { ToneAudioBuffers } from \"../core/context/ToneAudioBuffers\";\nimport { intervalToFrequencyRatio } from \"../core/type/Conversions\";\nimport { FrequencyClass } from \"../core/type/Frequency\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { noOp } from \"../core/util/Interface\";\nimport { isArray, isNote, isNumber } from \"../core/util/TypeCheck\";\nimport { Instrument } from \"../instrument/Instrument\";\nimport { ToneBufferSource } from \"../source/buffer/ToneBufferSource\";\nimport { timeRange } from \"../core/util/Decorator\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Pass in an object which maps the note's pitch or midi value to the url,\n * then you can trigger the attack and release of that note like other instruments.\n * By automatically repitching the samples, it is possible to play pitches which\n * were not explicitly included which can save loading time.\n *\n * For sample or buffer playback where repitching is not necessary,\n * use [[Player]].\n * @example\n * const sampler = new Tone.Sampler({\n * \turls: {\n * \t\tC1: \"C1.mp3\",\n * \t\tC2: \"C2.mp3\",\n * \t},\n * \tbaseUrl: \"https://tonejs.github.io/examples/audio/casio/\",\n * \tonload: () => {\n * \t\tsampler.triggerAttackRelease([\"C1\", \"E1\", \"G1\", \"B1\"], 0.5);\n * \t},\n * });\n * @category Instrument\n */\nexport class Sampler extends Instrument {\n    constructor() {\n        super(optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\"));\n        this.name = \"Sampler\";\n        /**\n         * The object of all currently playing BufferSources\n         */\n        this._activeSources = new Map();\n        const options = optionsFromArguments(Sampler.getDefaults(), arguments, [\"urls\", \"onload\", \"baseUrl\"], \"urls\");\n        const urlMap = {};\n        Object.keys(options.urls).forEach((note) => {\n            const noteNumber = parseInt(note, 10);\n            assert(isNote(note)\n                || (isNumber(noteNumber) && isFinite(noteNumber)), `url key is neither a note or midi pitch: ${note}`);\n            if (isNote(note)) {\n                // convert the note name to MIDI\n                const mid = new FrequencyClass(this.context, note).toMidi();\n                urlMap[mid] = options.urls[note];\n            }\n            else if (isNumber(noteNumber) && isFinite(noteNumber)) {\n                // otherwise if it's numbers assume it's midi\n                urlMap[noteNumber] = options.urls[noteNumber];\n            }\n        });\n        this._buffers = new ToneAudioBuffers({\n            urls: urlMap,\n            onload: options.onload,\n            baseUrl: options.baseUrl,\n            onerror: options.onerror,\n        });\n        this.attack = options.attack;\n        this.release = options.release;\n        this.curve = options.curve;\n        // invoke the callback if it's already loaded\n        if (this._buffers.loaded) {\n            // invoke onload deferred\n            Promise.resolve().then(options.onload);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(Instrument.getDefaults(), {\n            attack: 0,\n            baseUrl: \"\",\n            curve: \"exponential\",\n            onload: noOp,\n            onerror: noOp,\n            release: 0.1,\n            urls: {},\n        });\n    }\n    /**\n     * Returns the difference in steps between the given midi note at the closets sample.\n     */\n    _findClosest(midi) {\n        // searches within 8 octaves of the given midi note\n        const MAX_INTERVAL = 96;\n        let interval = 0;\n        while (interval < MAX_INTERVAL) {\n            // check above and below\n            if (this._buffers.has(midi + interval)) {\n                return -interval;\n            }\n            else if (this._buffers.has(midi - interval)) {\n                return interval;\n            }\n            interval++;\n        }\n        throw new Error(`No available buffers for note: ${midi}`);\n    }\n    /**\n     * @param  notes\tThe note to play, or an array of notes.\n     * @param  time     When to play the note\n     * @param  velocity The velocity to play the sample back.\n     */\n    triggerAttack(notes, time, velocity = 1) {\n        this.log(\"triggerAttack\", notes, time, velocity);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(note => {\n            const midi = new FrequencyClass(this.context, note).toMidi();\n            // find the closest note pitch\n            const difference = this._findClosest(midi);\n            const closestNote = midi - difference;\n            const buffer = this._buffers.get(closestNote);\n            const playbackRate = intervalToFrequencyRatio(difference);\n            // play that note\n            const source = new ToneBufferSource({\n                url: buffer,\n                context: this.context,\n                curve: this.curve,\n                fadeIn: this.attack,\n                fadeOut: this.release,\n                playbackRate,\n            }).connect(this.output);\n            source.start(time, 0, buffer.duration / playbackRate, velocity);\n            // add it to the active sources\n            if (!isArray(this._activeSources.get(midi))) {\n                this._activeSources.set(midi, []);\n            }\n            this._activeSources.get(midi).push(source);\n            // remove it when it's done\n            source.onended = () => {\n                if (this._activeSources && this._activeSources.has(midi)) {\n                    const sources = this._activeSources.get(midi);\n                    const index = sources.indexOf(source);\n                    if (index !== -1) {\n                        sources.splice(index, 1);\n                    }\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * @param  notes\tThe note to release, or an array of notes.\n     * @param  time     \tWhen to release the note.\n     */\n    triggerRelease(notes, time) {\n        this.log(\"triggerRelease\", notes, time);\n        if (!Array.isArray(notes)) {\n            notes = [notes];\n        }\n        notes.forEach(note => {\n            const midi = new FrequencyClass(this.context, note).toMidi();\n            // find the note\n            if (this._activeSources.has(midi) && this._activeSources.get(midi).length) {\n                const sources = this._activeSources.get(midi);\n                time = this.toSeconds(time);\n                sources.forEach(source => {\n                    source.stop(time);\n                });\n                this._activeSources.set(midi, []);\n            }\n        });\n        return this;\n    }\n    /**\n     * Release all currently active notes.\n     * @param  time     \tWhen to release the notes.\n     */\n    releaseAll(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeSources.forEach(sources => {\n            while (sources.length) {\n                const source = sources.shift();\n                source.stop(computedTime);\n            }\n        });\n        return this;\n    }\n    sync() {\n        this._syncMethod(\"triggerAttack\", 1);\n        this._syncMethod(\"triggerRelease\", 1);\n        return this;\n    }\n    /**\n     * Invoke the attack phase, then after the duration, invoke the release.\n     * @param  notes\tThe note to play and release, or an array of notes.\n     * @param  duration The time the note should be held\n     * @param  time     When to start the attack\n     * @param  velocity The velocity of the attack\n     */\n    triggerAttackRelease(notes, duration, time, velocity = 1) {\n        const computedTime = this.toSeconds(time);\n        this.triggerAttack(notes, computedTime, velocity);\n        if (isArray(duration)) {\n            assert(isArray(notes), \"notes must be an array when duration is array\");\n            notes.forEach((note, index) => {\n                const d = duration[Math.min(index, duration.length - 1)];\n                this.triggerRelease(note, computedTime + this.toSeconds(d));\n            });\n        }\n        else {\n            this.triggerRelease(notes, computedTime + this.toSeconds(duration));\n        }\n        return this;\n    }\n    /**\n     * Add a note to the sampler.\n     * @param  note      The buffer's pitch.\n     * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.\n     * @param  callback  The callback to invoke when the url is loaded.\n     */\n    add(note, url, callback) {\n        assert(isNote(note) || isFinite(note), `note must be a pitch or midi: ${note}`);\n        if (isNote(note)) {\n            // convert the note name to MIDI\n            const mid = new FrequencyClass(this.context, note).toMidi();\n            this._buffers.add(mid, url, callback);\n        }\n        else {\n            // otherwise if it's numbers assume it's midi\n            this._buffers.add(note, url, callback);\n        }\n        return this;\n    }\n    /**\n     * If the buffers are loaded or not\n     */\n    get loaded() {\n        return this._buffers.loaded;\n    }\n    /**\n     * Clean up\n     */\n    dispose() {\n        super.dispose();\n        this._buffers.dispose();\n        this._activeSources.forEach(sources => {\n            sources.forEach(source => source.dispose());\n        });\n        this._activeSources.clear();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Sampler.prototype, \"attack\", void 0);\n__decorate([\n    timeRange(0)\n], Sampler.prototype, \"release\", void 0);\n//# sourceMappingURL=Sampler.js.map","import { AmplitudeEnvelope } from \"../component/envelope/AmplitudeEnvelope\";\nimport { Envelope } from \"../component/envelope/Envelope\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { omitFromObject, optionsFromArguments } from \"../core/util/Defaults\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { OmniOscillator } from \"../source/oscillator/OmniOscillator\";\nimport { Source } from \"../source/Source\";\nimport { Monophonic } from \"./Monophonic\";\n/**\n * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].\n * ```\n * +----------------+   +-------------------+\n * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output\n * +----------------+   +-------------------+\n * ```\n * @example\n * const synth = new Tone.Synth().toDestination();\n * synth.triggerAttackRelease(\"C4\", \"8n\");\n * @category Instrument\n */\nexport class Synth extends Monophonic {\n    constructor() {\n        super(optionsFromArguments(Synth.getDefaults(), arguments));\n        this.name = \"Synth\";\n        const options = optionsFromArguments(Synth.getDefaults(), arguments);\n        this.oscillator = new OmniOscillator(Object.assign({\n            context: this.context,\n            detune: options.detune,\n            onstop: () => this.onsilence(this),\n        }, options.oscillator));\n        this.frequency = this.oscillator.frequency;\n        this.detune = this.oscillator.detune;\n        this.envelope = new AmplitudeEnvelope(Object.assign({\n            context: this.context,\n        }, options.envelope));\n        // connect the oscillators to the output\n        this.oscillator.chain(this.envelope, this.output);\n        readOnly(this, [\"oscillator\", \"frequency\", \"detune\", \"envelope\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Monophonic.getDefaults(), {\n            envelope: Object.assign(omitFromObject(Envelope.getDefaults(), Object.keys(ToneAudioNode.getDefaults())), {\n                attack: 0.005,\n                decay: 0.1,\n                release: 1,\n                sustain: 0.3,\n            }),\n            oscillator: Object.assign(omitFromObject(OmniOscillator.getDefaults(), [...Object.keys(Source.getDefaults()), \"frequency\", \"detune\"]), {\n                type: \"triangle\",\n            }),\n        });\n    }\n    /**\n     * start the attack portion of the envelope\n     * @param time the time the attack should start\n     * @param velocity the velocity of the note (0-1)\n     */\n    _triggerEnvelopeAttack(time, velocity) {\n        // the envelopes\n        this.envelope.triggerAttack(time, velocity);\n        this.oscillator.start(time);\n        // if there is no release portion, stop the oscillator\n        if (this.envelope.sustain === 0) {\n            const computedAttack = this.toSeconds(this.envelope.attack);\n            const computedDecay = this.toSeconds(this.envelope.decay);\n            this.oscillator.stop(time + computedAttack + computedDecay);\n        }\n    }\n    /**\n     * start the release portion of the envelope\n     * @param time the time the release should start\n     */\n    _triggerEnvelopeRelease(time) {\n        this.envelope.triggerRelease(time);\n        this.oscillator.stop(time + this.toSeconds(this.envelope.release));\n    }\n    getLevelAtTime(time) {\n        time = this.toSeconds(time);\n        return this.envelope.getValueAtTime(time);\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this.oscillator.dispose();\n        this.envelope.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Synth.js.map","export * from \"./AMSynth\";\nexport * from \"./DuoSynth\";\nexport * from \"./FMSynth\";\nexport * from \"./MetalSynth\";\nexport * from \"./MembraneSynth\";\nexport * from \"./MonoSynth\";\nexport * from \"./NoiseSynth\";\nexport * from \"./PluckSynth\";\nexport * from \"./PolySynth\";\nexport * from \"./Sampler\";\nexport * from \"./Synth\";\n//# sourceMappingURL=index.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * Return the absolute value of an incoming signal.\n *\n * @offline 0.5 1\n * @example\n * const abs = new Tone.Abs().toDestination();\n * const signal = new Tone.Signal(1);\n * signal.rampTo(-1, 0.5);\n * signal.connect(abs);\n * @category Signal\n */\nexport class Abs extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"Abs\";\n        /**\n         * The node which converts the audio ranges\n         */\n        this._abs = new WaveShaper({\n            context: this.context,\n            mapping: val => {\n                if (Math.abs(val) < 0.001) {\n                    return 0;\n                }\n                else {\n                    return Math.abs(val);\n                }\n            },\n        });\n        /**\n         * The AudioRange input [-1, 1]\n         */\n        this.input = this._abs;\n        /**\n         * The output range [0, 1]\n         */\n        this.output = this._abs;\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._abs.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Abs.js.map","import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Add a signal and a number or two signals. When no value is\n * passed into the constructor, Tone.Add will sum input and `addend`\n * If a value is passed into the constructor, the it will be added to the input.\n *\n * @offline 0.5 1\n * @example\n * const add = new Tone.Add(2).toDestination();\n * add.addend.setValueAtTime(1, 0.2);\n * const signal = new Tone.Signal(2);\n * // add a signal and a scalar\n * signal.connect(add);\n * signal.setValueAtTime(1, 0.1);\n * @category Signal\n */\nexport class Add extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Add.getDefaults(), arguments, [\"value\"])));\n        this.override = false;\n        this.name = \"Add\";\n        /**\n         * the summing node\n         */\n        this._sum = new Gain({ context: this.context });\n        this.input = this._sum;\n        this.output = this._sum;\n        /**\n         * The value which is added to the input signal\n         */\n        this.addend = this._param;\n        connectSeries(this._constantSource, this._sum);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._sum.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Add.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].\n * See [[GainToAudio]].\n * @category Signal\n */\nexport class AudioToGain extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"AudioToGain\";\n        /**\n         * The node which converts the audio ranges\n         */\n        this._norm = new WaveShaper({\n            context: this.context,\n            mapping: x => (x + 1) / 2,\n        });\n        /**\n         * The AudioRange input [-1, 1]\n         */\n        this.input = this._norm;\n        /**\n         * The GainRange output [0, 1]\n         */\n        this.output = this._norm;\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._norm.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AudioToGain.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { WaveShaper } from \"./WaveShaper\";\n/**\n * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].\n * See [[AudioToGain]].\n * @category Signal\n */\nexport class GainToAudio extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"GainToAudio\";\n        /**\n         * The node which converts the audio ranges\n         */\n        this._norm = new WaveShaper({\n            context: this.context,\n            mapping: x => Math.abs(x) * 2 - 1,\n        });\n        /**\n         * The NormalRange input [0, 1]\n         */\n        this.input = this._norm;\n        /**\n         * The AudioRange output [-1, 1]\n         */\n        this.output = this._norm;\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        this._norm.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=GainToAudio.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Subtract } from \"./Subtract\";\nimport { Signal } from \"./Signal\";\nimport { GreaterThanZero } from \"./GreaterThanZero\";\nimport { readOnly } from \"../core/util/Interface\";\n/**\n * Output 1 if the signal is greater than the value, otherwise outputs 0.\n * can compare two signals or a signal and a number.\n *\n * @offline 0.1 1\n * @example\n * const gt = new Tone.GreaterThan(2).toDestination();\n * const sig = new Tone.Signal(4).connect(gt);\n */\nexport class GreaterThan extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"])));\n        this.name = \"GreaterThan\";\n        this.override = false;\n        const options = optionsFromArguments(GreaterThan.getDefaults(), arguments, [\"value\"]);\n        this._subtract = this.input = new Subtract({\n            context: this.context,\n            value: options.value\n        });\n        this._gtz = this.output = new GreaterThanZero({ context: this.context });\n        this.comparator = this._param = this._subtract.subtrahend;\n        readOnly(this, \"comparator\");\n        // connect\n        this._subtract.connect(this._gtz);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._gtz.dispose();\n        this._subtract.dispose();\n        this.comparator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=GreaterThan.js.map","import { SignalOperator } from \"./SignalOperator\";\nimport { Multiply } from \"./Multiply\";\nimport { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\n/**\n * GreaterThanZero outputs 1 when the input is strictly greater than zero\n * @offline 0.1 1\n * @example\n * const gt0 = new Tone.GreaterThanZero().toDestination();\n * const sig = new Tone.Signal(0.5).connect(gt0);\n * sig.setValueAtTime(-1, 0.05);\n */\nexport class GreaterThanZero extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(GreaterThanZero.getDefaults(), arguments)));\n        this.name = \"GreaterThanZero\";\n        this._thresh = this.output = new WaveShaper({\n            context: this.context,\n            length: 127,\n            mapping: (val) => {\n                if (val <= 0) {\n                    return 0;\n                }\n                else {\n                    return 1;\n                }\n            },\n        });\n        this._scale = this.input = new Multiply({\n            context: this.context,\n            value: 10000\n        });\n        // connections\n        this._scale.connect(this._thresh);\n    }\n    dispose() {\n        super.dispose();\n        this._scale.dispose();\n        this._thresh.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=GreaterThanZero.js.map","import { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Signal } from \"./Signal\";\n/**\n * Multiply two incoming signals. Or, if a number is given in the constructor,\n * multiplies the incoming signal by that value.\n *\n * @example\n * // multiply two signals\n * const mult = new Tone.Multiply();\n * const sigA = new Tone.Signal(3);\n * const sigB = new Tone.Signal(4);\n * sigA.connect(mult);\n * sigB.connect(mult.factor);\n * // output of mult is 12.\n * @example\n * // multiply a signal and a number\n * const mult = new Tone.Multiply(10);\n * const sig = new Tone.Signal(2).connect(mult);\n * // the output of mult is 20.\n * @category Signal\n */\nexport class Multiply extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"])));\n        this.name = \"Multiply\";\n        /**\n         * Indicates if the value should be overridden on connection\n         */\n        this.override = false;\n        const options = optionsFromArguments(Multiply.getDefaults(), arguments, [\"value\"]);\n        this._mult = this.input = this.output = new Gain({\n            context: this.context,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        this.factor = this._param = this._mult.gain;\n        this.factor.setValueAtTime(options.value, 0);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._mult.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Multiply.js.map","import { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Negate the incoming signal. i.e. an input signal of 10 will output -10\n *\n * @example\n * const neg = new Tone.Negate();\n * const sig = new Tone.Signal(-2).connect(neg);\n * // output of neg is positive 2.\n * @category Signal\n */\nexport class Negate extends SignalOperator {\n    constructor() {\n        super(...arguments);\n        this.name = \"Negate\";\n        /**\n         * negation is done by multiplying by -1\n         */\n        this._multiply = new Multiply({\n            context: this.context,\n            value: -1,\n        });\n        /**\n         * The input and output are equal to the multiply node\n         */\n        this.input = this._multiply;\n        this.output = this._multiply;\n    }\n    /**\n     * clean up\n     * @returns {Negate} this\n     */\n    dispose() {\n        super.dispose();\n        this._multiply.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Negate.js.map","import { WaveShaper } from \"./WaveShaper\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]\n *\n * @example\n * const pow = new Tone.Pow(2);\n * const sig = new Tone.Signal(0.5).connect(pow);\n * // output of pow is 0.25.\n * @category Signal\n */\nexport class Pow extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"])));\n        this.name = \"Pow\";\n        const options = optionsFromArguments(Pow.getDefaults(), arguments, [\"value\"]);\n        this._exponentScaler = this.input = this.output = new WaveShaper({\n            context: this.context,\n            mapping: this._expFunc(options.value),\n            length: 8192,\n        });\n        this._exponent = options.value;\n    }\n    static getDefaults() {\n        return Object.assign(SignalOperator.getDefaults(), {\n            value: 1,\n        });\n    }\n    /**\n     * the function which maps the waveshaper\n     * @param exponent exponent value\n     */\n    _expFunc(exponent) {\n        return (val) => {\n            return Math.pow(Math.abs(val), exponent);\n        };\n    }\n    /**\n     * The value of the exponent.\n     */\n    get value() {\n        return this._exponent;\n    }\n    set value(exponent) {\n        this._exponent = exponent;\n        this._exponentScaler.setMap(this._expFunc(this._exponent));\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._exponentScaler.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Pow.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Add } from \"./Add\";\nimport { Multiply } from \"./Multiply\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Performs a linear scaling on an input signal.\n * Scales a NormalRange input to between\n * outputMin and outputMax.\n *\n * @example\n * const scale = new Tone.Scale(50, 100);\n * const signal = new Tone.Signal(0.5).connect(scale);\n * // the output of scale equals 75\n * @category Signal\n */\nexport class Scale extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"])));\n        this.name = \"Scale\";\n        const options = optionsFromArguments(Scale.getDefaults(), arguments, [\"min\", \"max\"]);\n        this._mult = this.input = new Multiply({\n            context: this.context,\n            value: options.max - options.min,\n        });\n        this._add = this.output = new Add({\n            context: this.context,\n            value: options.min,\n        });\n        this._min = options.min;\n        this._max = options.max;\n        this.input.connect(this.output);\n    }\n    static getDefaults() {\n        return Object.assign(SignalOperator.getDefaults(), {\n            max: 1,\n            min: 0,\n        });\n    }\n    /**\n     * The minimum output value. This number is output when the value input value is 0.\n     */\n    get min() {\n        return this._min;\n    }\n    set min(min) {\n        this._min = min;\n        this._setRange();\n    }\n    /**\n     * The maximum output value. This number is output when the value input value is 1.\n     */\n    get max() {\n        return this._max;\n    }\n    set max(max) {\n        this._max = max;\n        this._setRange();\n    }\n    /**\n     * set the values\n     */\n    _setRange() {\n        this._add.value = this._min;\n        this._mult.value = this._max - this._min;\n    }\n    dispose() {\n        super.dispose();\n        this._add.dispose();\n        this._mult.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Scale.js.map","import { Scale } from \"./Scale\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Pow } from \"./Pow\";\n/**\n * Performs an exponential scaling on an input signal.\n * Scales a NormalRange value [0,1] exponentially\n * to the output range of outputMin to outputMax.\n * @example\n * const scaleExp = new Tone.ScaleExp(0, 100, 2);\n * const signal = new Tone.Signal(0.5).connect(scaleExp);\n */\nexport class ScaleExp extends Scale {\n    constructor() {\n        super(Object.assign(optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"])));\n        this.name = \"ScaleExp\";\n        const options = optionsFromArguments(ScaleExp.getDefaults(), arguments, [\"min\", \"max\", \"exponent\"]);\n        this.input = this._exp = new Pow({\n            context: this.context,\n            value: options.exponent,\n        });\n        this._exp.connect(this._mult);\n    }\n    static getDefaults() {\n        return Object.assign(Scale.getDefaults(), {\n            exponent: 1,\n        });\n    }\n    /**\n     * Instead of interpolating linearly between the [[min]] and\n     * [[max]] values, setting the exponent will interpolate between\n     * the two values with an exponential curve.\n     */\n    get exponent() {\n        return this._exp.value;\n    }\n    set exponent(exp) {\n        this._exp.value = exp;\n    }\n    dispose() {\n        super.dispose();\n        this._exp.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ScaleExp.js.map","import { Param } from \"../core/context/Param\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connect } from \"../core/context/ToneAudioNode\";\nimport { isAudioParam } from \"../core/util/AdvancedTypeCheck\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * A signal is an audio-rate value. Tone.Signal is a core component of the library.\n * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal\n * has all of the methods available to native Web Audio\n * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)\n * as well as additional conveniences. Read more about working with signals\n * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // a scheduleable signal which can be connected to control an AudioParam or another Signal\n * const signal = new Tone.Signal({\n * \tvalue: \"C4\",\n * \tunits: \"frequency\"\n * }).connect(osc.frequency);\n * // the scheduled ramp controls the connected signal\n * signal.rampTo(\"C2\", 4, \"+0.5\");\n * @category Signal\n */\nexport class Signal extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n        this.name = \"Signal\";\n        /**\n         * Indicates if the value should be overridden on connection.\n         */\n        this.override = true;\n        const options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n        this.output = this._constantSource = new ToneConstantSource({\n            context: this.context,\n            convert: options.convert,\n            offset: options.value,\n            units: options.units,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n        this._constantSource.start(0);\n        this.input = this._param = this._constantSource.offset;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            convert: true,\n            units: \"number\",\n            value: 0,\n        });\n    }\n    connect(destination, outputNum = 0, inputNum = 0) {\n        // start it only when connected to something\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._param.dispose();\n        this._constantSource.dispose();\n        return this;\n    }\n    //-------------------------------------\n    // ABSTRACT PARAM INTERFACE\n    // just a proxy for the ConstantSourceNode's offset AudioParam\n    // all docs are generated from AbstractParam.ts\n    //-------------------------------------\n    setValueAtTime(value, time) {\n        this._param.setValueAtTime(value, time);\n        return this;\n    }\n    getValueAtTime(time) {\n        return this._param.getValueAtTime(time);\n    }\n    setRampPoint(time) {\n        this._param.setRampPoint(time);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        this._param.linearRampToValueAtTime(value, time);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        this._param.exponentialRampToValueAtTime(value, time);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        this._param.exponentialRampTo(value, rampTime, startTime);\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        this._param.linearRampTo(value, rampTime, startTime);\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        this._param.targetRampTo(value, rampTime, startTime);\n        return this;\n    }\n    exponentialApproachValueAtTime(value, time, rampTime) {\n        this._param.exponentialApproachValueAtTime(value, time, rampTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        this._param.setTargetAtTime(value, startTime, timeConstant);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling) {\n        this._param.setValueCurveAtTime(values, startTime, duration, scaling);\n        return this;\n    }\n    cancelScheduledValues(time) {\n        this._param.cancelScheduledValues(time);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        this._param.cancelAndHoldAtTime(time);\n        return this;\n    }\n    rampTo(value, rampTime, startTime) {\n        this._param.rampTo(value, rampTime, startTime);\n        return this;\n    }\n    get value() {\n        return this._param.value;\n    }\n    set value(value) {\n        this._param.value = value;\n    }\n    get convert() {\n        return this._param.convert;\n    }\n    set convert(convert) {\n        this._param.convert = convert;\n    }\n    get units() {\n        return this._param.units;\n    }\n    get overridden() {\n        return this._param.overridden;\n    }\n    set overridden(overridden) {\n        this._param.overridden = overridden;\n    }\n    get maxValue() {\n        return this._param.maxValue;\n    }\n    get minValue() {\n        return this._param.minValue;\n    }\n    /**\n     * See [[Param.apply]].\n     */\n    apply(param) {\n        this._param.apply(param);\n        return this;\n    }\n}\n/**\n * When connecting from a signal, it's necessary to zero out the node destination\n * node if that node is also a signal. If the destination is not 0, then the values\n * will be summed. This method insures that the output of the destination signal will\n * be the same as the source signal, making the destination signal a pass through node.\n * @param signal The output signal to connect from\n * @param destination the destination to connect to\n * @param outputNum the optional output number\n * @param inputNum the input number\n */\nexport function connectSignal(signal, destination, outputNum, inputNum) {\n    if (destination instanceof Param || isAudioParam(destination) ||\n        (destination instanceof Signal && destination.override)) {\n        // cancel changes\n        destination.cancelScheduledValues(0);\n        // reset the value\n        destination.setValueAtTime(0, 0);\n        // mark the value as overridden\n        if (destination instanceof Signal) {\n            destination.overridden = true;\n        }\n    }\n    connect(signal, destination, outputNum, inputNum);\n}\n//# sourceMappingURL=Signal.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { connectSignal } from \"./Signal\";\n/**\n * A signal operator has an input and output and modifies the signal.\n */\nexport class SignalOperator extends ToneAudioNode {\n    constructor() {\n        super(Object.assign(optionsFromArguments(SignalOperator.getDefaults(), arguments, [\"context\"])));\n    }\n    connect(destination, outputNum = 0, inputNum = 0) {\n        connectSignal(this, destination, outputNum, inputNum);\n        return this;\n    }\n}\n//# sourceMappingURL=SignalOperator.js.map","import { connectSeries } from \"../core/context/ToneAudioNode\";\nimport { Gain } from \"../core/context/Gain\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { Negate } from \"../signal/Negate\";\nimport { Signal } from \"../signal/Signal\";\n/**\n * Subtract the signal connected to the input is subtracted from the signal connected\n * The subtrahend.\n *\n * @example\n * // subtract a scalar from a signal\n * const sub = new Tone.Subtract(1);\n * const sig = new Tone.Signal(4).connect(sub);\n * // the output of sub is 3.\n * @example\n * // subtract two signals\n * const sub = new Tone.Subtract();\n * const sigA = new Tone.Signal(10);\n * const sigB = new Tone.Signal(2.5);\n * sigA.connect(sub);\n * sigB.connect(sub.subtrahend);\n * // output of sub is 7.5\n * @category Signal\n */\nexport class Subtract extends Signal {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Subtract.getDefaults(), arguments, [\"value\"])));\n        this.override = false;\n        this.name = \"Subtract\";\n        /**\n         * the summing node\n         */\n        this._sum = new Gain({ context: this.context });\n        this.input = this._sum;\n        this.output = this._sum;\n        /**\n         * Negate the input of the second input before connecting it to the summing node.\n         */\n        this._neg = new Negate({ context: this.context });\n        /**\n         * The value which is subtracted from the main signal\n         */\n        this.subtrahend = this._param;\n        connectSeries(this._constantSource, this._neg, this._sum);\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            value: 0,\n        });\n    }\n    dispose() {\n        super.dispose();\n        this._neg.dispose();\n        this._sum.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Subtract.js.map","import { Signal } from \"./Signal\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { TransportTimeClass } from \"../core/type/TransportTime\";\nimport { ToneConstantSource } from \"./ToneConstantSource\";\n/**\n * Adds the ability to synchronize the signal to the [[Transport]]\n */\nexport class SyncedSignal extends Signal {\n    constructor() {\n        super(optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]));\n        this.name = \"SyncedSignal\";\n        /**\n         * Don't override when something is connected to the input\n         */\n        this.override = false;\n        const options = optionsFromArguments(Signal.getDefaults(), arguments, [\"value\", \"units\"]);\n        this._lastVal = options.value;\n        this._synced = this.context.transport.scheduleRepeat(this._onTick.bind(this), \"1i\");\n        this._syncedCallback = this._anchorValue.bind(this);\n        this.context.transport.on(\"start\", this._syncedCallback);\n        this.context.transport.on(\"pause\", this._syncedCallback);\n        this.context.transport.on(\"stop\", this._syncedCallback);\n        // disconnect the constant source from the output and replace it with another one\n        this._constantSource.disconnect();\n        this._constantSource.stop(0);\n        // create a new one\n        this._constantSource = this.output = new ToneConstantSource({\n            context: this.context,\n            offset: options.value,\n            units: options.units,\n        }).start(0);\n        this.setValueAtTime(options.value, 0);\n    }\n    /**\n     * Callback which is invoked every tick.\n     */\n    _onTick(time) {\n        const val = super.getValueAtTime(this.context.transport.seconds);\n        // approximate ramp curves with linear ramps\n        if (this._lastVal !== val) {\n            this._lastVal = val;\n            this._constantSource.offset.setValueAtTime(val, time);\n        }\n    }\n    /**\n     * Anchor the value at the start and stop of the Transport\n     */\n    _anchorValue(time) {\n        const val = super.getValueAtTime(this.context.transport.seconds);\n        this._lastVal = val;\n        this._constantSource.offset.cancelAndHoldAtTime(time);\n        this._constantSource.offset.setValueAtTime(val, time);\n    }\n    getValueAtTime(time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        return super.getValueAtTime(computedTime);\n    }\n    setValueAtTime(value, time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        super.setValueAtTime(value, computedTime);\n        return this;\n    }\n    linearRampToValueAtTime(value, time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        super.linearRampToValueAtTime(value, computedTime);\n        return this;\n    }\n    exponentialRampToValueAtTime(value, time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        super.exponentialRampToValueAtTime(value, computedTime);\n        return this;\n    }\n    setTargetAtTime(value, startTime, timeConstant) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        super.setTargetAtTime(value, computedTime, timeConstant);\n        return this;\n    }\n    cancelScheduledValues(startTime) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        super.cancelScheduledValues(computedTime);\n        return this;\n    }\n    setValueCurveAtTime(values, startTime, duration, scaling) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        duration = this.toSeconds(duration);\n        super.setValueCurveAtTime(values, computedTime, duration, scaling);\n        return this;\n    }\n    cancelAndHoldAtTime(time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        super.cancelAndHoldAtTime(computedTime);\n        return this;\n    }\n    setRampPoint(time) {\n        const computedTime = new TransportTimeClass(this.context, time).toSeconds();\n        super.setRampPoint(computedTime);\n        return this;\n    }\n    exponentialRampTo(value, rampTime, startTime) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        super.exponentialRampTo(value, rampTime, computedTime);\n        return this;\n    }\n    linearRampTo(value, rampTime, startTime) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        super.linearRampTo(value, rampTime, computedTime);\n        return this;\n    }\n    targetRampTo(value, rampTime, startTime) {\n        const computedTime = new TransportTimeClass(this.context, startTime).toSeconds();\n        super.targetRampTo(value, rampTime, computedTime);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this.context.transport.clear(this._synced);\n        this.context.transport.off(\"start\", this._syncedCallback);\n        this.context.transport.off(\"pause\", this._syncedCallback);\n        this.context.transport.off(\"stop\", this._syncedCallback);\n        this._constantSource.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=SyncedSignal.js.map","import { connect } from \"../core/context/ToneAudioNode\";\nimport { Param } from \"../core/context/Param\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { OneShotSource } from \"../source/OneShotSource\";\n/**\n * Wrapper around the native fire-and-forget ConstantSource.\n * Adds the ability to reschedule the stop method.\n * @category Signal\n */\nexport class ToneConstantSource extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]));\n        this.name = \"ToneConstantSource\";\n        /**\n         * The signal generator\n         */\n        this._source = this.context.createConstantSource();\n        const options = optionsFromArguments(ToneConstantSource.getDefaults(), arguments, [\"offset\"]);\n        connect(this._source, this._gainNode);\n        this.offset = new Param({\n            context: this.context,\n            convert: options.convert,\n            param: this._source.offset,\n            units: options.units,\n            value: options.offset,\n            minValue: options.minValue,\n            maxValue: options.maxValue,\n        });\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            convert: true,\n            offset: 1,\n            units: \"number\",\n        });\n    }\n    /**\n     * Start the source node at the given time\n     * @param  time When to start the source\n     */\n    start(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._source.start(computedTime);\n        return this;\n    }\n    _stopSource(time) {\n        this._source.stop(time);\n    }\n    dispose() {\n        super.dispose();\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._source.disconnect();\n        this.offset.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneConstantSource.js.map","import { optionsFromArguments } from \"../core/util/Defaults\";\nimport { isArray, isFunction } from \"../core/util/TypeCheck\";\nimport { assert } from \"../core/util/Debug\";\nimport { Signal } from \"./Signal\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Wraps the native Web Audio API\n * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).\n *\n * @example\n * const osc = new Tone.Oscillator().toDestination().start();\n * // multiply the output of the signal by 2 using the waveshaper's function\n * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);\n * const signal = new Tone.Signal(440).connect(timesTwo);\n * @category Signal\n */\nexport class WaveShaper extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"])));\n        this.name = \"WaveShaper\";\n        /**\n         * the waveshaper node\n         */\n        this._shaper = this.context.createWaveShaper();\n        /**\n         * The input to the waveshaper node.\n         */\n        this.input = this._shaper;\n        /**\n         * The output from the waveshaper node\n         */\n        this.output = this._shaper;\n        const options = optionsFromArguments(WaveShaper.getDefaults(), arguments, [\"mapping\", \"length\"]);\n        if (isArray(options.mapping) || options.mapping instanceof Float32Array) {\n            this.curve = Float32Array.from(options.mapping);\n        }\n        else if (isFunction(options.mapping)) {\n            this.setMap(options.mapping, options.length);\n        }\n    }\n    static getDefaults() {\n        return Object.assign(Signal.getDefaults(), {\n            length: 1024,\n        });\n    }\n    /**\n     * Uses a mapping function to set the value of the curve.\n     * @param mapping The function used to define the values.\n     *                The mapping function take two arguments:\n     *                the first is the value at the current position\n     *                which goes from -1 to 1 over the number of elements\n     *                in the curve array. The second argument is the array position.\n     * @example\n     * const shaper = new Tone.WaveShaper();\n     * // map the input signal from [-1, 1] to [0, 10]\n     * shaper.setMap((val, index) => (val + 1) * 5);\n     */\n    setMap(mapping, length = 1024) {\n        const array = new Float32Array(length);\n        for (let i = 0, len = length; i < len; i++) {\n            const normalized = (i / (len - 1)) * 2 - 1;\n            array[i] = mapping(normalized, i);\n        }\n        this.curve = array;\n        return this;\n    }\n    /**\n     * The array to set as the waveshaper curve. For linear curves\n     * array length does not make much difference, but for complex curves\n     * longer arrays will provide smoother interpolation.\n     */\n    get curve() {\n        return this._shaper.curve;\n    }\n    set curve(mapping) {\n        this._shaper.curve = mapping;\n    }\n    /**\n     * Specifies what type of oversampling (if any) should be used when\n     * applying the shaping curve. Can either be \"none\", \"2x\" or \"4x\".\n     */\n    get oversample() {\n        return this._shaper.oversample;\n    }\n    set oversample(oversampling) {\n        const isOverSampleType = [\"none\", \"2x\", \"4x\"].some(str => str.includes(oversampling));\n        assert(isOverSampleType, \"oversampling must be either 'none', '2x', or '4x'\");\n        this._shaper.oversample = oversampling;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._shaper.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=WaveShaper.js.map","import { Gain } from \"../core/context/Gain\";\nimport { connect, disconnect } from \"../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { SignalOperator } from \"./SignalOperator\";\n/**\n * Tone.Zero outputs 0's at audio-rate. The reason this has to be\n * it's own class is that many browsers optimize out Tone.Signal\n * with a value of 0 and will not process nodes further down the graph.\n * @category Signal\n */\nexport class Zero extends SignalOperator {\n    constructor() {\n        super(Object.assign(optionsFromArguments(Zero.getDefaults(), arguments)));\n        this.name = \"Zero\";\n        /**\n         * The gain node which connects the constant source to the output\n         */\n        this._gain = new Gain({ context: this.context });\n        /**\n         * Only outputs 0\n         */\n        this.output = this._gain;\n        /**\n         * no input node\n         */\n        this.input = undefined;\n        connect(this.context.getConstant(0), this._gain);\n    }\n    /**\n     * clean up\n     */\n    dispose() {\n        super.dispose();\n        disconnect(this.context.getConstant(0), this._gain);\n        return this;\n    }\n}\n//# sourceMappingURL=Zero.js.map","export * from \"./Add\";\nexport * from \"./Abs\";\nexport * from \"./AudioToGain\";\nexport * from \"./GainToAudio\";\nexport * from \"./GreaterThan\";\nexport * from \"./GreaterThanZero\";\nexport * from \"./Multiply\";\nexport * from \"./Negate\";\nexport * from \"./Pow\";\nexport * from \"./Signal\";\nexport * from \"./Scale\";\nexport * from \"./ScaleExp\";\nexport * from \"./Subtract\";\nexport * from \"./SyncedSignal\";\nexport * from \"./WaveShaper\";\nexport * from \"./Zero\";\n//# sourceMappingURL=index.js.map","import { ToneAudioBuffer } from \"../core/context/ToneAudioBuffer\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { Source } from \"../source/Source\";\nimport { ToneBufferSource } from \"./buffer/ToneBufferSource\";\n/**\n * Noise is a noise generator. It uses looped noise buffers to save on performance.\n * Noise supports the noise types: \"pink\", \"white\", and \"brown\". Read more about\n * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).\n *\n * @example\n * // initialize the noise and start\n * const noise = new Tone.Noise(\"pink\").start();\n * // make an autofilter to shape the noise\n * const autoFilter = new Tone.AutoFilter({\n * \tfrequency: \"8n\",\n * \tbaseFrequency: 200,\n * \toctaves: 8\n * }).toDestination().start();\n * // connect the noise\n * noise.connect(autoFilter);\n * // start the autofilter LFO\n * autoFilter.start();\n * @category Source\n */\nexport class Noise extends Source {\n    constructor() {\n        super(optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]));\n        this.name = \"Noise\";\n        /**\n         * Private reference to the source\n         */\n        this._source = null;\n        const options = optionsFromArguments(Noise.getDefaults(), arguments, [\"type\"]);\n        this._playbackRate = options.playbackRate;\n        this.type = options.type;\n        this._fadeIn = options.fadeIn;\n        this._fadeOut = options.fadeOut;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            fadeIn: 0,\n            fadeOut: 0,\n            playbackRate: 1,\n            type: \"white\",\n        });\n    }\n    /**\n     * The type of the noise. Can be \"white\", \"brown\", or \"pink\".\n     * @example\n     * const noise = new Tone.Noise().toDestination().start();\n     * noise.type = \"brown\";\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        assert(type in _noiseBuffers, \"Noise: invalid type: \" + type);\n        if (this._type !== type) {\n            this._type = type;\n            // if it's playing, stop and restart it\n            if (this.state === \"started\") {\n                const now = this.now();\n                this._stop(now);\n                this._start(now);\n            }\n        }\n    }\n    /**\n     * The playback rate of the noise. Affects\n     * the \"frequency\" of the noise.\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        if (this._source) {\n            this._source.playbackRate.value = rate;\n        }\n    }\n    /**\n     * internal start method\n     */\n    _start(time) {\n        const buffer = _noiseBuffers[this._type];\n        this._source = new ToneBufferSource({\n            url: buffer,\n            context: this.context,\n            fadeIn: this._fadeIn,\n            fadeOut: this._fadeOut,\n            loop: true,\n            onended: () => this.onstop(this),\n            playbackRate: this._playbackRate,\n        }).connect(this.output);\n        this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));\n    }\n    /**\n     * internal stop method\n     */\n    _stop(time) {\n        if (this._source) {\n            this._source.stop(this.toSeconds(time));\n            this._source = null;\n        }\n    }\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get fadeIn() {\n        return this._fadeIn;\n    }\n    set fadeIn(time) {\n        this._fadeIn = time;\n        if (this._source) {\n            this._source.fadeIn = this._fadeIn;\n        }\n    }\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get fadeOut() {\n        return this._fadeOut;\n    }\n    set fadeOut(time) {\n        this._fadeOut = time;\n        if (this._source) {\n            this._source.fadeOut = this._fadeOut;\n        }\n    }\n    _restart(time) {\n        // TODO could be optimized by cancelling the buffer source 'stop'\n        this._stop(time);\n        this._start(time);\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        if (this._source) {\n            this._source.disconnect();\n        }\n        return this;\n    }\n}\n//--------------------\n// THE NOISE BUFFERS\n//--------------------\n// Noise buffer stats\nconst BUFFER_LENGTH = 44100 * 5;\nconst NUM_CHANNELS = 2;\n/**\n * Cache the noise buffers\n */\nconst _noiseCache = {\n    brown: null,\n    pink: null,\n    white: null,\n};\n/**\n * The noise arrays. Generated on initialization.\n * borrowed heavily from https://github.com/zacharydenton/noise.js\n * (c) 2013 Zach Denton (MIT)\n */\nconst _noiseBuffers = {\n    get brown() {\n        if (!_noiseCache.brown) {\n            const buffer = [];\n            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                const channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                let lastOut = 0.0;\n                for (let i = 0; i < BUFFER_LENGTH; i++) {\n                    const white = Math.random() * 2 - 1;\n                    channel[i] = (lastOut + (0.02 * white)) / 1.02;\n                    lastOut = channel[i];\n                    channel[i] *= 3.5; // (roughly) compensate for gain\n                }\n            }\n            _noiseCache.brown = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.brown;\n    },\n    get pink() {\n        if (!_noiseCache.pink) {\n            const buffer = [];\n            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                const channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                let b0, b1, b2, b3, b4, b5, b6;\n                b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\n                for (let i = 0; i < BUFFER_LENGTH; i++) {\n                    const white = Math.random() * 2 - 1;\n                    b0 = 0.99886 * b0 + white * 0.0555179;\n                    b1 = 0.99332 * b1 + white * 0.0750759;\n                    b2 = 0.96900 * b2 + white * 0.1538520;\n                    b3 = 0.86650 * b3 + white * 0.3104856;\n                    b4 = 0.55000 * b4 + white * 0.5329522;\n                    b5 = -0.7616 * b5 - white * 0.0168980;\n                    channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n                    channel[i] *= 0.11; // (roughly) compensate for gain\n                    b6 = white * 0.115926;\n                }\n            }\n            _noiseCache.pink = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.pink;\n    },\n    get white() {\n        if (!_noiseCache.white) {\n            const buffer = [];\n            for (let channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {\n                const channel = new Float32Array(BUFFER_LENGTH);\n                buffer[channelNum] = channel;\n                for (let i = 0; i < BUFFER_LENGTH; i++) {\n                    channel[i] = Math.random() * 2 - 1;\n                }\n            }\n            _noiseCache.white = new ToneAudioBuffer().fromArray(buffer);\n        }\n        return _noiseCache.white;\n    },\n};\n//# sourceMappingURL=Noise.js.map","import { Gain } from \"../core/context/Gain\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { noOp } from \"../core/util/Interface\";\nimport { assert } from \"../core/util/Debug\";\n/**\n * Base class for fire-and-forget nodes\n */\nexport class OneShotSource extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        /**\n         * The callback to invoke after the\n         * source is done playing.\n         */\n        this.onended = noOp;\n        /**\n         * The start time\n         */\n        this._startTime = -1;\n        /**\n         * The stop time\n         */\n        this._stopTime = -1;\n        /**\n         * The id of the timeout\n         */\n        this._timeout = -1;\n        /**\n         * The public output node\n         */\n        this.output = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * The output gain node.\n         */\n        this._gainNode = this.output;\n        /**\n         * Get the playback state at the given time\n         */\n        this.getStateAtTime = function (time) {\n            const computedTime = this.toSeconds(time);\n            if (this._startTime !== -1 && computedTime >= this._startTime &&\n                (this._stopTime === -1 || computedTime <= this._stopTime)) {\n                return \"started\";\n            }\n            else {\n                return \"stopped\";\n            }\n        };\n        this._fadeIn = options.fadeIn;\n        this._fadeOut = options.fadeOut;\n        this._curve = options.curve;\n        this.onended = options.onended;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            curve: \"linear\",\n            fadeIn: 0,\n            fadeOut: 0,\n            onended: noOp,\n        });\n    }\n    /**\n     * Start the source at the given time\n     * @param  time When to start the source\n     */\n    _startGain(time, gain = 1) {\n        assert(this._startTime === -1, \"Source cannot be started more than once\");\n        // apply a fade in envelope\n        const fadeInTime = this.toSeconds(this._fadeIn);\n        // record the start time\n        this._startTime = time + fadeInTime;\n        this._startTime = Math.max(this._startTime, this.context.currentTime);\n        // schedule the envelope\n        if (fadeInTime > 0) {\n            this._gainNode.gain.setValueAtTime(0, time);\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);\n            }\n            else {\n                this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);\n            }\n        }\n        else {\n            this._gainNode.gain.setValueAtTime(gain, time);\n        }\n        return this;\n    }\n    /**\n     * Stop the source node at the given time.\n     * @param time When to stop the source\n     */\n    stop(time) {\n        this.log(\"stop\", time);\n        this._stopGain(this.toSeconds(time));\n        return this;\n    }\n    /**\n     * Stop the source at the given time\n     * @param  time When to stop the source\n     */\n    _stopGain(time) {\n        assert(this._startTime !== -1, \"'start' must be called before 'stop'\");\n        // cancel the previous stop\n        this.cancelStop();\n        // the fadeOut time\n        const fadeOutTime = this.toSeconds(this._fadeOut);\n        // schedule the stop callback\n        this._stopTime = this.toSeconds(time) + fadeOutTime;\n        this._stopTime = Math.max(this._stopTime, this.context.currentTime);\n        if (fadeOutTime > 0) {\n            // start the fade out curve at the given time\n            if (this._curve === \"linear\") {\n                this._gainNode.gain.linearRampTo(0, fadeOutTime, time);\n            }\n            else {\n                this._gainNode.gain.targetRampTo(0, fadeOutTime, time);\n            }\n        }\n        else {\n            // stop any ongoing ramps, and set the value to 0\n            this._gainNode.gain.cancelAndHoldAtTime(time);\n            this._gainNode.gain.setValueAtTime(0, time);\n        }\n        this.context.clearTimeout(this._timeout);\n        this._timeout = this.context.setTimeout(() => {\n            // allow additional time for the exponential curve to fully decay\n            const additionalTail = this._curve === \"exponential\" ? fadeOutTime * 2 : 0;\n            this._stopSource(this.now() + additionalTail);\n            this._onended();\n        }, this._stopTime - this.context.currentTime);\n        return this;\n    }\n    /**\n     * Invoke the onended callback\n     */\n    _onended() {\n        if (this.onended !== noOp) {\n            this.onended(this);\n            // overwrite onended to make sure it only is called once\n            this.onended = noOp;\n            // dispose when it's ended to free up for garbage collection only in the online context\n            if (!this.context.isOffline) {\n                setTimeout(() => this.dispose(), 1000);\n            }\n        }\n    }\n    /**\n     * Get the playback state at the current time\n     */\n    get state() {\n        return this.getStateAtTime(this.now());\n    }\n    /**\n     * Cancel a scheduled stop event\n     */\n    cancelStop() {\n        this.log(\"cancelStop\");\n        assert(this._startTime !== -1, \"Source is not started\");\n        // cancel the stop envelope\n        this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);\n        this.context.clearTimeout(this._timeout);\n        this._stopTime = -1;\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._gainNode.disconnect();\n        return this;\n    }\n}\n//# sourceMappingURL=OneShotSource.js.map","import { Volume } from \"../component/channel/Volume\";\nimport \"../core/context/Destination\";\nimport \"../core/clock/Transport\";\nimport { ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { defaultArg } from \"../core/util/Defaults\";\nimport { noOp, readOnly } from \"../core/util/Interface\";\nimport { StateTimeline } from \"../core/util/StateTimeline\";\nimport { isDefined, isUndef } from \"../core/util/TypeCheck\";\nimport { assert, assertContextRunning } from \"../core/util/Debug\";\nimport { GT } from \"../core/util/Math\";\n/**\n * Base class for sources.\n * start/stop of this.context.transport.\n *\n * ```\n * // Multiple state change events can be chained together,\n * // but must be set in the correct order and with ascending times\n * // OK\n * state.start().stop(\"+0.2\");\n * // OK\n * state.start().stop(\"+0.2\").start(\"+0.4\").stop(\"+0.7\")\n * // BAD\n * state.stop(\"+0.2\").start();\n * // BAD\n * state.start(\"+0.3\").stop(\"+0.2\");\n * ```\n */\nexport class Source extends ToneAudioNode {\n    constructor(options) {\n        super(options);\n        /**\n         * Sources have no inputs\n         */\n        this.input = undefined;\n        /**\n         * Keep track of the scheduled state.\n         */\n        this._state = new StateTimeline(\"stopped\");\n        /**\n         * The synced `start` callback function from the transport\n         */\n        this._synced = false;\n        /**\n         * Keep track of all of the scheduled event ids\n         */\n        this._scheduled = [];\n        /**\n         * Placeholder functions for syncing/unsyncing to transport\n         */\n        this._syncedStart = noOp;\n        this._syncedStop = noOp;\n        this._state.memory = 100;\n        this._state.increasing = true;\n        this._volume = this.output = new Volume({\n            context: this.context,\n            mute: options.mute,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n        this.onstop = options.onstop;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            onstop: noOp,\n            volume: 0,\n        });\n    }\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n     * \tplayer.start();\n     * \tconsole.log(player.state);\n     * }).toDestination();\n     */\n    get state() {\n        if (this._synced) {\n            if (this.context.transport.state === \"started\") {\n                return this._state.getValueAtTime(this.context.transport.seconds);\n            }\n            else {\n                return \"stopped\";\n            }\n        }\n        else {\n            return this._state.getValueAtTime(this.now());\n        }\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * // mute the output\n     * osc.mute = true;\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    /**\n     * Ensure that the scheduled time is not before the current time.\n     * Should only be used when scheduled unsynced.\n     */\n    _clampToCurrentTime(time) {\n        if (this._synced) {\n            return time;\n        }\n        else {\n            return Math.max(time, this.context.currentTime);\n        }\n    }\n    /**\n     * Start the source at the specified time. If no time is given,\n     * start the source now.\n     * @param  time When the source should be started.\n     * @example\n     * const source = new Tone.Oscillator().toDestination();\n     * source.start(\"+0.5\"); // starts the source 0.5 seconds from now\n     */\n    start(time, offset, duration) {\n        let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        // if it's started, stop it and restart it\n        if (!this._synced && this._state.getValueAtTime(computedTime) === \"started\") {\n            // time should be strictly greater than the previous start time\n            assert(GT(computedTime, this._state.get(computedTime).time), \"Start time must be strictly greater than previous start time\");\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            this.log(\"restart\", computedTime);\n            this.restart(computedTime, offset, duration);\n        }\n        else {\n            this.log(\"start\", computedTime);\n            this._state.setStateAtTime(\"started\", computedTime);\n            if (this._synced) {\n                // add the offset time to the event\n                const event = this._state.get(computedTime);\n                if (event) {\n                    event.offset = this.toSeconds(defaultArg(offset, 0));\n                    event.duration = duration ? this.toSeconds(duration) : undefined;\n                }\n                const sched = this.context.transport.schedule(t => {\n                    this._start(t, offset, duration);\n                }, computedTime);\n                this._scheduled.push(sched);\n                // if it's already started\n                if (this.context.transport.state === \"started\") {\n                    this._syncedStart(this.now(), this.context.transport.seconds);\n                }\n            }\n            else {\n                assertContextRunning(this.context);\n                this._start(computedTime, offset, duration);\n            }\n        }\n        return this;\n    }\n    /**\n     * Stop the source at the specified time. If no time is given,\n     * stop the source now.\n     * @param  time When the source should be stopped.\n     * @example\n     * const source = new Tone.Oscillator().toDestination();\n     * source.start();\n     * source.stop(\"+0.5\"); // stops the source 0.5 seconds from now\n     */\n    stop(time) {\n        let computedTime = isUndef(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);\n        computedTime = this._clampToCurrentTime(computedTime);\n        if (this._state.getValueAtTime(computedTime) === \"started\" || isDefined(this._state.getNextState(\"started\", computedTime))) {\n            this.log(\"stop\", computedTime);\n            if (!this._synced) {\n                this._stop(computedTime);\n            }\n            else {\n                const sched = this.context.transport.schedule(this._stop.bind(this), computedTime);\n                this._scheduled.push(sched);\n            }\n            this._state.cancel(computedTime);\n            this._state.setStateAtTime(\"stopped\", computedTime);\n        }\n        return this;\n    }\n    /**\n     * Restart the source.\n     */\n    restart(time, offset, duration) {\n        time = this.toSeconds(time);\n        if (this._state.getValueAtTime(time) === \"started\") {\n            this._state.cancel(time);\n            this._restart(time, offset, duration);\n        }\n        return this;\n    }\n    /**\n     * Sync the source to the Transport so that all subsequent\n     * calls to `start` and `stop` are synced to the TransportTime\n     * instead of the AudioContext time.\n     *\n     * @example\n     * const osc = new Tone.Oscillator().toDestination();\n     * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline\n     * osc.sync().start(0).stop(0.3);\n     * // start the transport.\n     * Tone.Transport.start();\n     * // set it to loop once a second\n     * Tone.Transport.loop = true;\n     * Tone.Transport.loopEnd = 1;\n     */\n    sync() {\n        if (!this._synced) {\n            this._synced = true;\n            this._syncedStart = (time, offset) => {\n                if (offset > 0) {\n                    // get the playback state at that time\n                    const stateEvent = this._state.get(offset);\n                    // listen for start events which may occur in the middle of the sync'ed time\n                    if (stateEvent && stateEvent.state === \"started\" && stateEvent.time !== offset) {\n                        // get the offset\n                        const startOffset = offset - this.toSeconds(stateEvent.time);\n                        let duration;\n                        if (stateEvent.duration) {\n                            duration = this.toSeconds(stateEvent.duration) - startOffset;\n                        }\n                        this._start(time, this.toSeconds(stateEvent.offset) + startOffset, duration);\n                    }\n                }\n            };\n            this._syncedStop = time => {\n                const seconds = this.context.transport.getSecondsAtTime(Math.max(time - this.sampleTime, 0));\n                if (this._state.getValueAtTime(seconds) === \"started\") {\n                    this._stop(time);\n                }\n            };\n            this.context.transport.on(\"start\", this._syncedStart);\n            this.context.transport.on(\"loopStart\", this._syncedStart);\n            this.context.transport.on(\"stop\", this._syncedStop);\n            this.context.transport.on(\"pause\", this._syncedStop);\n            this.context.transport.on(\"loopEnd\", this._syncedStop);\n        }\n        return this;\n    }\n    /**\n     * Unsync the source to the Transport. See Source.sync\n     */\n    unsync() {\n        if (this._synced) {\n            this.context.transport.off(\"stop\", this._syncedStop);\n            this.context.transport.off(\"pause\", this._syncedStop);\n            this.context.transport.off(\"loopEnd\", this._syncedStop);\n            this.context.transport.off(\"start\", this._syncedStart);\n            this.context.transport.off(\"loopStart\", this._syncedStart);\n        }\n        this._synced = false;\n        // clear all of the scheduled ids\n        this._scheduled.forEach(id => this.context.transport.clear(id));\n        this._scheduled = [];\n        this._state.cancel(0);\n        return this;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.onstop = noOp;\n        this.unsync();\n        this._volume.dispose();\n        this._state.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Source.js.map","import { __awaiter } from \"tslib\";\nimport { connect, ToneAudioNode } from \"../core/context/ToneAudioNode\";\nimport { Volume } from \"../component/channel/Volume\";\nimport { optionsFromArguments } from \"../core/util/Defaults\";\nimport { assert } from \"../core/util/Debug\";\nimport { readOnly } from \"../core/util/Interface\";\nimport { isDefined, isNumber } from \"../core/util/TypeCheck\";\n/**\n * UserMedia uses MediaDevices.getUserMedia to open up and external microphone or audio input.\n * Check [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)\n * to see which browsers are supported. Access to an external input\n * is limited to secure (HTTPS) connections.\n * @example\n * const mic = new Tone.UserMedia();\n * mic.open().then(() => {\n * \t// promise resolves when input is available\n * });\n * @category Source\n */\nexport class UserMedia extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]));\n        this.name = \"UserMedia\";\n        const options = optionsFromArguments(UserMedia.getDefaults(), arguments, [\"volume\"]);\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n        this.mute = options.mute;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            mute: false,\n            volume: 0\n        });\n    }\n    /**\n     * Open the media stream. If a string is passed in, it is assumed\n     * to be the label or id of the stream, if a number is passed in,\n     * it is the input number of the stream.\n     * @param  labelOrId The label or id of the audio input media device.\n     *                   With no argument, the default stream is opened.\n     * @return The promise is resolved when the stream is open.\n     */\n    open(labelOrId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            assert(UserMedia.supported, \"UserMedia is not supported\");\n            // close the previous stream\n            if (this.state === \"started\") {\n                this.close();\n            }\n            const devices = yield UserMedia.enumerateDevices();\n            if (isNumber(labelOrId)) {\n                this._device = devices[labelOrId];\n            }\n            else {\n                this._device = devices.find((device) => {\n                    return device.label === labelOrId || device.deviceId === labelOrId;\n                });\n                // didn't find a matching device\n                if (!this._device && devices.length > 0) {\n                    this._device = devices[0];\n                }\n                assert(isDefined(this._device), `No matching device ${labelOrId}`);\n            }\n            // do getUserMedia\n            const constraints = {\n                audio: {\n                    echoCancellation: false,\n                    sampleRate: this.context.sampleRate,\n                    noiseSuppression: false,\n                    mozNoiseSuppression: false,\n                }\n            };\n            if (this._device) {\n                // @ts-ignore\n                constraints.audio.deviceId = this._device.deviceId;\n            }\n            const stream = yield navigator.mediaDevices.getUserMedia(constraints);\n            // start a new source only if the previous one is closed\n            if (!this._stream) {\n                this._stream = stream;\n                // Wrap a MediaStreamSourceNode around the live input stream.\n                const mediaStreamNode = this.context.createMediaStreamSource(stream);\n                // Connect the MediaStreamSourceNode to a gate gain node\n                connect(mediaStreamNode, this.output);\n                this._mediaStream = mediaStreamNode;\n            }\n            return this;\n        });\n    }\n    /**\n     * Close the media stream\n     */\n    close() {\n        if (this._stream && this._mediaStream) {\n            this._stream.getAudioTracks().forEach((track) => {\n                track.stop();\n            });\n            this._stream = undefined;\n            // remove the old media stream\n            this._mediaStream.disconnect();\n            this._mediaStream = undefined;\n        }\n        this._device = undefined;\n        return this;\n    }\n    /**\n     * Returns a promise which resolves with the list of audio input devices available.\n     * @return The promise that is resolved with the devices\n     * @example\n     * Tone.UserMedia.enumerateDevices().then((devices) => {\n     * \t// print the device labels\n     * \tconsole.log(devices.map(device => device.label));\n     * });\n     */\n    static enumerateDevices() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const allDevices = yield navigator.mediaDevices.enumerateDevices();\n            return allDevices.filter(device => {\n                return device.kind === \"audioinput\";\n            });\n        });\n    }\n    /**\n     * Returns the playback state of the source, \"started\" when the microphone is open\n     * and \"stopped\" when the mic is closed.\n     */\n    get state() {\n        return this._stream && this._stream.active ? \"started\" : \"stopped\";\n    }\n    /**\n     * Returns an identifier for the represented device that is\n     * persisted across sessions. It is un-guessable by other applications and\n     * unique to the origin of the calling application. It is reset when the\n     * user clears cookies (for Private Browsing, a different identifier is\n     * used that is not persisted across sessions). Returns undefined when the\n     * device is not open.\n     */\n    get deviceId() {\n        if (this._device) {\n            return this._device.deviceId;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Returns a group identifier. Two devices have the\n     * same group identifier if they belong to the same physical device.\n     * Returns null  when the device is not open.\n     */\n    get groupId() {\n        if (this._device) {\n            return this._device.groupId;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Returns a label describing this device (for example \"Built-in Microphone\").\n     * Returns undefined when the device is not open or label is not available\n     * because of permissions.\n     */\n    get label() {\n        if (this._device) {\n            return this._device.label;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Mute the output.\n     * @example\n     * const mic = new Tone.UserMedia();\n     * mic.open().then(() => {\n     * \t// promise resolves when input is available\n     * });\n     * // mute the output\n     * mic.mute = true;\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    dispose() {\n        super.dispose();\n        this.close();\n        this._volume.dispose();\n        this.volume.dispose();\n        return this;\n    }\n    /**\n     * If getUserMedia is supported by the browser.\n     */\n    static get supported() {\n        return isDefined(navigator.mediaDevices) &&\n            isDefined(navigator.mediaDevices.getUserMedia);\n    }\n}\n//# sourceMappingURL=UserMedia.js.map","import { Source } from \"../Source\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { Clock } from \"../../core/clock/Clock\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { intervalToFrequencyRatio } from \"../../core/type/Conversions\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).\n * Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the\n * amount of time each small chunk of audio is played for and the overlap is the\n * amount of crossfading transition time between successive grains.\n * @category Source\n */\nexport class GrainPlayer extends Source {\n    constructor() {\n        super(optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"GrainPlayer\";\n        /**\n         * Internal loopStart value\n         */\n        this._loopStart = 0;\n        /**\n         * Internal loopStart value\n         */\n        this._loopEnd = 0;\n        /**\n         * All of the currently playing BufferSources\n         */\n        this._activeSources = [];\n        const options = optionsFromArguments(GrainPlayer.getDefaults(), arguments, [\"url\", \"onload\"]);\n        this.buffer = new ToneAudioBuffer({\n            onload: options.onload,\n            onerror: options.onerror,\n            reverse: options.reverse,\n            url: options.url,\n        });\n        this._clock = new Clock({\n            context: this.context,\n            callback: this._tick.bind(this),\n            frequency: 1 / options.grainSize\n        });\n        this._playbackRate = options.playbackRate;\n        this._grainSize = options.grainSize;\n        this._overlap = options.overlap;\n        this.detune = options.detune;\n        // setup\n        this.overlap = options.overlap;\n        this.loop = options.loop;\n        this.playbackRate = options.playbackRate;\n        this.grainSize = options.grainSize;\n        this.loopStart = options.loopStart;\n        this.loopEnd = options.loopEnd;\n        this.reverse = options.reverse;\n        this._clock.on(\"stop\", this._onstop.bind(this));\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            onload: noOp,\n            onerror: noOp,\n            overlap: 0.1,\n            grainSize: 0.2,\n            playbackRate: 1,\n            detune: 0,\n            loop: false,\n            loopStart: 0,\n            loopEnd: 0,\n            reverse: false\n        });\n    }\n    /**\n     * Internal start method\n     */\n    _start(time, offset, duration) {\n        offset = defaultArg(offset, 0);\n        offset = this.toSeconds(offset);\n        time = this.toSeconds(time);\n        const grainSize = 1 / this._clock.frequency.getValueAtTime(time);\n        this._clock.start(time, offset / grainSize);\n        if (duration) {\n            this.stop(time + this.toSeconds(duration));\n        }\n    }\n    /**\n     * Stop and then restart the player from the beginning (or offset)\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given,\n     * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n     */\n    restart(time, offset, duration) {\n        super.restart(time, offset, duration);\n        return this;\n    }\n    _restart(time, offset, duration) {\n        this._stop(time);\n        this._start(time, offset, duration);\n    }\n    /**\n     * Internal stop method\n     */\n    _stop(time) {\n        this._clock.stop(time);\n    }\n    /**\n     * Invoked when the clock is stopped\n     */\n    _onstop(time) {\n        // stop the players\n        this._activeSources.forEach((source) => {\n            source.fadeOut = 0;\n            source.stop(time);\n        });\n        this.onstop(this);\n    }\n    /**\n     * Invoked on each clock tick. scheduled a new grain at this time.\n     */\n    _tick(time) {\n        // check if it should stop looping\n        const ticks = this._clock.getTicksAtTime(time);\n        const offset = ticks * this._grainSize;\n        this.log(\"offset\", offset);\n        if (!this.loop && offset > this.buffer.duration) {\n            this.stop(time);\n            return;\n        }\n        // at the beginning of the file, the fade in should be 0\n        const fadeIn = offset < this._overlap ? 0 : this._overlap;\n        // create a buffer source\n        const source = new ToneBufferSource({\n            context: this.context,\n            url: this.buffer,\n            fadeIn: fadeIn,\n            fadeOut: this._overlap,\n            loop: this.loop,\n            loopStart: this._loopStart,\n            loopEnd: this._loopEnd,\n            // compute the playbackRate based on the detune\n            playbackRate: intervalToFrequencyRatio(this.detune / 100)\n        }).connect(this.output);\n        source.start(time, this._grainSize * ticks);\n        source.stop(time + this._grainSize / this.playbackRate);\n        // add it to the active sources\n        this._activeSources.push(source);\n        // remove it when it's done\n        source.onended = () => {\n            const index = this._activeSources.indexOf(source);\n            if (index !== -1) {\n                this._activeSources.splice(index, 1);\n            }\n        };\n    }\n    /**\n     * The playback rate of the sample\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        assertRange(rate, 0.001);\n        this._playbackRate = rate;\n        this.grainSize = this._grainSize;\n    }\n    /**\n     * The loop start time.\n     */\n    get loopStart() {\n        return this._loopStart;\n    }\n    set loopStart(time) {\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(time), 0, this.buffer.duration);\n        }\n        this._loopStart = this.toSeconds(time);\n    }\n    /**\n     * The loop end time.\n     */\n    get loopEnd() {\n        return this._loopEnd;\n    }\n    set loopEnd(time) {\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(time), 0, this.buffer.duration);\n        }\n        this._loopEnd = this.toSeconds(time);\n    }\n    /**\n     * The direction the buffer should play in\n     */\n    get reverse() {\n        return this.buffer.reverse;\n    }\n    set reverse(rev) {\n        this.buffer.reverse = rev;\n    }\n    /**\n     * The size of each chunk of audio that the\n     * buffer is chopped into and played back at.\n     */\n    get grainSize() {\n        return this._grainSize;\n    }\n    set grainSize(size) {\n        this._grainSize = this.toSeconds(size);\n        this._clock.frequency.setValueAtTime(this._playbackRate / this._grainSize, this.now());\n    }\n    /**\n     * The duration of the cross-fade between successive grains.\n     */\n    get overlap() {\n        return this._overlap;\n    }\n    set overlap(time) {\n        this._overlap = this.toSeconds(time);\n    }\n    /**\n     * If all the buffer is loaded\n     */\n    get loaded() {\n        return this.buffer.loaded;\n    }\n    dispose() {\n        super.dispose();\n        this.buffer.dispose();\n        this._clock.dispose();\n        this._activeSources.forEach((source) => source.dispose());\n        return this;\n    }\n}\n//# sourceMappingURL=GrainPlayer.js.map","import { __awaiter, __decorate } from \"tslib\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isUndef } from \"../../core/util/TypeCheck\";\nimport { Source } from \"../Source\";\nimport { ToneBufferSource } from \"./ToneBufferSource\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { timeRange } from \"../../core/util/Decorator\";\n/**\n * Player is an audio file player with start, loop, and stop functions.\n * @example\n * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\").toDestination();\n * // play as soon as the buffer is loaded\n * player.autostart = true;\n * @category Source\n */\nexport class Player extends Source {\n    constructor() {\n        super(optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"Player\";\n        /**\n         * All of the active buffer source nodes\n         */\n        this._activeSources = new Set();\n        const options = optionsFromArguments(Player.getDefaults(), arguments, [\"url\", \"onload\"]);\n        this._buffer = new ToneAudioBuffer({\n            onload: this._onload.bind(this, options.onload),\n            onerror: options.onerror,\n            reverse: options.reverse,\n            url: options.url,\n        });\n        this.autostart = options.autostart;\n        this._loop = options.loop;\n        this._loopStart = options.loopStart;\n        this._loopEnd = options.loopEnd;\n        this._playbackRate = options.playbackRate;\n        this.fadeIn = options.fadeIn;\n        this.fadeOut = options.fadeOut;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            autostart: false,\n            fadeIn: 0,\n            fadeOut: 0,\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n            reverse: false,\n        });\n    }\n    /**\n     * Load the audio file as an audio buffer.\n     * Decodes the audio asynchronously and invokes\n     * the callback once the audio buffer loads.\n     * Note: this does not need to be called if a url\n     * was passed in to the constructor. Only use this\n     * if you want to manually load a new url.\n     * @param url The url of the buffer to load. Filetype support depends on the browser.\n     */\n    load(url) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._buffer.load(url);\n            this._onload();\n            return this;\n        });\n    }\n    /**\n     * Internal callback when the buffer is loaded.\n     */\n    _onload(callback = noOp) {\n        callback();\n        if (this.autostart) {\n            this.start();\n        }\n    }\n    /**\n     * Internal callback when the buffer is done playing.\n     */\n    _onSourceEnd(source) {\n        // invoke the onstop function\n        this.onstop(this);\n        // delete the source from the active sources\n        this._activeSources.delete(source);\n        if (this._activeSources.size === 0 && !this._synced &&\n            this._state.getValueAtTime(this.now()) === \"started\") {\n            this._state.setStateAtTime(\"stopped\", this.now());\n        }\n    }\n    /**\n     * Play the buffer at the given startTime. Optionally add an offset\n     * and/or duration which will play the buffer from a position\n     * within the buffer for the given duration.\n     *\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     */\n    start(time, offset, duration) {\n        super.start(time, offset, duration);\n        return this;\n    }\n    /**\n     * Internal start method\n     */\n    _start(startTime, offset, duration) {\n        // if it's a loop the default offset is the loopStart point\n        if (this._loop) {\n            offset = defaultArg(offset, this._loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // compute the values in seconds\n        let computedOffset = this.toSeconds(offset);\n        // if it's synced, it should factor in the playback rate for computing the offset\n        if (this._synced) {\n            computedOffset *= this._playbackRate;\n        }\n        // compute the duration which is either the passed in duration of the buffer.duration - offset\n        const origDuration = duration;\n        duration = defaultArg(duration, Math.max(this._buffer.duration - computedOffset, 0));\n        let computedDuration = this.toSeconds(duration);\n        // scale it by the playback rate\n        computedDuration = computedDuration / this._playbackRate;\n        // get the start time\n        startTime = this.toSeconds(startTime);\n        // make the source\n        const source = new ToneBufferSource({\n            url: this._buffer,\n            context: this.context,\n            fadeIn: this.fadeIn,\n            fadeOut: this.fadeOut,\n            loop: this._loop,\n            loopEnd: this._loopEnd,\n            loopStart: this._loopStart,\n            onended: this._onSourceEnd.bind(this),\n            playbackRate: this._playbackRate,\n        }).connect(this.output);\n        // set the looping properties\n        if (!this._loop && !this._synced) {\n            // cancel the previous stop\n            this._state.cancel(startTime + computedDuration);\n            // if it's not looping, set the state change at the end of the sample\n            this._state.setStateAtTime(\"stopped\", startTime + computedDuration, {\n                implicitEnd: true,\n            });\n        }\n        // add it to the array of active sources\n        this._activeSources.add(source);\n        // start it\n        if (this._loop && isUndef(origDuration)) {\n            source.start(startTime, computedOffset);\n        }\n        else {\n            // subtract the fade out time\n            source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));\n        }\n    }\n    /**\n     * Stop playback.\n     */\n    _stop(time) {\n        const computedTime = this.toSeconds(time);\n        this._activeSources.forEach(source => source.stop(computedTime));\n    }\n    /**\n     * Stop and then restart the player from the beginning (or offset)\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given,\n     * \t\t\t\t\tit will default to the full length of the sample (minus any offset)\n     */\n    restart(time, offset, duration) {\n        super.restart(time, offset, duration);\n        return this;\n    }\n    _restart(time, offset, duration) {\n        this._stop(time);\n        this._start(time, offset, duration);\n    }\n    /**\n     * Seek to a specific time in the player's buffer. If the\n     * source is no longer playing at that time, it will stop.\n     * @param offset The time to seek to.\n     * @param when The time for the seek event to occur.\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\", () => {\n     * \tplayer.start();\n     * \t// seek to the offset in 1 second from now\n     * \tplayer.seek(0.4, \"+1\");\n     * }).toDestination();\n     */\n    seek(offset, when) {\n        const computedTime = this.toSeconds(when);\n        if (this._state.getValueAtTime(computedTime) === \"started\") {\n            const computedOffset = this.toSeconds(offset);\n            // if it's currently playing, stop it\n            this._stop(computedTime);\n            // restart it at the given time\n            this._start(computedTime, computedOffset);\n        }\n        return this;\n    }\n    /**\n     * Set the loop start and end. Will only loop if loop is set to true.\n     * @param loopStart The loop start time\n     * @param loopEnd The loop end time\n     * @example\n     * const player = new Tone.Player(\"https://tonejs.github.io/examples/audio/FWDL.mp3\").toDestination();\n     * // loop between the given points\n     * player.setLoopPoints(0.2, 0.3);\n     * player.loop = true;\n     * player.autostart = true;\n     */\n    setLoopPoints(loopStart, loopEnd) {\n        this.loopStart = loopStart;\n        this.loopEnd = loopEnd;\n        return this;\n    }\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get loopStart() {\n        return this._loopStart;\n    }\n    set loopStart(loopStart) {\n        this._loopStart = loopStart;\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(loopStart), 0, this.buffer.duration);\n        }\n        // get the current source\n        this._activeSources.forEach(source => {\n            source.loopStart = loopStart;\n        });\n    }\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get loopEnd() {\n        return this._loopEnd;\n    }\n    set loopEnd(loopEnd) {\n        this._loopEnd = loopEnd;\n        if (this.buffer.loaded) {\n            assertRange(this.toSeconds(loopEnd), 0, this.buffer.duration);\n        }\n        // get the current source\n        this._activeSources.forEach(source => {\n            source.loopEnd = loopEnd;\n        });\n    }\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get buffer() {\n        return this._buffer;\n    }\n    set buffer(buffer) {\n        this._buffer.set(buffer);\n    }\n    /**\n     * If the buffer should loop once it's over.\n     */\n    get loop() {\n        return this._loop;\n    }\n    set loop(loop) {\n        // if no change, do nothing\n        if (this._loop === loop) {\n            return;\n        }\n        this._loop = loop;\n        // set the loop of all of the sources\n        this._activeSources.forEach(source => {\n            source.loop = loop;\n        });\n        if (loop) {\n            // remove the next stopEvent\n            const stopEvent = this._state.getNextState(\"stopped\", this.now());\n            if (stopEvent) {\n                this._state.cancel(stopEvent.time);\n            }\n        }\n    }\n    /**\n     * The playback speed. 1 is normal speed. This is not a signal because\n     * Safari and iOS currently don't support playbackRate as a signal.\n     */\n    get playbackRate() {\n        return this._playbackRate;\n    }\n    set playbackRate(rate) {\n        this._playbackRate = rate;\n        const now = this.now();\n        // cancel the stop event since it's at a different time now\n        const stopEvent = this._state.getNextState(\"stopped\", now);\n        if (stopEvent && stopEvent.implicitEnd) {\n            this._state.cancel(stopEvent.time);\n            this._activeSources.forEach(source => source.cancelStop());\n        }\n        // set all the sources\n        this._activeSources.forEach(source => {\n            source.playbackRate.setValueAtTime(rate, now);\n        });\n    }\n    /**\n     * The direction the buffer should play in\n     */\n    get reverse() {\n        return this._buffer.reverse;\n    }\n    set reverse(rev) {\n        this._buffer.reverse = rev;\n    }\n    /**\n     * If the buffer is loaded\n     */\n    get loaded() {\n        return this._buffer.loaded;\n    }\n    dispose() {\n        super.dispose();\n        // disconnect all of the players\n        this._activeSources.forEach(source => source.dispose());\n        this._activeSources.clear();\n        this._buffer.dispose();\n        return this;\n    }\n}\n__decorate([\n    timeRange(0)\n], Player.prototype, \"fadeIn\", void 0);\n__decorate([\n    timeRange(0)\n], Player.prototype, \"fadeOut\", void 0);\n//# sourceMappingURL=Player.js.map","import { Volume } from \"../../component/channel/Volume\";\nimport { ToneAudioBuffers } from \"../../core/context/ToneAudioBuffers\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { assert } from \"../../core/util/Debug\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Source } from \"../Source\";\nimport { Player } from \"./Player\";\n/**\n * Players combines multiple [[Player]] objects.\n * @category Source\n */\nexport class Players extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\"));\n        this.name = \"Players\";\n        /**\n         * Players has no input.\n         */\n        this.input = undefined;\n        /**\n         * The container of all of the players\n         */\n        this._players = new Map();\n        const options = optionsFromArguments(Players.getDefaults(), arguments, [\"urls\", \"onload\"], \"urls\");\n        /**\n         * The output volume node\n         */\n        this._volume = this.output = new Volume({\n            context: this.context,\n            volume: options.volume,\n        });\n        this.volume = this._volume.volume;\n        readOnly(this, \"volume\");\n        this._buffers = new ToneAudioBuffers({\n            urls: options.urls,\n            onload: options.onload,\n            baseUrl: options.baseUrl,\n            onerror: options.onerror\n        });\n        // mute initially\n        this.mute = options.mute;\n        this._fadeIn = options.fadeIn;\n        this._fadeOut = options.fadeOut;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            baseUrl: \"\",\n            fadeIn: 0,\n            fadeOut: 0,\n            mute: false,\n            onload: noOp,\n            onerror: noOp,\n            urls: {},\n            volume: 0,\n        });\n    }\n    /**\n     * Mute the output.\n     */\n    get mute() {\n        return this._volume.mute;\n    }\n    set mute(mute) {\n        this._volume.mute = mute;\n    }\n    /**\n     * The fadeIn time of the envelope applied to the source.\n     */\n    get fadeIn() {\n        return this._fadeIn;\n    }\n    set fadeIn(fadeIn) {\n        this._fadeIn = fadeIn;\n        this._players.forEach(player => {\n            player.fadeIn = fadeIn;\n        });\n    }\n    /**\n     * The fadeOut time of the each of the sources.\n     */\n    get fadeOut() {\n        return this._fadeOut;\n    }\n    set fadeOut(fadeOut) {\n        this._fadeOut = fadeOut;\n        this._players.forEach(player => {\n            player.fadeOut = fadeOut;\n        });\n    }\n    /**\n     * The state of the players object. Returns \"started\" if any of the players are playing.\n     */\n    get state() {\n        const playing = Array.from(this._players).some(([_, player]) => player.state === \"started\");\n        return playing ? \"started\" : \"stopped\";\n    }\n    /**\n     * True if the buffers object has a buffer by that name.\n     * @param name  The key or index of the buffer.\n     */\n    has(name) {\n        return this._buffers.has(name);\n    }\n    /**\n     * Get a player by name.\n     * @param  name  The players name as defined in the constructor object or `add` method.\n     */\n    player(name) {\n        assert(this.has(name), `No Player with the name ${name} exists on this object`);\n        if (!this._players.has(name)) {\n            const player = new Player({\n                context: this.context,\n                fadeIn: this._fadeIn,\n                fadeOut: this._fadeOut,\n                url: this._buffers.get(name),\n            }).connect(this.output);\n            this._players.set(name, player);\n        }\n        return this._players.get(name);\n    }\n    /**\n     * If all the buffers are loaded or not\n     */\n    get loaded() {\n        return this._buffers.loaded;\n    }\n    /**\n     * Add a player by name and url to the Players\n     * @param  name A unique name to give the player\n     * @param  url  Either the url of the bufer or a buffer which will be added with the given name.\n     * @param callback  The callback to invoke when the url is loaded.\n     */\n    add(name, url, callback) {\n        assert(!this._buffers.has(name), \"A buffer with that name already exists on this object\");\n        this._buffers.add(name, url, callback);\n        return this;\n    }\n    /**\n     * Stop all of the players at the given time\n     * @param time The time to stop all of the players.\n     */\n    stopAll(time) {\n        this._players.forEach(player => player.stop(time));\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._volume.dispose();\n        this.volume.dispose();\n        this._players.forEach(player => player.dispose());\n        this._buffers.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=Players.js.map","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioBuffer } from \"../../core/context/ToneAudioBuffer\";\nimport { defaultArg, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { assert } from \"../../core/util/Debug\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { EQ, GTE, LT } from \"../../core/util/Math\";\n/**\n * Wrapper around the native BufferSourceNode.\n * @category Source\n */\nexport class ToneBufferSource extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]));\n        this.name = \"ToneBufferSource\";\n        /**\n         * The oscillator\n         */\n        this._source = this.context.createBufferSource();\n        this._internalChannels = [this._source];\n        /**\n         * indicators if the source has started/stopped\n         */\n        this._sourceStarted = false;\n        this._sourceStopped = false;\n        const options = optionsFromArguments(ToneBufferSource.getDefaults(), arguments, [\"url\", \"onload\"]);\n        connect(this._source, this._gainNode);\n        this._source.onended = () => this._stopSource();\n        /**\n         * The playbackRate of the buffer\n         */\n        this.playbackRate = new Param({\n            context: this.context,\n            param: this._source.playbackRate,\n            units: \"positive\",\n            value: options.playbackRate,\n        });\n        // set some values initially\n        this.loop = options.loop;\n        this.loopStart = options.loopStart;\n        this.loopEnd = options.loopEnd;\n        this._buffer = new ToneAudioBuffer(options.url, options.onload, options.onerror);\n        this._internalChannels.push(this._source);\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            url: new ToneAudioBuffer(),\n            loop: false,\n            loopEnd: 0,\n            loopStart: 0,\n            onload: noOp,\n            onerror: noOp,\n            playbackRate: 1,\n        });\n    }\n    /**\n     * The fadeIn time of the amplitude envelope.\n     */\n    get fadeIn() {\n        return this._fadeIn;\n    }\n    set fadeIn(t) {\n        this._fadeIn = t;\n    }\n    /**\n     * The fadeOut time of the amplitude envelope.\n     */\n    get fadeOut() {\n        return this._fadeOut;\n    }\n    set fadeOut(t) {\n        this._fadeOut = t;\n    }\n    /**\n     * The curve applied to the fades, either \"linear\" or \"exponential\"\n     */\n    get curve() {\n        return this._curve;\n    }\n    set curve(t) {\n        this._curve = t;\n    }\n    /**\n     * Start the buffer\n     * @param  time When the player should start.\n     * @param  offset The offset from the beginning of the sample to start at.\n     * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)\n     * @param  gain  The gain to play the buffer back at.\n     */\n    start(time, offset, duration, gain = 1) {\n        assert(this.buffer.loaded, \"buffer is either not set or not loaded\");\n        const computedTime = this.toSeconds(time);\n        // apply the gain envelope\n        this._startGain(computedTime, gain);\n        // if it's a loop the default offset is the loopstart point\n        if (this.loop) {\n            offset = defaultArg(offset, this.loopStart);\n        }\n        else {\n            // otherwise the default offset is 0\n            offset = defaultArg(offset, 0);\n        }\n        // make sure the offset is not less than 0\n        let computedOffset = Math.max(this.toSeconds(offset), 0);\n        // start the buffer source\n        if (this.loop) {\n            // modify the offset if it's greater than the loop time\n            const loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n            const loopStart = this.toSeconds(this.loopStart);\n            const loopDuration = loopEnd - loopStart;\n            // move the offset back\n            if (GTE(computedOffset, loopEnd)) {\n                computedOffset = ((computedOffset - loopStart) % loopDuration) + loopStart;\n            }\n            // when the offset is very close to the duration, set it to 0\n            if (EQ(computedOffset, this.buffer.duration)) {\n                computedOffset = 0;\n            }\n        }\n        // this.buffer.loaded would have return false if the AudioBuffer was undefined\n        this._source.buffer = this.buffer.get();\n        this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;\n        if (LT(computedOffset, this.buffer.duration)) {\n            this._sourceStarted = true;\n            this._source.start(computedTime, computedOffset);\n        }\n        // if a duration is given, schedule a stop\n        if (isDefined(duration)) {\n            let computedDur = this.toSeconds(duration);\n            // make sure it's never negative\n            computedDur = Math.max(computedDur, 0);\n            this.stop(computedTime + computedDur);\n        }\n        return this;\n    }\n    _stopSource(time) {\n        if (!this._sourceStopped && this._sourceStarted) {\n            this._sourceStopped = true;\n            this._source.stop(this.toSeconds(time));\n            this._onended();\n        }\n    }\n    /**\n     * If loop is true, the loop will start at this position.\n     */\n    get loopStart() {\n        return this._source.loopStart;\n    }\n    set loopStart(loopStart) {\n        this._source.loopStart = this.toSeconds(loopStart);\n    }\n    /**\n     * If loop is true, the loop will end at this position.\n     */\n    get loopEnd() {\n        return this._source.loopEnd;\n    }\n    set loopEnd(loopEnd) {\n        this._source.loopEnd = this.toSeconds(loopEnd);\n    }\n    /**\n     * The audio buffer belonging to the player.\n     */\n    get buffer() {\n        return this._buffer;\n    }\n    set buffer(buffer) {\n        this._buffer.set(buffer);\n    }\n    /**\n     * If the buffer should loop once it's over.\n     */\n    get loop() {\n        return this._source.loop;\n    }\n    set loop(loop) {\n        this._source.loop = loop;\n        if (this._sourceStarted) {\n            this.cancelStop();\n        }\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._source.onended = null;\n        this._source.disconnect();\n        this._buffer.dispose();\n        this.playbackRate.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneBufferSource.js.map","export * from \"./Noise\";\nexport * from \"./UserMedia\";\nexport * from \"./oscillator/Oscillator\";\nexport * from \"./oscillator/AMOscillator\";\nexport * from \"./oscillator/FMOscillator\";\nexport * from \"./oscillator/PulseOscillator\";\nexport * from \"./oscillator/FatOscillator\";\nexport * from \"./oscillator/PWMOscillator\";\nexport * from \"./oscillator/OmniOscillator\";\nexport * from \"./oscillator/ToneOscillatorNode\";\nexport * from \"./oscillator/LFO\";\nexport * from \"./buffer/ToneBufferSource\";\nexport * from \"./buffer/Player\";\nexport * from \"./buffer/Players\";\nexport * from \"./buffer/GrainPlayer\";\n//# sourceMappingURL=index.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * An amplitude modulated oscillator node. It is implemented with\n * two oscillators, one which modulators the other's amplitude\n * through a gain node.\n * ```\n *    +-------------+       +----------+\n *    | Carrier Osc +>------> GainNode |\n *    +-------------+       |          +--->Output\n *                      +---> gain     |\n * +---------------+    |   +----------+\n * | Modulator Osc +>---+\n * +---------------+\n * ```\n * @offline 0.2 1\n * @example\n * const amOsc = new Tone.AMOscillator(30, \"sine\", \"square\").toDestination().start();\n * @category Source\n */\nexport class AMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n        this.name = \"AMOscillator\";\n        /**\n         * convert the -1,1 output to 0,1\n         */\n        this._modulationScale = new AudioToGain({ context: this.context });\n        /**\n         * the node where the modulation happens\n         */\n        this._modulationNode = new Gain({\n            context: this.context,\n        });\n        const options = optionsFromArguments(AMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        this._carrier = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: options.type,\n        });\n        this.frequency = this._carrier.frequency,\n            this.detune = this._carrier.detune;\n        this._modulator = new Oscillator({\n            context: this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        // connections\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this._modulator.chain(this._modulationScale, this._modulationNode.gain);\n        this._carrier.chain(this._modulationNode, this.output);\n        readOnly(this, [\"frequency\", \"detune\", \"harmonicity\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationType: \"square\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    }\n    _restart(time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n    }\n    /**\n     * The type of the carrier oscillator\n     */\n    get type() {\n        return this._carrier.type;\n    }\n    set type(type) {\n        this._carrier.type = type;\n    }\n    get baseType() {\n        return this._carrier.baseType;\n    }\n    set baseType(baseType) {\n        this._carrier.baseType = baseType;\n    }\n    get partialCount() {\n        return this._carrier.partialCount;\n    }\n    set partialCount(partialCount) {\n        this._carrier.partialCount = partialCount;\n    }\n    /**\n     * The type of the modulator oscillator\n     */\n    get modulationType() {\n        return this._modulator.type;\n    }\n    set modulationType(type) {\n        this._modulator.type = type;\n    }\n    get phase() {\n        return this._carrier.phase;\n    }\n    set phase(phase) {\n        this._carrier.phase = phase;\n        this._modulator.phase = phase;\n    }\n    get partials() {\n        return this._carrier.partials;\n    }\n    set partials(partials) {\n        this._carrier.partials = partials;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this._modulationScale.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=AMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * FMOscillator implements a frequency modulation synthesis\n * ```\n *                                              +-------------+\n * +---------------+        +-------------+     | Carrier Osc |\n * | Modulator Osc +>-------> GainNode    |     |             +--->Output\n * +---------------+        |             +>----> frequency   |\n *                       +--> gain        |     +-------------+\n *                       |  +-------------+\n * +-----------------+   |\n * | modulationIndex +>--+\n * +-----------------+\n * ```\n *\n * @offline 0.1 1\n * @example\n * const fmOsc = new Tone.FMOscillator({\n * \tfrequency: 200,\n * \ttype: \"square\",\n * \tmodulationType: \"triangle\",\n * \tharmonicity: 0.2,\n * \tmodulationIndex: 3\n * }).toDestination().start();\n * @category Source\n */\nexport class FMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]));\n        this.name = \"FMOscillator\";\n        /**\n         * the node where the modulation happens\n         */\n        this._modulationNode = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        const options = optionsFromArguments(FMOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"modulationType\"]);\n        this._carrier = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: 0,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: options.type,\n        });\n        this.detune = this._carrier.detune;\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this._modulator = new Oscillator({\n            context: this.context,\n            phase: options.phase,\n            type: options.modulationType,\n        });\n        this.harmonicity = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.harmonicity,\n        });\n        this.modulationIndex = new Multiply({\n            context: this.context,\n            units: \"positive\",\n            value: options.modulationIndex,\n        });\n        // connections\n        this.frequency.connect(this._carrier.frequency);\n        this.frequency.chain(this.harmonicity, this._modulator.frequency);\n        this.frequency.chain(this.modulationIndex, this._modulationNode);\n        this._modulator.connect(this._modulationNode.gain);\n        this._modulationNode.connect(this._carrier.frequency);\n        this._carrier.connect(this.output);\n        this.detune.connect(this._modulator.detune);\n        readOnly(this, [\"modulationIndex\", \"frequency\", \"detune\", \"harmonicity\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            harmonicity: 1,\n            modulationIndex: 2,\n            modulationType: \"square\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._modulator.start(time);\n        this._carrier.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        this._modulator.stop(time);\n        this._carrier.stop(time);\n    }\n    _restart(time) {\n        this._modulator.restart(time);\n        this._carrier.restart(time);\n        return this;\n    }\n    get type() {\n        return this._carrier.type;\n    }\n    set type(type) {\n        this._carrier.type = type;\n    }\n    get baseType() {\n        return this._carrier.baseType;\n    }\n    set baseType(baseType) {\n        this._carrier.baseType = baseType;\n    }\n    get partialCount() {\n        return this._carrier.partialCount;\n    }\n    set partialCount(partialCount) {\n        this._carrier.partialCount = partialCount;\n    }\n    /**\n     * The type of the modulator oscillator\n     */\n    get modulationType() {\n        return this._modulator.type;\n    }\n    set modulationType(type) {\n        this._modulator.type = type;\n    }\n    get phase() {\n        return this._carrier.phase;\n    }\n    set phase(phase) {\n        this._carrier.phase = phase;\n        this._modulator.phase = phase;\n    }\n    get partials() {\n        return this._carrier.partials;\n    }\n    set partials(partials) {\n        this._carrier.partials = partials;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.harmonicity.dispose();\n        this._carrier.dispose();\n        this._modulator.dispose();\n        this._modulationNode.dispose();\n        this.modulationIndex.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=FMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { noOp, readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { assertRange } from \"../../core/util/Debug\";\n/**\n * FatOscillator is an array of oscillators with detune spread between the oscillators\n * @example\n * const fatOsc = new Tone.FatOscillator(\"Ab3\", \"sawtooth\", 40).toDestination().start();\n * @category Source\n */\nexport class FatOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]));\n        this.name = \"FatOscillator\";\n        /**\n         * The array of oscillators\n         */\n        this._oscillators = [];\n        const options = optionsFromArguments(FatOscillator.getDefaults(), arguments, [\"frequency\", \"type\", \"spread\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        this._spread = options.spread;\n        this._type = options.type;\n        this._phase = options.phase;\n        this._partials = options.partials;\n        this._partialCount = options.partialCount;\n        // set the count initially\n        this.count = options.count;\n        readOnly(this, [\"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), {\n            count: 3,\n            spread: 20,\n            type: \"sawtooth\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._forEach(osc => osc.start(time));\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._forEach(osc => osc.stop(time));\n    }\n    _restart(time) {\n        this._forEach(osc => osc.restart(time));\n    }\n    /**\n     * Iterate over all of the oscillators\n     */\n    _forEach(iterator) {\n        for (let i = 0; i < this._oscillators.length; i++) {\n            iterator(this._oscillators[i], i);\n        }\n    }\n    /**\n     * The type of the oscillator\n     */\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._type = type;\n        this._forEach(osc => osc.type = type);\n    }\n    /**\n     * The detune spread between the oscillators. If \"count\" is\n     * set to 3 oscillators and the \"spread\" is set to 40,\n     * the three oscillators would be detuned like this: [-20, 0, 20]\n     * for a total detune spread of 40 cents.\n     * @example\n     * const fatOsc = new Tone.FatOscillator().toDestination().start();\n     * fatOsc.spread = 70;\n     */\n    get spread() {\n        return this._spread;\n    }\n    set spread(spread) {\n        this._spread = spread;\n        if (this._oscillators.length > 1) {\n            const start = -spread / 2;\n            const step = spread / (this._oscillators.length - 1);\n            this._forEach((osc, i) => osc.detune.value = start + step * i);\n        }\n    }\n    /**\n     * The number of detuned oscillators. Must be an integer greater than 1.\n     * @example\n     * const fatOsc = new Tone.FatOscillator(\"C#3\", \"sawtooth\").toDestination().start();\n     * // use 4 sawtooth oscillators\n     * fatOsc.count = 4;\n     */\n    get count() {\n        return this._oscillators.length;\n    }\n    set count(count) {\n        assertRange(count, 1);\n        if (this._oscillators.length !== count) {\n            // dispose the previous oscillators\n            this._forEach(osc => osc.dispose());\n            this._oscillators = [];\n            for (let i = 0; i < count; i++) {\n                const osc = new Oscillator({\n                    context: this.context,\n                    volume: -6 - count * 1.1,\n                    type: this._type,\n                    phase: this._phase + (i / count) * 360,\n                    partialCount: this._partialCount,\n                    onstop: i === 0 ? () => this.onstop(this) : noOp,\n                });\n                if (this.type === \"custom\") {\n                    osc.partials = this._partials;\n                }\n                this.frequency.connect(osc.frequency);\n                this.detune.connect(osc.detune);\n                osc.detune.overridden = false;\n                osc.connect(this.output);\n                this._oscillators[i] = osc;\n            }\n            // set the spread\n            this.spread = this._spread;\n            if (this.state === \"started\") {\n                this._forEach(osc => osc.start());\n            }\n        }\n    }\n    get phase() {\n        return this._phase;\n    }\n    set phase(phase) {\n        this._phase = phase;\n        this._forEach(osc => osc.phase = phase);\n    }\n    get baseType() {\n        return this._oscillators[0].baseType;\n    }\n    set baseType(baseType) {\n        this._forEach(osc => osc.baseType = baseType);\n        this._type = this._oscillators[0].type;\n    }\n    get partials() {\n        return this._oscillators[0].partials;\n    }\n    set partials(partials) {\n        this._partials = partials;\n        this._partialCount = this._partials.length;\n        if (partials.length) {\n            this._type = \"custom\";\n            this._forEach(osc => osc.partials = partials);\n        }\n    }\n    get partialCount() {\n        return this._oscillators[0].partialCount;\n    }\n    set partialCount(partialCount) {\n        this._partialCount = partialCount;\n        this._forEach(osc => osc.partialCount = partialCount);\n        this._type = this._oscillators[0].type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this.frequency.dispose();\n        this.detune.dispose();\n        this._forEach(osc => osc.dispose());\n        return this;\n    }\n}\n//# sourceMappingURL=FatOscillator.js.map","import { Gain } from \"../../core/context/Gain\";\nimport { Param } from \"../../core/context/Param\";\nimport { ToneAudioNode } from \"../../core/context/ToneAudioNode\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { AudioToGain } from \"../../signal/AudioToGain\";\nimport { Scale } from \"../../signal/Scale\";\nimport { connectSignal, Signal } from \"../../signal/Signal\";\nimport { Zero } from \"../../signal/Zero\";\nimport { Oscillator } from \"./Oscillator\";\n/**\n * LFO stands for low frequency oscillator. LFO produces an output signal\n * which can be attached to an AudioParam or Tone.Signal\n * in order to modulate that parameter with an oscillator. The LFO can\n * also be synced to the transport to start/stop and change when the tempo changes.\n * @offline 0.5 1\n * @example\n * const lfo = new Tone.LFO(\"4n\", 400, 4000).start().toDestination();\n * @category Source\n */\nexport class LFO extends ToneAudioNode {\n    constructor() {\n        super(optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]));\n        this.name = \"LFO\";\n        /**\n         * The value that the LFO outputs when it's stopped\n         */\n        this._stoppedValue = 0;\n        /**\n         * A private placeholder for the units\n         */\n        this._units = \"number\";\n        /**\n         * If the input value is converted using the [[units]]\n         */\n        this.convert = true;\n        /**\n         * Private methods borrowed from Param\n         */\n        // @ts-ignore\n        this._fromType = Param.prototype._fromType;\n        // @ts-ignore\n        this._toType = Param.prototype._toType;\n        // @ts-ignore\n        this._is = Param.prototype._is;\n        // @ts-ignore\n        this._clampValue = Param.prototype._clampValue;\n        const options = optionsFromArguments(LFO.getDefaults(), arguments, [\"frequency\", \"min\", \"max\"]);\n        // @ts-ignore\n        this._oscillator = new Oscillator({\n            context: this.context,\n            frequency: options.frequency,\n            type: options.type,\n        });\n        this.frequency = this._oscillator.frequency;\n        this._amplitudeGain = new Gain({\n            context: this.context,\n            gain: options.amplitude,\n            units: \"normalRange\",\n        });\n        this.amplitude = this._amplitudeGain.gain;\n        this._stoppedSignal = new Signal({\n            context: this.context,\n            units: \"audioRange\",\n            value: 0,\n        });\n        this._zeros = new Zero({ context: this.context });\n        this._a2g = new AudioToGain({ context: this.context });\n        this._scaler = this.output = new Scale({\n            context: this.context,\n            max: options.max,\n            min: options.min,\n        });\n        this.units = options.units;\n        this.min = options.min;\n        this.max = options.max;\n        // connect it up\n        this._oscillator.chain(this._a2g, this._amplitudeGain, this._scaler);\n        this._zeros.connect(this._a2g);\n        this._stoppedSignal.connect(this._a2g);\n        readOnly(this, [\"amplitude\", \"frequency\"]);\n        this.phase = options.phase;\n    }\n    static getDefaults() {\n        return Object.assign(ToneAudioNode.getDefaults(), {\n            amplitude: 1,\n            frequency: \"4n\",\n            max: 1,\n            min: 0,\n            phase: 0,\n            type: \"sine\",\n            units: \"number\",\n        });\n    }\n    /**\n     * Start the LFO.\n     * @param time The time the LFO will start\n     */\n    start(time) {\n        time = this.toSeconds(time);\n        this._stoppedSignal.setValueAtTime(0, time);\n        this._oscillator.start(time);\n        return this;\n    }\n    /**\n     * Stop the LFO.\n     * @param  time The time the LFO will stop\n     */\n    stop(time) {\n        time = this.toSeconds(time);\n        this._stoppedSignal.setValueAtTime(this._stoppedValue, time);\n        this._oscillator.stop(time);\n        return this;\n    }\n    /**\n     * Sync the start/stop/pause to the transport\n     * and the frequency to the bpm of the transport\n     * @example\n     * const lfo = new Tone.LFO(\"8n\");\n     * lfo.sync().start(0);\n     * // the rate of the LFO will always be an eighth note, even as the tempo changes\n     */\n    sync() {\n        this._oscillator.sync();\n        this._oscillator.syncFrequency();\n        return this;\n    }\n    /**\n     * unsync the LFO from transport control\n     */\n    unsync() {\n        this._oscillator.unsync();\n        this._oscillator.unsyncFrequency();\n        return this;\n    }\n    /**\n     * The minimum output of the LFO.\n     */\n    get min() {\n        return this._toType(this._scaler.min);\n    }\n    set min(min) {\n        min = this._fromType(min);\n        this._scaler.min = min;\n    }\n    /**\n     * The maximum output of the LFO.\n     */\n    get max() {\n        return this._toType(this._scaler.max);\n    }\n    set max(max) {\n        max = this._fromType(max);\n        this._scaler.max = max;\n    }\n    /**\n     * The type of the oscillator: See [[Oscillator.type]]\n     */\n    get type() {\n        return this._oscillator.type;\n    }\n    set type(type) {\n        this._oscillator.type = type;\n        this._stoppedValue = this._oscillator.getInitialValue();\n        this._stoppedSignal.value = this._stoppedValue;\n    }\n    /**\n     * The phase of the LFO.\n     */\n    get phase() {\n        return this._oscillator.phase;\n    }\n    set phase(phase) {\n        this._oscillator.phase = phase;\n        this._stoppedValue = this._oscillator.getInitialValue();\n        this._stoppedSignal.value = this._stoppedValue;\n    }\n    /**\n     * The output units of the LFO.\n     */\n    get units() {\n        return this._units;\n    }\n    set units(val) {\n        const currentMin = this.min;\n        const currentMax = this.max;\n        // convert the min and the max\n        this._units = val;\n        this.min = currentMin;\n        this.max = currentMax;\n    }\n    /**\n     * Returns the playback state of the source, either \"started\" or \"stopped\".\n     */\n    get state() {\n        return this._oscillator.state;\n    }\n    /**\n     * @param node the destination to connect to\n     * @param outputNum the optional output number\n     * @param inputNum the input number\n     */\n    connect(node, outputNum, inputNum) {\n        if (node instanceof Param || node instanceof Signal) {\n            this.convert = node.convert;\n            this.units = node.units;\n        }\n        connectSignal(this, node, outputNum, inputNum);\n        return this;\n    }\n    dispose() {\n        super.dispose();\n        this._oscillator.dispose();\n        this._stoppedSignal.dispose();\n        this._zeros.dispose();\n        this._scaler.dispose();\n        this._a2g.dispose();\n        this._amplitudeGain.dispose();\n        this.amplitude.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=LFO.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isNumber, isString } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { AMOscillator } from \"./AMOscillator\";\nimport { FatOscillator } from \"./FatOscillator\";\nimport { FMOscillator } from \"./FMOscillator\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\nimport { PWMOscillator } from \"./PWMOscillator\";\nconst OmniOscillatorSourceMap = {\n    am: AMOscillator,\n    fat: FatOscillator,\n    fm: FMOscillator,\n    oscillator: Oscillator,\n    pulse: PulseOscillator,\n    pwm: PWMOscillator,\n};\n/**\n * OmniOscillator aggregates all of the oscillator types into one.\n * @offline 0.1 1\n * @example\n * const omniOsc = new Tone.OmniOscillator(\"C#4\", \"pwm\").toDestination().start();\n * @category Source\n */\nexport class OmniOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"OmniOscillator\";\n        const options = optionsFromArguments(OmniOscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, [\"frequency\", \"detune\"]);\n        // set the options\n        this.set(options);\n    }\n    static getDefaults() {\n        return Object.assign(Oscillator.getDefaults(), FMOscillator.getDefaults(), AMOscillator.getDefaults(), FatOscillator.getDefaults(), PulseOscillator.getDefaults(), PWMOscillator.getDefaults());\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        this._oscillator.start(time);\n    }\n    /**\n     * start the oscillator\n     */\n    _stop(time) {\n        this._oscillator.stop(time);\n    }\n    _restart(time) {\n        this._oscillator.restart(time);\n        return this;\n    }\n    /**\n     * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or\n     * prefix the basic types with \"fm\", \"am\", or \"fat\" to use the FMOscillator, AMOscillator or FatOscillator\n     * types. The oscillator could also be set to \"pwm\" or \"pulse\". All of the parameters of the\n     * oscillator's class are accessible when the oscillator is set to that type, but throws an error\n     * when it's not.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator().toDestination().start();\n     * omniOsc.type = \"pwm\";\n     * // modulationFrequency is parameter which is available\n     * // only when the type is \"pwm\".\n     * omniOsc.modulationFrequency.value = 0.5;\n     */\n    get type() {\n        let prefix = \"\";\n        if ([\"am\", \"fm\", \"fat\"].some(p => this._sourceType === p)) {\n            prefix = this._sourceType;\n        }\n        return prefix + this._oscillator.type;\n    }\n    set type(type) {\n        if (type.substr(0, 2) === \"fm\") {\n            this._createNewOscillator(\"fm\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(2);\n        }\n        else if (type.substr(0, 2) === \"am\") {\n            this._createNewOscillator(\"am\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(2);\n        }\n        else if (type.substr(0, 3) === \"fat\") {\n            this._createNewOscillator(\"fat\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type.substr(3);\n        }\n        else if (type === \"pwm\") {\n            this._createNewOscillator(\"pwm\");\n            this._oscillator = this._oscillator;\n        }\n        else if (type === \"pulse\") {\n            this._createNewOscillator(\"pulse\");\n        }\n        else {\n            this._createNewOscillator(\"oscillator\");\n            this._oscillator = this._oscillator;\n            this._oscillator.type = type;\n        }\n    }\n    /**\n     * The value is an empty array when the type is not \"custom\".\n     * This is not available on \"pwm\" and \"pulse\" oscillator types.\n     * See [[Oscillator.partials]]\n     */\n    get partials() {\n        return this._oscillator.partials;\n    }\n    set partials(partials) {\n        if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n            this._oscillator.partials = partials;\n        }\n    }\n    get partialCount() {\n        return this._oscillator.partialCount;\n    }\n    set partialCount(partialCount) {\n        if (!this._getOscType(this._oscillator, \"pulse\") && !this._getOscType(this._oscillator, \"pwm\")) {\n            this._oscillator.partialCount = partialCount;\n        }\n    }\n    set(props) {\n        // make sure the type is set first\n        if (Reflect.has(props, \"type\") && props.type) {\n            this.type = props.type;\n        }\n        // then set the rest\n        super.set(props);\n        return this;\n    }\n    /**\n     * connect the oscillator to the frequency and detune signals\n     */\n    _createNewOscillator(oscType) {\n        if (oscType !== this._sourceType) {\n            this._sourceType = oscType;\n            const OscConstructor = OmniOscillatorSourceMap[oscType];\n            // short delay to avoid clicks on the change\n            const now = this.now();\n            if (this._oscillator) {\n                const oldOsc = this._oscillator;\n                oldOsc.stop(now);\n                // dispose the old one\n                this.context.setTimeout(() => oldOsc.dispose(), this.blockTime);\n            }\n            this._oscillator = new OscConstructor({\n                context: this.context,\n            });\n            this.frequency.connect(this._oscillator.frequency);\n            this.detune.connect(this._oscillator.detune);\n            this._oscillator.connect(this.output);\n            this._oscillator.onstop = () => this.onstop(this);\n            if (this.state === \"started\") {\n                this._oscillator.start(now);\n            }\n        }\n    }\n    get phase() {\n        return this._oscillator.phase;\n    }\n    set phase(phase) {\n        this._oscillator.phase = phase;\n    }\n    /**\n     * The source type of the oscillator.\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare\");\n     * console.log(omniOsc.sourceType); // 'fm'\n     */\n    get sourceType() {\n        return this._sourceType;\n    }\n    set sourceType(sType) {\n        // the basetype defaults to sine\n        let baseType = \"sine\";\n        if (this._oscillator.type !== \"pwm\" && this._oscillator.type !== \"pulse\") {\n            baseType = this._oscillator.type;\n        }\n        // set the type\n        if (sType === \"fm\") {\n            this.type = \"fm\" + baseType;\n        }\n        else if (sType === \"am\") {\n            this.type = \"am\" + baseType;\n        }\n        else if (sType === \"fat\") {\n            this.type = \"fat\" + baseType;\n        }\n        else if (sType === \"oscillator\") {\n            this.type = baseType;\n        }\n        else if (sType === \"pulse\") {\n            this.type = \"pulse\";\n        }\n        else if (sType === \"pwm\") {\n            this.type = \"pwm\";\n        }\n    }\n    _getOscType(osc, sourceType) {\n        return osc instanceof OmniOscillatorSourceMap[sourceType];\n    }\n    /**\n     * The base type of the oscillator. See [[Oscillator.baseType]]\n     * @example\n     * const omniOsc = new Tone.OmniOscillator(440, \"fmsquare4\");\n     * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);\n     */\n    get baseType() {\n        return this._oscillator.baseType;\n    }\n    set baseType(baseType) {\n        if (!this._getOscType(this._oscillator, \"pulse\") &&\n            !this._getOscType(this._oscillator, \"pwm\") &&\n            baseType !== \"pulse\" && baseType !== \"pwm\") {\n            this._oscillator.baseType = baseType;\n        }\n    }\n    /**\n     * The width of the oscillator when sourceType === \"pulse\".\n     * See [[PWMOscillator.width]]\n     */\n    get width() {\n        if (this._getOscType(this._oscillator, \"pulse\")) {\n            return this._oscillator.width;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * The number of detuned oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get count() {\n        if (this._getOscType(this._oscillator, \"fat\")) {\n            return this._oscillator.count;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set count(count) {\n        if (this._getOscType(this._oscillator, \"fat\") && isNumber(count)) {\n            this._oscillator.count = count;\n        }\n    }\n    /**\n     * The detune spread between the oscillators when sourceType === \"fat\".\n     * See [[FatOscillator.count]]\n     */\n    get spread() {\n        if (this._getOscType(this._oscillator, \"fat\")) {\n            return this._oscillator.spread;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set spread(spread) {\n        if (this._getOscType(this._oscillator, \"fat\") && isNumber(spread)) {\n            this._oscillator.spread = spread;\n        }\n    }\n    /**\n     * The type of the modulator oscillator. Only if the oscillator is set to \"am\" or \"fm\" types.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get modulationType() {\n        if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n            return this._oscillator.modulationType;\n        }\n        else {\n            return undefined;\n        }\n    }\n    set modulationType(mType) {\n        if ((this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) && isString(mType)) {\n            this._oscillator.modulationType = mType;\n        }\n    }\n    /**\n     * The modulation index when the sourceType === \"fm\"\n     * See [[FMOscillator]].\n     */\n    get modulationIndex() {\n        if (this._getOscType(this._oscillator, \"fm\")) {\n            return this._oscillator.modulationIndex;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.\n     * See [[AMOscillator]] or [[FMOscillator]]\n     */\n    get harmonicity() {\n        if (this._getOscType(this._oscillator, \"fm\") || this._getOscType(this._oscillator, \"am\")) {\n            return this._oscillator.harmonicity;\n        }\n        else {\n            return undefined;\n        }\n    }\n    /**\n     * The modulationFrequency Signal of the oscillator when sourceType === \"pwm\"\n     * see [[PWMOscillator]]\n     * @min 0.1\n     * @max 5\n     */\n    get modulationFrequency() {\n        if (this._getOscType(this._oscillator, \"pwm\")) {\n            return this._oscillator.modulationFrequency;\n        }\n        else {\n            return undefined;\n        }\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    dispose() {\n        super.dispose();\n        this.detune.dispose();\n        this.frequency.dispose();\n        this._oscillator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=OmniOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { deepEquals, optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { isDefined } from \"../../core/util/TypeCheck\";\nimport { Signal } from \"../../signal/Signal\";\nimport { Source } from \"../Source\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { ToneOscillatorNode } from \"./ToneOscillatorNode\";\nimport { assertRange } from \"../../core/util/Debug\";\nimport { clamp } from \"../../core/util/Math\";\n/**\n * Oscillator supports a number of features including\n * phase rotation, multiple oscillator types (see Oscillator.type),\n * and Transport syncing (see Oscillator.syncFrequency).\n *\n * @example\n * // make and start a 440hz sine tone\n * const osc = new Tone.Oscillator(440, \"sine\").toDestination().start();\n * @category Source\n */\nexport class Oscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"Oscillator\";\n        /**\n         * the main oscillator\n         */\n        this._oscillator = null;\n        const options = optionsFromArguments(Oscillator.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        this.frequency = new Signal({\n            context: this.context,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        readOnly(this, \"frequency\");\n        this.detune = new Signal({\n            context: this.context,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, \"detune\");\n        this._partials = options.partials;\n        this._partialCount = options.partialCount;\n        this._type = options.type;\n        if (options.partialCount && options.type !== \"custom\") {\n            this._type = this.baseType + options.partialCount.toString();\n        }\n        this.phase = options.phase;\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            partialCount: 0,\n            partials: [],\n            phase: 0,\n            type: \"sine\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        const computedTime = this.toSeconds(time);\n        // new oscillator with previous values\n        const oscillator = new ToneOscillatorNode({\n            context: this.context,\n            onended: () => this.onstop(this),\n        });\n        this._oscillator = oscillator;\n        if (this._wave) {\n            this._oscillator.setPeriodicWave(this._wave);\n        }\n        else {\n            this._oscillator.type = this._type;\n        }\n        // connect the control signal to the oscillator frequency & detune\n        this._oscillator.connect(this.output);\n        this.frequency.connect(this._oscillator.frequency);\n        this.detune.connect(this._oscillator.detune);\n        // start the oscillator\n        this._oscillator.start(computedTime);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        const computedTime = this.toSeconds(time);\n        if (this._oscillator) {\n            this._oscillator.stop(computedTime);\n        }\n    }\n    /**\n     * Restart the oscillator. Does not stop the oscillator, but instead\n     * just cancels any scheduled 'stop' from being invoked.\n     */\n    _restart(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"restart\", computedTime);\n        if (this._oscillator) {\n            this._oscillator.cancelStop();\n        }\n        this._state.cancel(computedTime);\n        return this;\n    }\n    /**\n     * Sync the signal to the Transport's bpm. Any changes to the transports bpm,\n     * will also affect the oscillators frequency.\n     * @example\n     * const osc = new Tone.Oscillator().toDestination().start();\n     * osc.frequency.value = 440;\n     * // the ratio between the bpm and the frequency will be maintained\n     * osc.syncFrequency();\n     * // double the tempo\n     * Tone.Transport.bpm.value *= 2;\n     * // the frequency of the oscillator is doubled to 880\n     */\n    syncFrequency() {\n        this.context.transport.syncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Unsync the oscillator's frequency from the Transport.\n     * See Oscillator.syncFrequency\n     */\n    unsyncFrequency() {\n        this.context.transport.unsyncSignal(this.frequency);\n        return this;\n    }\n    /**\n     * Get a cached periodic wave. Avoids having to recompute\n     * the oscillator values when they have already been computed\n     * with the same values.\n     */\n    _getCachedPeriodicWave() {\n        if (this._type === \"custom\") {\n            const oscProps = Oscillator._periodicWaveCache.find(description => {\n                return description.phase === this._phase &&\n                    deepEquals(description.partials, this._partials);\n            });\n            return oscProps;\n        }\n        else {\n            const oscProps = Oscillator._periodicWaveCache.find(description => {\n                return description.type === this._type &&\n                    description.phase === this._phase;\n            });\n            this._partialCount = oscProps ? oscProps.partialCount : this._partialCount;\n            return oscProps;\n        }\n    }\n    get type() {\n        return this._type;\n    }\n    set type(type) {\n        this._type = type;\n        const isBasicType = [\"sine\", \"square\", \"sawtooth\", \"triangle\"].indexOf(type) !== -1;\n        if (this._phase === 0 && isBasicType) {\n            this._wave = undefined;\n            this._partialCount = 0;\n            // just go with the basic approach\n            if (this._oscillator !== null) {\n                // already tested that it's a basic type\n                this._oscillator.type = type;\n            }\n        }\n        else {\n            // first check if the value is cached\n            const cache = this._getCachedPeriodicWave();\n            if (isDefined(cache)) {\n                const { partials, wave } = cache;\n                this._wave = wave;\n                this._partials = partials;\n                if (this._oscillator !== null) {\n                    this._oscillator.setPeriodicWave(this._wave);\n                }\n            }\n            else {\n                const [real, imag] = this._getRealImaginary(type, this._phase);\n                const periodicWave = this.context.createPeriodicWave(real, imag);\n                this._wave = periodicWave;\n                if (this._oscillator !== null) {\n                    this._oscillator.setPeriodicWave(this._wave);\n                }\n                // set the cache\n                Oscillator._periodicWaveCache.push({\n                    imag,\n                    partialCount: this._partialCount,\n                    partials: this._partials,\n                    phase: this._phase,\n                    real,\n                    type: this._type,\n                    wave: this._wave,\n                });\n                if (Oscillator._periodicWaveCache.length > 100) {\n                    Oscillator._periodicWaveCache.shift();\n                }\n            }\n        }\n    }\n    get baseType() {\n        return this._type.replace(this.partialCount.toString(), \"\");\n    }\n    set baseType(baseType) {\n        if (this.partialCount && this._type !== \"custom\" && baseType !== \"custom\") {\n            this.type = baseType + this.partialCount;\n        }\n        else {\n            this.type = baseType;\n        }\n    }\n    get partialCount() {\n        return this._partialCount;\n    }\n    set partialCount(p) {\n        assertRange(p, 0);\n        let type = this._type;\n        const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(this._type);\n        if (partial) {\n            type = partial[1];\n        }\n        if (this._type !== \"custom\") {\n            if (p === 0) {\n                this.type = type;\n            }\n            else {\n                this.type = type + p.toString();\n            }\n        }\n        else {\n            // extend or shorten the partials array\n            const fullPartials = new Float32Array(p);\n            // copy over the partials array\n            this._partials.forEach((v, i) => fullPartials[i] = v);\n            this._partials = Array.from(fullPartials);\n            this.type = this._type;\n        }\n    }\n    /**\n     * Returns the real and imaginary components based\n     * on the oscillator type.\n     * @returns [real: Float32Array, imaginary: Float32Array]\n     */\n    _getRealImaginary(type, phase) {\n        const fftSize = 4096;\n        let periodicWaveSize = fftSize / 2;\n        const real = new Float32Array(periodicWaveSize);\n        const imag = new Float32Array(periodicWaveSize);\n        let partialCount = 1;\n        if (type === \"custom\") {\n            partialCount = this._partials.length + 1;\n            this._partialCount = this._partials.length;\n            periodicWaveSize = partialCount;\n            // if the partial count is 0, don't bother doing any computation\n            if (this._partials.length === 0) {\n                return [real, imag];\n            }\n        }\n        else {\n            const partial = /^(sine|triangle|square|sawtooth)(\\d+)$/.exec(type);\n            if (partial) {\n                partialCount = parseInt(partial[2], 10) + 1;\n                this._partialCount = parseInt(partial[2], 10);\n                type = partial[1];\n                partialCount = Math.max(partialCount, 2);\n                periodicWaveSize = partialCount;\n            }\n            else {\n                this._partialCount = 0;\n            }\n            this._partials = [];\n        }\n        for (let n = 1; n < periodicWaveSize; ++n) {\n            const piFactor = 2 / (n * Math.PI);\n            let b;\n            switch (type) {\n                case \"sine\":\n                    b = (n <= partialCount) ? 1 : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"square\":\n                    b = (n & 1) ? 2 * piFactor : 0;\n                    this._partials[n - 1] = b;\n                    break;\n                case \"sawtooth\":\n                    b = piFactor * ((n & 1) ? 1 : -1);\n                    this._partials[n - 1] = b;\n                    break;\n                case \"triangle\":\n                    if (n & 1) {\n                        b = 2 * (piFactor * piFactor) * ((((n - 1) >> 1) & 1) ? -1 : 1);\n                    }\n                    else {\n                        b = 0;\n                    }\n                    this._partials[n - 1] = b;\n                    break;\n                case \"custom\":\n                    b = this._partials[n - 1];\n                    break;\n                default:\n                    throw new TypeError(\"Oscillator: invalid type: \" + type);\n            }\n            if (b !== 0) {\n                real[n] = -b * Math.sin(phase * n);\n                imag[n] = b * Math.cos(phase * n);\n            }\n            else {\n                real[n] = 0;\n                imag[n] = 0;\n            }\n        }\n        return [real, imag];\n    }\n    /**\n     * Compute the inverse FFT for a given phase.\n     */\n    _inverseFFT(real, imag, phase) {\n        let sum = 0;\n        const len = real.length;\n        for (let i = 0; i < len; i++) {\n            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);\n        }\n        return sum;\n    }\n    /**\n     * Returns the initial value of the oscillator when stopped.\n     * E.g. a \"sine\" oscillator with phase = 90 would return an initial value of -1.\n     */\n    getInitialValue() {\n        const [real, imag] = this._getRealImaginary(this._type, 0);\n        let maxValue = 0;\n        const twoPi = Math.PI * 2;\n        const testPositions = 32;\n        // check for peaks in 16 places\n        for (let i = 0; i < testPositions; i++) {\n            maxValue = Math.max(this._inverseFFT(real, imag, (i / testPositions) * twoPi), maxValue);\n        }\n        return clamp(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);\n    }\n    get partials() {\n        return this._partials.slice(0, this.partialCount);\n    }\n    set partials(partials) {\n        this._partials = partials;\n        this._partialCount = this._partials.length;\n        if (partials.length) {\n            this.type = \"custom\";\n        }\n    }\n    get phase() {\n        return this._phase * (180 / Math.PI);\n    }\n    set phase(phase) {\n        this._phase = phase * Math.PI / 180;\n        // reset the type\n        this.type = this._type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this._oscillator !== null) {\n            this._oscillator.dispose();\n        }\n        this._wave = undefined;\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n/**\n * Cache the periodic waves to avoid having to redo computations\n */\nOscillator._periodicWaveCache = [];\n//# sourceMappingURL=Oscillator.js.map","import { __awaiter } from \"tslib\";\nimport { OfflineContext } from \"../../core/context/OfflineContext\";\n/**\n * Render a segment of the oscillator to an offline context and return the results as an array\n */\nexport function generateWaveform(instance, length) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const duration = length / instance.context.sampleRate;\n        const context = new OfflineContext(1, duration, instance.context.sampleRate);\n        const clone = new instance.constructor(Object.assign(instance.get(), {\n            // should do 2 iterations\n            frequency: 2 / duration,\n            // zero out the detune\n            detune: 0,\n            context\n        })).toDestination();\n        clone.start(0);\n        const buffer = yield context.render();\n        return buffer.getChannelData(0);\n    });\n}\n//# sourceMappingURL=OscillatorInterface.js.map","import { __awaiter } from \"tslib\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Multiply } from \"../../signal/Multiply\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\nimport { PulseOscillator } from \"./PulseOscillator\";\n/**\n * PWMOscillator modulates the width of a Tone.PulseOscillator\n * at the modulationFrequency. This has the effect of continuously\n * changing the timbre of the oscillator by altering the harmonics\n * generated.\n * @offline 0.1 1\n * @example\n * const pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();\n * @category Source\n */\nexport class PWMOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]));\n        this.name = \"PWMOscillator\";\n        this.sourceType = \"pwm\";\n        /**\n         * Scale the oscillator so it doesn't go silent\n         * at the extreme values.\n         */\n        this._scale = new Multiply({\n            context: this.context,\n            value: 2,\n        });\n        const options = optionsFromArguments(PWMOscillator.getDefaults(), arguments, [\"frequency\", \"modulationFrequency\"]);\n        this._pulse = new PulseOscillator({\n            context: this.context,\n            frequency: options.modulationFrequency,\n        });\n        // change the pulse oscillator type\n        this._pulse.carrierType = \"sine\";\n        this.modulationFrequency = this._pulse.frequency;\n        this._modulator = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n        });\n        this.frequency = this._modulator.frequency;\n        this.detune = this._modulator.detune;\n        // connections\n        this._modulator.chain(this._scale, this._pulse.width);\n        this._pulse.connect(this.output);\n        readOnly(this, [\"modulationFrequency\", \"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            modulationFrequency: 0.4,\n            phase: 0,\n            type: \"pwm\",\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._modulator.start(time);\n        this._pulse.start(time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._modulator.stop(time);\n        this._pulse.stop(time);\n    }\n    /**\n     * restart the oscillator\n     */\n    _restart(time) {\n        this._modulator.restart(time);\n        this._pulse.restart(time);\n    }\n    /**\n     * The type of the oscillator. Always returns \"pwm\".\n     */\n    get type() {\n        return \"pwm\";\n    }\n    /**\n     * The baseType of the oscillator. Always returns \"pwm\".\n     */\n    get baseType() {\n        return \"pwm\";\n    }\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get partials() {\n        return [];\n    }\n    /**\n     * No partials for this waveform type.\n     */\n    get partialCount() {\n        return 0;\n    }\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get phase() {\n        return this._modulator.phase;\n    }\n    set phase(phase) {\n        this._modulator.phase = phase;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        this._pulse.dispose();\n        this._scale.dispose();\n        this._modulator.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PWMOscillator.js.map","import { __awaiter } from \"tslib\";\nimport { Gain } from \"../../core/context/Gain\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { readOnly } from \"../../core/util/Interface\";\nimport { Signal } from \"../../signal/Signal\";\nimport { WaveShaper } from \"../../signal/WaveShaper\";\nimport { Source } from \"../Source\";\nimport { Oscillator } from \"./Oscillator\";\nimport { generateWaveform } from \"./OscillatorInterface\";\n/**\n * PulseOscillator is an oscillator with control over pulse width,\n * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is\n * a square wave.\n * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).\n * ```\n *    width = -0.25        width = 0.0          width = 0.25\n *\n *   +-----+            +-------+       +    +-------+     +-+\n *   |     |            |       |       |            |     |\n *   |     |            |       |       |            |     |\n * +-+     +-------+    +       +-------+            +-----+\n *\n *\n *    width = -0.5                              width = 0.5\n *\n *     +---+                                 +-------+   +---+\n *     |   |                                         |   |\n *     |   |                                         |   |\n * +---+   +-------+                                 +---+\n *\n *\n *    width = -0.75                             width = 0.75\n *\n *       +-+                                 +-------+ +-----+\n *       | |                                         | |\n *       | |                                         | |\n * +-----+ +-------+                                 +-+\n * ```\n * @offline 0.1 1\n * @example\n * const pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();\n * @category Source\n */\nexport class PulseOscillator extends Source {\n    constructor() {\n        super(optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]));\n        this.name = \"PulseOscillator\";\n        /**\n         * gate the width amount\n         */\n        this._widthGate = new Gain({\n            context: this.context,\n            gain: 0,\n        });\n        /**\n         * Threshold the signal to turn it into a square\n         */\n        this._thresh = new WaveShaper({\n            context: this.context,\n            mapping: val => val <= 0 ? -1 : 1,\n        });\n        const options = optionsFromArguments(PulseOscillator.getDefaults(), arguments, [\"frequency\", \"width\"]);\n        this.width = new Signal({\n            context: this.context,\n            units: \"audioRange\",\n            value: options.width,\n        });\n        this._triangle = new Oscillator({\n            context: this.context,\n            detune: options.detune,\n            frequency: options.frequency,\n            onstop: () => this.onstop(this),\n            phase: options.phase,\n            type: \"triangle\",\n        });\n        this.frequency = this._triangle.frequency;\n        this.detune = this._triangle.detune;\n        // connections\n        this._triangle.chain(this._thresh, this.output);\n        this.width.chain(this._widthGate, this._thresh);\n        readOnly(this, [\"width\", \"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(Source.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            phase: 0,\n            type: \"pulse\",\n            width: 0.2,\n        });\n    }\n    /**\n     * start the oscillator\n     */\n    _start(time) {\n        time = this.toSeconds(time);\n        this._triangle.start(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    }\n    /**\n     * stop the oscillator\n     */\n    _stop(time) {\n        time = this.toSeconds(time);\n        this._triangle.stop(time);\n        // the width is still connected to the output.\n        // that needs to be stopped also\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(0, time);\n    }\n    _restart(time) {\n        this._triangle.restart(time);\n        this._widthGate.gain.cancelScheduledValues(time);\n        this._widthGate.gain.setValueAtTime(1, time);\n    }\n    /**\n     * The phase of the oscillator in degrees.\n     */\n    get phase() {\n        return this._triangle.phase;\n    }\n    set phase(phase) {\n        this._triangle.phase = phase;\n    }\n    /**\n     * The type of the oscillator. Always returns \"pulse\".\n     */\n    get type() {\n        return \"pulse\";\n    }\n    /**\n     * The baseType of the oscillator. Always returns \"pulse\".\n     */\n    get baseType() {\n        return \"pulse\";\n    }\n    /**\n     * The partials of the waveform. Cannot set partials for this waveform type\n     */\n    get partials() {\n        return [];\n    }\n    /**\n     * No partials for this waveform type.\n     */\n    get partialCount() {\n        return 0;\n    }\n    /**\n     * *Internal use* The carrier oscillator type is fed through the\n     * waveshaper node to create the pulse. Using different carrier oscillators\n     * changes oscillator's behavior.\n     */\n    set carrierType(type) {\n        this._triangle.type = type;\n    }\n    asArray(length = 1024) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return generateWaveform(this, length);\n        });\n    }\n    /**\n     * Clean up method.\n     */\n    dispose() {\n        super.dispose();\n        this._triangle.dispose();\n        this.width.dispose();\n        this._widthGate.dispose();\n        this._thresh.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=PulseOscillator.js.map","import { connect } from \"../../core/context/ToneAudioNode\";\nimport { Param } from \"../../core/context/Param\";\nimport { optionsFromArguments } from \"../../core/util/Defaults\";\nimport { OneShotSource } from \"../OneShotSource\";\nimport { readOnly } from \"../../core/util/Interface\";\n/**\n * Wrapper around the native fire-and-forget OscillatorNode.\n * Adds the ability to reschedule the stop method.\n * ***[[Oscillator]] is better for most use-cases***\n * @category Source\n */\nexport class ToneOscillatorNode extends OneShotSource {\n    constructor() {\n        super(optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]));\n        this.name = \"ToneOscillatorNode\";\n        /**\n         * The oscillator\n         */\n        this._oscillator = this.context.createOscillator();\n        this._internalChannels = [this._oscillator];\n        const options = optionsFromArguments(ToneOscillatorNode.getDefaults(), arguments, [\"frequency\", \"type\"]);\n        connect(this._oscillator, this._gainNode);\n        this.type = options.type;\n        this.frequency = new Param({\n            context: this.context,\n            param: this._oscillator.frequency,\n            units: \"frequency\",\n            value: options.frequency,\n        });\n        this.detune = new Param({\n            context: this.context,\n            param: this._oscillator.detune,\n            units: \"cents\",\n            value: options.detune,\n        });\n        readOnly(this, [\"frequency\", \"detune\"]);\n    }\n    static getDefaults() {\n        return Object.assign(OneShotSource.getDefaults(), {\n            detune: 0,\n            frequency: 440,\n            type: \"sine\",\n        });\n    }\n    /**\n     * Start the oscillator node at the given time\n     * @param  time When to start the oscillator\n     */\n    start(time) {\n        const computedTime = this.toSeconds(time);\n        this.log(\"start\", computedTime);\n        this._startGain(computedTime);\n        this._oscillator.start(computedTime);\n        return this;\n    }\n    _stopSource(time) {\n        this._oscillator.stop(time);\n    }\n    /**\n     * Sets an arbitrary custom periodic waveform given a PeriodicWave.\n     * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave\n     */\n    setPeriodicWave(periodicWave) {\n        this._oscillator.setPeriodicWave(periodicWave);\n        return this;\n    }\n    /**\n     * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'\n     */\n    get type() {\n        return this._oscillator.type;\n    }\n    set type(type) {\n        this._oscillator.type = type;\n    }\n    /**\n     * Clean up.\n     */\n    dispose() {\n        super.dispose();\n        if (this.state === \"started\") {\n            this.stop();\n        }\n        this._oscillator.disconnect();\n        this.frequency.dispose();\n        this.detune.dispose();\n        return this;\n    }\n}\n//# sourceMappingURL=ToneOscillatorNode.js.map","export const version = \"14.7.2\";\n//# sourceMappingURL=version.js.map","import { Component, HostBinding, HostListener, Inject, Input, NgZone, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { Melody } from '../../models/melody/melody.model';\nimport { AUDIFICATION, t, tA11y } from '../../i18n';\nimport { formatX, formatY, humanizeMeasureName } from '../../utils/formatters';\nimport { LineChartComponent } from '../line-chart/line-chart.component';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { AudificationPreference } from '../../services/preference/types';\nimport { ascendingDate, ascendingNumber } from '../../utils/comparators';\nimport { ScreenReaderComponent } from '../screen-reader/screen-reader.component';\n\n@Component({\n  selector: 'app-line-chart-audification',\n  templateUrl: './line-chart-audification.component.html',\n  styleUrls: ['./line-chart-audification.component.scss'],\n})\nexport class LineChartAudificationComponent implements AudificationPreference, OnInit, OnDestroy {\n  @ViewChild(ScreenReaderComponent, { static: true }) screenReaderComponent: ScreenReaderComponent;\n\n  // even though change detection doesn't work for dynamically loaded components, leave @Input() to indicate that they will be injected.\n  @Input() enabled: boolean;\n  @Input() lowestPitch: number;\n  @Input() highestPitch: number;\n  @Input() noteDuration: number;\n  @Input() readBefore: boolean;\n  @Input() readAfter: boolean;\n\n  melody?: Melody;\n  private destroy$ = new Subject();\n  private domain: Date[];\n  private range: number[];\n  @HostBinding('attr.tabindex') private readonly tabindex = 0;\n  private resumeTimeoutId: number | null = null;\n\n  constructor(\n    @Inject('host') private host: LineChartComponent,\n    private zone: NgZone,\n  ) {\n    this.handleSeek = this.handleSeek.bind(this);\n  }\n\n  get INSTRUCTIONS() {\n    return t(AUDIFICATION.INSTRUCTIONS);\n  }\n\n  get INSTRUCTIONS_A11Y() {\n    return tA11y(AUDIFICATION.INSTRUCTIONS);\n  }\n\n  get data() {\n    return this.host.data;\n  }\n\n  get measureNames() {\n    return this.host.measureNames;\n  }\n\n  set activeDatum(activeDatum) {\n    this.host.activeDatum = activeDatum;\n  }\n\n  ngOnInit() {\n    this.host.data$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(data => {\n        const values = data.map(datum => datum.value);\n        this.domain = data.map(d => d.date).sort(ascendingDate);\n        this.range = data.map(d => d.value).sort(ascendingNumber);\n        this.melody?.dispose();\n        this.melody = new Melody(values, [this.lowestPitch, this.highestPitch], this.noteDuration, this.handleSeek);\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.melody?.dispose();\n  }\n\n  handleSeek(index) {\n    // since Tone.js is running outside of the Angular zone, it needs to reenter the zone to trigger change detection.\n    this.zone.run((() => {\n      this.activeDatum = this.data[index];\n    }));\n  }\n\n  @HostListener('keydown', ['$event'])\n  async handleKeyDown($event: KeyboardEvent) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    const { key, shiftKey, repeat } = $event;\n    if (!this.melody || repeat) {\n      return;\n    }\n    if (key === ' ') {\n      this.resumeMelody(shiftKey);\n    } else if (key === 'x') {\n      this.readOutDomain();\n    } else if (key === 'y') {\n      this.readOutRange();\n    } else if (key === 'l') {\n      this.readOutMeasure();\n    } else if ('0' <= key && key <= '9') {\n      const datumIndex = Math.floor(+key / 10 * this.data.length);\n      this.melody.seekTo(datumIndex, true);\n      this.readOutCurrentDatum();\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  handleKeyUp($event: KeyboardEvent) {\n    if (!this.melody) {\n      return;\n    }\n    $event.preventDefault();\n    $event.stopPropagation();\n    const { key } = $event;\n    if (key === ' ') {\n      this.pauseMelody();\n    }\n  }\n\n  @HostListener('blur', ['$event'])\n  handleBlur() {\n    this.melody?.pause();\n  }\n\n  private resumeMelody(reversed: boolean) {\n    if (this.readBefore) {\n      const delay = this.readOutCurrentDatum();\n      const duration = 2000; // an estimated upper bound of how long it would take to read out\n      this.resumeTimeoutId = window.setTimeout(async () => {\n        this.resumeTimeoutId = null;\n        this.melody?.resume(reversed);\n      }, delay + duration);\n    } else {\n      this.melody?.resume(reversed);\n    }\n  }\n\n  private pauseMelody() {\n    if (this.resumeTimeoutId !== null) {\n      window.clearTimeout(this.resumeTimeoutId);\n      this.resumeTimeoutId = null;\n    } else {\n      this.melody?.pause();\n      if (this.readAfter) {\n        this.readOutCurrentDatum();\n      }\n    }\n  }\n\n  private readOutDomain() {\n    return this.screenReaderComponent.readOut(t(AUDIFICATION.DOMAIN, {\n      min: formatX(this.domain[0]),\n      max: formatX(this.domain[this.domain.length - 1]),\n    }));\n  }\n\n  private readOutRange() {\n    return this.screenReaderComponent.readOut(t(AUDIFICATION.RANGE, {\n      min: formatY(this.range[0]),\n      max: formatY(this.range[this.range.length - 1]),\n    }));\n  }\n\n  private readOutMeasure() {\n    // TODO: read the entire measureNames\n    return this.screenReaderComponent.readOut(humanizeMeasureName(this.measureNames[0]));\n  }\n\n  private readOutCurrentDatum() {\n    if (!this.melody) {\n      return 0;\n    }\n    const { date, value } = this.data[this.melody.currentDatumIndex];\n    return this.screenReaderComponent.readOut(t(AUDIFICATION.ACTIVE_DATUM, {\n      x: formatX(date),\n      y: formatY(value),\n    }));\n  }\n}\n","<div role=\"img\" class=\"instructions\"\n     [innerHTML]=\"INSTRUCTIONS\"\n     [attr.aria-label]=\"INSTRUCTIONS_A11Y\">\n</div>\n<app-screen-reader></app-screen-reader>\n","import { NgModule } from '@angular/core';\nimport { LineChartAudificationComponent } from './line-chart-audification.component';\nimport { CommonModule } from '@angular/common';\nimport { ScreenReaderModule } from '../screen-reader/screen-reader.module';\nimport { LazyA11yModule } from '../../directives/a11y-placeholder/types';\n\n@NgModule({\n  declarations: [\n    LineChartAudificationComponent,\n  ],\n  imports: [\n    CommonModule,\n    ScreenReaderModule,\n  ],\n  exports: [\n    LineChartAudificationComponent,\n  ],\n})\nexport class LineChartAudificationModule implements LazyA11yModule<LineChartAudificationComponent> {\n  A11yComponent = LineChartAudificationComponent;\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-screen-reader',\n  templateUrl: './screen-reader.component.html',\n  styleUrls: ['./screen-reader.component.scss'],\n})\nexport class ScreenReaderComponent {\n  @Input() repetitionDelay = 500; // duration (in ms) for which empty the live text when the same text needs to be read out consequently\n\n  liveText: string | null = null;\n  private readOutTimeoutId: number | null = null;\n\n  /**\n   * Make a screen-reader software read out the text.\n   *\n   * @param text The text to read out.\n   * @return The delay before reading out.\n   */\n  readOut(text: string) {\n    if (this.readOutTimeoutId !== null) {\n      window.clearTimeout(this.readOutTimeoutId);\n      this.readOutTimeoutId = null;\n    }\n    const repetitive = this.liveText === text;\n    if (repetitive) {\n      this.liveText = null;\n      this.readOutTimeoutId = window.setTimeout(() => {\n        this.readOutTimeoutId = null;\n        this.readOut(text);\n      }, this.repetitionDelay);\n    } else {\n      this.liveText = text;\n    }\n    return repetitive ? this.repetitionDelay : 0;\n  }\n}\n","<div class=\"live-text\" aria-live=\"assertive\" [innerText]=\"liveText\"></div>\n","import { NgModule } from '@angular/core';\nimport { ScreenReaderComponent } from './screen-reader.component';\n\n@NgModule({\n  declarations: [\n    ScreenReaderComponent,\n  ],\n  exports: [\n    ScreenReaderComponent,\n  ],\n})\nexport class ScreenReaderModule {\n}\n","import * as Tone from 'tone';\n\nexport type OnSeek = (index: number) => void;\n\nexport class Melody {\n  currentDatumIndex = 0;\n  private synth = new Tone.Synth().toDestination();\n  private inclusive = true; // if true, playing the melody starting inclusively from currentDatumIndex\n  private reversed = false; // if true, playing the melody backward\n  private readonly frequencies: number[];\n  private timeoutId: number | null = null;\n\n  constructor(\n    private values: number[],\n    private frequencyRange: [number, number],\n    private noteDuration: number, // duration (in ms) of a note\n    private onSeek?: OnSeek,\n  ) {\n    const minValue = Math.min(...values);\n    const maxValue = Math.max(...values);\n    const [minFrequency, maxFrequency] = this.frequencyRange;\n    const minKeyNumber = Melody.getKeyNumber(minFrequency);\n    const maxKeyNumber = Melody.getKeyNumber(maxFrequency);\n    this.frequencies = values.map(value => {\n      const keyNumber = (value - minValue) / (maxValue - minValue) * (maxKeyNumber - minKeyNumber) + minKeyNumber;\n      return Melody.getFrequency(keyNumber);\n    });\n  }\n\n  get duration() {\n    return this.noteDuration * this.values.length;\n  }\n\n  get isPlaying() {\n    return this.timeoutId !== null;\n  }\n\n  get isEnded() {\n    return (\n      this.reversed && this.currentDatumIndex === 0 ||\n      !this.reversed && this.currentDatumIndex === this.values.length - 1\n    );\n  }\n\n  get nextDatumIndex() {\n    if (this.isEnded) {\n      return this.reverseDatumIndex(this.currentDatumIndex); // bring playhead to the opposite end\n    }\n    const offset = this.inclusive ? 0 : (this.reversed ? -1 : +1);\n    return this.currentDatumIndex + offset;\n  }\n\n  private static getKeyNumber(frequency: number) {\n    return Math.log2(frequency / 440) * 12 + 49;\n  }\n\n  private static getFrequency(keyNumber: number) {\n    return Math.pow(2, (keyNumber - 49) / 12) * 440;\n  }\n\n  async resume(reversed: boolean) {\n    if (Tone.getContext().state === 'suspended') {\n      await Tone.start();\n    }\n    if (!this.isPlaying) {\n      this.reversed = reversed;\n      this.playNextNote();\n    }\n  }\n\n  pause() {\n    if (this.timeoutId !== null) {\n      window.clearInterval(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  seekTo(datumIndex: number, inclusive = false) {\n    this.currentDatumIndex = datumIndex;\n    this.inclusive = this.isEnded || inclusive;\n    this.onSeek?.(this.currentDatumIndex);\n  }\n\n  dispose() {\n    this.pause();\n    this.synth.dispose();\n  }\n\n  private playNextNote() {\n    this.seekTo(this.nextDatumIndex);\n    const frequency = this.frequencies[this.currentDatumIndex];\n    this.synth.triggerAttackRelease(frequency, this.noteDuration / 1000);\n    if (!this.isEnded) {\n      this.timeoutId = window.setTimeout(() => {\n        this.timeoutId = null;\n        this.playNextNote();\n      }, this.noteDuration);\n    }\n  }\n\n  private reverseDatumIndex(index: number) {\n    return (this.values.length - 1) - index;\n  }\n}\n","export function ascendingNumber(a: number, b: number) {\n  return a - b;\n}\n\nexport function descendingNumber(a: number, b: number) {\n  return -ascendingNumber(a, b);\n}\n\nexport function ascendingDate(a: Date, b: Date) {\n  return ascendingNumber(a.getTime(), b.getTime());\n}\n\nexport function descendingDate(a: Date, b: Date) {\n  return -ascendingDate(a, b);\n}\n"]}