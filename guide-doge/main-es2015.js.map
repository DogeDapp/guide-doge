{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app-routing.module.ts","./src/app.component.ts","./src/app.component.html","./src/app.module.ts","./src/assets/i18n/en.ts","./src/assets/i18n/index.ts","./src/assets/i18n/types.ts","./src/assets/i18n/utils.ts","./src/components/line-chart-audification/line-chart-audification.component.ts","./src/components/line-chart-audification/line-chart-audification.component.html","./src/components/line-chart-audification/line-chart-audification.module.ts","./src/components/line-chart-visualization/line-chart-visualization.component.ts","./src/components/line-chart-visualization/line-chart-visualization.module.ts","./src/components/line-chart/line-chart.component.ts","./src/components/line-chart/line-chart.component.html","./src/components/line-chart/line-chart.module.ts","./src/d3/base.d3.ts","./src/d3/line-chart.d3.ts","./src/d3/xy-chart.d3.ts","./src/environments/environment.ts","./src/main.ts","./src/models/data-cube/data-cube.model.ts","./src/models/data-cube/filters.ts","./src/models/data-cube/generation.ts","./src/models/data-cube/presets.ts","./src/models/data-cube/types.ts","./src/models/melody/melody.model.ts","./src/services/data/data.module.ts","./src/services/data/data.service.ts","./src/utils/formatters.ts","crypto (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\nimport { GUIDE_DOGE, t } from './assets/i18n';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  get TITLE() {\n    return t(GUIDE_DOGE.TITLE);\n  }\n}\n","<div class=\"container\">\n  <h1>{{TITLE}}</h1>\n  <app-line-chart></app-line-chart>\n</div>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LineChartModule } from './components/line-chart/line-chart.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    LineChartModule,\n  ],\n  bootstrap: [\n    AppComponent,\n  ],\n})\nexport class AppModule {\n}\n","import { AUDIFICATION, GUIDE_DOGE, I18n, VISUALIZATION } from './types';\n\nconst en: I18n = {\n  [GUIDE_DOGE.TITLE]: 'Guide-Doge',\n  [GUIDE_DOGE.VISUALIZATION]: 'Data visualization',\n  [GUIDE_DOGE.AUDIFICATION]: 'Data audification',\n\n  [VISUALIZATION.ACTIVE_DATUM]: '%(y)s on %(x)s',\n\n  [AUDIFICATION.INSTRUCTIONS]: 'Hold down <kbd>SPACE</kbd> to play audification and <kbd>SHIFT</kbd> + <kbd>SPACE</kbd> to play it backward. <br/>Press <kbd>X</kbd> or <kbd>Y</kbd> to read the domain and range. <br/>Press <kbd>0</kbd> ... <kbd>9</kbd> to move playhead.',\n  [AUDIFICATION.DOMAIN]: 'Domain from %(min)s to %(max)s',\n  [AUDIFICATION.RANGE]: 'Range from %(min)s to %(max)s',\n  [AUDIFICATION.ACTIVE_DATUM]: '%(y)s on %(x)s',\n};\n\nexport default en;\n","export * from './types';\nexport * from './utils';\n","export enum GUIDE_DOGE {\n  TITLE = 0x000, // explicitly inits the first value of each enum with a different value to prevent i18n key conflicts\n  VISUALIZATION,\n  AUDIFICATION\n}\n\nexport enum VISUALIZATION {\n  ACTIVE_DATUM = 0x100,\n}\n\nexport enum AUDIFICATION {\n  INSTRUCTIONS = 0x200,\n  DOMAIN,\n  RANGE,\n  ACTIVE_DATUM,\n}\n\nexport type I18n = {\n  [key in GUIDE_DOGE | VISUALIZATION | AUDIFICATION]: string;\n};\n","import { I18n } from './types';\nimport { sprintf } from 'sprintf-js';\nimport en from './en';\nimport * as striptags from 'striptags';\n\ntype Language = keyof typeof dictionary;\n\nconst dictionary = { en };\n\nlet language: Language = 'en';\n\nexport function setLanguage(lang: Language) {\n  language = lang;\n}\n\nexport function getLanguage() {\n  return language;\n}\n\n/**\n * Returns a formatted i18n string using sprintf-js.\n *\n * @param key The key of an i18n string.\n * @param args The arguments to format the string with.\n */\nexport function t(key: keyof I18n, ...args: any[]) {\n  return sprintf(dictionary[language][key], ...args);\n}\n\n/**\n * Returns a screen-reader friendly formatted i18n string using sprintf-js.\n *\n * @param key The key of an i18n string.\n * @param args The arguments to format the string with.\n */\nexport function tA11y(key: keyof I18n, ...args: any[]) {\n  return striptags(t(key, ...args));\n}\n","import { Component, EventEmitter, HostListener, Input, NgZone, OnChanges, OnDestroy, Output, SimpleChanges } from '@angular/core';\nimport { Melody } from '../../models/melody/melody.model';\nimport { AUDIFICATION, t, tA11y } from '../../assets/i18n';\nimport { Datum } from '../../d3/xy-chart.d3';\nimport { formatX, formatY } from '../../utils/formatters';\n\n@Component({\n  selector: 'app-line-chart-audification',\n  templateUrl: './line-chart-audification.component.html',\n  styleUrls: ['./line-chart-audification.component.scss'],\n})\nexport class LineChartAudificationComponent implements OnDestroy, OnChanges {\n  @Input() data: Datum[];\n  @Input() activeDatum: Datum | null;\n  @Output() activeDatumChange = new EventEmitter<Datum | null>();\n  @Input() frequencyRange: [number, number] = [256, 2048];\n  @Input() duration = 5;\n  liveText: string | null = null;\n  private melody?: Melody;\n  private domain: Date[];\n  private range: number[];\n\n  constructor(\n    private zone: NgZone,\n  ) {\n    this.handleSeek = this.handleSeek.bind(this);\n  }\n\n  get INSTRUCTIONS() {\n    return t(AUDIFICATION.INSTRUCTIONS);\n  }\n\n  get INSTRUCTIONS_A11Y() {\n    return tA11y(AUDIFICATION.INSTRUCTIONS);\n  }\n\n  ngOnDestroy() {\n    this.melody?.dispose();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      const values = this.data.map(datum => datum.value);\n      this.domain = this.data.map(d => d.date).sort((a, b) => a.getTime() - b.getTime());\n      this.range = this.data.map(d => d.value).sort();\n      this.melody?.dispose();\n      this.melody = new Melody(values, this.frequencyRange, this.duration, this.handleSeek);\n    }\n  }\n\n  handleSeek(index, playing) {\n    const datum = this.data[index];\n    const { date, value } = datum;\n\n    // since Tone.js is running outside of the Angular zone, it needs to reenter the zone to trigger change detection.\n    this.zone.run((() => {\n      this.activeDatumChange.emit(datum);\n      if (!playing) {\n        this.readOut(t(AUDIFICATION.ACTIVE_DATUM, {\n          x: formatX(date),\n          y: formatY(value),\n        }));\n      }\n    }));\n  }\n\n  @HostListener('keydown', ['$event'])\n  async handleKeyDown($event: KeyboardEvent) {\n    const { key, shiftKey, repeat } = $event;\n    if (repeat) {\n      return;\n    }\n    if (key === ' ') {\n      await this.melody?.resume(shiftKey);\n    } else if (key === 'x') {\n      this.readOut(t(AUDIFICATION.DOMAIN, {\n        min: formatX(this.domain[0]),\n        max: formatX(this.domain[this.domain.length - 1]),\n      }));\n    } else if (key === 'y') {\n      this.readOut(t(AUDIFICATION.RANGE, {\n        min: formatY(this.range[0]),\n        max: formatY(this.range[this.range.length - 1]),\n      }));\n    } else if ('0' <= key && key <= '9') {\n      this.melody?.seekTo(this.duration * (+key / 10), true);\n    } else {\n      return;\n    }\n    $event.preventDefault();\n    $event.stopPropagation();\n  }\n\n  @HostListener('keyup', ['$event'])\n  handleKeyUp($event: KeyboardEvent) {\n    const { key } = $event;\n    if (key === ' ') {\n      this.melody?.pause();\n    } else {\n      return;\n    }\n    $event.preventDefault();\n    $event.stopPropagation();\n  }\n\n  private readOut(text: string) {\n    if (this.liveText === text) {\n      this.liveText = null; // empty the text for a short period of time when the same text needs to be read out consequently\n      window.setTimeout(() => {\n        this.readOut(text);\n      }, 500);\n    } else {\n      this.liveText = text;\n    }\n  }\n}\n","<div role=\"img\"\n     [innerHTML]=\"INSTRUCTIONS\"\n     [attr.aria-label]=\"INSTRUCTIONS_A11Y\">\n</div>\n<div class=\"live-text\" aria-live=\"assertive\">\n  {{liveText}}\n</div>\n","import { NgModule } from '@angular/core';\nimport { LineChartAudificationComponent } from './line-chart-audification.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    LineChartAudificationComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    LineChartAudificationComponent,\n  ],\n})\nexport class LineChartAudificationModule {\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { LineChartD3 } from '../../d3/line-chart.d3';\nimport { BehaviorSubject } from 'rxjs';\nimport { Datum, RenderOptions } from '../../d3/xy-chart.d3';\n\n@Component({\n  selector: 'app-line-chart-visualization',\n  template: '',\n  styleUrls: ['./line-chart-visualization.component.scss'],\n})\nexport class LineChartVisualizationComponent implements RenderOptions, OnChanges, OnInit, OnDestroy {\n  @Input() height = 500;\n  @Input() width = 800;\n  @Input() marginTop = 20;\n  @Input() marginRight = 30;\n  @Input() marginBottom = 30;\n  @Input() marginLeft = 40;\n  @Input() data: Datum[];\n  @Input() activeDatum: Datum | null;\n  @Output() activeDatumChange = new EventEmitter<Datum | null>();\n  private lineChartD3: LineChartD3;\n\n  private dataSubject = new BehaviorSubject<Datum[]>([]);\n  dataObservable = this.dataSubject.asObservable();\n\n  private activeDatumSubject = new BehaviorSubject<Datum | null>(null);\n  activeDatumObservable = this.activeDatumSubject.asObservable();\n\n  constructor(\n    public elementRef: ElementRef<HTMLElement>,\n  ) {\n    this.lineChartD3 = new LineChartD3(this);\n  }\n\n  ngOnInit() {\n    this.lineChartD3.render();\n  }\n\n  ngOnDestroy() {\n    this.lineChartD3.clear();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSubject.next(this.data);\n    }\n    if ('activeDatum' in changes) {\n      this.activeDatumSubject.next(this.activeDatum);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LineChartVisualizationComponent } from './line-chart-visualization.component';\nimport { DataModule } from '../../services/data/data.module';\n\n@NgModule({\n  declarations: [\n    LineChartVisualizationComponent,\n  ],\n  imports: [\n    DataModule,\n  ],\n  exports: [\n    LineChartVisualizationComponent,\n  ],\n})\nexport class LineChartVisualizationModule {\n}\n","import { Component } from '@angular/core';\nimport { activeUserMeasure, eventCountMeasure, revenueMeasure } from '../../models/data-cube/presets';\nimport { DataService } from '../../services/data/data.service';\nimport { Datum } from '../../d3/xy-chart.d3';\nimport { GUIDE_DOGE, t } from '../../assets/i18n';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n})\nexport class LineChartComponent {\n  activeDatum: Datum | null;\n  data: Datum[];\n  private measureNames = [activeUserMeasure, revenueMeasure, eventCountMeasure].map(measure => measure.name);\n  private measureName: string;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n    this.setMeasureIndex(0);\n  }\n\n  get VISUALIZATION() {\n    return t(GUIDE_DOGE.VISUALIZATION);\n  }\n\n  toggleMeasure() {\n    const index = this.measureNames.indexOf(this.measureName);\n    const nextIndex = (index + 1) % this.measureNames.length;\n    this.setMeasureIndex(nextIndex);\n  }\n\n  setMeasureIndex(index) {\n    this.measureName = this.measureNames[index];\n    this.data = this.dataService.getMeasureOverDays(this.measureName);\n    this.activeDatum = null;\n  }\n}\n","<button (click)=\"toggleMeasure()\">Toggle Measure</button>\n<app-line-chart-visualization role=\"img\"\n                              [attr.aria-label]=\"VISUALIZATION\"\n                              [data]=\"data\"\n                              [(activeDatum)]=\"activeDatum\"></app-line-chart-visualization>\n<app-line-chart-audification tabindex=\"0\"\n                             [data]=\"data\"\n                             [(activeDatum)]=\"activeDatum\"></app-line-chart-audification>\n","import { NgModule } from '@angular/core';\nimport { LineChartComponent } from './line-chart.component';\nimport { LineChartVisualizationModule } from '../../components/line-chart-visualization/line-chart-visualization.module';\nimport { LineChartAudificationModule } from '../../components/line-chart-audification/line-chart-audification.module';\n\n@NgModule({\n  declarations: [\n    LineChartComponent,\n  ],\n  imports: [\n    LineChartVisualizationModule,\n    LineChartAudificationModule,\n  ],\n  exports: [\n    LineChartComponent,\n  ],\n})\nexport class LineChartModule {\n}\n","import { ElementRef } from '@angular/core';\nimport * as d3 from 'd3';\nimport { MonoTypeOperatorFunction, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport interface RenderOptions {\n  elementRef: ElementRef<HTMLElement>;\n  height: number;\n  width: number;\n  marginTop: number;\n  marginRight: number;\n  marginBottom: number;\n  marginLeft: number;\n}\n\nexport abstract class BaseD3<T extends RenderOptions> {\n  protected svg: d3.Selection<SVGSVGElement, unknown, null, undefined>;\n  private clear$?: Subject<undefined>;\n\n  constructor(protected renderOptions: T) {\n  }\n\n  protected get transition() {\n    return this.createTransition(300);\n  }\n\n  protected get container() {\n    return d3.select(this.renderOptions.elementRef.nativeElement);\n  }\n\n  config(renderOptions: T) {\n    this.renderOptions = renderOptions;\n    return this;\n  }\n\n  render() {\n    const { width, height } = this.renderOptions;\n\n    this.clear();\n    this.clear$ = new Subject();\n\n    this.svg = this.container\n      .append('svg')\n      .attr('viewBox', [0, 0, width, height].join(' '));\n  }\n\n  clear() {\n    if (!this.clear$) {\n      return;\n    }\n    this.clear$.next();\n    this.clear$.complete();\n    this.clear$ = undefined;\n\n    this.svg.remove();\n  }\n\n  protected takeUntilCleared<R>(): MonoTypeOperatorFunction<R> {\n    if (!this.clear$) {\n      throw new Error(`Subject 'clear$' is not defined.`);\n    }\n    return takeUntil(this.clear$);\n  }\n\n  protected createTransition(duration: number): d3.Transition<any, unknown, null, undefined> {\n    return d3.transition()\n      .duration(duration)\n      .ease(d3.easeLinear);\n  }\n}\n","import { Datum, XYChartD3 } from './xy-chart.d3';\nimport * as d3 from 'd3';\nimport { AUDIFICATION, t } from '../assets/i18n';\nimport { formatX, formatY } from '../utils/formatters';\n\nexport class LineChartD3 extends XYChartD3 {\n  protected line: d3.Line<Datum>;\n  protected path: d3.Selection<SVGPathElement, unknown, null, undefined>;\n  protected activeDatumG: d3.Selection<SVGGElement, unknown, null, undefined>;\n  protected activeDatumText: d3.Selection<SVGTextElement, unknown, null, undefined>;\n\n  protected renderData() {\n    this.line = d3\n      .line<Datum>()\n      .defined(d => !isNaN(d.value))\n      .x(d => this.scaleX(d.date))\n      .y(d => this.scaleY(d.value));\n\n    this.path = this.svg\n      .append('path')\n      .attr('fill', 'none')\n      .attr('stroke', 'steelblue')\n      .attr('stroke-width', 1.5)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round');\n  }\n\n  protected updateData(data: Datum[]) {\n    this.path\n      .datum(data)\n      .transition(this.transition)\n      .attr('d', this.line);\n  }\n\n  protected renderActiveDatum() {\n    this.activeDatumG = this.svg\n      .append('g');\n\n    this.activeDatumG\n      .append('circle')\n      .attr('r', 4)\n      .attr('fill', 'steelblue');\n\n    this.activeDatumText = this.activeDatumG\n      .append('text')\n      .attr('y', 20)\n      .attr('text-anchor', 'middle')\n      .attr('font-family', 'sans-serif')\n      .attr('font-size', 10);\n  }\n\n  protected updateActiveDatum(activeDatum: Datum | null) {\n    if (!activeDatum) {\n      this.activeDatumG.attr('display', 'none');\n      return;\n    }\n    const { date, value } = activeDatum;\n    this.activeDatumG\n      .transition(this.createTransition(50))\n      .attr('display', 'inherit')\n      .attr('transform', `translate(${this.scaleX(date)},${this.scaleY(value)})`);\n    this.activeDatumText.text(t(AUDIFICATION.ACTIVE_DATUM, {\n      x: formatX(date),\n      y: formatY(value),\n    }));\n  }\n}\n","import * as d3 from 'd3';\nimport { BaseD3, RenderOptions as BaseRenderOptions } from './base.d3';\nimport { Observable } from 'rxjs';\nimport { formatX } from '../utils/formatters';\n\nexport interface Datum {\n  date: Date;\n  value: number;\n}\n\nexport interface RenderOptions extends BaseRenderOptions {\n  dataObservable: Observable<Datum[]>;\n  activeDatumObservable: Observable<Datum | null>;\n}\n\nexport abstract class XYChartD3 extends BaseD3<RenderOptions> {\n  protected scaleX: d3.ScaleTime<number, number>;\n  protected scaleY: d3.ScaleLinear<number, number>;\n  protected xAxis: d3.Axis<Date>;\n  protected yAxis: d3.Axis<number>;\n  protected xAxisG: d3.Selection<SVGGElement, unknown, null, undefined>;\n  protected yAxisG: d3.Selection<SVGGElement, unknown, null, undefined>;\n\n  render() {\n    super.render();\n\n    const {\n      dataObservable, activeDatumObservable,\n    } = this.renderOptions;\n\n    this.renderAxis();\n    this.renderData();\n    this.renderActiveDatum();\n\n    dataObservable\n      .pipe(this.takeUntilCleared())\n      .subscribe(data => {\n        this.updateAxis(data);\n        this.updateData(data);\n      });\n\n    activeDatumObservable\n      .pipe(this.takeUntilCleared())\n      .subscribe(activeDatum => {\n        this.updateActiveDatum(activeDatum);\n      });\n  }\n\n  protected renderAxis() {\n    const {\n      height, width,\n      marginTop, marginRight, marginBottom, marginLeft,\n    } = this.renderOptions;\n\n    this.scaleX = d3\n      .scaleUtc()\n      .range([marginLeft, width - marginRight]);\n    this.scaleY = d3\n      .scaleLinear()\n      .nice()\n      .range([height - marginBottom, marginTop]);\n\n    this.xAxis = d3\n      .axisBottom<Date>(this.scaleX)\n      .ticks(width / 80)\n      .tickFormat(formatX)\n      .tickSizeOuter(0);\n    this.yAxis = d3.axisLeft<number>(this.scaleY);\n\n    this.xAxisG = this.svg\n      .append('g')\n      .attr('transform', `translate(0,${height - marginBottom})`);\n    this.yAxisG = this.svg\n      .append('g')\n      .attr('transform', `translate(${marginLeft},0)`);\n  }\n\n  protected updateAxis(data: Datum[]) {\n    this.scaleX.domain(d3.extent<Datum, Date>(data, d => d.date) as [Date, Date]);\n    this.scaleY.domain([0, d3.max(data, d => d.value)!]);\n\n    this.xAxisG\n      .transition(this.transition)\n      .call(this.xAxis);\n    this.yAxisG\n      .transition(this.transition)\n      .call(this.yAxis);\n  }\n\n  protected abstract renderData();\n\n  protected abstract updateData(data: Datum[]);\n\n  protected abstract renderActiveDatum();\n\n  protected abstract updateActiveDatum(activeDatum: Datum | null);\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Category, Filter, Measure, ResultRow, Row } from './types';\n\n/**\n * This cube is conceptually an n-dimensional array of numbers. The cube\n * represents categories and measures. Each category corresponds to a\n * dimension of the cube. Each category has several different values it can\n * take on. Each category value corresponds to a slice of the cube.\n *\n * For example, look at the following two dimensional cube (i.e. a table):\n *\n *       \\ Chrome \\ Firefox\n * -------+--------+--------\n * USA    |   65   |   78\n * Canada |  101   |   34\n * Mexico |   72   |  156\n *\n * This table has two categories: Country and Browser. Country has three\n * category values: USA, Canada, Mexico, whereas Browser has two: Chrome and\n * Firefox. This cube has only one measure (say, Active Users). So, the table\n * is saying that there were 65 active users from the USA using Chrome.\n * Similarly there were 156 Firefox users from Mexico.\n *\n * The slice represented by USA is the list [65, 78]. The slice represented by\n * Chrome is [65, 101, 72].\n *\n * The cube can support any number of categories, and any number of measures.\n * More categories mean a higher dimensional cube, and more measures means each\n * cell in the cube will be represented by a vector where each element in the\n * vector corresponds to a different measure. Here is a three dimensional\n * (Gender, Source and OS) cube with two measures (Average Visit Duration and\n * Event Count):\n *\n * Male:                              * Female:\n *       \\ Windows \\   Mac  \\  Linux  *       \\ Windows \\   Mac  \\  Linux\n * -------+---------+--------+------- * -------+---------+--------+-------\n * Direct |  5s, 60 | 9s, 23 | 6s, 64 * Direct |  2s, 57 | 6s, 65 | 3s, 34\n * Email  |  7s, 90 | 2s, 98 | 2s, 90 * Email  |  3s, 93 | 4s, 73 | 6s, 72\n * Search |  1s, 32 | 3s, 21 | 4s, 23 * Search |  8s, 86 | 3s, 53 | 5s, 35\n *\n * This cube is saying, for example, that female Linux users coming from\n * Search stayed on the page for an average of 5 seconds.\n *\n * The cube can be queried for specific categories and measures. This\n * will combine together the values for all the other categories and give\n * a breakdown based on the requested categories. For more information, see\n * the documentation for the `getDataFor()` method.\n */\nexport class DataCube {\n  constructor(\n    private readonly rows: Row[],\n    private readonly measures: Measure[],\n    private readonly categories: Category[],\n  ) {\n  }\n\n  /**\n   * Get a breakdown by the given categories in the given measures.\n   *\n   * Breaks down the data in the cube by the given categories and returns\n   * the given measures in a table. So, for the following cube, with\n   * categories Gender, Source and OS and measures Event Count and Sessions:\n   *\n   * Male:                              * Female:\n   *       \\ Windows \\   Mac  \\  Linux  *       \\ Windows \\   Mac  \\  Linux\n   * -------+---------+--------+------- * -------+---------+--------+-------\n   * Direct |  12, 60 |  1, 23 | 44, 64 * Direct |  50, 57 | 43, 65 | 25, 34\n   * Email  |  23, 90 | 51, 98 | 21, 90 * Email  |  39, 93 | 24, 73 | 64, 72\n   * Search |  16, 32 | 10, 21 |  9, 23 * Search |  93, 86 | 38, 53 | 31, 35\n   *\n   * If you get data for the Source category and Sessions measure, the\n   * result would be\n   *\n   * Categories | Measures\n   * -----------+------------\n   * Source     | Sessions\n   * ===========+============\n   * Direct     | 303\n   * Email      | 516\n   * Search     | 250\n   *\n   * The value of the measure Sessions for the category value \"Direct\",\n   * for example, is calculated by adding the the Sessions values\n   * across all the other categories\n   * (across the top row: 60 + 23 + 64 + 57 + 65 + 34). Other category\n   * values are calculated similarly.\n   *\n   * The data can be broken down by multiple categories, and multiple\n   * measures can be provided. For example, given the same cube as before,\n   * with the category names Gender and OS, and measure Event Count, the\n   * resulting table will be:\n   *\n   *    Categories    |  Measures\n   * -----------------+------------\n   * Gender |   OS    | Event Count\n   * =======+=========+============\n   * Male   | Windows | 51\n   * Male   | Mac     | 62\n   * Male   | Linux   | 74\n   * Female | Windows | 182\n   * Female | Mac     | 105\n   * Female | Linux   | 110\n   *\n   * Special handling is applied to the \"nthDay\" category. No matter what\n   * actual day it corresponds to, the earliest nthDay will always correspond\n   * to 0, the second earliest to 1, and so on.\n   *\n   * This method also supports filtering by category or measure values.\n   * Filtering takes place before the counting is done, so it is possible to\n   * filter on categories that are not in the query. By default, nothing is\n   * filtered.\n   *\n   * It's also possible to sort the results by any category or measure.\n   * By default, the results are sorted by the first requested category, then\n   * the second, and so on.\n   *\n   * @param categoryNames The categories to request a breakdown from.\n   * @param measureNames The measures to provide values for.\n   * @param filters The filters to apply to the cube before finding the results.\n   * @param sortBy The concept names to sort in ascending order.\n   */\n  getDataFor(\n    categoryNames: string[],\n    measureNames: string[],\n    filters: Filter[] = [],\n    sortBy?: string[],\n  ): ResultRow[] {\n    const measureIndices = measureNames.map(name =>\n      this.measures.findIndex(measure => measure.name === name),\n    );\n    const categoryIndices = categoryNames.map(name =>\n      this.categories.findIndex(category => category.name === name),\n    );\n    const categoryTrie: TrieNode = { children: {} };\n    const filterFuncs = filters.map(filter =>\n      filter(this.categories, this.measures),\n    );\n    this.rows\n      .filter(row => filterFuncs.every(filter => filter(row)))\n      .forEach(row => {\n        let trieNode = categoryTrie;\n        for (const categoryIndex of categoryIndices) {\n          if (!trieNode.children[row.header[categoryIndex]]) {\n            trieNode.children[row.header[categoryIndex]] = { children: {} };\n          }\n          trieNode = trieNode.children[row.header[categoryIndex]];\n        }\n        if (!trieNode.values) {\n          trieNode.values = measureNames.map(() => 0);\n        }\n        for (const [index, measureIndex] of measureIndices.entries()) {\n          trieNode.values[index] += row.values[measureIndex];\n        }\n      });\n\n    const result: ResultRow[] = [];\n    const labelList: string[] = [];\n    const traverseNode = (node: TrieNode) => {\n      if (node.values) {\n        result.push({\n          categories: new Map(\n            labelList.map((label, index) => [categoryNames[index], label]),\n          ),\n          values: new Map(\n            node.values.map((value, index) => [measureNames[index], value]),\n          ),\n        });\n      } else {\n        for (const [label, child] of Object.entries(node.children)) {\n          labelList.push(label);\n          traverseNode(child);\n          labelList.pop();\n        }\n      }\n    };\n    traverseNode(categoryTrie);\n    this.normalizeNthDay(result, categoryNames);\n    this.sortResults(\n      result,\n      categoryNames,\n      measureNames,\n      sortBy ?? [...categoryNames, ...measureNames],\n    );\n    return result;\n  }\n\n  private normalizeNthDay(rows: ResultRow[], categoryNames: string[]) {\n    if (!categoryNames.includes('nthDay')) {\n      return;\n    }\n    const largestNthDay = Math.max(...rows.map(row => row.categories.get('nthDay') as number));\n    for (const row of rows) {\n      const nthDay = row.categories.get('nthDay') as number;\n      row.categories.set('nthDay', largestNthDay - nthDay);\n    }\n  }\n\n  private sortResults(\n    results: ResultRow[],\n    categoryNames: string[],\n    measureNames: string[],\n    sortBy: string[],\n  ) {\n    function getComparator(sortConcept: string) {\n      if (categoryNames.includes(sortConcept)) {\n        return (a: ResultRow, b: ResultRow) => {\n          const aCategory = a.categories.get(sortConcept)!;\n          const bCategory = b.categories.get(sortConcept)!;\n          if (aCategory < bCategory) {\n            return -1;\n          }\n          if (aCategory > bCategory) {\n            return 1;\n          }\n          return 0;\n        };\n      }\n      if (measureNames.includes(sortConcept)) {\n        return (a: ResultRow, b: ResultRow) =>\n          a.values.get(sortConcept)! - b.values.get(sortConcept)!;\n      }\n      return () => 0;\n    }\n\n    const comparators = sortBy.map(getComparator);\n    const combinedComparator = (a: ResultRow, b: ResultRow) => {\n      for (const comparator of comparators) {\n        const result = comparator(a, b);\n        if (result !== 0) {\n          return result;\n        }\n      }\n      return 0;\n    };\n    results.sort(combinedComparator);\n  }\n}\n\ninterface TrieNode {\n  children: Record<string, TrieNode>;\n  values?: number[];\n}\n","import { Category, Filter, Row } from './types';\n\nconst millisecondsPerDay = 24 * 60 * 60 * 1000;\n\nexport function betweenDates(startDate: Date, endDate: Date): Filter {\n  return (categories: Category[]) => {\n    const nThDayIndex = categories.findIndex(\n      category => category.name === 'nthDay',\n    );\n    const startIndex = Math.round(\n      (Date.now() - startDate.getTime()) / millisecondsPerDay,\n    );\n    const endIndex = Math.round(\n      (Date.now() - endDate.getTime()) / millisecondsPerDay,\n    );\n    return (row: Row) =>\n      row.header[nThDayIndex] <= startIndex &&\n      row.header[nThDayIndex] >= endIndex;\n  };\n}\n","import * as random from 'random';\nimport {\n  Category,\n  CategoryValue,\n  HitGenerationSettings,\n  Measure,\n  MeasureType,\n  ModelSettings,\n  Row,\n  Scope,\n  SessionGenerationSettings,\n} from './types';\nimport { DataCube } from './data-cube.model';\n\n/**\n * Creates fake analytics data based on the model given by settings.\n *\n * The fake data is returned as a Cube. See [cube.ts](./cube.ts) for more\n * information on the properties of the cube.\n *\n * The shape of the cube is determined by the categories and measures that are\n * passed in. The content is generated based on `settings`. For details on\n * what each property in settings does, see the documentation for the settings\n * type in [types.ts](./types.ts).\n *\n * The nthDay category is added to the categories if not present. The number of\n * values is determined by the `days` setting and the weight of each day is\n * determined according to the dailyVariance setting.\n *\n * The data is generated as a series of hits. Each hit is randomly assigned\n * to a category value for each category, based on the weights for each value.\n *\n * The hit is then added to a measure if it is a hit scoped measure, or if it\n * is a session scoped measure and part of a new session or if it is a user\n * scoped measure and represents a new user. For measures of type COUNT, they\n * are incremented by 1, whereas for measures of type SUM a random value in its\n * range is selected and added to the measure for that combination of category\n * values.\n *\n * This generation code makes the following assumptions:\n *  - All categories are independent of each other.\n *  - Each hit has a corresponding category value for each dimension.\n *  - The number of users is normally distributed, with mean settings.avgUsers\n *    and standard deviation settings.usersStdDev.\n *  - The number of sessions per user is normally distributed with mean\n *    settings.avgUsersPerSession and standard deviation settings.sessionsPerUserStdDev.\n *  - The number of hits is normally distributed with mean settings.avgHits\n *    and standard deviation settings.hitsStdDev.\n *  - The value of each hit for measures of type SUM is uniformly distributed in\n *    its range.\n *  - The session a hit belongs to is uniformly distributed.\n *  - The weight of a day is normally distributed with mean 1 and standard\n *    deviation settings.dailyStdDev\n *\n */\nexport function generateCube(\n  categories: Category[],\n  measures: Measure[],\n  settings: Partial<ModelSettings> = {},\n): DataCube {\n  const completeSettings: ModelSettings = {\n    ...defaultSettings,\n    ...settings,\n  };\n  const actualCategories = [...categories];\n  if (completeSettings.nthDay) {\n    const nthDayCategory = generateNthDay(\n      completeSettings.days,\n      completeSettings.dailyStdDev,\n    );\n    actualCategories.push(nthDayCategory);\n  }\n  const rows = generateEmptyRows(actualCategories, measures);\n  const cumulativeWeights = generateCumulativeWeights(rows, actualCategories);\n\n  generateHits(\n    rows,\n    measures,\n    cumulativeWeights,\n    generateUsersAndSessions(completeSettings),\n    completeSettings,\n  );\n\n  return new DataCube(rows, measures, actualCategories);\n}\n\nconst defaultSettings: ModelSettings = {\n  avgHits: 1000000,\n  hitStdDev: 10000,\n  avgUsers: 10000,\n  userStdDev: 100,\n  avgSessionsPerUser: 5,\n  sessionsPerUserStdDev: 3,\n  nthDay: true,\n  days: 60,\n  dailyStdDev: 0.1,\n};\n\ninterface User {\n  rowsSeen: Set<number>;\n}\n\ninterface Session {\n  user: User;\n  rowsSeen: Set<number>;\n}\n\nfunction generateUsersAndSessions({\n                                    avgUsers,\n                                    userStdDev,\n                                    avgSessionsPerUser,\n                                    sessionsPerUserStdDev,\n                                  }: SessionGenerationSettings) {\n  const userCount = Math.round(random.normal(avgUsers, userStdDev)());\n  const sessionThunk = random.normal(avgSessionsPerUser, sessionsPerUserStdDev);\n  const sessions: Session[] = [];\n  for (let i = 0; i < userCount; i++) {\n    const user = { rowsSeen: new Set<number>() };\n    const userSessions = Math.round(sessionThunk());\n    for (let j = 0; j < userSessions; j++) {\n      sessions.push({ user, rowsSeen: new Set() });\n    }\n  }\n  return sessions;\n}\n\nfunction getNormalizedWeights(categories: Category[]) {\n  return categories.map(category => {\n    const total = category.values.reduce((accumulator, value) => value.weight + accumulator, 0);\n    return category.values.map(value => value.weight / total);\n  });\n}\n\nfunction binarySearch(\n  arr: number[],\n  probe: number,\n  start = 0,\n  end = arr.length,\n): number {\n  const len = end - start;\n  if (len < 2) {\n    return start;\n  }\n  const index = len % 2 === 0 ? (start + end) / 2 : (start + end - 1) / 2;\n  if (arr[index] <= probe) {\n    return binarySearch(arr, probe, index, end);\n  } else {\n    return binarySearch(arr, probe, start, index);\n  }\n}\n\nfunction generateMeasureIncrement(measure: Measure) {\n  if (measure.type === MeasureType.COUNT || !measure.range) {\n    return 1;\n  }\n  return random.float(measure.range[0], measure.range[1]);\n}\n\nfunction generateHits(\n  rows: Row[],\n  measures: Measure[],\n  cumulativeWeights: number[],\n  sessions: Session[],\n  { avgHits, hitStdDev }: HitGenerationSettings,\n) {\n  const hitTotal = Math.round(random.normal(avgHits, hitStdDev)());\n  const placementThunk = random.uniform();\n  const sessionThunk = random.uniformInt(0, sessions.length - 1);\n  for (let i = 0; i < hitTotal; i++) {\n    const placement = placementThunk();\n    const session = sessionThunk();\n    const rowIndex = binarySearch(cumulativeWeights, placement);\n    for (const [index, measure] of measures.entries()) {\n      const newSession = !sessions[session].rowsSeen.has(rowIndex);\n      const newUser = !sessions[session].user.rowsSeen.has(rowIndex);\n      if (newSession) {\n        sessions[session].rowsSeen.add(rowIndex);\n        if (newUser) {\n          sessions[session].user.rowsSeen.add(rowIndex);\n        }\n      }\n\n      switch (measure.scope) {\n        case Scope.EVENT:\n          rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          break;\n        case Scope.SESSION:\n          if (newSession) {\n            rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          }\n          break;\n        case Scope.USER:\n          if (newUser) {\n            rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          }\n          break;\n      }\n    }\n  }\n}\n\nfunction generateEmptyRows(categories: Category[], measures: Measure[]) {\n  const rows: Row[] = [];\n\n  // The current index in each category of which value we've looked at\n  const categoryValueIndices = categories.map(() => 0);\n  let categoryIndex = 0;\n  // This is going to loop through all combinations of category values.\n  // The approach we take is to iterate through all the first category's values.\n  // Then we move to the next value in the second category and iterate through\n  // all the values in the first category again. We then move to the next value\n  // in the second category, and repeat again and again until we've gone through\n  // all the values in the second category. We then move to the next value\n  // in the third category, then repeat, and so on and so on until we've gone\n  // through every possible value.\n  do {\n    // Get the current combination of values and add them to the list\n    const header = categories.map(\n      (category, index) => category.values[categoryValueIndices[index]].name,\n    );\n    const values = measures.map(() => 0);\n    rows.push({ header, values });\n\n    // Start with the first category\n    categoryIndex = 0;\n    do {\n      // Advance to the next category value in the current value\n      categoryValueIndices[categoryIndex] =\n        (categoryValueIndices[categoryIndex] + 1) %\n        categories[categoryIndex].values.length;\n      categoryIndex += 1;\n      // If we wrapped around to the beginning of the list of values for the\n      // current category, move to the next category so that its value can\n      // be incremented\n    } while (\n      categoryValueIndices[categoryIndex - 1] === 0 &&\n      categoryIndex < categories.length\n      );\n    // If we ended up with the first value in the previous category, then\n    // that means we ran off the end of the list of possible categories, so\n    // we should end the loop\n  } while (categoryValueIndices[categoryIndex - 1] !== 0);\n  return rows;\n}\n\nfunction generateCumulativeWeights(rows: Row[], categories: Category[]) {\n  const weights = getNormalizedWeights(categories);\n  const nameToWeightMapping = categories.map(\n    (category, categoryIndex) =>\n      new Map(\n        category.values.map((value, index) => [\n          value.name,\n          weights[categoryIndex][index],\n        ]),\n      ),\n  );\n  return rows.reduce(\n    (cumulativeWeights, row) => {\n      const rowWeights = row.header.map((label, categoryIndex) => nameToWeightMapping[categoryIndex].get(label) ?? 0);\n      const weightDelta = rowWeights.reduce((accumulator, weight) => accumulator * weight, 1);\n      cumulativeWeights.push(weightDelta + cumulativeWeights[cumulativeWeights.length - 1]);\n      return cumulativeWeights;\n    },\n    [0],\n  );\n}\n\nfunction generateNthDay(days: number, dailyVariance: number): Category {\n  const dailyThunk = random.normal(1, dailyVariance);\n  const values: CategoryValue[] = [];\n  for (let day = 0; day < days; day++) {\n    values.push({\n      name: day,\n      weight: dailyThunk(),\n    });\n  }\n  return {\n    name: 'nthDay',\n    values,\n  };\n}\n","import { Category, Measure, MeasureType, Scope } from './types';\n\nexport const countryCategory: Category = {\n  name: 'country',\n  values: [\n    {\n      name: 'Canada',\n      weight: 2,\n    },\n    {\n      name: 'USA',\n      weight: 16,\n    },\n    {\n      name: 'Mexico',\n      weight: 15,\n    },\n  ],\n};\n\nexport const browserCategory: Category = {\n  name: 'browser',\n  values: [\n    {\n      name: 'Chrome',\n      weight: 50,\n    },\n    {\n      name: 'Firefox',\n      weight: 19,\n    },\n    {\n      name: 'Safari',\n      weight: 20,\n    },\n    {\n      name: 'Edge',\n      weight: 10,\n    },\n  ],\n};\n\nexport const sourceCategory: Category = {\n  name: 'source',\n  values: [\n    {\n      name: 'Direct',\n      weight: 5,\n    },\n    {\n      name: 'Email',\n      weight: 5,\n    },\n  ],\n};\n\nexport const activeUserMeasure: Measure = {\n  name: 'activeUsers',\n  scope: Scope.USER,\n  type: MeasureType.COUNT,\n};\n\nexport const revenueMeasure: Measure = {\n  name: 'revenue',\n  scope: Scope.EVENT,\n  type: MeasureType.SUM,\n  range: [0, 10],\n};\n\nexport const eventCountMeasure: Measure = {\n  name: 'eventCount',\n  scope: Scope.EVENT,\n  type: MeasureType.SUM,\n};\n","/** A description of a type of value that a hit can belong to. */\nexport interface Category {\n  /** The canonical name for this category. */\n  name: string;\n\n  /** The possible values the category can take on. */\n  values: CategoryValue[];\n}\n\n/** Describes a possible value a category can have. */\nexport interface CategoryValue {\n  /** A label for this particular value */\n  name: string | number;\n\n  /**\n   * How likely this value is to occur, relative to the other values in this\n   * category.\n   */\n  weight: number;\n}\n\n/** A value that can be measured. */\nexport interface Measure {\n  /** The canonical name for this measure. */\n  name: string;\n  /** If this measure applies to events, sessions or users. */\n  scope: Scope;\n  /** How the values from this measure are calculated. */\n  type: MeasureType;\n  /**\n   * The range of values this measure can take on per hit, if the measure\n   * is of type SUM.\n   */\n  range?: [number, number];\n}\n\n/** The way this measure is calculated */\nexport enum MeasureType {\n  COUNT,\n  SUM,\n}\n\n/** What this measure is associated with. */\nexport enum Scope {\n  EVENT,\n  SESSION,\n  USER,\n}\n\n/**\n * Used to control the model for data generation. More details about how this\n * is used is available in [generation.ts](./generation.ts).\n */\nexport type ModelSettings = HitGenerationSettings &\n  SessionGenerationSettings &\n  NthDayGenerationSettings;\n\nexport interface HitGenerationSettings {\n  /** The average number of hits over the lifetime of the data generation. */\n  avgHits: number;\n  /** The standard deviation of hits over the time lifetime of the data generation. */\n  hitStdDev: number;\n}\n\nexport interface SessionGenerationSettings {\n  /** The average number of users for this data generation. */\n  avgUsers: number;\n  /** The standard deviation of users for this data generation. */\n  userStdDev: number;\n  /** The average number of sessions per user. */\n  avgSessionsPerUser: number;\n  /** The standard deviation of sessions per user. */\n  sessionsPerUserStdDev: number;\n}\n\nexport interface NthDayGenerationSettings {\n  /** Whether to generate nth day category or not */\n  nthDay: boolean;\n  /** The number of days worth of data to generate. */\n  days: number;\n  /** How much the number of hits can vary from day to day. */\n  dailyStdDev: number;\n}\n\n/**\n * A filter is applied to the data in a cube before being queried.\n *\n * A filter is a factory function that actually generates the filter when\n * called. The idea is that the first call will allow the filter to configure\n * itself with any necessary values, so that the second call can run very\n * quickly on each row.\n */\nexport type Filter = (\n  categories: Category[],\n  measures: Measure[],\n) => (row: Row) => boolean;\n\n/**\n * The internal storage of the cube. Although the cube is conceptually an\n * n-dimensional cube of data, in actuality it is a list of rows, to make for\n * easier querying.\n */\nexport interface Row {\n  /** The category values for this row. */\n  header: (string | number)[];\n  /** The measure values for this row. */\n  values: number[];\n}\n\n/**\n * The data returned from a query to a cube. The category and measure values\n * are stored in a map keyed on the name of the respective category or\n * dimension.\n */\nexport interface ResultRow {\n  categories: Map<string, string | number>;\n  values: Map<string, number>;\n}\n","import * as Tone from 'tone';\n\nexport type OnSeek = (index: number, playing: boolean) => void;\n\nexport class Melody {\n  private synth = new Tone.Synth().toDestination();\n  private forwardSequence: Tone.Sequence;\n  private backwardSequence: Tone.Sequence;\n  private currentDatumIndex = 0;\n  private inclusive = true; // if true, playing the melody starting inclusively from currentDatumIndex\n  private reversed = false; // if true, playing the melody backward\n\n  constructor(\n    private values: number[],\n    private frequencyRange: [number, number],\n    private duration: number, // duration (in seconds) of the melody\n    private onSeek?: OnSeek,\n  ) {\n    const reversedValues = [...values].reverse();\n    this.forwardSequence = this.createSequence(values);\n    this.backwardSequence = this.createSequence(reversedValues);\n  }\n\n  get noteDuration() {\n    return this.duration / this.values.length;\n  }\n\n  get currentSeconds() {\n    return this.reversed\n      ? this.duration - Tone.Transport.seconds\n      : Tone.Transport.seconds;\n  }\n\n  get isPlaying() {\n    return Tone.Transport.state === 'started';\n  }\n\n  get isEnded() {\n    return (\n      this.reversed && this.currentDatumIndex === 0 ||\n      !this.reversed && this.currentDatumIndex === this.values.length - 1\n    );\n  }\n\n  get nextIndex() {\n    if (this.isEnded) {\n      return (this.values.length - 1) - this.currentDatumIndex; // bring playhead to the opposite end\n    }\n    const offset = this.inclusive ? 0 : (this.reversed ? -1 : +1);\n    return this.currentDatumIndex + offset;\n  }\n\n  private static getKeyNumber(frequency: number) {\n    return Math.log2(frequency / 440) * 12 + 49;\n  }\n\n  private static getFrequency(keyNumber: number) {\n    return Math.pow(2, (keyNumber - 49) / 12) * 440;\n  }\n\n  async resume(reversed: boolean) {\n    if (Tone.getContext().state === 'suspended') {\n      await Tone.start();\n    }\n    if (!this.isPlaying) {\n      this.reversed = reversed;\n      this.currentDatumIndex = this.nextIndex;\n      let nextSeconds = this.getSeconds(this.currentDatumIndex);\n      if (this.reversed) {\n        this.backwardSequence?.start(0);\n        this.forwardSequence?.stop(0);\n        nextSeconds += this.noteDuration / 2;\n        Tone.Transport.start(undefined, this.duration - nextSeconds);\n      } else {\n        this.backwardSequence?.stop(0);\n        this.forwardSequence?.start(0);\n        nextSeconds -= this.noteDuration / 2;\n        Tone.Transport.start(undefined, nextSeconds);\n      }\n    }\n  }\n\n  pause() {\n    if (this.isPlaying) {\n      Tone.Transport.pause();\n      this.seekTo(this.currentSeconds);\n    }\n  }\n\n  getCurrentDatumIndex() {\n    return this.currentDatumIndex;\n  }\n\n  seekTo(seconds: number, inclusive = false) {\n    this.currentDatumIndex = this.getDatumIndex(seconds);\n    this.inclusive = this.isEnded || inclusive;\n    this.onSeek?.(this.currentDatumIndex, this.isPlaying);\n  }\n\n  dispose() {\n    this.forwardSequence.dispose();\n    this.backwardSequence.dispose();\n    this.synth.dispose();\n  }\n\n  private createSequence(values: number[]) {\n    const minValue = Math.min(...values);\n    const maxValue = Math.max(...values);\n    const [minFrequency, maxFrequency] = this.frequencyRange;\n    const minKeyNumber = Melody.getKeyNumber(minFrequency);\n    const maxKeyNumber = Melody.getKeyNumber(maxFrequency);\n    const sequence = new Tone.Sequence(\n      (time, value) => {\n        this.seekTo(this.currentSeconds);\n        const keyNumber = (value - minValue) / (maxValue - minValue) * (maxKeyNumber - minKeyNumber) + minKeyNumber;\n        const frequency = Melody.getFrequency(keyNumber);\n        this.synth.triggerAttackRelease(frequency, this.noteDuration, time);\n      },\n      values,\n      this.noteDuration,\n    );\n    sequence.loop = 1;\n    return sequence;\n  }\n\n  private getSeconds(index: number) {\n    return (index + .5) * this.noteDuration;\n  }\n\n  private getDatumIndex(seconds: number) {\n    const index = Math.round(seconds / this.noteDuration - .5);\n    return Math.min(Math.max(index, 0), this.values.length - 1);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DataService } from './data.service';\n\n@NgModule({\n  providers: [\n    DataService,\n  ],\n})\nexport class DataModule {\n}\n","import { DateTime } from 'luxon';\nimport {\n  activeUserMeasure,\n  browserCategory,\n  countryCategory,\n  eventCountMeasure,\n  revenueMeasure,\n  sourceCategory,\n} from '../../models/data-cube/presets';\nimport { betweenDates } from '../../models/data-cube/filters';\nimport { generateCube } from 'src/models/data-cube/generation';\n\nexport class DataService {\n  private dataCube = generateCube(\n    [countryCategory, browserCategory, sourceCategory],\n    [activeUserMeasure, revenueMeasure, eventCountMeasure],\n    {\n      avgHits: 10000,\n      hitStdDev: 100,\n      avgUsers: 100,\n      userStdDev: 1,\n      avgSessionsPerUser: 5,\n      sessionsPerUserStdDev: 3,\n    },\n  );\n\n  getMeasureOverDays(measureName: string, days = 30) {\n    const categoryName = 'nthDay';\n    const endDate = DateTime.local();\n    const startDate = endDate.minus({ day: days });\n\n    return this.dataCube\n      .getDataFor(\n        [categoryName],\n        [measureName],\n        [betweenDates(startDate.toJSDate(), endDate.toJSDate())],\n      )\n      .map(row => ({\n        date: startDate\n          .plus({ days: row.categories.get(categoryName) as number })\n          .toJSDate(),\n        value: row.values.get(measureName)!,\n      }));\n  }\n}\n","import * as d3 from 'd3';\n\nexport const formatX = d3.timeFormat('%B %d');\nexport const formatY = (value: number) => Number.isInteger(value) ? value : value.toFixed(1);\n","/* (ignored) */"],"sourceRoot":"webpack:///"}