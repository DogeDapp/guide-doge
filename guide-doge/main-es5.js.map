{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app-routing.module.ts","webpack:///src/app.component.ts","webpack:///src/app.component.html","webpack:///src/app.module.ts","webpack:///src/assets/i18n/en.ts","webpack:///src/assets/i18n/index.ts","webpack:///src/assets/i18n/types.ts","webpack:///src/assets/i18n/utils.ts","webpack:///src/components/card-fold/card-fold.component.ts","webpack:///src/components/card-fold/card-fold.component.html","webpack:///src/components/card-fold/card-fold.module.ts","webpack:///src/components/card/card.component.ts","webpack:///src/components/card/card.component.html","webpack:///src/components/card/card.module.ts","webpack:///src/components/dashboard/dashboard.component.ts","webpack:///src/components/dashboard/dashboard.component.html","webpack:///src/components/dashboard/dashboard.module.ts","webpack:///src/components/line-chart-audification/line-chart-audification.component.ts","webpack:///src/components/line-chart-audification/line-chart-audification.component.html","webpack:///src/components/line-chart-audification/line-chart-audification.module.ts","webpack:///src/components/line-chart-visualization/line-chart-visualization.component.ts","webpack:///src/components/line-chart-visualization/line-chart-visualization.component.html","webpack:///src/components/line-chart-visualization/line-chart-visualization.module.ts","webpack:///src/components/line-chart/line-chart.component.ts","webpack:///src/components/line-chart/line-chart.component.html","webpack:///src/components/line-chart/line-chart.module.ts","webpack:///src/components/preference/preference.component.ts","webpack:///src/components/preference/preference.component.html","webpack:///src/components/preference/preference.module.ts","webpack:///src/components/switch/switch.component.ts","webpack:///src/components/switch/switch.component.html","webpack:///src/components/switch/switch.module.ts","webpack:///src/d3/base.d3.ts","webpack:///src/d3/line-chart.d3.ts","webpack:///src/d3/xy-chart.d3.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///src/models/data-cube/data-cube.model.ts","webpack:///src/models/data-cube/filters.ts","webpack:///src/models/data-cube/generation.ts","webpack:///src/models/data-cube/presets.ts","webpack:///src/models/data-cube/types.ts","webpack:///src/models/melody/melody.model.ts","webpack:///src/services/data/data.module.ts","webpack:///src/services/data/data.service.ts","webpack:///src/utils/formatters.ts","webpack:///crypto (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","TITLE","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","en","VISUALIZATION","AUDIFICATION","ACTIVE_DATUM","INSTRUCTIONS","join","DOMAIN","RANGE","GUIDE_DOGE","dictionary","language","setLanguage","lang","getLanguage","t","key","args","tA11y","CardFoldComponent","CardFoldModule","CardComponent","CardModule","DashboardComponent","audificationEnabled","dataTableEnabled","textSummaryEnabled","DashboardModule","LineChartAudificationComponent","zone","activeDatumChange","frequencyRange","duration","liveText","handleSeek","bind","melody","dispose","changes","values","data","map","datum","value","domain","d","date","sort","a","b","getTime","range","index","playing","run","emit","readOut","x","y","$event","preventDefault","stopPropagation","shiftKey","repeat","resume","min","max","length","measureName","seekTo","pause","text","window","setTimeout","LineChartAudificationModule","LineChartVisualizationComponent","elementRef","height","width","marginTop","marginRight","marginBottom","marginLeft","dataSubject","dataObservable","asObservable","activeDatumSubject","activeDatumObservable","lineChartD3","render","clear","next","activeDatum","LineChartVisualizationModule","LineChartComponent","dataService","humanizeMeasureName","measureNames","measure","name","setMeasureName","currentMeasureName","getMeasureOverDays","LineChartModule","PreferenceComponent","enabledChange","enabled","PreferenceModule","SwitchComponent","valueChange","setValue","SwitchModule","BaseD3","renderOptions","colorHighlight","clear$","svg","container","append","style","attr","complete","undefined","remove","ease","createTransition","nativeElement","LineChartD3","line","defined","isNaN","scaleX","scaleY","transition","activeDatumCircle","activeDatumToast","select","XYChartD3","renderAxis","renderData","renderActiveDatum","pipe","takeUntilCleared","subscribe","updateAxis","updateData","updateActiveDatum","nice","xAxis","ticks","every","tickFormat","yAxis","xAxisG","yAxisG","call","environment","production","bootstrapModule","err","console","error","DataCube","rows","measures","categories","categoryNames","filters","sortBy","measureIndices","findIndex","categoryIndices","category","categoryTrie","children","filterFuncs","filter","row","forEach","trieNode","categoryIndex","header","entries","measureIndex","result","labelList","traverseNode","node","push","Map","label","Object","child","pop","normalizeNthDay","sortResults","includes","largestNthDay","Math","get","nthDay","set","results","getComparator","sortConcept","aCategory","bCategory","comparators","combinedComparator","comparator","millisecondsPerDay","betweenDates","startDate","endDate","nThDayIndex","startIndex","round","Date","now","endIndex","generateCube","settings","completeSettings","defaultSettings","actualCategories","nthDayCategory","generateNthDay","days","dailyStdDev","generateEmptyRows","cumulativeWeights","generateCumulativeWeights","generateHits","generateUsersAndSessions","avgHits","hitStdDev","avgUsers","userStdDev","avgSessionsPerUser","sessionsPerUserStdDev","userCount","sessionThunk","sessions","i","user","rowsSeen","Set","userSessions","j","getNormalizedWeights","total","reduce","accumulator","weight","binarySearch","arr","probe","start","end","len","generateMeasureIncrement","type","COUNT","hitTotal","placementThunk","placement","session","rowIndex","newSession","has","newUser","add","scope","EVENT","SESSION","USER","categoryValueIndices","weights","nameToWeightMapping","rowWeights","weightDelta","dailyVariance","dailyThunk","day","countryCategory","browserCategory","sourceCategory","activeUserMeasure","revenueMeasure","SUM","eventCountMeasure","MeasureType","Scope","Melody","onSeek","synth","toDestination","currentDatumIndex","inclusive","reversed","reversedValues","reverse","forwardSequence","createSequence","backwardSequence","state","isPlaying","nextIndex","nextSeconds","getSeconds","stop","noteDuration","currentSeconds","seconds","getDatumIndex","isEnded","minValue","maxValue","minFrequency","maxFrequency","minKeyNumber","getKeyNumber","maxKeyNumber","sequence","time","keyNumber","frequency","getFrequency","triggerAttackRelease","loop","offset","log2","pow","DataModule","providers","DataService","dataCube","categoryName","local","minus","getDataFor","toJSDate","plus","formatX","formatY","Number","isInteger","toFixed","str","replace","firstCharacter","toUpperCase"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { DashboardModule } from './components/dashboard/dashboard.module';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    DashboardModule,\n  ],\n  exports: [\n    RouterModule,\n  ],\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\nimport { GUIDE_DOGE, t } from './assets/i18n';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  get TITLE() {\n    return t(GUIDE_DOGE.TITLE);\n  }\n}\n","<header class=\"header\">\n  <div class=\"logo\" role=\"banner\">{{TITLE}}</div>\n  <div class=\"links\" role=\"navigation\">\n    <a routerLink=\"/\" class=\"link active\">\n      Dashboard\n    </a>\n    <a href=\"#\" class=\"link\">\n      WebVR\n    </a>\n  </div>\n</header>\n<main class=\"container\">\n  <router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LineChartModule } from './components/line-chart/line-chart.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    LineChartModule,\n  ],\n  bootstrap: [\n    AppComponent,\n  ],\n})\nexport class AppModule {\n}\n","import { AUDIFICATION, GUIDE_DOGE, I18n, VISUALIZATION } from './types';\n\nconst en: I18n = {\n  [GUIDE_DOGE.TITLE]: 'Guide-Doge',\n  [GUIDE_DOGE.VISUALIZATION]: 'Data visualization',\n  [GUIDE_DOGE.AUDIFICATION]: 'Data audification',\n\n  [VISUALIZATION.ACTIVE_DATUM]: '%(y)s on %(x)s',\n\n  [AUDIFICATION.INSTRUCTIONS]: [\n    'Hold down <kbd>SPACE</kbd> to play audification and <kbd>SHIFT</kbd> + <kbd>SPACE</kbd> to play it backward.',\n    'Press <kbd>X</kbd> or <kbd>Y</kbd> to read out the domain and range.',\n    'Press <kbd>L</kbd> to read out the legend items.',\n    'Press <kbd>0</kbd> ... <kbd>9</kbd> to move playhead.',\n  ].join(' <br/>'),\n  [AUDIFICATION.DOMAIN]: 'Domain from %(min)s to %(max)s',\n  [AUDIFICATION.RANGE]: 'Range from %(min)s to %(max)s',\n  [AUDIFICATION.ACTIVE_DATUM]: '%(y)s on %(x)s',\n};\n\nexport default en;\n","export * from './types';\nexport * from './utils';\n","export enum GUIDE_DOGE {\n  TITLE = 0x000, // explicitly inits the first value of each enum with a different value to prevent i18n key conflicts\n  VISUALIZATION,\n  AUDIFICATION\n}\n\nexport enum VISUALIZATION {\n  ACTIVE_DATUM = 0x100,\n}\n\nexport enum AUDIFICATION {\n  INSTRUCTIONS = 0x200,\n  DOMAIN,\n  RANGE,\n  ACTIVE_DATUM,\n}\n\nexport type I18n = {\n  [key in GUIDE_DOGE | VISUALIZATION | AUDIFICATION]: string;\n};\n","import { I18n } from './types';\nimport { sprintf } from 'sprintf-js';\nimport en from './en';\nimport * as striptags from 'striptags';\n\ntype Language = keyof typeof dictionary;\n\nconst dictionary = { en };\n\nlet language: Language = 'en';\n\nexport function setLanguage(lang: Language) {\n  language = lang;\n}\n\nexport function getLanguage() {\n  return language;\n}\n\n/**\n * Returns a formatted i18n string using sprintf-js.\n *\n * @param key The key of an i18n string.\n * @param args The arguments to format the string with.\n */\nexport function t(key: keyof I18n, ...args: any[]) {\n  return sprintf(dictionary[language][key], ...args);\n}\n\n/**\n * Returns a screen-reader friendly formatted i18n string using sprintf-js.\n *\n * @param key The key of an i18n string.\n * @param args The arguments to format the string with.\n */\nexport function tA11y(key: keyof I18n, ...args: any[]) {\n  return striptags(t(key, ...args));\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card-fold',\n  templateUrl: './card-fold.component.html',\n  styleUrls: ['./card-fold.component.scss'],\n})\nexport class CardFoldComponent {\n  @Input() title: string;\n}\n","<ng-content></ng-content>\n","import { NgModule } from '@angular/core';\nimport { CardFoldComponent } from './card-fold.component';\n\n@NgModule({\n  declarations: [\n    CardFoldComponent,\n  ],\n  imports: [],\n  exports: [\n    CardFoldComponent,\n  ],\n})\nexport class CardFoldModule {\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent {\n  @Input() title: string;\n}\n","<h2 class=\"card-title\">{{title}}</h2>\n<div class=\"card-content\">\n  <ng-content></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CardComponent } from './card.component';\n\n@NgModule({\n  declarations: [\n    CardComponent,\n  ],\n  imports: [],\n  exports: [\n    CardComponent,\n  ],\n})\nexport class CardModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent {\n  audificationEnabled = true;\n  dataTableEnabled = false;\n  textSummaryEnabled = false;\n}\n","<aside class=\"sidebar\">\n  <h2 class=\"sidebar-title\">Customization</h2>\n  <app-preference title=\"Audification\" [(enabled)]=\"audificationEnabled\">\n    <label>\n      <span>\n        Lowest note (Hz)\n      </span>\n      <input type=\"number\" [defaultValue]=\"256\"/>\n    </label>\n    <label>\n      <span>\n        Highest note (Hz)\n      </span>\n      <input type=\"number\" [defaultValue]=\"2048\"/>\n    </label>\n    <label>\n      <span>\n        Note duration (ms)\n      </span>\n      <input type=\"number\" [defaultValue]=\"167\"/>\n    </label>\n    <label>\n      <span>\n        Read out before playing\n      </span>\n      <app-switch></app-switch>\n    </label>\n    <label>\n      <span>\n        Read out after playing\n      </span>\n      <app-switch></app-switch>\n    </label>\n  </app-preference>\n  <app-preference title=\"Data Table\" [(enabled)]=\"dataTableEnabled\">\n  </app-preference>\n  <app-preference title=\"Text Summary\" [(enabled)]=\"textSummaryEnabled\">\n  </app-preference>\n</aside>\n<div class=\"card-container\">\n  <div class=\"row\">\n    <app-line-chart></app-line-chart>\n    <app-line-chart></app-line-chart>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { DashboardComponent } from './dashboard.component';\nimport { LineChartModule } from '../line-chart/line-chart.module';\nimport { PreferenceModule } from '../preference/preference.module';\nimport { FormsModule } from '@angular/forms';\nimport { SwitchModule } from '../switch/switch.module';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n  ],\n  imports: [\n    LineChartModule,\n    PreferenceModule,\n    FormsModule,\n    SwitchModule,\n  ],\n  exports: [\n    DashboardComponent,\n  ],\n})\nexport class DashboardModule {\n}\n","import { Component, EventEmitter, HostListener, Input, NgZone, OnChanges, OnDestroy, Output, SimpleChanges } from '@angular/core';\nimport { Melody } from '../../models/melody/melody.model';\nimport { AUDIFICATION, t, tA11y } from '../../assets/i18n';\nimport { Datum } from '../../d3/xy-chart.d3';\nimport { formatX, formatY, humanizeMeasureName } from '../../utils/formatters';\n\n@Component({\n  selector: 'app-line-chart-audification',\n  templateUrl: './line-chart-audification.component.html',\n  styleUrls: ['./line-chart-audification.component.scss'],\n})\nexport class LineChartAudificationComponent implements OnDestroy, OnChanges {\n  @Input() data: Datum[];\n  @Input() measureName: string;\n  @Input() activeDatum: Datum | null;\n  @Output() activeDatumChange = new EventEmitter<Datum | null>();\n  @Input() frequencyRange: [number, number] = [256, 2048];\n  @Input() duration = 5;\n  liveText: string | null = null;\n  private melody?: Melody;\n  private domain: Date[];\n  private range: number[];\n\n  constructor(\n    private zone: NgZone,\n  ) {\n    this.handleSeek = this.handleSeek.bind(this);\n  }\n\n  get INSTRUCTIONS() {\n    return t(AUDIFICATION.INSTRUCTIONS);\n  }\n\n  get INSTRUCTIONS_A11Y() {\n    return tA11y(AUDIFICATION.INSTRUCTIONS);\n  }\n\n  ngOnDestroy() {\n    this.melody?.dispose();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      const values = this.data.map(datum => datum.value);\n      this.domain = this.data.map(d => d.date).sort((a, b) => a.getTime() - b.getTime());\n      this.range = this.data.map(d => d.value).sort();\n      this.melody?.dispose();\n      this.melody = new Melody(values, this.frequencyRange, this.duration, this.handleSeek);\n    }\n  }\n\n  handleSeek(index, playing) {\n    const datum = this.data[index];\n    const { date, value } = datum;\n\n    // since Tone.js is running outside of the Angular zone, it needs to reenter the zone to trigger change detection.\n    this.zone.run((() => {\n      this.activeDatumChange.emit(datum);\n      if (!playing) {\n        this.readOut(t(AUDIFICATION.ACTIVE_DATUM, {\n          x: formatX(date),\n          y: formatY(value),\n        }));\n      }\n    }));\n  }\n\n  @HostListener('keydown', ['$event'])\n  async handleKeyDown($event: KeyboardEvent) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    const { key, shiftKey, repeat } = $event;\n    if (repeat) {\n      return;\n    }\n    if (key === ' ') {\n      await this.melody?.resume(shiftKey);\n    } else if (key === 'x') {\n      this.readOut(t(AUDIFICATION.DOMAIN, {\n        min: formatX(this.domain[0]),\n        max: formatX(this.domain[this.domain.length - 1]),\n      }));\n    } else if (key === 'y') {\n      this.readOut(t(AUDIFICATION.RANGE, {\n        min: formatY(this.range[0]),\n        max: formatY(this.range[this.range.length - 1]),\n      }));\n    } else if (key === 'l') {\n      this.readOut(humanizeMeasureName(this.measureName));\n    } else if ('0' <= key && key <= '9') {\n      this.melody?.seekTo(this.duration * (+key / 10), true);\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  handleKeyUp($event: KeyboardEvent) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    const { key } = $event;\n    if (key === ' ') {\n      this.melody?.pause();\n    }\n  }\n\n  @HostListener('blur', ['$event'])\n  handleBlur() {\n    this.melody?.pause();\n  }\n\n  private readOut(text: string) {\n    if (this.liveText === text) {\n      this.liveText = null; // empty the text for a short period of time when the same text needs to be read out consequently\n      window.setTimeout(() => {\n        this.readOut(text);\n      }, 500);\n    } else {\n      this.liveText = text;\n    }\n  }\n}\n","<div role=\"img\" class=\"instructions\"\n     [innerHTML]=\"INSTRUCTIONS\"\n     [attr.aria-label]=\"INSTRUCTIONS_A11Y\">\n</div>\n<div class=\"live-text\" aria-live=\"assertive\" [innerText]=\"liveText\"></div>\n","import { NgModule } from '@angular/core';\nimport { LineChartAudificationComponent } from './line-chart-audification.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    LineChartAudificationComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    LineChartAudificationComponent,\n  ],\n})\nexport class LineChartAudificationModule {\n}\n","import { Component, ElementRef, EventEmitter, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { LineChartD3 } from '../../d3/line-chart.d3';\nimport { BehaviorSubject } from 'rxjs';\nimport { Datum, RenderOptions } from '../../d3/xy-chart.d3';\nimport { t } from '../../assets/i18n/utils';\nimport { formatX, formatY } from '../../utils/formatters';\nimport { AUDIFICATION } from '../../assets/i18n';\n\n@Component({\n  selector: 'app-line-chart-visualization',\n  templateUrl: './line-chart-visualization.component.html',\n  styleUrls: ['./line-chart-visualization.component.scss'],\n})\nexport class LineChartVisualizationComponent implements RenderOptions, OnChanges, OnInit, OnDestroy {\n  @Input() height = 500;\n  @Input() width = 800;\n  @Input() marginTop = 20;\n  @Input() marginRight = 30;\n  @Input() marginBottom = 30;\n  @Input() marginLeft = 40;\n  @Input() data: Datum[];\n  @Input() activeDatum: Datum | null;\n  @Output() activeDatumChange = new EventEmitter<Datum | null>();\n  private lineChartD3: LineChartD3;\n\n  private dataSubject = new BehaviorSubject<Datum[]>([]);\n  dataObservable = this.dataSubject.asObservable();\n\n  private activeDatumSubject = new BehaviorSubject<Datum | null>(null);\n  activeDatumObservable = this.activeDatumSubject.asObservable();\n\n  constructor(\n    public elementRef: ElementRef<HTMLElement>,\n  ) {\n    this.lineChartD3 = new LineChartD3(this);\n  }\n\n  get formattedActiveDatum() {\n    if (!this.activeDatum) {\n      return null;\n    }\n    const { date, value } = this.activeDatum;\n    return t(AUDIFICATION.ACTIVE_DATUM, {\n      x: formatX(date),\n      y: formatY(value),\n    });\n  }\n\n  ngOnInit() {\n    this.lineChartD3.render();\n  }\n\n  ngOnDestroy() {\n    this.lineChartD3.clear();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('data' in changes) {\n      this.dataSubject.next(this.data);\n    }\n    if ('activeDatum' in changes) {\n      this.activeDatumSubject.next(this.activeDatum);\n    }\n  }\n}\n","<div class=\"active-indicator\">\n  {{formattedActiveDatum}}\n</div>\n","import { NgModule } from '@angular/core';\nimport { LineChartVisualizationComponent } from './line-chart-visualization.component';\nimport { DataModule } from '../../services/data/data.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    LineChartVisualizationComponent,\n  ],\n  imports: [\n    DataModule,\n    CommonModule,\n  ],\n  exports: [\n    LineChartVisualizationComponent,\n  ],\n})\nexport class LineChartVisualizationModule {\n}\n","import { Component } from '@angular/core';\nimport { activeUserMeasure, eventCountMeasure, revenueMeasure } from '../../models/data-cube/presets';\nimport { DataService } from '../../services/data/data.service';\nimport { Datum } from '../../d3/xy-chart.d3';\nimport { GUIDE_DOGE, t } from '../../assets/i18n';\nimport { humanizeMeasureName } from 'src/utils/formatters';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n})\nexport class LineChartComponent {\n  humanizeMeasureName = humanizeMeasureName;\n  activeDatum: Datum | null;\n  data: Datum[];\n  measureNames = [activeUserMeasure, revenueMeasure, eventCountMeasure].map(measure => measure.name);\n  currentMeasureName: string;\n\n  constructor(\n    private dataService: DataService,\n  ) {\n    this.setMeasureName(this.measureNames[0]);\n  }\n\n  get VISUALIZATION() {\n    return t(GUIDE_DOGE.VISUALIZATION);\n  }\n\n  setMeasureName(measureName) {\n    this.currentMeasureName = measureName;\n    this.data = this.dataService.getMeasureOverDays(this.currentMeasureName);\n    this.activeDatum = null;\n  }\n}\n","<app-card class=\"card\" title=\"Line Chart\">\n  <div class=\"measures\">\n    <div *ngFor=\"let measureName of measureNames\"\n         class=\"measure\" [class.active]=\"measureName === currentMeasureName\"\n         (click)=\"setMeasureName(measureName)\" role=\"button\">\n      {{humanizeMeasureName(measureName)}}\n    </div>\n  </div>\n  <app-card-fold>\n    <app-line-chart-visualization role=\"img\"\n                                  [attr.aria-label]=\"VISUALIZATION\"\n                                  [data]=\"data\"\n                                  [(activeDatum)]=\"activeDatum\"></app-line-chart-visualization>\n  </app-card-fold>\n  <app-card-fold>\n    <app-line-chart-audification tabindex=\"0\"\n                                 [data]=\"data\"\n                                 [measureName]=\"currentMeasureName\"\n                                 [(activeDatum)]=\"activeDatum\"></app-line-chart-audification>\n  </app-card-fold>\n</app-card>\n","import { NgModule } from '@angular/core';\nimport { LineChartComponent } from './line-chart.component';\nimport { LineChartVisualizationModule } from '../line-chart-visualization/line-chart-visualization.module';\nimport { LineChartAudificationModule } from '../line-chart-audification/line-chart-audification.module';\nimport { CardModule } from '../card/card.module';\nimport { CardFoldModule } from '../card-fold/card-fold.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    LineChartComponent,\n  ],\n  imports: [\n    CardModule,\n    LineChartVisualizationModule,\n    LineChartAudificationModule,\n    CardFoldModule,\n    CommonModule,\n  ],\n  exports: [\n    LineChartComponent,\n  ],\n})\nexport class LineChartModule {\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-preference',\n  templateUrl: './preference.component.html',\n  styleUrls: ['./preference.component.scss'],\n})\nexport class PreferenceComponent {\n  @Input() title: string;\n  @Input() enabled: boolean;\n  @Output() enabledChange = new EventEmitter<boolean>();\n\n  toggleEnabled() {\n    this.enabledChange.emit(!this.enabled);\n  }\n}\n","<label class=\"header\" [class.enabled]=\"enabled\">\n  <span class=\"title\">\n    {{title}}\n  </span>\n  <app-switch [(value)]=\"enabled\"></app-switch>\n</label>\n<ng-content *ngIf=\"enabled\"></ng-content>\n","import { NgModule } from '@angular/core';\nimport { PreferenceComponent } from './preference.component';\nimport { CommonModule } from '@angular/common';\nimport { SwitchModule } from '../switch/switch.module';\n\n@NgModule({\n  declarations: [\n    PreferenceComponent,\n  ],\n  imports: [\n    CommonModule,\n    SwitchModule,\n  ],\n  exports: [\n    PreferenceComponent,\n  ],\n})\nexport class PreferenceModule {\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport * as uuid from 'uuid';\n\n@Component({\n  selector: 'app-switch',\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.scss'],\n})\nexport class SwitchComponent {\n  id = `switch-${uuid.v4()}`;\n  @Input() value: boolean;\n  @Output() valueChange = new EventEmitter<boolean>();\n\n  setValue(value) {\n    this.valueChange.emit(value);\n  }\n}\n","<input type=\"checkbox\" [attr.id]=\"id\" [ngModel]=\"value\" (ngModelChange)=\"setValue($event)\"/>\n<label class=\"switch\" [class.active]=\"value\" [htmlFor]=\"id\"></label>\n","import { NgModule } from '@angular/core';\nimport { SwitchComponent } from './switch.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    SwitchComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  exports: [\n    SwitchComponent,\n  ],\n})\nexport class SwitchModule {\n}\n","import { ElementRef } from '@angular/core';\nimport * as d3 from 'd3';\nimport { MonoTypeOperatorFunction, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport interface RenderOptions {\n  elementRef: ElementRef<HTMLElement>;\n  height: number;\n  width: number;\n  marginTop: number;\n  marginRight: number;\n  marginBottom: number;\n  marginLeft: number;\n}\n\nexport abstract class BaseD3<T extends RenderOptions> {\n  protected colorHighlight = 'rgb(66, 133, 244)';\n\n  protected svg: d3.Selection<SVGSVGElement, unknown, null, undefined>;\n  private clear$?: Subject<undefined>;\n\n  constructor(protected renderOptions: T) {\n  }\n\n  protected get transition() {\n    return this.createTransition(300);\n  }\n\n  protected get container() {\n    return d3.select(this.renderOptions.elementRef.nativeElement);\n  }\n\n  config(renderOptions: T) {\n    this.renderOptions = renderOptions;\n    return this;\n  }\n\n  render() {\n    const { width, height } = this.renderOptions;\n\n    this.clear();\n    this.clear$ = new Subject();\n\n    this.svg = this.container\n      .append('svg')\n      .style('width', width)\n      .style('height', height)\n      .attr('viewBox', [0, 0, width, height].join(' '));\n  }\n\n  clear() {\n    if (!this.clear$) {\n      return;\n    }\n    this.clear$.next();\n    this.clear$.complete();\n    this.clear$ = undefined;\n\n    this.svg.remove();\n  }\n\n  protected takeUntilCleared<R>(): MonoTypeOperatorFunction<R> {\n    if (!this.clear$) {\n      throw new Error(`Subject 'clear$' is not defined.`);\n    }\n    return takeUntil(this.clear$);\n  }\n\n  protected createTransition(duration: number): d3.Transition<any, unknown, null, undefined> {\n    return d3.transition()\n      .duration(duration)\n      .ease(d3.easeLinear);\n  }\n}\n","import { Datum, XYChartD3 } from './xy-chart.d3';\nimport * as d3 from 'd3';\n\nexport class LineChartD3 extends XYChartD3 {\n  protected line: d3.Line<Datum>;\n  protected path: d3.Selection<SVGPathElement, unknown, null, undefined>;\n  protected activeDatumCircle: d3.Selection<SVGCircleElement, unknown, null, undefined>;\n  protected activeDatumToast: d3.Selection<d3.BaseType, unknown, null, undefined>;\n\n  protected renderData() {\n    this.line = d3\n      .line<Datum>()\n      .defined(d => !isNaN(d.value))\n      .x(d => this.scaleX(d.date))\n      .y(d => this.scaleY(d.value));\n\n    this.path = this.svg\n      .append('path')\n      .attr('fill', 'none')\n      .attr('stroke', this.colorHighlight)\n      .attr('stroke-width', 2)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round');\n  }\n\n  protected updateData(data: Datum[]) {\n    this.path\n      .datum(data)\n      .transition(this.transition)\n      .attr('d', this.line);\n  }\n\n  protected renderActiveDatum() {\n    this.activeDatumCircle = this.svg\n      .append('circle')\n      .attr('r', 4)\n      .attr('fill', this.colorHighlight);\n    this.activeDatumToast = this.container.select('.active-indicator');\n  }\n\n  protected updateActiveDatum(activeDatum: Datum | null) {\n    if (!activeDatum) {\n      this.activeDatumCircle.attr('display', 'none');\n      this.activeDatumToast.style('opacity', 0);\n      return;\n    }\n    const { date, value } = activeDatum;\n    this.activeDatumCircle\n      .transition(this.createTransition(50))\n      .attr('display', 'inherit')\n      .attr('transform', `translate(${this.scaleX(date)},${this.scaleY(value)})`);\n    this.activeDatumToast\n      .transition(this.createTransition(50))\n      .style('opacity', .8)\n      .style('top', `${this.scaleY(value) + 16}px`)\n      .style('left', `${this.scaleX(date) - 64}px`);\n  }\n}\n","import * as d3 from 'd3';\nimport { BaseD3, RenderOptions as BaseRenderOptions } from './base.d3';\nimport { Observable } from 'rxjs';\nimport { formatX } from '../utils/formatters';\n\nexport interface Datum {\n  date: Date;\n  value: number;\n}\n\nexport interface RenderOptions extends BaseRenderOptions {\n  dataObservable: Observable<Datum[]>;\n  activeDatumObservable: Observable<Datum | null>;\n}\n\nexport abstract class XYChartD3 extends BaseD3<RenderOptions> {\n  protected scaleX: d3.ScaleTime<number, number>;\n  protected scaleY: d3.ScaleLinear<number, number>;\n  protected xAxis: d3.Axis<Date>;\n  protected yAxis: d3.Axis<number>;\n  protected xAxisG: d3.Selection<SVGGElement, unknown, null, undefined>;\n  protected yAxisG: d3.Selection<SVGGElement, unknown, null, undefined>;\n\n  render() {\n    super.render();\n\n    const {\n      dataObservable, activeDatumObservable,\n    } = this.renderOptions;\n\n    this.renderAxis();\n    this.renderData();\n    this.renderActiveDatum();\n\n    dataObservable\n      .pipe(this.takeUntilCleared())\n      .subscribe(data => {\n        this.updateAxis(data);\n        this.updateData(data);\n      });\n\n    activeDatumObservable\n      .pipe(this.takeUntilCleared())\n      .subscribe(activeDatum => {\n        this.updateActiveDatum(activeDatum);\n      });\n  }\n\n  protected renderAxis() {\n    const {\n      height, width,\n      marginTop, marginRight, marginBottom, marginLeft,\n    } = this.renderOptions;\n\n    this.scaleX = d3\n      .scaleUtc()\n      .range([marginLeft, width - marginRight]);\n    this.scaleY = d3\n      .scaleLinear()\n      .nice()\n      .range([height - marginBottom, marginTop]);\n\n    this.xAxis = d3\n      .axisBottom<Date>(this.scaleX)\n      .ticks(d3.timeWeek.every(1))\n      .tickFormat(formatX);\n    this.yAxis = d3.axisLeft<number>(this.scaleY);\n\n    this.xAxisG = this.svg\n      .append('g')\n      .attr('transform', `translate(0,${height - marginBottom})`);\n    this.yAxisG = this.svg\n      .append('g')\n      .attr('transform', `translate(${marginLeft},0)`);\n  }\n\n  protected updateAxis(data: Datum[]) {\n    this.scaleX.domain(d3.extent<Datum, Date>(data, d => d.date) as [Date, Date]);\n    this.scaleY.domain([0, d3.max(data, d => d.value)!]);\n\n    this.xAxisG\n      .transition(this.transition)\n      .call(this.xAxis)\n      .attr('font-size', 12);\n    this.yAxisG\n      .transition(this.transition)\n      .call(this.yAxis)\n      .attr('font-size', 12);\n  }\n\n  protected abstract renderData();\n\n  protected abstract updateData(data: Datum[]);\n\n  protected abstract renderActiveDatum();\n\n  protected abstract updateActiveDatum(activeDatum: Datum | null);\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Category, Filter, Measure, ResultRow, Row } from './types';\n\n/**\n * This cube is conceptually an n-dimensional array of numbers. The cube\n * represents categories and measures. Each category corresponds to a\n * dimension of the cube. Each category has several different values it can\n * take on. Each category value corresponds to a slice of the cube.\n *\n * For example, look at the following two dimensional cube (i.e. a table):\n *\n *       \\ Chrome \\ Firefox\n * -------+--------+--------\n * USA    |   65   |   78\n * Canada |  101   |   34\n * Mexico |   72   |  156\n *\n * This table has two categories: Country and Browser. Country has three\n * category values: USA, Canada, Mexico, whereas Browser has two: Chrome and\n * Firefox. This cube has only one measure (say, Active Users). So, the table\n * is saying that there were 65 active users from the USA using Chrome.\n * Similarly there were 156 Firefox users from Mexico.\n *\n * The slice represented by USA is the list [65, 78]. The slice represented by\n * Chrome is [65, 101, 72].\n *\n * The cube can support any number of categories, and any number of measures.\n * More categories mean a higher dimensional cube, and more measures means each\n * cell in the cube will be represented by a vector where each element in the\n * vector corresponds to a different measure. Here is a three dimensional\n * (Gender, Source and OS) cube with two measures (Average Visit Duration and\n * Event Count):\n *\n * Male:                              * Female:\n *       \\ Windows \\   Mac  \\  Linux  *       \\ Windows \\   Mac  \\  Linux\n * -------+---------+--------+------- * -------+---------+--------+-------\n * Direct |  5s, 60 | 9s, 23 | 6s, 64 * Direct |  2s, 57 | 6s, 65 | 3s, 34\n * Email  |  7s, 90 | 2s, 98 | 2s, 90 * Email  |  3s, 93 | 4s, 73 | 6s, 72\n * Search |  1s, 32 | 3s, 21 | 4s, 23 * Search |  8s, 86 | 3s, 53 | 5s, 35\n *\n * This cube is saying, for example, that female Linux users coming from\n * Search stayed on the page for an average of 5 seconds.\n *\n * The cube can be queried for specific categories and measures. This\n * will combine together the values for all the other categories and give\n * a breakdown based on the requested categories. For more information, see\n * the documentation for the `getDataFor()` method.\n */\nexport class DataCube {\n  constructor(\n    private readonly rows: Row[],\n    private readonly measures: Measure[],\n    private readonly categories: Category[],\n  ) {\n  }\n\n  /**\n   * Get a breakdown by the given categories in the given measures.\n   *\n   * Breaks down the data in the cube by the given categories and returns\n   * the given measures in a table. So, for the following cube, with\n   * categories Gender, Source and OS and measures Event Count and Sessions:\n   *\n   * Male:                              * Female:\n   *       \\ Windows \\   Mac  \\  Linux  *       \\ Windows \\   Mac  \\  Linux\n   * -------+---------+--------+------- * -------+---------+--------+-------\n   * Direct |  12, 60 |  1, 23 | 44, 64 * Direct |  50, 57 | 43, 65 | 25, 34\n   * Email  |  23, 90 | 51, 98 | 21, 90 * Email  |  39, 93 | 24, 73 | 64, 72\n   * Search |  16, 32 | 10, 21 |  9, 23 * Search |  93, 86 | 38, 53 | 31, 35\n   *\n   * If you get data for the Source category and Sessions measure, the\n   * result would be\n   *\n   * Categories | Measures\n   * -----------+------------\n   * Source     | Sessions\n   * ===========+============\n   * Direct     | 303\n   * Email      | 516\n   * Search     | 250\n   *\n   * The value of the measure Sessions for the category value \"Direct\",\n   * for example, is calculated by adding the the Sessions values\n   * across all the other categories\n   * (across the top row: 60 + 23 + 64 + 57 + 65 + 34). Other category\n   * values are calculated similarly.\n   *\n   * The data can be broken down by multiple categories, and multiple\n   * measures can be provided. For example, given the same cube as before,\n   * with the category names Gender and OS, and measure Event Count, the\n   * resulting table will be:\n   *\n   *    Categories    |  Measures\n   * -----------------+------------\n   * Gender |   OS    | Event Count\n   * =======+=========+============\n   * Male   | Windows | 51\n   * Male   | Mac     | 62\n   * Male   | Linux   | 74\n   * Female | Windows | 182\n   * Female | Mac     | 105\n   * Female | Linux   | 110\n   *\n   * Special handling is applied to the \"nthDay\" category. No matter what\n   * actual day it corresponds to, the earliest nthDay will always correspond\n   * to 0, the second earliest to 1, and so on.\n   *\n   * This method also supports filtering by category or measure values.\n   * Filtering takes place before the counting is done, so it is possible to\n   * filter on categories that are not in the query. By default, nothing is\n   * filtered.\n   *\n   * It's also possible to sort the results by any category or measure.\n   * By default, the results are sorted by the first requested category, then\n   * the second, and so on.\n   *\n   * @param categoryNames The categories to request a breakdown from.\n   * @param measureNames The measures to provide values for.\n   * @param filters The filters to apply to the cube before finding the results.\n   * @param sortBy The concept names to sort in ascending order.\n   */\n  getDataFor(\n    categoryNames: string[],\n    measureNames: string[],\n    filters: Filter[] = [],\n    sortBy?: string[],\n  ): ResultRow[] {\n    const measureIndices = measureNames.map(name =>\n      this.measures.findIndex(measure => measure.name === name),\n    );\n    const categoryIndices = categoryNames.map(name =>\n      this.categories.findIndex(category => category.name === name),\n    );\n    const categoryTrie: TrieNode = { children: {} };\n    const filterFuncs = filters.map(filter =>\n      filter(this.categories, this.measures),\n    );\n    this.rows\n      .filter(row => filterFuncs.every(filter => filter(row)))\n      .forEach(row => {\n        let trieNode = categoryTrie;\n        for (const categoryIndex of categoryIndices) {\n          if (!trieNode.children[row.header[categoryIndex]]) {\n            trieNode.children[row.header[categoryIndex]] = { children: {} };\n          }\n          trieNode = trieNode.children[row.header[categoryIndex]];\n        }\n        if (!trieNode.values) {\n          trieNode.values = measureNames.map(() => 0);\n        }\n        for (const [index, measureIndex] of measureIndices.entries()) {\n          trieNode.values[index] += row.values[measureIndex];\n        }\n      });\n\n    const result: ResultRow[] = [];\n    const labelList: string[] = [];\n    const traverseNode = (node: TrieNode) => {\n      if (node.values) {\n        result.push({\n          categories: new Map(\n            labelList.map((label, index) => [categoryNames[index], label]),\n          ),\n          values: new Map(\n            node.values.map((value, index) => [measureNames[index], value]),\n          ),\n        });\n      } else {\n        for (const [label, child] of Object.entries(node.children)) {\n          labelList.push(label);\n          traverseNode(child);\n          labelList.pop();\n        }\n      }\n    };\n    traverseNode(categoryTrie);\n    this.normalizeNthDay(result, categoryNames);\n    this.sortResults(\n      result,\n      categoryNames,\n      measureNames,\n      sortBy ?? [...categoryNames, ...measureNames],\n    );\n    return result;\n  }\n\n  private normalizeNthDay(rows: ResultRow[], categoryNames: string[]) {\n    if (!categoryNames.includes('nthDay')) {\n      return;\n    }\n    const largestNthDay = Math.max(...rows.map(row => row.categories.get('nthDay') as number));\n    for (const row of rows) {\n      const nthDay = row.categories.get('nthDay') as number;\n      row.categories.set('nthDay', largestNthDay - nthDay);\n    }\n  }\n\n  private sortResults(\n    results: ResultRow[],\n    categoryNames: string[],\n    measureNames: string[],\n    sortBy: string[],\n  ) {\n    function getComparator(sortConcept: string) {\n      if (categoryNames.includes(sortConcept)) {\n        return (a: ResultRow, b: ResultRow) => {\n          const aCategory = a.categories.get(sortConcept)!;\n          const bCategory = b.categories.get(sortConcept)!;\n          if (aCategory < bCategory) {\n            return -1;\n          }\n          if (aCategory > bCategory) {\n            return 1;\n          }\n          return 0;\n        };\n      }\n      if (measureNames.includes(sortConcept)) {\n        return (a: ResultRow, b: ResultRow) =>\n          a.values.get(sortConcept)! - b.values.get(sortConcept)!;\n      }\n      return () => 0;\n    }\n\n    const comparators = sortBy.map(getComparator);\n    const combinedComparator = (a: ResultRow, b: ResultRow) => {\n      for (const comparator of comparators) {\n        const result = comparator(a, b);\n        if (result !== 0) {\n          return result;\n        }\n      }\n      return 0;\n    };\n    results.sort(combinedComparator);\n  }\n}\n\ninterface TrieNode {\n  children: Record<string, TrieNode>;\n  values?: number[];\n}\n","import { Category, Filter, Row } from './types';\n\nconst millisecondsPerDay = 24 * 60 * 60 * 1000;\n\nexport function betweenDates(startDate: Date, endDate: Date): Filter {\n  return (categories: Category[]) => {\n    const nThDayIndex = categories.findIndex(\n      category => category.name === 'nthDay',\n    );\n    const startIndex = Math.round(\n      (Date.now() - startDate.getTime()) / millisecondsPerDay,\n    );\n    const endIndex = Math.round(\n      (Date.now() - endDate.getTime()) / millisecondsPerDay,\n    );\n    return (row: Row) =>\n      row.header[nThDayIndex] <= startIndex &&\n      row.header[nThDayIndex] >= endIndex;\n  };\n}\n","import * as random from 'random';\nimport {\n  Category,\n  CategoryValue,\n  HitGenerationSettings,\n  Measure,\n  MeasureType,\n  ModelSettings,\n  Row,\n  Scope,\n  SessionGenerationSettings,\n} from './types';\nimport { DataCube } from './data-cube.model';\n\n/**\n * Creates fake analytics data based on the model given by settings.\n *\n * The fake data is returned as a Cube. See [cube.ts](./cube.ts) for more\n * information on the properties of the cube.\n *\n * The shape of the cube is determined by the categories and measures that are\n * passed in. The content is generated based on `settings`. For details on\n * what each property in settings does, see the documentation for the settings\n * type in [types.ts](./types.ts).\n *\n * The nthDay category is added to the categories if not present. The number of\n * values is determined by the `days` setting and the weight of each day is\n * determined according to the dailyVariance setting.\n *\n * The data is generated as a series of hits. Each hit is randomly assigned\n * to a category value for each category, based on the weights for each value.\n *\n * The hit is then added to a measure if it is a hit scoped measure, or if it\n * is a session scoped measure and part of a new session or if it is a user\n * scoped measure and represents a new user. For measures of type COUNT, they\n * are incremented by 1, whereas for measures of type SUM a random value in its\n * range is selected and added to the measure for that combination of category\n * values.\n *\n * This generation code makes the following assumptions:\n *  - All categories are independent of each other.\n *  - Each hit has a corresponding category value for each dimension.\n *  - The number of users is normally distributed, with mean settings.avgUsers\n *    and standard deviation settings.usersStdDev.\n *  - The number of sessions per user is normally distributed with mean\n *    settings.avgUsersPerSession and standard deviation settings.sessionsPerUserStdDev.\n *  - The number of hits is normally distributed with mean settings.avgHits\n *    and standard deviation settings.hitsStdDev.\n *  - The value of each hit for measures of type SUM is uniformly distributed in\n *    its range.\n *  - The session a hit belongs to is uniformly distributed.\n *  - The weight of a day is normally distributed with mean 1 and standard\n *    deviation settings.dailyStdDev\n *\n */\nexport function generateCube(\n  categories: Category[],\n  measures: Measure[],\n  settings: Partial<ModelSettings> = {},\n): DataCube {\n  const completeSettings: ModelSettings = {\n    ...defaultSettings,\n    ...settings,\n  };\n  const actualCategories = [...categories];\n  if (completeSettings.nthDay) {\n    const nthDayCategory = generateNthDay(\n      completeSettings.days,\n      completeSettings.dailyStdDev,\n    );\n    actualCategories.push(nthDayCategory);\n  }\n  const rows = generateEmptyRows(actualCategories, measures);\n  const cumulativeWeights = generateCumulativeWeights(rows, actualCategories);\n\n  generateHits(\n    rows,\n    measures,\n    cumulativeWeights,\n    generateUsersAndSessions(completeSettings),\n    completeSettings,\n  );\n\n  return new DataCube(rows, measures, actualCategories);\n}\n\nconst defaultSettings: ModelSettings = {\n  avgHits: 1000000,\n  hitStdDev: 10000,\n  avgUsers: 10000,\n  userStdDev: 100,\n  avgSessionsPerUser: 5,\n  sessionsPerUserStdDev: 3,\n  nthDay: true,\n  days: 60,\n  dailyStdDev: 0.1,\n};\n\ninterface User {\n  rowsSeen: Set<number>;\n}\n\ninterface Session {\n  user: User;\n  rowsSeen: Set<number>;\n}\n\nfunction generateUsersAndSessions({\n                                    avgUsers,\n                                    userStdDev,\n                                    avgSessionsPerUser,\n                                    sessionsPerUserStdDev,\n                                  }: SessionGenerationSettings) {\n  const userCount = Math.round(random.normal(avgUsers, userStdDev)());\n  const sessionThunk = random.normal(avgSessionsPerUser, sessionsPerUserStdDev);\n  const sessions: Session[] = [];\n  for (let i = 0; i < userCount; i++) {\n    const user = { rowsSeen: new Set<number>() };\n    const userSessions = Math.round(sessionThunk());\n    for (let j = 0; j < userSessions; j++) {\n      sessions.push({ user, rowsSeen: new Set() });\n    }\n  }\n  return sessions;\n}\n\nfunction getNormalizedWeights(categories: Category[]) {\n  return categories.map(category => {\n    const total = category.values.reduce((accumulator, value) => value.weight + accumulator, 0);\n    return category.values.map(value => value.weight / total);\n  });\n}\n\nfunction binarySearch(\n  arr: number[],\n  probe: number,\n  start = 0,\n  end = arr.length,\n): number {\n  const len = end - start;\n  if (len < 2) {\n    return start;\n  }\n  const index = len % 2 === 0 ? (start + end) / 2 : (start + end - 1) / 2;\n  if (arr[index] <= probe) {\n    return binarySearch(arr, probe, index, end);\n  } else {\n    return binarySearch(arr, probe, start, index);\n  }\n}\n\nfunction generateMeasureIncrement(measure: Measure) {\n  if (measure.type === MeasureType.COUNT || !measure.range) {\n    return 1;\n  }\n  return random.float(measure.range[0], measure.range[1]);\n}\n\nfunction generateHits(\n  rows: Row[],\n  measures: Measure[],\n  cumulativeWeights: number[],\n  sessions: Session[],\n  { avgHits, hitStdDev }: HitGenerationSettings,\n) {\n  const hitTotal = Math.round(random.normal(avgHits, hitStdDev)());\n  const placementThunk = random.uniform();\n  const sessionThunk = random.uniformInt(0, sessions.length - 1);\n  for (let i = 0; i < hitTotal; i++) {\n    const placement = placementThunk();\n    const session = sessionThunk();\n    const rowIndex = binarySearch(cumulativeWeights, placement);\n    for (const [index, measure] of measures.entries()) {\n      const newSession = !sessions[session].rowsSeen.has(rowIndex);\n      const newUser = !sessions[session].user.rowsSeen.has(rowIndex);\n      if (newSession) {\n        sessions[session].rowsSeen.add(rowIndex);\n        if (newUser) {\n          sessions[session].user.rowsSeen.add(rowIndex);\n        }\n      }\n\n      switch (measure.scope) {\n        case Scope.EVENT:\n          rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          break;\n        case Scope.SESSION:\n          if (newSession) {\n            rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          }\n          break;\n        case Scope.USER:\n          if (newUser) {\n            rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          }\n          break;\n      }\n    }\n  }\n}\n\nfunction generateEmptyRows(categories: Category[], measures: Measure[]) {\n  const rows: Row[] = [];\n\n  // The current index in each category of which value we've looked at\n  const categoryValueIndices = categories.map(() => 0);\n  let categoryIndex = 0;\n  // This is going to loop through all combinations of category values.\n  // The approach we take is to iterate through all the first category's values.\n  // Then we move to the next value in the second category and iterate through\n  // all the values in the first category again. We then move to the next value\n  // in the second category, and repeat again and again until we've gone through\n  // all the values in the second category. We then move to the next value\n  // in the third category, then repeat, and so on and so on until we've gone\n  // through every possible value.\n  do {\n    // Get the current combination of values and add them to the list\n    const header = categories.map(\n      (category, index) => category.values[categoryValueIndices[index]].name,\n    );\n    const values = measures.map(() => 0);\n    rows.push({ header, values });\n\n    // Start with the first category\n    categoryIndex = 0;\n    do {\n      // Advance to the next category value in the current value\n      categoryValueIndices[categoryIndex] =\n        (categoryValueIndices[categoryIndex] + 1) %\n        categories[categoryIndex].values.length;\n      categoryIndex += 1;\n      // If we wrapped around to the beginning of the list of values for the\n      // current category, move to the next category so that its value can\n      // be incremented\n    } while (\n      categoryValueIndices[categoryIndex - 1] === 0 &&\n      categoryIndex < categories.length\n      );\n    // If we ended up with the first value in the previous category, then\n    // that means we ran off the end of the list of possible categories, so\n    // we should end the loop\n  } while (categoryValueIndices[categoryIndex - 1] !== 0);\n  return rows;\n}\n\nfunction generateCumulativeWeights(rows: Row[], categories: Category[]) {\n  const weights = getNormalizedWeights(categories);\n  const nameToWeightMapping = categories.map(\n    (category, categoryIndex) =>\n      new Map(\n        category.values.map((value, index) => [\n          value.name,\n          weights[categoryIndex][index],\n        ]),\n      ),\n  );\n  return rows.reduce(\n    (cumulativeWeights, row) => {\n      const rowWeights = row.header.map((label, categoryIndex) => nameToWeightMapping[categoryIndex].get(label) ?? 0);\n      const weightDelta = rowWeights.reduce((accumulator, weight) => accumulator * weight, 1);\n      cumulativeWeights.push(weightDelta + cumulativeWeights[cumulativeWeights.length - 1]);\n      return cumulativeWeights;\n    },\n    [0],\n  );\n}\n\nfunction generateNthDay(days: number, dailyVariance: number): Category {\n  const dailyThunk = random.normal(1, dailyVariance);\n  const values: CategoryValue[] = [];\n  for (let day = 0; day < days; day++) {\n    values.push({\n      name: day,\n      weight: dailyThunk(),\n    });\n  }\n  return {\n    name: 'nthDay',\n    values,\n  };\n}\n","import { Category, Measure, MeasureType, Scope } from './types';\n\nexport const countryCategory: Category = {\n  name: 'country',\n  values: [\n    {\n      name: 'Canada',\n      weight: 2,\n    },\n    {\n      name: 'USA',\n      weight: 16,\n    },\n    {\n      name: 'Mexico',\n      weight: 15,\n    },\n  ],\n};\n\nexport const browserCategory: Category = {\n  name: 'browser',\n  values: [\n    {\n      name: 'Chrome',\n      weight: 50,\n    },\n    {\n      name: 'Firefox',\n      weight: 19,\n    },\n    {\n      name: 'Safari',\n      weight: 20,\n    },\n    {\n      name: 'Edge',\n      weight: 10,\n    },\n  ],\n};\n\nexport const sourceCategory: Category = {\n  name: 'source',\n  values: [\n    {\n      name: 'Direct',\n      weight: 5,\n    },\n    {\n      name: 'Email',\n      weight: 5,\n    },\n  ],\n};\n\nexport const activeUserMeasure: Measure = {\n  name: 'activeUsers',\n  scope: Scope.USER,\n  type: MeasureType.COUNT,\n};\n\nexport const revenueMeasure: Measure = {\n  name: 'revenue',\n  scope: Scope.EVENT,\n  type: MeasureType.SUM,\n  range: [0, 10],\n};\n\nexport const eventCountMeasure: Measure = {\n  name: 'eventCount',\n  scope: Scope.EVENT,\n  type: MeasureType.SUM,\n};\n","/** A description of a type of value that a hit can belong to. */\nexport interface Category {\n  /** The canonical name for this category. */\n  name: string;\n\n  /** The possible values the category can take on. */\n  values: CategoryValue[];\n}\n\n/** Describes a possible value a category can have. */\nexport interface CategoryValue {\n  /** A label for this particular value */\n  name: string | number;\n\n  /**\n   * How likely this value is to occur, relative to the other values in this\n   * category.\n   */\n  weight: number;\n}\n\n/** A value that can be measured. */\nexport interface Measure {\n  /** The canonical name for this measure. */\n  name: string;\n  /** If this measure applies to events, sessions or users. */\n  scope: Scope;\n  /** How the values from this measure are calculated. */\n  type: MeasureType;\n  /**\n   * The range of values this measure can take on per hit, if the measure\n   * is of type SUM.\n   */\n  range?: [number, number];\n}\n\n/** The way this measure is calculated */\nexport enum MeasureType {\n  COUNT,\n  SUM,\n}\n\n/** What this measure is associated with. */\nexport enum Scope {\n  EVENT,\n  SESSION,\n  USER,\n}\n\n/**\n * Used to control the model for data generation. More details about how this\n * is used is available in [generation.ts](./generation.ts).\n */\nexport type ModelSettings = HitGenerationSettings &\n  SessionGenerationSettings &\n  NthDayGenerationSettings;\n\nexport interface HitGenerationSettings {\n  /** The average number of hits over the lifetime of the data generation. */\n  avgHits: number;\n  /** The standard deviation of hits over the time lifetime of the data generation. */\n  hitStdDev: number;\n}\n\nexport interface SessionGenerationSettings {\n  /** The average number of users for this data generation. */\n  avgUsers: number;\n  /** The standard deviation of users for this data generation. */\n  userStdDev: number;\n  /** The average number of sessions per user. */\n  avgSessionsPerUser: number;\n  /** The standard deviation of sessions per user. */\n  sessionsPerUserStdDev: number;\n}\n\nexport interface NthDayGenerationSettings {\n  /** Whether to generate nth day category or not */\n  nthDay: boolean;\n  /** The number of days worth of data to generate. */\n  days: number;\n  /** How much the number of hits can vary from day to day. */\n  dailyStdDev: number;\n}\n\n/**\n * A filter is applied to the data in a cube before being queried.\n *\n * A filter is a factory function that actually generates the filter when\n * called. The idea is that the first call will allow the filter to configure\n * itself with any necessary values, so that the second call can run very\n * quickly on each row.\n */\nexport type Filter = (\n  categories: Category[],\n  measures: Measure[],\n) => (row: Row) => boolean;\n\n/**\n * The internal storage of the cube. Although the cube is conceptually an\n * n-dimensional cube of data, in actuality it is a list of rows, to make for\n * easier querying.\n */\nexport interface Row {\n  /** The category values for this row. */\n  header: (string | number)[];\n  /** The measure values for this row. */\n  values: number[];\n}\n\n/**\n * The data returned from a query to a cube. The category and measure values\n * are stored in a map keyed on the name of the respective category or\n * dimension.\n */\nexport interface ResultRow {\n  categories: Map<string, string | number>;\n  values: Map<string, number>;\n}\n","import * as Tone from 'tone';\n\nexport type OnSeek = (index: number, playing: boolean) => void;\n\nexport class Melody {\n  private synth = new Tone.Synth().toDestination();\n  private forwardSequence: Tone.Sequence;\n  private backwardSequence: Tone.Sequence;\n  private currentDatumIndex = 0;\n  private inclusive = true; // if true, playing the melody starting inclusively from currentDatumIndex\n  private reversed = false; // if true, playing the melody backward\n\n  constructor(\n    private values: number[],\n    private frequencyRange: [number, number],\n    private duration: number, // duration (in seconds) of the melody\n    private onSeek?: OnSeek,\n  ) {\n    const reversedValues = [...values].reverse();\n    this.forwardSequence = this.createSequence(values);\n    this.backwardSequence = this.createSequence(reversedValues);\n  }\n\n  get noteDuration() {\n    return this.duration / this.values.length;\n  }\n\n  get currentSeconds() {\n    return this.reversed\n      ? this.duration - Tone.Transport.seconds\n      : Tone.Transport.seconds;\n  }\n\n  get isPlaying() {\n    return Tone.Transport.state === 'started';\n  }\n\n  get isEnded() {\n    return (\n      this.reversed && this.currentDatumIndex === 0 ||\n      !this.reversed && this.currentDatumIndex === this.values.length - 1\n    );\n  }\n\n  get nextIndex() {\n    if (this.isEnded) {\n      return (this.values.length - 1) - this.currentDatumIndex; // bring playhead to the opposite end\n    }\n    const offset = this.inclusive ? 0 : (this.reversed ? -1 : +1);\n    return this.currentDatumIndex + offset;\n  }\n\n  private static getKeyNumber(frequency: number) {\n    return Math.log2(frequency / 440) * 12 + 49;\n  }\n\n  private static getFrequency(keyNumber: number) {\n    return Math.pow(2, (keyNumber - 49) / 12) * 440;\n  }\n\n  async resume(reversed: boolean) {\n    if (Tone.getContext().state === 'suspended') {\n      await Tone.start();\n    }\n    if (!this.isPlaying) {\n      this.reversed = reversed;\n      this.currentDatumIndex = this.nextIndex;\n      let nextSeconds = this.getSeconds(this.currentDatumIndex);\n      if (this.reversed) {\n        this.backwardSequence.start(0);\n        this.forwardSequence.stop(0);\n        nextSeconds += this.noteDuration / 2;\n        Tone.Transport.start(undefined, this.duration - nextSeconds);\n      } else {\n        this.backwardSequence.stop(0);\n        this.forwardSequence.start(0);\n        nextSeconds -= this.noteDuration / 2;\n        Tone.Transport.start(undefined, nextSeconds);\n      }\n    }\n  }\n\n  pause() {\n    if (this.isPlaying) {\n      Tone.Transport.pause();\n      this.backwardSequence.stop(0);\n      this.forwardSequence.stop(0);\n      this.seekTo(this.currentSeconds);\n    }\n  }\n\n  getCurrentDatumIndex() {\n    return this.currentDatumIndex;\n  }\n\n  seekTo(seconds: number, inclusive = false) {\n    this.currentDatumIndex = this.getDatumIndex(seconds);\n    this.inclusive = this.isEnded || inclusive;\n    this.onSeek?.(this.currentDatumIndex, this.isPlaying);\n  }\n\n  dispose() {\n    this.forwardSequence.dispose();\n    this.backwardSequence.dispose();\n    this.synth.dispose();\n  }\n\n  private createSequence(values: number[]) {\n    const minValue = Math.min(...values);\n    const maxValue = Math.max(...values);\n    const [minFrequency, maxFrequency] = this.frequencyRange;\n    const minKeyNumber = Melody.getKeyNumber(minFrequency);\n    const maxKeyNumber = Melody.getKeyNumber(maxFrequency);\n    const sequence = new Tone.Sequence(\n      (time, value) => {\n        this.seekTo(this.currentSeconds);\n        const keyNumber = (value - minValue) / (maxValue - minValue) * (maxKeyNumber - minKeyNumber) + minKeyNumber;\n        const frequency = Melody.getFrequency(keyNumber);\n        this.synth.triggerAttackRelease(frequency, this.noteDuration, time);\n      },\n      values,\n      this.noteDuration,\n    );\n    sequence.loop = 1;\n    return sequence;\n  }\n\n  private getSeconds(index: number) {\n    return (index + .5) * this.noteDuration;\n  }\n\n  private getDatumIndex(seconds: number) {\n    const index = Math.round(seconds / this.noteDuration - .5);\n    return Math.min(Math.max(index, 0), this.values.length - 1);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DataService } from './data.service';\n\n@NgModule({\n  providers: [\n    DataService,\n  ],\n})\nexport class DataModule {\n}\n","import { DateTime } from 'luxon';\nimport {\n  activeUserMeasure,\n  browserCategory,\n  countryCategory,\n  eventCountMeasure,\n  revenueMeasure,\n  sourceCategory,\n} from '../../models/data-cube/presets';\nimport { betweenDates } from '../../models/data-cube/filters';\nimport { generateCube } from 'src/models/data-cube/generation';\n\nexport class DataService {\n  private dataCube = generateCube(\n    [countryCategory, browserCategory, sourceCategory],\n    [activeUserMeasure, revenueMeasure, eventCountMeasure],\n    {\n      avgHits: 10000,\n      hitStdDev: 100,\n      avgUsers: 100,\n      userStdDev: 1,\n      avgSessionsPerUser: 5,\n      sessionsPerUserStdDev: 3,\n    },\n  );\n\n  getMeasureOverDays(measureName: string, days = 30) {\n    const categoryName = 'nthDay';\n    const endDate = DateTime.local();\n    const startDate = endDate.minus({ day: days });\n\n    return this.dataCube\n      .getDataFor(\n        [categoryName],\n        [measureName],\n        [betweenDates(startDate.toJSDate(), endDate.toJSDate())],\n      )\n      .map(row => ({\n        date: startDate\n          .plus({ days: row.categories.get(categoryName) as number })\n          .toJSDate(),\n        value: row.values.get(measureName)!,\n      }));\n  }\n}\n","import * as d3 from 'd3';\n\nexport const formatX = d3.timeFormat('%B %d');\n\nexport const formatY = (value: number) => Number.isInteger(value) ? value : value.toFixed(1);\n\nexport const humanizeMeasureName = (str: string) => str\n  .replace(/([A-Z])/g, ' $1')\n  .replace(/^./, firstCharacter => firstCharacter.toUpperCase());\n","/* (ignored) */"]}