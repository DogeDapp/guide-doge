{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app-routing.module.ts","webpack:///src/app.component.ts","webpack:///src/app.component.html","webpack:///src/app.module.ts","webpack:///src/components/card/card.component.ts","webpack:///src/components/card/card.component.html","webpack:///src/components/card/card.module.ts","webpack:///src/components/dashboard/dashboard.component.ts","webpack:///src/components/dashboard/dashboard.component.html","webpack:///src/components/dashboard/dashboard.module.ts","webpack:///src/components/line-chart-audification/line-chart-audification.component.ts","webpack:///src/components/line-chart-audification/line-chart-audification.component.html","webpack:///src/components/line-chart/line-chart.component.ts","webpack:///src/components/line-chart/line-chart.component.html","webpack:///src/components/line-chart/line-chart.module.ts","webpack:///src/components/preference-group/preference-group.component.ts","webpack:///src/components/preference-group/preference-group.component.html","webpack:///src/components/preference-group/preference-group.module.ts","webpack:///src/components/preference-item/preference-item.component.ts","webpack:///src/components/preference-item/preference-item.component.html","webpack:///src/components/preference-item/preference-item.module.ts","webpack:///src/components/switch/switch.component.ts","webpack:///src/components/switch/switch.component.html","webpack:///src/components/switch/switch.module.ts","webpack:///src/d3/base.d3.ts","webpack:///src/d3/line-chart.d3.ts","webpack:///src/d3/xy-chart.d3.ts","webpack:///src/directives/a11y-placeholder/a11y-placeholder.directive.ts","webpack:///src/directives/a11y-placeholder/a11y-placeholder.module.ts","webpack:///src/directives/audification/audification.directive.ts","webpack:///src/directives/audification/audification.module.ts","webpack:///src/environments/environment.ts","webpack:///src/i18n/index.ts","webpack:///src/i18n/languages/en.ts","webpack:///src/i18n/languages/index.ts","webpack:///src/i18n/languages/ko.ts","webpack:///src/i18n/types.ts","webpack:///src/i18n/utils.ts","webpack:///src/main.ts","webpack:///src/models/data-cube/data-cube.model.ts","webpack:///src/models/data-cube/filters.ts","webpack:///src/models/data-cube/generation.ts","webpack:///src/models/data-cube/presets.ts","webpack:///src/models/data-cube/types.ts","webpack:///src/models/melody/melody.model.ts","webpack:///src/services/data/data.module.ts","webpack:///src/services/data/data.service.ts","webpack:///src/services/preference/preference.module.ts","webpack:///src/services/preference/preference.service.ts","webpack:///src/utils/comparators.ts","webpack:///src/utils/formatters.ts","webpack:///crypto (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","TITLE","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","CardComponent","tabbed","humanizeMeasureName","setMeasureName","measureNames","measureName","currentMeasureName","VISUALIZATION","CardModule","DashboardComponent","preferenceService","audification","dataTable","textSummary","DashboardModule","LineChartAudificationComponent","host","zone","liveText","destroy$","tabindex","readOutTimeoutId","handleSeek","bind","data$","pipe","subscribe","data","values","map","datum","value","domain","d","date","sort","range","melody","dispose","lowestPitch","highestPitch","noteDuration","next","complete","index","run","activeDatum","$event","preventDefault","stopPropagation","key","shiftKey","repeat","resume","readOut","DOMAIN","min","max","length","RANGE","datumIndex","Math","floor","seekTo","readOutCurrentDatum","pause","text","window","clearTimeout","setTimeout","currentDatumIndex","ACTIVE_DATUM","x","y","INSTRUCTIONS","LineChartComponent","dataService","elementRef","height","width","marginTop","marginRight","marginBottom","marginLeft","activeDatum$","lineChartD3","render","clear","changes","getMeasureOverDays","LineChartModule","PreferenceGroupComponent","subject","PreferenceGroupModule","PreferenceItemComponent","PreferenceItemModule","SwitchComponent","valueChange","emit","setValue","SwitchModule","BaseD3","renderOptions","colorHighlight","clear$","svg","style","attr","join","undefined","html","duration","ease","createTransition","nativeElement","container","select","LineChartD3","line","defined","isNaN","scaleX","scaleY","append","transition","activeDatumCircle","activeDatumToast","XYChartD3","renderAxis","renderData","renderActiveDatum","takeUntilCleared","updateAxis","updateData","updateActiveDatum","nice","xAxis","ticks","every","tickFormat","yAxis","xAxisG","yAxisG","call","A11yPlaceholderDirective","componentFactoryResolver","viewContainerRef","A11yComponent","preference","componentFactory","resolveComponentFactory","injector","create","providers","provide","useValue","componentRef","createComponent","Object","assign","instance","indexOf","hostView","remove","destroy","A11yPlaceholderModule","AudificationDirective","lineChartComponent","audification$","enabled","attach","detach","audificationComponentRef","a11yPlaceholder","addComponent","removeComponent","AudificationModule","environment","production","en","AUDIFICATION","ko","GUIDE_DOGE","language","setLanguage","lang","getLanguage","t","args","tA11y","bootstrapModule","err","console","error","DataCube","rows","measures","categories","categoryNames","filters","sortBy","measureIndices","name","findIndex","measure","categoryIndices","category","categoryTrie","children","filterFuncs","filter","row","forEach","trieNode","categoryIndex","header","entries","measureIndex","result","labelList","traverseNode","node","push","Map","label","child","pop","normalizeNthDay","sortResults","includes","largestNthDay","get","nthDay","set","results","getComparator","sortConcept","a","b","aCategory","bCategory","comparators","combinedComparator","comparator","millisecondsPerDay","defaultOptions","excludeStartDate","excludeEndDate","betweenDates","startDate","endDate","options","nThDayIndex","startIndex","round","Date","now","getTime","endIndex","generateCube","settings","completeSettings","defaultSettings","actualCategories","nthDayCategory","generateNthDay","days","dailyStdDev","generateEmptyRows","cumulativeWeights","generateCumulativeWeights","generateHits","generateUsersAndSessions","avgHits","hitStdDev","avgUsers","userStdDev","avgSessionsPerUser","sessionsPerUserStdDev","userCount","sessionThunk","sessions","i","user","rowsSeen","Set","userSessions","j","getNormalizedWeights","total","reduce","accumulator","weight","binarySearch","arr","probe","start","end","len","generateMeasureIncrement","type","COUNT","hitTotal","placementThunk","placement","session","rowIndex","newSession","has","newUser","add","scope","EVENT","SESSION","USER","categoryValueIndices","weights","nameToWeightMapping","rowWeights","weightDelta","dailyVariance","dailyThunk","day","countryCategory","browserCategory","sourceCategory","activeUserMeasure","revenueMeasure","SUM","eventCountMeasure","MeasureType","Scope","Melody","frequencyRange","onSeek","synth","toDestination","inclusive","reversed","timeoutId","minValue","maxValue","minFrequency","maxFrequency","minKeyNumber","getKeyNumber","maxKeyNumber","frequencies","keyNumber","getFrequency","state","isPlaying","playNextNote","clearInterval","isEnded","nextDatumIndex","frequency","triggerAttackRelease","reverseDatumIndex","offset","log2","pow","DataModule","DataService","dataCube","categoryName","local","minus","getDataFor","toJSDate","plus","PreferenceModule","PreferenceService","readBefore","readAfter","combineObservableDictionary","placeholder","dataTable$","textSummary$","observableDictionary","subjects","observedDictionary","ascendingNumber","descendingNumber","ascendingDate","descendingDate","formatX","formatY","Number","isInteger","toFixed","str","replace","firstCharacter","toUpperCase"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { DashboardModule } from './components/dashboard/dashboard.module';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    DashboardModule,\n  ],\n  exports: [\n    RouterModule,\n  ],\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\nimport { GUIDE_DOGE, t } from './i18n';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  get TITLE() {\n    return t(GUIDE_DOGE.TITLE);\n  }\n}\n","<header class=\"header\">\n  <div class=\"logo\" role=\"banner\">{{TITLE}}</div>\n  <div class=\"links\" role=\"navigation\">\n    <a routerLink=\"/\" class=\"link active\">\n      Dashboard\n    </a>\n    <a href=\"#\" class=\"link\">\n      WebVR\n    </a>\n  </div>\n</header>\n<main class=\"container\">\n  <router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n  ],\n  bootstrap: [\n    AppComponent,\n  ],\n})\nexport class AppModule {\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { GUIDE_DOGE, t } from '../../i18n';\nimport { humanizeMeasureName } from '../../utils/formatters';\n\nexport type CardType = 'line' | 'bar';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements OnInit {\n  @Input() title: string;\n  @Input() tabbed = false;\n  @Input() type: CardType;\n  @Input() measureNames: string[];\n  humanizeMeasureName = humanizeMeasureName;\n  currentMeasureName: string;\n\n  get VISUALIZATION() {\n    return t(GUIDE_DOGE.VISUALIZATION);\n  }\n\n  ngOnInit() {\n    this.setMeasureName(this.measureNames[0]);\n  }\n\n  setMeasureName(measureName) {\n    this.currentMeasureName = measureName;\n  }\n}\n","<h2 class=\"card-title\">{{title}}</h2>\n<div class=\"card-content\">\n  <div class=\"tabs\" *ngIf=\"tabbed\">\n    <div *ngFor=\"let measureName of measureNames\"\n         class=\"tab\" [class.active]=\"measureName === currentMeasureName\"\n         (click)=\"setMeasureName(measureName)\" role=\"button\">\n      {{humanizeMeasureName(measureName)}}\n    </div>\n  </div>\n  <ng-container [ngSwitch]=\"type\">\n    <app-line-chart *ngSwitchCase=\"'line'\"\n                    role=\"img\" appAudification\n                    [measureName]=\"currentMeasureName\"\n                    [attr.aria-label]=\"VISUALIZATION\"></app-line-chart>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CardComponent } from './card.component';\nimport { LineChartModule } from '../line-chart/line-chart.module';\nimport { AudificationModule } from '../../directives/audification/audification.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CardComponent,\n  ],\n  imports: [\n    LineChartModule,\n    AudificationModule,\n    CommonModule,\n  ],\n  exports: [\n    CardComponent,\n  ],\n})\nexport class CardModule {\n}\n","import { Component } from '@angular/core';\nimport { PreferenceService } from '../../services/preference/preference.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent {\n  // manual destructuring for easy access in template\n  audification = this.preferenceService.audification;\n  dataTable = this.preferenceService.dataTable;\n  textSummary = this.preferenceService.textSummary;\n\n  constructor(\n    private preferenceService: PreferenceService,\n  ) {\n  }\n}\n","<aside class=\"sidebar\">\n  <h2 class=\"sidebar-title\">Customization</h2>\n  <app-preference-group title=\"Audification\" [subject]=\"audification.enabled\">\n    <app-preference-item name=\"Lowest note (Hz)\" [subject]=\"audification.lowestPitch\"></app-preference-item>\n    <app-preference-item name=\"Highest note (Hz)\" [subject]=\"audification.highestPitch\"></app-preference-item>\n    <app-preference-item name=\"Note duration (ms)\" [subject]=\"audification.noteDuration\"></app-preference-item>\n    <app-preference-item name=\"Read out before playing\" [subject]=\"audification.readBefore\"></app-preference-item>\n    <app-preference-item name=\"Read out after playing\" [subject]=\"audification.readAfter\"></app-preference-item>\n  </app-preference-group>\n  <app-preference-group title=\"Data Table\" [subject]=\"dataTable.enabled\">\n  </app-preference-group>\n  <app-preference-group title=\"Text Summary\" [subject]=\"textSummary.enabled\">\n  </app-preference-group>\n</aside>\n<div class=\"card-container\">\n  <app-card title=\"Tabbed Line Chart\" [tabbed]=\"true\" type=\"line\"\n            [measureNames]=\"['activeUsers', 'revenue', 'eventCount']\"></app-card>\n  <app-card title=\"Line Chart\" [tabbed]=\"false\" type=\"line\"\n            [measureNames]=\"['activeUsers', 'revenue', 'eventCount']\"></app-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { DashboardComponent } from './dashboard.component';\nimport { PreferenceGroupModule } from '../preference-group/preference-group.module';\nimport { FormsModule } from '@angular/forms';\nimport { CardModule } from '../card/card.module';\nimport { PreferenceItemModule } from '../preference-item/preference-item.module';\nimport { PreferenceModule } from '../../services/preference/preference.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n  ],\n  imports: [\n    PreferenceModule,\n    PreferenceGroupModule,\n    PreferenceItemModule,\n    FormsModule,\n    CardModule,\n    CommonModule,\n  ],\n  exports: [\n    DashboardComponent,\n  ],\n})\nexport class DashboardModule {\n}\n","import { Component, HostBinding, HostListener, Inject, Input, NgZone, OnDestroy, OnInit } from '@angular/core';\nimport { Melody } from '../../models/melody/melody.model';\nimport { AUDIFICATION, t, tA11y } from '../../i18n';\nimport { formatX, formatY, humanizeMeasureName } from '../../utils/formatters';\nimport { LineChartComponent } from '../line-chart/line-chart.component';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { AudificationPreference } from '../../services/preference/types';\nimport { ascendingDate, ascendingNumber } from '../../utils/comparators';\n\n@Component({\n  selector: 'app-line-chart-audification',\n  templateUrl: './line-chart-audification.component.html',\n  styleUrls: ['./line-chart-audification.component.scss'],\n})\nexport class LineChartAudificationComponent implements AudificationPreference, OnInit, OnDestroy {\n  // even though change detection doesn't work for dynamically loaded components, leave @Input() to indicate that they will be injected.\n  @Input() enabled: boolean;\n  @Input() lowestPitch: number;\n  @Input() highestPitch: number;\n  @Input() noteDuration: number;\n  @Input() readBefore: boolean;\n  @Input() readAfter: boolean;\n\n  liveText: string | null = null;\n  private destroy$ = new Subject();\n  private melody?: Melody;\n  private domain: Date[];\n  private range: number[];\n  @HostBinding('attr.tabindex') private readonly tabindex = 0;\n  private readOutTimeoutId: number | null = null;\n\n  constructor(\n    @Inject('host') private host: LineChartComponent,\n    private zone: NgZone,\n  ) {\n    this.handleSeek = this.handleSeek.bind(this);\n  }\n\n  get INSTRUCTIONS() {\n    return t(AUDIFICATION.INSTRUCTIONS);\n  }\n\n  get INSTRUCTIONS_A11Y() {\n    return tA11y(AUDIFICATION.INSTRUCTIONS);\n  }\n\n  get data() {\n    return this.host.data;\n  }\n\n  get measureName() {\n    return this.host.measureName;\n  }\n\n  set activeDatum(activeDatum) {\n    this.host.activeDatum = activeDatum;\n  }\n\n  ngOnInit() {\n    this.host.data$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(data => {\n        const values = data.map(datum => datum.value);\n        this.domain = data.map(d => d.date).sort(ascendingDate);\n        this.range = data.map(d => d.value).sort(ascendingNumber);\n        this.melody?.dispose();\n        this.melody = new Melody(values, [this.lowestPitch, this.highestPitch], this.noteDuration, this.handleSeek);\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.melody?.dispose();\n  }\n\n  handleSeek(index) {\n    // since Tone.js is running outside of the Angular zone, it needs to reenter the zone to trigger change detection.\n    this.zone.run((() => {\n      this.activeDatum = this.data[index];\n    }));\n  }\n\n  @HostListener('keydown', ['$event'])\n  async handleKeyDown($event: KeyboardEvent) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    const { key, shiftKey, repeat } = $event;\n    if (!this.melody || repeat) {\n      return;\n    }\n    if (key === ' ') {\n      await this.melody.resume(shiftKey);\n    } else if (key === 'x') {\n      this.readOut(t(AUDIFICATION.DOMAIN, {\n        min: formatX(this.domain[0]),\n        max: formatX(this.domain[this.domain.length - 1]),\n      }));\n    } else if (key === 'y') {\n      this.readOut(t(AUDIFICATION.RANGE, {\n        min: formatY(this.range[0]),\n        max: formatY(this.range[this.range.length - 1]),\n      }));\n    } else if (key === 'l') {\n      this.readOut(humanizeMeasureName(this.measureName));\n    } else if ('0' <= key && key <= '9') {\n      const datumIndex = Math.floor(+key / 10 * this.data.length);\n      this.melody.seekTo(datumIndex, true);\n      this.readOutCurrentDatum();\n    }\n  }\n\n  @HostListener('keyup', ['$event'])\n  handleKeyUp($event: KeyboardEvent) {\n    if (!this.melody) {\n      return;\n    }\n    $event.preventDefault();\n    $event.stopPropagation();\n    const { key } = $event;\n    if (key === ' ') {\n      this.melody.pause();\n      this.readOutCurrentDatum();\n    }\n  }\n\n  @HostListener('blur', ['$event'])\n  handleBlur() {\n    this.melody?.pause();\n  }\n\n  private readOut(text: string) {\n    if (this.readOutTimeoutId !== null) {\n      window.clearTimeout(this.readOutTimeoutId);\n      this.readOutTimeoutId = null;\n    }\n    if (this.liveText === text) {\n      this.liveText = null; // empty the text for a short period of time when the same text needs to be read out consequently\n      this.readOutTimeoutId = window.setTimeout(() => {\n        this.readOutTimeoutId = null;\n        this.readOut(text);\n      }, 500);\n    } else {\n      this.liveText = text;\n    }\n  }\n\n  private readOutCurrentDatum() {\n    if (!this.melody) {\n      return;\n    }\n    const { date, value } = this.data[this.melody.currentDatumIndex];\n    this.readOut(t(AUDIFICATION.ACTIVE_DATUM, {\n      x: formatX(date),\n      y: formatY(value),\n    }));\n  }\n}\n","<div role=\"img\" class=\"instructions\"\n     [innerHTML]=\"INSTRUCTIONS\"\n     [attr.aria-label]=\"INSTRUCTIONS_A11Y\">\n</div>\n<div class=\"live-text\" aria-live=\"assertive\" [innerText]=\"liveText\"></div>\n","import { Component, ElementRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { LineChartD3 } from '../../d3/line-chart.d3';\nimport { BehaviorSubject } from 'rxjs';\nimport { Datum, RenderOptions } from '../../d3/xy-chart.d3';\nimport { AUDIFICATION, t } from '../../i18n';\nimport { formatX, formatY } from '../../utils/formatters';\nimport { A11yPlaceholderDirective } from '../../directives/a11y-placeholder/a11y-placeholder.directive';\nimport { DataService } from '../../services/data/data.service';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n})\nexport class LineChartComponent implements RenderOptions, OnChanges, OnInit, OnDestroy {\n  @ViewChild(A11yPlaceholderDirective, { static: true }) a11yPlaceholder: A11yPlaceholderDirective<LineChartComponent>;\n\n  @Input() measureName: string;\n  @Input() height = 500;\n  @Input() width = 800;\n  @Input() marginTop = 20;\n  @Input() marginRight = 30;\n  @Input() marginBottom = 30;\n  @Input() marginLeft = 40;\n\n  data$ = new BehaviorSubject<Datum[]>([]);\n  activeDatum$ = new BehaviorSubject<Datum | null>(null);\n  private lineChartD3: LineChartD3;\n\n  constructor(\n    private dataService: DataService,\n    public elementRef: ElementRef<HTMLElement>,\n  ) {\n    this.lineChartD3 = new LineChartD3(this);\n  }\n\n  get data() {\n    return this.data$.value;\n  }\n\n  set data(data) {\n    this.data$.next(data);\n  }\n\n  get activeDatum() {\n    return this.activeDatum$.value;\n  }\n\n  set activeDatum(activeDatum) {\n    this.activeDatum$.next(activeDatum);\n  }\n\n  get formattedActiveDatum() {\n    if (!this.activeDatum) {\n      return null;\n    }\n    const { date, value } = this.activeDatum;\n    return t(AUDIFICATION.ACTIVE_DATUM, {\n      x: formatX(date),\n      y: formatY(value),\n    });\n  }\n\n  ngOnInit() {\n    this.lineChartD3.render();\n  }\n\n  ngOnDestroy() {\n    this.lineChartD3.clear();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('measureName' in changes) {\n      this.data = this.dataService.getMeasureOverDays(this.measureName);\n      this.activeDatum = null;\n    }\n  }\n}\n","<div class=\"svg-wrapper\">\n  <svg></svg>\n  <div class=\"active-indicator\">\n    {{formattedActiveDatum}}\n  </div>\n</div>\n<ng-template appA11yPlaceholder></ng-template>\n","import { NgModule } from '@angular/core';\nimport { LineChartComponent } from './line-chart.component';\nimport { DataModule } from '../../services/data/data.module';\nimport { CommonModule } from '@angular/common';\nimport { A11yPlaceholderModule } from '../../directives/a11y-placeholder/a11y-placeholder.module';\n\n@NgModule({\n  declarations: [\n    LineChartComponent,\n  ],\n  imports: [\n    DataModule,\n    CommonModule,\n    A11yPlaceholderModule,\n  ],\n  exports: [\n    LineChartComponent,\n  ],\n})\nexport class LineChartModule {\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-preference-group',\n  templateUrl: './preference-group.component.html',\n  styleUrls: ['./preference-group.component.scss'],\n})\nexport class PreferenceGroupComponent {\n  @Input() title: string;\n  @Input() subject: BehaviorSubject<boolean>;\n\n  get enabled() {\n    return this.subject.value;\n  }\n\n  set enabled(value) {\n    this.subject.next(value);\n  }\n}\n","<label class=\"header\" [class.enabled]=\"enabled\">\n  <span class=\"title\">\n    {{title}}\n  </span>\n  <app-switch [(value)]=\"enabled\"></app-switch>\n</label>\n<ng-content *ngIf=\"enabled\"></ng-content>\n","import { NgModule } from '@angular/core';\nimport { PreferenceGroupComponent } from './preference-group.component';\nimport { CommonModule } from '@angular/common';\nimport { SwitchModule } from '../switch/switch.module';\n\n@NgModule({\n  declarations: [\n    PreferenceGroupComponent,\n  ],\n  imports: [\n    CommonModule,\n    SwitchModule,\n  ],\n  exports: [\n    PreferenceGroupComponent,\n  ],\n})\nexport class PreferenceGroupModule {\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-preference-item',\n  templateUrl: './preference-item.component.html',\n  styleUrls: ['./preference-item.component.scss'],\n})\nexport class PreferenceItemComponent<T> {\n  @Input() name: string;\n  @Input() subject: BehaviorSubject<T>;\n\n  get type(): string {\n    return typeof this.value;\n  }\n\n  get value(): T {\n    return this.subject.value;\n  }\n\n  set value(value: T) {\n    this.subject.next(value);\n  }\n}\n","<label class=\"item\">\n  <span class=\"title\">\n    {{name}}\n  </span>\n  <ng-container [ngSwitch]=\"type\">\n    <input *ngSwitchCase=\"'number'\" type=\"number\" [(ngModel)]=\"value\"/>\n    <app-switch *ngSwitchCase=\"'boolean'\" [(value)]=\"value\"></app-switch>\n  </ng-container>\n</label>\n","import { NgModule } from '@angular/core';\nimport { PreferenceItemComponent } from './preference-item.component';\nimport { CommonModule } from '@angular/common';\nimport { SwitchModule } from '../switch/switch.module';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    PreferenceItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    SwitchModule,\n    FormsModule,\n  ],\n  exports: [\n    PreferenceItemComponent,\n  ],\n})\nexport class PreferenceItemModule {\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport * as uuid from 'uuid';\n\n@Component({\n  selector: 'app-switch',\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.scss'],\n})\nexport class SwitchComponent {\n  id = `switch-${uuid.v4()}`;\n  @Input() value: boolean;\n  @Output() valueChange = new EventEmitter<boolean>();\n\n  setValue(value) {\n    this.valueChange.emit(value);\n  }\n}\n","<input type=\"checkbox\" [attr.id]=\"id\" [ngModel]=\"value\" (ngModelChange)=\"setValue($event)\"/>\n<label class=\"switch\" [class.active]=\"value\" [htmlFor]=\"id\"></label>\n","import { NgModule } from '@angular/core';\nimport { SwitchComponent } from './switch.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    SwitchComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  exports: [\n    SwitchComponent,\n  ],\n})\nexport class SwitchModule {\n}\n","import { ElementRef } from '@angular/core';\nimport * as d3 from 'd3';\nimport { MonoTypeOperatorFunction, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport interface RenderOptions {\n  elementRef: ElementRef<HTMLElement>;\n  height: number;\n  width: number;\n  marginTop: number;\n  marginRight: number;\n  marginBottom: number;\n  marginLeft: number;\n}\n\nexport abstract class BaseD3<T extends RenderOptions> {\n  protected colorHighlight = 'rgb(66, 133, 244)';\n  private clear$?: Subject<undefined>;\n\n  constructor(protected renderOptions: T) {\n  }\n\n  protected get transition() {\n    return this.createTransition(300);\n  }\n\n  protected get container() {\n    return d3.select(this.renderOptions.elementRef.nativeElement);\n  }\n\n  protected get svg() {\n    return this.container.select('svg');\n  }\n\n  config(renderOptions: T) {\n    this.renderOptions = renderOptions;\n    return this;\n  }\n\n  render() {\n    const { width, height } = this.renderOptions;\n\n    this.clear();\n    this.clear$ = new Subject();\n\n    this.svg\n      .style('width', width)\n      .style('height', height)\n      .attr('viewBox', [0, 0, width, height].join(' '));\n  }\n\n  clear() {\n    if (!this.clear$) {\n      return;\n    }\n    this.clear$.next();\n    this.clear$.complete();\n    this.clear$ = undefined;\n\n    this.svg.html('');\n  }\n\n  protected takeUntilCleared<R>(): MonoTypeOperatorFunction<R> {\n    if (!this.clear$) {\n      throw new Error(`Subject 'clear$' is not defined.`);\n    }\n    return takeUntil(this.clear$);\n  }\n\n  protected createTransition(duration: number): d3.Transition<any, unknown, null, undefined> {\n    return d3.transition()\n      .duration(duration)\n      .ease(d3.easeLinear);\n  }\n}\n","import { Datum, XYChartD3 } from './xy-chart.d3';\nimport * as d3 from 'd3';\n\nexport class LineChartD3 extends XYChartD3 {\n  protected line: d3.Line<Datum>;\n  protected path: d3.Selection<SVGPathElement, unknown, null, undefined>;\n  protected activeDatumCircle: d3.Selection<SVGCircleElement, unknown, null, undefined>;\n  protected activeDatumToast: d3.Selection<d3.BaseType, unknown, null, undefined>;\n\n  protected renderData() {\n    this.line = d3\n      .line<Datum>()\n      .defined(d => !isNaN(d.value))\n      .x(d => this.scaleX(d.date))\n      .y(d => this.scaleY(d.value));\n\n    this.path = this.svg\n      .append('path')\n      .attr('fill', 'none')\n      .attr('stroke', this.colorHighlight)\n      .attr('stroke-width', 2)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round');\n  }\n\n  protected updateData(data: Datum[]) {\n    this.path\n      .datum(data)\n      .transition(this.transition)\n      .attr('d', this.line);\n  }\n\n  protected renderActiveDatum() {\n    this.activeDatumCircle = this.svg\n      .append('circle')\n      .attr('r', 4)\n      .attr('fill', this.colorHighlight);\n    this.activeDatumToast = this.container.select('.active-indicator');\n  }\n\n  protected updateActiveDatum(activeDatum: Datum | null) {\n    if (!activeDatum) {\n      this.activeDatumCircle.attr('display', 'none');\n      this.activeDatumToast.style('opacity', 0);\n      return;\n    }\n    const { date, value } = activeDatum;\n    this.activeDatumCircle\n      .transition(this.createTransition(50))\n      .attr('display', 'inherit')\n      .attr('transform', `translate(${this.scaleX(date)},${this.scaleY(value)})`);\n    this.activeDatumToast\n      .transition(this.createTransition(50))\n      .style('opacity', .8)\n      .style('top', `${this.scaleY(value) + 16}px`)\n      .style('left', `${this.scaleX(date) - 64}px`);\n  }\n}\n","import * as d3 from 'd3';\nimport { BaseD3, RenderOptions as BaseRenderOptions } from './base.d3';\nimport { Observable } from 'rxjs';\nimport { formatX } from '../utils/formatters';\n\nexport interface Datum {\n  date: Date;\n  value: number;\n}\n\nexport interface RenderOptions extends BaseRenderOptions {\n  data$: Observable<Datum[]>;\n  activeDatum$: Observable<Datum | null>;\n}\n\nexport abstract class XYChartD3 extends BaseD3<RenderOptions> {\n  protected scaleX: d3.ScaleTime<number, number>;\n  protected scaleY: d3.ScaleLinear<number, number>;\n  protected xAxis: d3.Axis<Date>;\n  protected yAxis: d3.Axis<number>;\n  protected xAxisG: d3.Selection<SVGGElement, unknown, null, undefined>;\n  protected yAxisG: d3.Selection<SVGGElement, unknown, null, undefined>;\n\n  render() {\n    super.render();\n\n    const { data$, activeDatum$ } = this.renderOptions;\n\n    this.renderAxis();\n    this.renderData();\n    this.renderActiveDatum();\n\n    data$\n      .pipe(this.takeUntilCleared())\n      .subscribe(data => {\n        this.updateAxis(data);\n        this.updateData(data);\n      });\n\n    activeDatum$\n      .pipe(this.takeUntilCleared())\n      .subscribe(activeDatum => {\n        this.updateActiveDatum(activeDatum);\n      });\n  }\n\n  protected renderAxis() {\n    const {\n      height, width,\n      marginTop, marginRight, marginBottom, marginLeft,\n    } = this.renderOptions;\n\n    this.scaleX = d3\n      .scaleUtc()\n      .range([marginLeft, width - marginRight]);\n    this.scaleY = d3\n      .scaleLinear()\n      .nice()\n      .range([height - marginBottom, marginTop]);\n\n    this.xAxis = d3\n      .axisBottom<Date>(this.scaleX)\n      .ticks(d3.timeWeek.every(1))\n      .tickFormat(formatX);\n    this.yAxis = d3.axisLeft<number>(this.scaleY);\n\n    this.xAxisG = this.svg\n      .append('g')\n      .attr('transform', `translate(0,${height - marginBottom})`);\n    this.yAxisG = this.svg\n      .append('g')\n      .attr('transform', `translate(${marginLeft},0)`);\n  }\n\n  protected updateAxis(data: Datum[]) {\n    this.scaleX.domain(d3.extent<Datum, Date>(data, d => d.date) as [Date, Date]);\n    this.scaleY.domain([0, d3.max(data, d => d.value)!]);\n\n    this.xAxisG\n      .transition(this.transition)\n      .call(this.xAxis)\n      .attr('font-size', 12);\n    this.yAxisG\n      .transition(this.transition)\n      .call(this.yAxis)\n      .attr('font-size', 12);\n  }\n\n  protected abstract renderData();\n\n  protected abstract updateData(data: Datum[]);\n\n  protected abstract renderActiveDatum();\n\n  protected abstract updateActiveDatum(activeDatum: Datum | null);\n}\n","import { ComponentFactoryResolver, ComponentRef, Directive, Injector, Type, ViewContainerRef } from '@angular/core';\nimport { Preference } from '../../services/preference/types';\n\n@Directive({\n  selector: '[appA11yPlaceholder]',\n})\nexport class A11yPlaceholderDirective<Host> {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n  ) {\n  }\n\n  addComponent<T>(A11yComponent: Type<T>, host: Host, preference: Preference) {\n    this.viewContainerRef.clear();\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(A11yComponent);\n    const injector = Injector.create({\n      providers: [{\n        provide: 'host',\n        useValue: host,\n      }],\n    });\n    const componentRef = this.viewContainerRef.createComponent(componentFactory, 0, injector);\n    Object.assign(componentRef.instance, preference);\n    return componentRef;\n  }\n\n  removeComponent<T>(componentRef: ComponentRef<T>) {\n    const index = this.viewContainerRef.indexOf(componentRef.hostView);\n    if (index >= 0) {\n      this.viewContainerRef.remove(index);\n    }\n    componentRef.destroy();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { A11yPlaceholderDirective } from './a11y-placeholder.directive';\n\n@NgModule({\n  declarations: [\n    A11yPlaceholderDirective,\n  ],\n  exports: [\n    A11yPlaceholderDirective,\n  ],\n})\nexport class A11yPlaceholderModule {\n}\n","import { ComponentRef, Directive, Host, OnDestroy, OnInit, Optional, Self } from '@angular/core';\nimport { LineChartAudificationComponent } from '../../components/line-chart-audification/line-chart-audification.component';\nimport { LineChartComponent } from '../../components/line-chart/line-chart.component';\nimport { PreferenceService } from '../../services/preference/preference.service';\nimport { AudificationPreference } from '../../services/preference/types';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[appAudification]',\n})\nexport class AudificationDirective implements OnInit, OnDestroy {\n  private audificationComponentRef: ComponentRef<unknown> | null;\n  private destroy$ = new Subject();\n\n  constructor(\n    private preferenceService: PreferenceService,\n    // candidate host components\n    @Host() @Self() @Optional() private lineChartComponent: LineChartComponent | null,\n    // @Host() @Self() @Optional() private barChartComponent: BarChartComponent | null,\n    // etc.\n  ) {\n  }\n\n  get host() {\n    const component = this.lineChartComponent; // later it will be like: this.lineChartComponent || this.barChartComponent || ...\n    if (!component) {\n      throw new Error('The component does not support audification.');\n    }\n    return component;\n  }\n\n  ngOnInit() {\n    this.preferenceService.audification$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(preference => {\n        if (preference.enabled) {\n          this.attach(preference);\n        } else {\n          this.detach();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.detach();\n  }\n\n  attach(preference: AudificationPreference) {\n    this.detach();\n\n    const { host } = this;\n    this.audificationComponentRef = host.a11yPlaceholder.addComponent(LineChartAudificationComponent, host, preference);\n  }\n\n  detach() {\n    if (this.audificationComponentRef) {\n      this.host.a11yPlaceholder.removeComponent(this.audificationComponentRef);\n      this.audificationComponentRef = null;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AudificationDirective } from './audification.directive';\nimport { PreferenceModule } from '../../services/preference/preference.module';\n\n@NgModule({\n  declarations: [\n    AudificationDirective,\n  ],\n  imports: [\n    PreferenceModule,\n  ],\n  exports: [\n    AudificationDirective,\n  ],\n})\nexport class AudificationModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export * from './types';\nexport * from './utils';\n","import { AUDIFICATION, GUIDE_DOGE, I18n, VISUALIZATION } from '../types';\n\nexport const en: I18n = {\n  [GUIDE_DOGE.TITLE]: 'Guide-Doge',\n  [GUIDE_DOGE.VISUALIZATION]: 'Data visualization',\n  [GUIDE_DOGE.AUDIFICATION]: 'Data audification',\n\n  [VISUALIZATION.ACTIVE_DATUM]: '%(y)s on %(x)s',\n\n  [AUDIFICATION.INSTRUCTIONS]: [\n    'Hold down <kbd>SPACE</kbd> to play the audified melody and <kbd>SHIFT</kbd> + <kbd>SPACE</kbd> to play it backward.',\n    'Press <kbd>X</kbd> or <kbd>Y</kbd> to read out the domain or range respectively.',\n    'Press <kbd>L</kbd> to read out the legend items.',\n    'Press <kbd>0</kbd> ... <kbd>9</kbd> to move playhead.',\n  ].join(' <br/>'),\n  [AUDIFICATION.DOMAIN]: 'Domain from %(min)s to %(max)s',\n  [AUDIFICATION.RANGE]: 'Range from %(min)s to %(max)s',\n  [AUDIFICATION.ACTIVE_DATUM]: '%(y)s on %(x)s',\n};\n","export * from './en';\nexport * from './ko';\n","import { AUDIFICATION, GUIDE_DOGE, I18n, VISUALIZATION } from '../types';\n\nexport const ko: I18n = {\n  [GUIDE_DOGE.TITLE]: 'Guide-Doge',\n  [GUIDE_DOGE.VISUALIZATION]: '데이터 시각화',\n  [GUIDE_DOGE.AUDIFICATION]: '데이터 청각화',\n\n  [VISUALIZATION.ACTIVE_DATUM]: '%(y)s, %(x)s',\n\n  [AUDIFICATION.INSTRUCTIONS]: [\n    '<kbd>SPACE</kbd>를 눌러 청각화된 음향을 재생하고 <kbd>SHIFT</kbd> + <kbd>SPACE</kbd>를 눌러 거꾸로 재생합니다.',\n    '<kbd>X</kbd> 또는 <kbd>Y</kbd>를 눌러 정의역 또는 치역을 읽습니다.',\n    '<kbd>L</kbd>을 눌러 범례 항목들을 읽습니다.',\n    '<kbd>0</kbd> ... <kbd>9</kbd>를 눌러 재생 위치를 이동합니다.',\n  ].join(' <br/>'),\n  [AUDIFICATION.DOMAIN]: '정의역 %(min)s 부터 %(max)s 까지',\n  [AUDIFICATION.RANGE]: '치역 %(min)s 부터 %(max)s 까지',\n  [AUDIFICATION.ACTIVE_DATUM]: '%(y)s, %(x)s',\n};\n","export enum GUIDE_DOGE {\n  TITLE = 0x000, // explicitly inits the first value of each enum with a different value to prevent i18n key conflicts\n  VISUALIZATION,\n  AUDIFICATION\n}\n\nexport enum VISUALIZATION {\n  ACTIVE_DATUM = 0x100,\n}\n\nexport enum AUDIFICATION {\n  INSTRUCTIONS = 0x200,\n  DOMAIN,\n  RANGE,\n  ACTIVE_DATUM,\n}\n\nexport type I18n = {\n  [key in GUIDE_DOGE | VISUALIZATION | AUDIFICATION]: string;\n};\n","import { sprintf } from 'sprintf-js';\nimport * as striptags from 'striptags';\nimport * as dictionary from './languages';\nimport { I18n } from './types';\n\nexport type Language = keyof typeof dictionary;\n\nlet language: Language = 'en';\n\nexport function setLanguage(lang: Language) {\n  language = lang;\n}\n\nexport function getLanguage() {\n  return language;\n}\n\n/**\n * Returns a formatted i18n string using sprintf-js.\n *\n * @param key The key of an i18n string.\n * @param args The arguments to format the string with.\n */\nexport function t(key: keyof I18n, ...args: any[]) {\n  return sprintf(dictionary[language][key], ...args);\n}\n\n/**\n * Returns a screen-reader friendly formatted i18n string using sprintf-js.\n *\n * @param key The key of an i18n string.\n * @param args The arguments to format the string with.\n */\nexport function tA11y(key: keyof I18n, ...args: any[]) {\n  return striptags(t(key, ...args));\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Category, Filter, Measure, ResultRow, Row } from './types';\n\n/**\n * This cube is conceptually an n-dimensional array of numbers. The cube\n * represents categories and measures. Each category corresponds to a\n * dimension of the cube. Each category has several different values it can\n * take on. Each category value corresponds to a slice of the cube.\n *\n * For example, look at the following two dimensional cube (i.e. a table):\n *\n *       \\ Chrome \\ Firefox\n * -------+--------+--------\n * USA    |   65   |   78\n * Canada |  101   |   34\n * Mexico |   72   |  156\n *\n * This table has two categories: Country and Browser. Country has three\n * category values: USA, Canada, Mexico, whereas Browser has two: Chrome and\n * Firefox. This cube has only one measure (say, Active Users). So, the table\n * is saying that there were 65 active users from the USA using Chrome.\n * Similarly there were 156 Firefox users from Mexico.\n *\n * The slice represented by USA is the list [65, 78]. The slice represented by\n * Chrome is [65, 101, 72].\n *\n * The cube can support any number of categories, and any number of measures.\n * More categories mean a higher dimensional cube, and more measures means each\n * cell in the cube will be represented by a vector where each element in the\n * vector corresponds to a different measure. Here is a three dimensional\n * (Gender, Source and OS) cube with two measures (Average Visit Duration and\n * Event Count):\n *\n * Male:                              * Female:\n *       \\ Windows \\   Mac  \\  Linux  *       \\ Windows \\   Mac  \\  Linux\n * -------+---------+--------+------- * -------+---------+--------+-------\n * Direct |  5s, 60 | 9s, 23 | 6s, 64 * Direct |  2s, 57 | 6s, 65 | 3s, 34\n * Email  |  7s, 90 | 2s, 98 | 2s, 90 * Email  |  3s, 93 | 4s, 73 | 6s, 72\n * Search |  1s, 32 | 3s, 21 | 4s, 23 * Search |  8s, 86 | 3s, 53 | 5s, 35\n *\n * This cube is saying, for example, that female Linux users coming from\n * Search stayed on the page for an average of 5 seconds.\n *\n * The cube can be queried for specific categories and measures. This\n * will combine together the values for all the other categories and give\n * a breakdown based on the requested categories. For more information, see\n * the documentation for the `getDataFor()` method.\n */\nexport class DataCube {\n  constructor(\n    private readonly rows: Row[],\n    private readonly measures: Measure[],\n    private readonly categories: Category[],\n  ) {\n  }\n\n  /**\n   * Get a breakdown by the given categories in the given measures.\n   *\n   * Breaks down the data in the cube by the given categories and returns\n   * the given measures in a table. So, for the following cube, with\n   * categories Gender, Source and OS and measures Event Count and Sessions:\n   *\n   * Male:                              * Female:\n   *       \\ Windows \\   Mac  \\  Linux  *       \\ Windows \\   Mac  \\  Linux\n   * -------+---------+--------+------- * -------+---------+--------+-------\n   * Direct |  12, 60 |  1, 23 | 44, 64 * Direct |  50, 57 | 43, 65 | 25, 34\n   * Email  |  23, 90 | 51, 98 | 21, 90 * Email  |  39, 93 | 24, 73 | 64, 72\n   * Search |  16, 32 | 10, 21 |  9, 23 * Search |  93, 86 | 38, 53 | 31, 35\n   *\n   * If you get data for the Source category and Sessions measure, the\n   * result would be\n   *\n   * Categories | Measures\n   * -----------+------------\n   * Source     | Sessions\n   * ===========+============\n   * Direct     | 303\n   * Email      | 516\n   * Search     | 250\n   *\n   * The value of the measure Sessions for the category value \"Direct\",\n   * for example, is calculated by adding the the Sessions values\n   * across all the other categories\n   * (across the top row: 60 + 23 + 64 + 57 + 65 + 34). Other category\n   * values are calculated similarly.\n   *\n   * The data can be broken down by multiple categories, and multiple\n   * measures can be provided. For example, given the same cube as before,\n   * with the category names Gender and OS, and measure Event Count, the\n   * resulting table will be:\n   *\n   *    Categories    |  Measures\n   * -----------------+------------\n   * Gender |   OS    | Event Count\n   * =======+=========+============\n   * Male   | Windows | 51\n   * Male   | Mac     | 62\n   * Male   | Linux   | 74\n   * Female | Windows | 182\n   * Female | Mac     | 105\n   * Female | Linux   | 110\n   *\n   * Special handling is applied to the \"nthDay\" category. No matter what\n   * actual day it corresponds to, the earliest nthDay will always correspond\n   * to 0, the second earliest to 1, and so on.\n   *\n   * This method also supports filtering by category or measure values.\n   * Filtering takes place before the counting is done, so it is possible to\n   * filter on categories that are not in the query. By default, nothing is\n   * filtered.\n   *\n   * It's also possible to sort the results by any category or measure.\n   * By default, the results are sorted by the first requested category, then\n   * the second, and so on.\n   *\n   * @param categoryNames The categories to request a breakdown from.\n   * @param measureNames The measures to provide values for.\n   * @param filters The filters to apply to the cube before finding the results.\n   * @param sortBy The concept names to sort in ascending order.\n   */\n  getDataFor(\n    categoryNames: string[],\n    measureNames: string[],\n    filters: Filter[] = [],\n    sortBy?: string[],\n  ): ResultRow[] {\n    const measureIndices = measureNames.map(name =>\n      this.measures.findIndex(measure => measure.name === name),\n    );\n    const categoryIndices = categoryNames.map(name =>\n      this.categories.findIndex(category => category.name === name),\n    );\n    const categoryTrie: TrieNode = { children: {} };\n    const filterFuncs = filters.map(filter =>\n      filter(this.categories, this.measures),\n    );\n    this.rows\n      .filter(row => filterFuncs.every(filter => filter(row)))\n      .forEach(row => {\n        let trieNode = categoryTrie;\n        for (const categoryIndex of categoryIndices) {\n          if (!trieNode.children[row.header[categoryIndex]]) {\n            trieNode.children[row.header[categoryIndex]] = { children: {} };\n          }\n          trieNode = trieNode.children[row.header[categoryIndex]];\n        }\n        if (!trieNode.values) {\n          trieNode.values = measureNames.map(() => 0);\n        }\n        for (const [index, measureIndex] of measureIndices.entries()) {\n          trieNode.values[index] += row.values[measureIndex];\n        }\n      });\n\n    const result: ResultRow[] = [];\n    const labelList: string[] = [];\n    const traverseNode = (node: TrieNode) => {\n      if (node.values) {\n        result.push({\n          categories: new Map(\n            labelList.map((label, index) => [categoryNames[index], label]),\n          ),\n          values: new Map(\n            node.values.map((value, index) => [measureNames[index], value]),\n          ),\n        });\n      } else {\n        for (const [label, child] of Object.entries(node.children)) {\n          labelList.push(label);\n          traverseNode(child);\n          labelList.pop();\n        }\n      }\n    };\n    traverseNode(categoryTrie);\n    this.normalizeNthDay(result, categoryNames);\n    this.sortResults(\n      result,\n      categoryNames,\n      measureNames,\n      sortBy ?? [...categoryNames, ...measureNames],\n    );\n    return result;\n  }\n\n  private normalizeNthDay(rows: ResultRow[], categoryNames: string[]) {\n    if (!categoryNames.includes('nthDay')) {\n      return;\n    }\n    const largestNthDay = Math.max(...rows.map(row => row.categories.get('nthDay') as number));\n    for (const row of rows) {\n      const nthDay = row.categories.get('nthDay') as number;\n      row.categories.set('nthDay', largestNthDay - nthDay);\n    }\n  }\n\n  private sortResults(\n    results: ResultRow[],\n    categoryNames: string[],\n    measureNames: string[],\n    sortBy: string[],\n  ) {\n    function getComparator(sortConcept: string) {\n      if (categoryNames.includes(sortConcept)) {\n        return (a: ResultRow, b: ResultRow) => {\n          const aCategory = a.categories.get(sortConcept)!;\n          const bCategory = b.categories.get(sortConcept)!;\n          if (aCategory < bCategory) {\n            return -1;\n          }\n          if (aCategory > bCategory) {\n            return 1;\n          }\n          return 0;\n        };\n      }\n      if (measureNames.includes(sortConcept)) {\n        return (a: ResultRow, b: ResultRow) =>\n          a.values.get(sortConcept)! - b.values.get(sortConcept)!;\n      }\n      return () => 0;\n    }\n\n    const comparators = sortBy.map(getComparator);\n    const combinedComparator = (a: ResultRow, b: ResultRow) => {\n      for (const comparator of comparators) {\n        const result = comparator(a, b);\n        if (result !== 0) {\n          return result;\n        }\n      }\n      return 0;\n    };\n    results.sort(combinedComparator);\n  }\n}\n\ninterface TrieNode {\n  children: Record<string, TrieNode>;\n  values?: number[];\n}\n","import { Category, Filter, FilterOptions, Row } from './types';\n\nconst millisecondsPerDay = 24 * 60 * 60 * 1000;\n\nconst defaultOptions: FilterOptions = {\n  excludeStartDate: false,\n  excludeEndDate: false,\n};\n\nexport function betweenDates(startDate: Date, endDate: Date, options: Partial<FilterOptions> = {}): Filter {\n  const { excludeStartDate, excludeEndDate } = {\n    ...defaultOptions,\n    ...options,\n  };\n  return (categories: Category[]) => {\n    const nThDayIndex = categories.findIndex(\n      category => category.name === 'nthDay',\n    );\n    let startIndex = Math.round(\n      (Date.now() - startDate.getTime()) / millisecondsPerDay,\n    );\n    if (excludeStartDate) {\n      startIndex--;\n    }\n    let endIndex = Math.round(\n      (Date.now() - endDate.getTime()) / millisecondsPerDay,\n    );\n    if (excludeEndDate) {\n      endIndex++;\n    }\n    return (row: Row) =>\n      row.header[nThDayIndex] <= startIndex &&\n      row.header[nThDayIndex] >= endIndex;\n  };\n}\n","import * as random from 'random';\nimport {\n  Category,\n  CategoryValue,\n  HitGenerationSettings,\n  Measure,\n  MeasureType,\n  ModelSettings,\n  Row,\n  Scope,\n  SessionGenerationSettings,\n} from './types';\nimport { DataCube } from './data-cube.model';\n\n/**\n * Creates fake analytics data based on the model given by settings.\n *\n * The fake data is returned as a Cube. See [cube.ts](./cube.ts) for more\n * information on the properties of the cube.\n *\n * The shape of the cube is determined by the categories and measures that are\n * passed in. The content is generated based on `settings`. For details on\n * what each property in settings does, see the documentation for the settings\n * type in [types.ts](./types.ts).\n *\n * The nthDay category is added to the categories if not present. The number of\n * values is determined by the `days` setting and the weight of each day is\n * determined according to the dailyVariance setting.\n *\n * The data is generated as a series of hits. Each hit is randomly assigned\n * to a category value for each category, based on the weights for each value.\n *\n * The hit is then added to a measure if it is a hit scoped measure, or if it\n * is a session scoped measure and part of a new session or if it is a user\n * scoped measure and represents a new user. For measures of type COUNT, they\n * are incremented by 1, whereas for measures of type SUM a random value in its\n * range is selected and added to the measure for that combination of category\n * values.\n *\n * This generation code makes the following assumptions:\n *  - All categories are independent of each other.\n *  - Each hit has a corresponding category value for each dimension.\n *  - The number of users is normally distributed, with mean settings.avgUsers\n *    and standard deviation settings.usersStdDev.\n *  - The number of sessions per user is normally distributed with mean\n *    settings.avgUsersPerSession and standard deviation settings.sessionsPerUserStdDev.\n *  - The number of hits is normally distributed with mean settings.avgHits\n *    and standard deviation settings.hitsStdDev.\n *  - The value of each hit for measures of type SUM is uniformly distributed in\n *    its range.\n *  - The session a hit belongs to is uniformly distributed.\n *  - The weight of a day is normally distributed with mean 1 and standard\n *    deviation settings.dailyStdDev\n *\n */\nexport function generateCube(\n  categories: Category[],\n  measures: Measure[],\n  settings: Partial<ModelSettings> = {},\n): DataCube {\n  const completeSettings: ModelSettings = {\n    ...defaultSettings,\n    ...settings,\n  };\n  const actualCategories = [...categories];\n  if (completeSettings.nthDay) {\n    const nthDayCategory = generateNthDay(\n      completeSettings.days,\n      completeSettings.dailyStdDev,\n    );\n    actualCategories.push(nthDayCategory);\n  }\n  const rows = generateEmptyRows(actualCategories, measures);\n  const cumulativeWeights = generateCumulativeWeights(rows, actualCategories);\n\n  generateHits(\n    rows,\n    measures,\n    cumulativeWeights,\n    generateUsersAndSessions(completeSettings),\n    completeSettings,\n  );\n\n  return new DataCube(rows, measures, actualCategories);\n}\n\nconst defaultSettings: ModelSettings = {\n  avgHits: 1000000,\n  hitStdDev: 10000,\n  avgUsers: 10000,\n  userStdDev: 100,\n  avgSessionsPerUser: 5,\n  sessionsPerUserStdDev: 3,\n  nthDay: true,\n  days: 60,\n  dailyStdDev: 0.1,\n};\n\ninterface User {\n  rowsSeen: Set<number>;\n}\n\ninterface Session {\n  user: User;\n  rowsSeen: Set<number>;\n}\n\nfunction generateUsersAndSessions({\n                                    avgUsers,\n                                    userStdDev,\n                                    avgSessionsPerUser,\n                                    sessionsPerUserStdDev,\n                                  }: SessionGenerationSettings) {\n  const userCount = Math.round(random.normal(avgUsers, userStdDev)());\n  const sessionThunk = random.normal(avgSessionsPerUser, sessionsPerUserStdDev);\n  const sessions: Session[] = [];\n  for (let i = 0; i < userCount; i++) {\n    const user = { rowsSeen: new Set<number>() };\n    const userSessions = Math.round(sessionThunk());\n    for (let j = 0; j < userSessions; j++) {\n      sessions.push({ user, rowsSeen: new Set() });\n    }\n  }\n  return sessions;\n}\n\nfunction getNormalizedWeights(categories: Category[]) {\n  return categories.map(category => {\n    const total = category.values.reduce((accumulator, value) => value.weight + accumulator, 0);\n    return category.values.map(value => value.weight / total);\n  });\n}\n\nfunction binarySearch(\n  arr: number[],\n  probe: number,\n  start = 0,\n  end = arr.length,\n): number {\n  const len = end - start;\n  if (len < 2) {\n    return start;\n  }\n  const index = len % 2 === 0 ? (start + end) / 2 : (start + end - 1) / 2;\n  if (arr[index] <= probe) {\n    return binarySearch(arr, probe, index, end);\n  } else {\n    return binarySearch(arr, probe, start, index);\n  }\n}\n\nfunction generateMeasureIncrement(measure: Measure) {\n  if (measure.type === MeasureType.COUNT || !measure.range) {\n    return 1;\n  }\n  return random.float(measure.range[0], measure.range[1]);\n}\n\nfunction generateHits(\n  rows: Row[],\n  measures: Measure[],\n  cumulativeWeights: number[],\n  sessions: Session[],\n  { avgHits, hitStdDev }: HitGenerationSettings,\n) {\n  const hitTotal = Math.round(random.normal(avgHits, hitStdDev)());\n  const placementThunk = random.uniform();\n  const sessionThunk = random.uniformInt(0, sessions.length - 1);\n  for (let i = 0; i < hitTotal; i++) {\n    const placement = placementThunk();\n    const session = sessionThunk();\n    const rowIndex = binarySearch(cumulativeWeights, placement);\n    for (const [index, measure] of measures.entries()) {\n      const newSession = !sessions[session].rowsSeen.has(rowIndex);\n      const newUser = !sessions[session].user.rowsSeen.has(rowIndex);\n      if (newSession) {\n        sessions[session].rowsSeen.add(rowIndex);\n        if (newUser) {\n          sessions[session].user.rowsSeen.add(rowIndex);\n        }\n      }\n\n      switch (measure.scope) {\n        case Scope.EVENT:\n          rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          break;\n        case Scope.SESSION:\n          if (newSession) {\n            rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          }\n          break;\n        case Scope.USER:\n          if (newUser) {\n            rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          }\n          break;\n      }\n    }\n  }\n}\n\nfunction generateEmptyRows(categories: Category[], measures: Measure[]) {\n  const rows: Row[] = [];\n\n  // The current index in each category of which value we've looked at\n  const categoryValueIndices = categories.map(() => 0);\n  let categoryIndex = 0;\n  // This is going to loop through all combinations of category values.\n  // The approach we take is to iterate through all the first category's values.\n  // Then we move to the next value in the second category and iterate through\n  // all the values in the first category again. We then move to the next value\n  // in the second category, and repeat again and again until we've gone through\n  // all the values in the second category. We then move to the next value\n  // in the third category, then repeat, and so on and so on until we've gone\n  // through every possible value.\n  do {\n    // Get the current combination of values and add them to the list\n    const header = categories.map(\n      (category, index) => category.values[categoryValueIndices[index]].name,\n    );\n    const values = measures.map(() => 0);\n    rows.push({ header, values });\n\n    // Start with the first category\n    categoryIndex = 0;\n    do {\n      // Advance to the next category value in the current value\n      categoryValueIndices[categoryIndex] =\n        (categoryValueIndices[categoryIndex] + 1) %\n        categories[categoryIndex].values.length;\n      categoryIndex += 1;\n      // If we wrapped around to the beginning of the list of values for the\n      // current category, move to the next category so that its value can\n      // be incremented\n    } while (\n      categoryValueIndices[categoryIndex - 1] === 0 &&\n      categoryIndex < categories.length\n      );\n    // If we ended up with the first value in the previous category, then\n    // that means we ran off the end of the list of possible categories, so\n    // we should end the loop\n  } while (categoryValueIndices[categoryIndex - 1] !== 0);\n  return rows;\n}\n\nfunction generateCumulativeWeights(rows: Row[], categories: Category[]) {\n  const weights = getNormalizedWeights(categories);\n  const nameToWeightMapping = categories.map(\n    (category, categoryIndex) =>\n      new Map(\n        category.values.map((value, index) => [\n          value.name,\n          weights[categoryIndex][index],\n        ]),\n      ),\n  );\n  return rows.reduce(\n    (cumulativeWeights, row) => {\n      const rowWeights = row.header.map((label, categoryIndex) => nameToWeightMapping[categoryIndex].get(label) ?? 0);\n      const weightDelta = rowWeights.reduce((accumulator, weight) => accumulator * weight, 1);\n      cumulativeWeights.push(weightDelta + cumulativeWeights[cumulativeWeights.length - 1]);\n      return cumulativeWeights;\n    },\n    [0],\n  );\n}\n\nfunction generateNthDay(days: number, dailyVariance: number): Category {\n  const dailyThunk = random.normal(1, dailyVariance);\n  const values: CategoryValue[] = [];\n  for (let day = 0; day < days; day++) {\n    values.push({\n      name: day,\n      weight: dailyThunk(),\n    });\n  }\n  return {\n    name: 'nthDay',\n    values,\n  };\n}\n","import { Category, Measure, MeasureType, Scope } from './types';\n\nexport const countryCategory: Category = {\n  name: 'country',\n  values: [\n    {\n      name: 'Canada',\n      weight: 2,\n    },\n    {\n      name: 'USA',\n      weight: 16,\n    },\n    {\n      name: 'Mexico',\n      weight: 15,\n    },\n  ],\n};\n\nexport const browserCategory: Category = {\n  name: 'browser',\n  values: [\n    {\n      name: 'Chrome',\n      weight: 50,\n    },\n    {\n      name: 'Firefox',\n      weight: 19,\n    },\n    {\n      name: 'Safari',\n      weight: 20,\n    },\n    {\n      name: 'Edge',\n      weight: 10,\n    },\n  ],\n};\n\nexport const sourceCategory: Category = {\n  name: 'source',\n  values: [\n    {\n      name: 'Direct',\n      weight: 5,\n    },\n    {\n      name: 'Email',\n      weight: 5,\n    },\n  ],\n};\n\nexport const activeUserMeasure: Measure = {\n  name: 'activeUsers',\n  scope: Scope.USER,\n  type: MeasureType.COUNT,\n};\n\nexport const revenueMeasure: Measure = {\n  name: 'revenue',\n  scope: Scope.EVENT,\n  type: MeasureType.SUM,\n  range: [0, 10],\n};\n\nexport const eventCountMeasure: Measure = {\n  name: 'eventCount',\n  scope: Scope.EVENT,\n  type: MeasureType.SUM,\n};\n","/** A description of a type of value that a hit can belong to. */\nexport interface Category {\n  /** The canonical name for this category. */\n  name: string;\n\n  /** The possible values the category can take on. */\n  values: CategoryValue[];\n}\n\n/** Describes a possible value a category can have. */\nexport interface CategoryValue {\n  /** A label for this particular value */\n  name: string | number;\n\n  /**\n   * How likely this value is to occur, relative to the other values in this\n   * category.\n   */\n  weight: number;\n}\n\n/** A value that can be measured. */\nexport interface Measure {\n  /** The canonical name for this measure. */\n  name: string;\n  /** If this measure applies to events, sessions or users. */\n  scope: Scope;\n  /** How the values from this measure are calculated. */\n  type: MeasureType;\n  /**\n   * The range of values this measure can take on per hit, if the measure\n   * is of type SUM.\n   */\n  range?: [number, number];\n}\n\n/** The way this measure is calculated */\nexport enum MeasureType {\n  COUNT,\n  SUM,\n}\n\n/** What this measure is associated with. */\nexport enum Scope {\n  EVENT,\n  SESSION,\n  USER,\n}\n\n/**\n * Used to control the model for data generation. More details about how this\n * is used is available in [generation.ts](./generation.ts).\n */\nexport type ModelSettings = HitGenerationSettings &\n  SessionGenerationSettings &\n  NthDayGenerationSettings;\n\nexport interface HitGenerationSettings {\n  /** The average number of hits over the lifetime of the data generation. */\n  avgHits: number;\n  /** The standard deviation of hits over the time lifetime of the data generation. */\n  hitStdDev: number;\n}\n\nexport interface SessionGenerationSettings {\n  /** The average number of users for this data generation. */\n  avgUsers: number;\n  /** The standard deviation of users for this data generation. */\n  userStdDev: number;\n  /** The average number of sessions per user. */\n  avgSessionsPerUser: number;\n  /** The standard deviation of sessions per user. */\n  sessionsPerUserStdDev: number;\n}\n\nexport interface NthDayGenerationSettings {\n  /** Whether to generate nth day category or not */\n  nthDay: boolean;\n  /** The number of days worth of data to generate. */\n  days: number;\n  /** How much the number of hits can vary from day to day. */\n  dailyStdDev: number;\n}\n\n/**\n * A filter is applied to the data in a cube before being queried.\n *\n * A filter is a factory function that actually generates the filter when\n * called. The idea is that the first call will allow the filter to configure\n * itself with any necessary values, so that the second call can run very\n * quickly on each row.\n */\nexport type Filter = (\n  categories: Category[],\n  measures: Measure[],\n) => (row: Row) => boolean;\n\n/**\n * The internal storage of the cube. Although the cube is conceptually an\n * n-dimensional cube of data, in actuality it is a list of rows, to make for\n * easier querying.\n */\nexport interface Row {\n  /** The category values for this row. */\n  header: (string | number)[];\n  /** The measure values for this row. */\n  values: number[];\n}\n\n/**\n * The data returned from a query to a cube. The category and measure values\n * are stored in a map keyed on the name of the respective category or\n * dimension.\n */\nexport interface ResultRow {\n  categories: Map<string, string | number>;\n  values: Map<string, number>;\n}\n\n/**\n * The options used to filter rows.\n */\nexport interface FilterOptions {\n  /** Exclude start date */\n  excludeStartDate: boolean;\n  /** Exclude end date */\n  excludeEndDate: boolean;\n}\n","import * as Tone from 'tone';\n\nexport type OnSeek = (index: number) => void;\n\nexport class Melody {\n  currentDatumIndex = 0;\n  private synth = new Tone.Synth().toDestination();\n  private inclusive = true; // if true, playing the melody starting inclusively from currentDatumIndex\n  private reversed = false; // if true, playing the melody backward\n  private readonly frequencies: number[];\n  private timeoutId: number | null = null;\n\n  constructor(\n    private values: number[],\n    private frequencyRange: [number, number],\n    private noteDuration: number, // duration (in ms) of a note\n    private onSeek?: OnSeek,\n  ) {\n    const minValue = Math.min(...values);\n    const maxValue = Math.max(...values);\n    const [minFrequency, maxFrequency] = this.frequencyRange;\n    const minKeyNumber = Melody.getKeyNumber(minFrequency);\n    const maxKeyNumber = Melody.getKeyNumber(maxFrequency);\n    this.frequencies = values.map(value => {\n      const keyNumber = (value - minValue) / (maxValue - minValue) * (maxKeyNumber - minKeyNumber) + minKeyNumber;\n      return Melody.getFrequency(keyNumber);\n    });\n  }\n\n  get duration() {\n    return this.noteDuration * this.values.length;\n  }\n\n  get isPlaying() {\n    return this.timeoutId !== null;\n  }\n\n  get isEnded() {\n    return (\n      this.reversed && this.currentDatumIndex === 0 ||\n      !this.reversed && this.currentDatumIndex === this.values.length - 1\n    );\n  }\n\n  get nextDatumIndex() {\n    if (this.isEnded) {\n      return this.reverseDatumIndex(this.currentDatumIndex); // bring playhead to the opposite end\n    }\n    const offset = this.inclusive ? 0 : (this.reversed ? -1 : +1);\n    return this.currentDatumIndex + offset;\n  }\n\n  private static getKeyNumber(frequency: number) {\n    return Math.log2(frequency / 440) * 12 + 49;\n  }\n\n  private static getFrequency(keyNumber: number) {\n    return Math.pow(2, (keyNumber - 49) / 12) * 440;\n  }\n\n  async resume(reversed: boolean) {\n    if (Tone.getContext().state === 'suspended') {\n      await Tone.start();\n    }\n    if (!this.isPlaying) {\n      this.reversed = reversed;\n      this.playNextNote();\n    }\n  }\n\n  pause() {\n    if (this.timeoutId !== null) {\n      window.clearInterval(this.timeoutId);\n      this.timeoutId = null;\n    }\n  }\n\n  seekTo(datumIndex: number, inclusive = false) {\n    this.currentDatumIndex = datumIndex;\n    this.inclusive = this.isEnded || inclusive;\n    this.onSeek?.(this.currentDatumIndex);\n  }\n\n  dispose() {\n    this.pause();\n    this.synth.dispose();\n  }\n\n  private playNextNote() {\n    this.seekTo(this.nextDatumIndex);\n    const frequency = this.frequencies[this.currentDatumIndex];\n    this.synth.triggerAttackRelease(frequency, this.noteDuration / 1000);\n    if (!this.isEnded) {\n      this.timeoutId = window.setTimeout(() => {\n        this.timeoutId = null;\n        this.playNextNote();\n      }, this.noteDuration);\n    }\n  }\n\n  private reverseDatumIndex(index: number) {\n    return (this.values.length - 1) - index;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DataService } from './data.service';\n\n@NgModule({\n  providers: [\n    DataService,\n  ],\n})\nexport class DataModule {\n}\n","import { DateTime } from 'luxon';\nimport {\n  activeUserMeasure,\n  browserCategory,\n  countryCategory,\n  eventCountMeasure,\n  revenueMeasure,\n  sourceCategory,\n} from '../../models/data-cube/presets';\nimport { betweenDates } from '../../models/data-cube/filters';\nimport { generateCube } from 'src/models/data-cube/generation';\nimport { Datum } from '../../d3/xy-chart.d3';\n\nexport class DataService {\n  private dataCube = generateCube(\n    [countryCategory, browserCategory, sourceCategory],\n    [activeUserMeasure, revenueMeasure, eventCountMeasure],\n    {\n      avgHits: 10000,\n      hitStdDev: 100,\n      avgUsers: 100,\n      userStdDev: 1,\n      avgSessionsPerUser: 5,\n      sessionsPerUserStdDev: 3,\n    },\n  );\n\n  getMeasureOverDays(measureName: string, days = 30): Datum[] {\n    const categoryName = 'nthDay';\n    const endDate = DateTime.local();\n    const startDate = endDate.minus({ day: days });\n\n    return this.dataCube\n      .getDataFor(\n        [categoryName],\n        [measureName],\n        [betweenDates(startDate.toJSDate(), endDate.toJSDate(), { excludeStartDate: true })],\n      )\n      .map(row => ({\n        date: startDate\n          .plus({ days: row.categories.get(categoryName) as number })\n          .toJSDate(),\n        value: row.values.get(measureName)!,\n      }));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PreferenceService } from './preference.service';\n\n@NgModule({\n  providers: [\n    PreferenceService,\n  ],\n})\nexport class PreferenceModule {\n}\n","import { BehaviorSubject, combineLatest, Observable, ObservedValueOf } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AudificationPreference, DataTablePreference, TextSummaryPreference } from './types';\n\ntype ObservableDictionary = { [key: string]: Observable<any> };\ntype ObservedDictionaryOf<T extends ObservableDictionary> = { [key in keyof T]: ObservedValueOf<T[key]> };\n\nexport class PreferenceService {\n  audification = { // mimic namespace\n    enabled: new BehaviorSubject(true),\n    lowestPitch: new BehaviorSubject(256),\n    highestPitch: new BehaviorSubject(1024),\n    noteDuration: new BehaviorSubject(167),\n    readBefore: new BehaviorSubject(false),\n    readAfter: new BehaviorSubject(true),\n  };\n  audification$: Observable<AudificationPreference> = this.combineObservableDictionary(this.audification);\n\n  dataTable = {\n    enabled: new BehaviorSubject(false),\n    placeholder: new BehaviorSubject(null),\n  };\n  dataTable$: Observable<DataTablePreference> = this.combineObservableDictionary(this.dataTable);\n\n  textSummary = {\n    enabled: new BehaviorSubject(false),\n    placeholder: new BehaviorSubject(null),\n  };\n  textSummary$: Observable<TextSummaryPreference> = this.combineObservableDictionary(this.textSummary);\n\n  /**\n   * Creates a combined Observable that emits a dictionary of observed values.\n   *\n   * @param observableDictionary a dictionary of observable values\n   * @return a combined Observable\n   *\n   * @example\n   * // returns an observable of type Observable<{a: boolean, b: number}>\n   * const combined$ = this.combineObservableDictionary({a: new Subject<boolean>(), b: new Subject<number>>});\n   */\n  private combineObservableDictionary<T extends ObservableDictionary>(observableDictionary: T): Observable<ObservedDictionaryOf<T>> {\n    const keys = Object.keys(observableDictionary);\n    const subjects = Object.values(observableDictionary);\n    return combineLatest(subjects)\n      .pipe(map(values => {\n        const observedDictionary: any = {}; // will be of type ObservedDictionaryOf<T> after the iteration below\n        values.forEach((value, i) => {\n          const key = keys[i];\n          observedDictionary[key] = value;\n        });\n        return observedDictionary;\n      }));\n  }\n}\n","export function ascendingNumber(a: number, b: number) {\n  return a - b;\n}\n\nexport function descendingNumber(a: number, b: number) {\n  return -ascendingNumber(a, b);\n}\n\nexport function ascendingDate(a: Date, b: Date) {\n  return ascendingNumber(a.getTime(), b.getTime());\n}\n\nexport function descendingDate(a: Date, b: Date) {\n  return -ascendingDate(a, b);\n}\n","import * as d3 from 'd3';\n\nexport const formatX = d3.timeFormat('%B %d');\n\nexport const formatY = (value: number) => Number.isInteger(value) ? `${value}` : value.toFixed(1);\n\nexport const humanizeMeasureName = (str: string) => str\n  .replace(/([A-Z])/g, ' $1')\n  .replace(/^./, firstCharacter => firstCharacter.toUpperCase());\n","/* (ignored) */"]}