{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app-routing.module.ts","webpack:///src/app.component.ts","webpack:///src/app.component.html","webpack:///src/app.module.ts","webpack:///src/components/card/card.component.ts","webpack:///src/components/card/card.component.html","webpack:///src/components/card/card.module.ts","webpack:///src/components/dashboard/dashboard.component.ts","webpack:///src/components/dashboard/dashboard.component.html","webpack:///src/components/dashboard/dashboard.module.ts","webpack:///src/components/line-chart/line-chart.component.ts","webpack:///src/components/line-chart/line-chart.component.html","webpack:///src/components/line-chart/line-chart.module.ts","webpack:///src/components/preference-group/preference-group.component.ts","webpack:///src/components/preference-group/preference-group.component.html","webpack:///src/components/preference-group/preference-group.module.ts","webpack:///src/components/preference-item/preference-item.component.ts","webpack:///src/components/preference-item/preference-item.component.html","webpack:///src/components/preference-item/preference-item.module.ts","webpack:///src/components/switch/switch.component.ts","webpack:///src/components/switch/switch.component.html","webpack:///src/components/switch/switch.module.ts","webpack:///src/d3/base.d3.ts","webpack:///src/d3/line-chart.d3.ts","webpack:///src/d3/xy-chart.d3.ts","webpack:///src/directives/a11y-placeholder/a11y-placeholder.directive.ts","webpack:///src/directives/a11y-placeholder/a11y-placeholder.module.ts","webpack:///src/directives/audification/audification.directive.ts","webpack:///src/directives/audification/audification.module.ts","webpack:///src/environments/environment.ts","webpack:///src/i18n/index.ts","webpack:///src/i18n/languages/en.ts","webpack:///src/i18n/languages/index.ts","webpack:///src/i18n/languages/ko.ts","webpack:///src/i18n/types.ts","webpack:///src/i18n/utils.ts","webpack:///src/main.ts","webpack:///src/models/data-cube/data-cube.model.ts","webpack:///src/models/data-cube/filters.ts","webpack:///src/models/data-cube/generation.ts","webpack:///src/models/data-cube/presets.ts","webpack:///src/models/data-cube/types.ts","webpack:///src/services/data/data.module.ts","webpack:///src/services/data/data.service.ts","webpack:///src/services/preference/preference.module.ts","webpack:///src/services/preference/preference.service.ts","webpack:///src/utils/formatters.ts","webpack:///crypto (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","TITLE","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","CardComponent","tabbed","humanizeMeasureName","setMeasureName","measureNames","measureName","currentMeasureName","CardModule","DashboardComponent","preferenceService","audification","dataTable","textSummary","DashboardModule","LineChartComponent","dataService","elementRef","height","width","marginTop","marginRight","marginBottom","marginLeft","data$","activeDatum$","lineChartD3","render","clear","changes","data","getMeasureOverDays","activeDatum","value","next","date","ACTIVE_DATUM","x","y","VISUALIZATION","LineChartModule","PreferenceGroupComponent","subject","PreferenceGroupModule","PreferenceItemComponent","PreferenceItemModule","SwitchComponent","valueChange","emit","setValue","SwitchModule","BaseD3","renderOptions","colorHighlight","clear$","svg","style","attr","join","complete","undefined","html","duration","ease","createTransition","nativeElement","container","select","LineChartD3","line","defined","d","isNaN","scaleX","scaleY","append","datum","transition","activeDatumCircle","activeDatumToast","XYChartD3","renderAxis","renderData","renderActiveDatum","pipe","takeUntilCleared","subscribe","updateAxis","updateData","updateActiveDatum","range","nice","xAxis","ticks","every","tickFormat","yAxis","xAxisG","yAxisG","domain","call","A11yPlaceholderDirective","componentFactoryResolver","viewContainerRef","compiler","A11yModule","host","preference","compileModuleAsync","moduleFactory","moduleRef","create","instance","injector","providers","provide","useValue","componentFactory","resolveComponentFactory","A11yComponent","componentRef","createComponent","Object","assign","index","indexOf","hostView","remove","destroy","A11yPlaceholderModule","AudificationDirective","lineChartComponent","destroy$","audification$","enabled","attach","detach","LineChartAudificationModule","a11yPlaceholder","addComponent","audificationComponentRef","removeComponent","AudificationModule","environment","production","en","AUDIFICATION","INSTRUCTIONS","DOMAIN","RANGE","ko","GUIDE_DOGE","language","setLanguage","lang","getLanguage","t","key","args","tA11y","bootstrapModule","err","console","error","DataCube","rows","measures","categories","categoryNames","filters","sortBy","measureIndices","map","name","findIndex","measure","categoryIndices","category","categoryTrie","children","filterFuncs","filter","row","forEach","trieNode","categoryIndex","header","values","entries","measureIndex","result","labelList","traverseNode","node","push","Map","label","child","pop","normalizeNthDay","sortResults","includes","largestNthDay","Math","max","get","nthDay","set","results","getComparator","sortConcept","a","b","aCategory","bCategory","comparators","combinedComparator","comparator","sort","millisecondsPerDay","defaultOptions","excludeStartDate","excludeEndDate","betweenDates","startDate","endDate","options","nThDayIndex","startIndex","round","Date","now","getTime","endIndex","generateCube","settings","completeSettings","defaultSettings","actualCategories","nthDayCategory","generateNthDay","days","dailyStdDev","generateEmptyRows","cumulativeWeights","generateCumulativeWeights","generateHits","generateUsersAndSessions","avgHits","hitStdDev","avgUsers","userStdDev","avgSessionsPerUser","sessionsPerUserStdDev","userCount","sessionThunk","sessions","i","user","rowsSeen","Set","userSessions","j","getNormalizedWeights","total","reduce","accumulator","weight","binarySearch","arr","probe","start","end","length","len","generateMeasureIncrement","type","COUNT","hitTotal","placementThunk","placement","session","rowIndex","newSession","has","newUser","add","scope","EVENT","SESSION","USER","categoryValueIndices","weights","nameToWeightMapping","rowWeights","weightDelta","dailyVariance","dailyThunk","day","countryCategory","browserCategory","sourceCategory","activeUserMeasure","revenueMeasure","SUM","eventCountMeasure","MeasureType","Scope","DataModule","DataService","dataCube","categoryName","local","minus","getDataFor","toJSDate","plus","PreferenceModule","PreferenceService","lowestPitch","highestPitch","noteDuration","readBefore","readAfter","combineObservableDictionary","placeholder","dataTable$","textSummary$","observableDictionary","subjects","observedDictionary","formatX","formatY","Number","isInteger","toFixed","str","replace","firstCharacter","toUpperCase"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { DashboardModule } from './components/dashboard/dashboard.module';\n\nconst routes: Routes = [\n  { path: '', component: DashboardComponent, pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes),\n    DashboardModule,\n  ],\n  exports: [\n    RouterModule,\n  ],\n})\nexport class AppRoutingModule {\n}\n","import { Component } from '@angular/core';\nimport { GUIDE_DOGE, t } from './i18n';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  get TITLE() {\n    return t(GUIDE_DOGE.TITLE);\n  }\n}\n","<header class=\"header\">\n  <div class=\"logo\" role=\"banner\">{{TITLE}}</div>\n  <div class=\"links\" role=\"navigation\">\n    <a routerLink=\"/\" class=\"link active\">\n      Dashboard\n    </a>\n    <a href=\"#\" class=\"link\">\n      WebVR\n    </a>\n  </div>\n</header>\n<main class=\"container\">\n  <router-outlet></router-outlet>\n</main>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n  ],\n  bootstrap: [\n    AppComponent,\n  ],\n})\nexport class AppModule {\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { humanizeMeasureName } from '../../utils/formatters';\n\nexport type CardType = 'line' | 'bar';\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements OnInit {\n  @Input() title: string;\n  @Input() tabbed = false;\n  @Input() type: CardType;\n  @Input() measureNames: string[];\n  humanizeMeasureName = humanizeMeasureName;\n  currentMeasureName: string;\n\n  ngOnInit() {\n    this.setMeasureName(this.measureNames[0]);\n  }\n\n  setMeasureName(measureName) {\n    this.currentMeasureName = measureName;\n  }\n}\n","<h2 class=\"card-title\">{{title}}</h2>\n<div class=\"card-content\">\n  <div class=\"tabs\" *ngIf=\"tabbed\">\n    <div *ngFor=\"let measureName of measureNames\"\n         class=\"tab\" [class.active]=\"measureName === currentMeasureName\"\n         (click)=\"setMeasureName(measureName)\" role=\"button\">\n      {{humanizeMeasureName(measureName)}}\n    </div>\n  </div>\n  <ng-container [ngSwitch]=\"type\">\n    <app-line-chart *ngSwitchCase=\"'line'\"\n                    [measureName]=\"currentMeasureName\"\n                    appAudification></app-line-chart>\n  </ng-container>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CardComponent } from './card.component';\nimport { LineChartModule } from '../line-chart/line-chart.module';\nimport { AudificationModule } from '../../directives/audification/audification.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CardComponent,\n  ],\n  imports: [\n    LineChartModule,\n    AudificationModule,\n    CommonModule,\n  ],\n  exports: [\n    CardComponent,\n  ],\n})\nexport class CardModule {\n}\n","import { Component } from '@angular/core';\nimport { PreferenceService } from '../../services/preference/preference.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss'],\n})\nexport class DashboardComponent {\n  // manual destructuring for easy access in template\n  audification = this.preferenceService.audification;\n  dataTable = this.preferenceService.dataTable;\n  textSummary = this.preferenceService.textSummary;\n\n  constructor(\n    private preferenceService: PreferenceService,\n  ) {\n  }\n}\n","<aside class=\"sidebar\">\n  <h2 class=\"sidebar-title\">Customization</h2>\n  <app-preference-group title=\"Audification\" [subject]=\"audification.enabled\">\n    <app-preference-item name=\"Lowest note (Hz)\" [subject]=\"audification.lowestPitch\"></app-preference-item>\n    <app-preference-item name=\"Highest note (Hz)\" [subject]=\"audification.highestPitch\"></app-preference-item>\n    <app-preference-item name=\"Note duration (ms)\" [subject]=\"audification.noteDuration\"></app-preference-item>\n    <app-preference-item name=\"Read out before playing\" [subject]=\"audification.readBefore\"></app-preference-item>\n    <app-preference-item name=\"Read out after playing\" [subject]=\"audification.readAfter\"></app-preference-item>\n  </app-preference-group>\n  <app-preference-group title=\"Data Table\" [subject]=\"dataTable.enabled\">\n  </app-preference-group>\n  <app-preference-group title=\"Text Summary\" [subject]=\"textSummary.enabled\">\n  </app-preference-group>\n</aside>\n<div class=\"card-container\">\n  <app-card title=\"Tabbed Line Chart\" [tabbed]=\"true\" type=\"line\"\n            [measureNames]=\"['activeUsers', 'revenue', 'eventCount']\"></app-card>\n  <app-card title=\"Line Chart\" [tabbed]=\"false\" type=\"line\"\n            [measureNames]=\"['activeUsers', 'revenue', 'eventCount']\"></app-card>\n</div>\n","import { NgModule } from '@angular/core';\nimport { DashboardComponent } from './dashboard.component';\nimport { PreferenceGroupModule } from '../preference-group/preference-group.module';\nimport { FormsModule } from '@angular/forms';\nimport { CardModule } from '../card/card.module';\nimport { PreferenceItemModule } from '../preference-item/preference-item.module';\nimport { PreferenceModule } from '../../services/preference/preference.module';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n  ],\n  imports: [\n    PreferenceModule,\n    PreferenceGroupModule,\n    PreferenceItemModule,\n    FormsModule,\n    CardModule,\n    CommonModule,\n  ],\n  exports: [\n    DashboardComponent,\n  ],\n})\nexport class DashboardModule {\n}\n","import { Component, ElementRef, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild } from '@angular/core';\nimport { LineChartD3 } from '../../d3/line-chart.d3';\nimport { BehaviorSubject } from 'rxjs';\nimport { Datum, RenderOptions } from '../../d3/xy-chart.d3';\nimport { AUDIFICATION, GUIDE_DOGE, t } from '../../i18n';\nimport { formatX, formatY } from '../../utils/formatters';\nimport { A11yPlaceholderDirective } from '../../directives/a11y-placeholder/a11y-placeholder.directive';\nimport { DataService } from '../../services/data/data.service';\n\n@Component({\n  selector: 'app-line-chart',\n  templateUrl: './line-chart.component.html',\n  styleUrls: ['./line-chart.component.scss'],\n})\nexport class LineChartComponent implements RenderOptions, OnChanges, OnInit, OnDestroy {\n  @ViewChild(A11yPlaceholderDirective, { static: true }) a11yPlaceholder: A11yPlaceholderDirective<LineChartComponent>;\n\n  @Input() measureName: string;\n  @Input() height = 500;\n  @Input() width = 800;\n  @Input() marginTop = 20;\n  @Input() marginRight = 30;\n  @Input() marginBottom = 30;\n  @Input() marginLeft = 40;\n\n  data$ = new BehaviorSubject<Datum[]>([]);\n  activeDatum$ = new BehaviorSubject<Datum | null>(null);\n  lineChartD3: LineChartD3;\n\n  constructor(\n    private dataService: DataService,\n    public elementRef: ElementRef<HTMLElement>,\n  ) {\n    this.lineChartD3 = new LineChartD3(this);\n  }\n\n  get data() {\n    return this.data$.value;\n  }\n\n  set data(data) {\n    this.data$.next(data);\n  }\n\n  get activeDatum() {\n    return this.activeDatum$.value;\n  }\n\n  set activeDatum(activeDatum) {\n    this.activeDatum$.next(activeDatum);\n  }\n\n  get ACTIVE_DATUM() {\n    if (!this.activeDatum) {\n      return null;\n    }\n    const { date, value } = this.activeDatum;\n    return t(AUDIFICATION.ACTIVE_DATUM, {\n      x: formatX(date),\n      y: formatY(value),\n    });\n  }\n\n  get VISUALIZATION() {\n    return t(GUIDE_DOGE.VISUALIZATION);\n  }\n\n  ngOnInit() {\n    this.lineChartD3.render();\n  }\n\n  ngOnDestroy() {\n    this.lineChartD3.clear();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('measureName' in changes) {\n      this.data = this.dataService.getMeasureOverDays(this.measureName);\n      this.activeDatum = null;\n    }\n  }\n}\n","<div class=\"svg-wrapper\"\n     role=\"img\" [attr.aria-label]=\"VISUALIZATION\">\n  <svg></svg>\n  <div class=\"active-indicator\">\n    {{ACTIVE_DATUM}}\n  </div>\n</div>\n<ng-template appA11yPlaceholder></ng-template>\n","import { NgModule } from '@angular/core';\nimport { LineChartComponent } from './line-chart.component';\nimport { DataModule } from '../../services/data/data.module';\nimport { CommonModule } from '@angular/common';\nimport { A11yPlaceholderModule } from '../../directives/a11y-placeholder/a11y-placeholder.module';\n\n@NgModule({\n  declarations: [\n    LineChartComponent,\n  ],\n  imports: [\n    DataModule,\n    CommonModule,\n    A11yPlaceholderModule,\n  ],\n  exports: [\n    LineChartComponent,\n  ],\n})\nexport class LineChartModule {\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-preference-group',\n  templateUrl: './preference-group.component.html',\n  styleUrls: ['./preference-group.component.scss'],\n})\nexport class PreferenceGroupComponent {\n  @Input() title: string;\n  @Input() subject: BehaviorSubject<boolean>;\n\n  get enabled() {\n    return this.subject.value;\n  }\n\n  set enabled(value) {\n    this.subject.next(value);\n  }\n}\n","<label class=\"header\" [class.enabled]=\"enabled\">\n  <span class=\"title\">\n    {{title}}\n  </span>\n  <app-switch [(value)]=\"enabled\"></app-switch>\n</label>\n<ng-content *ngIf=\"enabled\"></ng-content>\n","import { NgModule } from '@angular/core';\nimport { PreferenceGroupComponent } from './preference-group.component';\nimport { CommonModule } from '@angular/common';\nimport { SwitchModule } from '../switch/switch.module';\n\n@NgModule({\n  declarations: [\n    PreferenceGroupComponent,\n  ],\n  imports: [\n    CommonModule,\n    SwitchModule,\n  ],\n  exports: [\n    PreferenceGroupComponent,\n  ],\n})\nexport class PreferenceGroupModule {\n}\n","import { Component, Input } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Component({\n  selector: 'app-preference-item',\n  templateUrl: './preference-item.component.html',\n  styleUrls: ['./preference-item.component.scss'],\n})\nexport class PreferenceItemComponent<T> {\n  @Input() name: string;\n  @Input() subject: BehaviorSubject<T>;\n\n  get type(): string {\n    return typeof this.value;\n  }\n\n  get value(): T {\n    return this.subject.value;\n  }\n\n  set value(value: T) {\n    this.subject.next(value);\n  }\n}\n","<label class=\"item\">\n  <span class=\"title\">\n    {{name}}\n  </span>\n  <ng-container [ngSwitch]=\"type\">\n    <input *ngSwitchCase=\"'number'\" type=\"number\" [(ngModel)]=\"value\"/>\n    <app-switch *ngSwitchCase=\"'boolean'\" [(value)]=\"value\"></app-switch>\n  </ng-container>\n</label>\n","import { NgModule } from '@angular/core';\nimport { PreferenceItemComponent } from './preference-item.component';\nimport { CommonModule } from '@angular/common';\nimport { SwitchModule } from '../switch/switch.module';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    PreferenceItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    SwitchModule,\n    FormsModule,\n  ],\n  exports: [\n    PreferenceItemComponent,\n  ],\n})\nexport class PreferenceItemModule {\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport * as uuid from 'uuid';\n\n@Component({\n  selector: 'app-switch',\n  templateUrl: './switch.component.html',\n  styleUrls: ['./switch.component.scss'],\n})\nexport class SwitchComponent {\n  id = `switch-${uuid.v4()}`;\n  @Input() value: boolean;\n  @Output() valueChange = new EventEmitter<boolean>();\n\n  setValue(value) {\n    this.valueChange.emit(value);\n  }\n}\n","<input type=\"checkbox\" [attr.id]=\"id\" [ngModel]=\"value\" (ngModelChange)=\"setValue($event)\"/>\n<label class=\"switch\" [class.active]=\"value\" [htmlFor]=\"id\"></label>\n","import { NgModule } from '@angular/core';\nimport { SwitchComponent } from './switch.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    SwitchComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n  ],\n  exports: [\n    SwitchComponent,\n  ],\n})\nexport class SwitchModule {\n}\n","import { ElementRef } from '@angular/core';\nimport * as d3 from 'd3';\nimport { MonoTypeOperatorFunction, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport interface RenderOptions {\n  elementRef: ElementRef<HTMLElement>;\n  height: number;\n  width: number;\n  marginTop: number;\n  marginRight: number;\n  marginBottom: number;\n  marginLeft: number;\n}\n\nexport abstract class BaseD3<T extends RenderOptions> {\n  protected colorHighlight = 'rgb(66, 133, 244)';\n  private clear$?: Subject<undefined>;\n\n  constructor(protected renderOptions: T) {\n  }\n\n  protected get transition() {\n    return this.createTransition(300);\n  }\n\n  protected get container() {\n    return d3.select(this.renderOptions.elementRef.nativeElement);\n  }\n\n  protected get svg() {\n    return this.container.select('svg');\n  }\n\n  config(renderOptions: T) {\n    this.renderOptions = renderOptions;\n    return this;\n  }\n\n  render() {\n    const { width, height } = this.renderOptions;\n\n    this.clear();\n    this.clear$ = new Subject();\n\n    this.svg\n      .style('width', width)\n      .style('height', height)\n      .attr('viewBox', [0, 0, width, height].join(' '));\n  }\n\n  clear() {\n    if (!this.clear$) {\n      return;\n    }\n    this.clear$.next();\n    this.clear$.complete();\n    this.clear$ = undefined;\n\n    this.svg.html('');\n  }\n\n  protected takeUntilCleared<R>(): MonoTypeOperatorFunction<R> {\n    if (!this.clear$) {\n      throw new Error(`Subject 'clear$' is not defined.`);\n    }\n    return takeUntil(this.clear$);\n  }\n\n  protected createTransition(duration: number): d3.Transition<any, unknown, null, undefined> {\n    return d3.transition()\n      .duration(duration)\n      .ease(d3.easeLinear);\n  }\n}\n","import { Datum, XYChartD3 } from './xy-chart.d3';\nimport * as d3 from 'd3';\n\nexport class LineChartD3 extends XYChartD3 {\n  protected line: d3.Line<Datum>;\n  protected path: d3.Selection<SVGPathElement, unknown, null, undefined>;\n  protected activeDatumCircle: d3.Selection<SVGCircleElement, unknown, null, undefined>;\n  protected activeDatumToast: d3.Selection<d3.BaseType, unknown, null, undefined>;\n\n  protected renderData() {\n    this.line = d3\n      .line<Datum>()\n      .defined(d => !isNaN(d.value))\n      .x(d => this.scaleX(d.date))\n      .y(d => this.scaleY(d.value));\n\n    this.path = this.svg\n      .append('path')\n      .attr('fill', 'none')\n      .attr('stroke', this.colorHighlight)\n      .attr('stroke-width', 2)\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round');\n  }\n\n  protected updateData(data: Datum[]) {\n    this.path\n      .datum(data)\n      .transition(this.transition)\n      .attr('d', this.line);\n  }\n\n  protected renderActiveDatum() {\n    this.activeDatumCircle = this.svg\n      .append('circle')\n      .attr('r', 4)\n      .attr('fill', this.colorHighlight);\n    this.activeDatumToast = this.container.select('.active-indicator');\n  }\n\n  protected updateActiveDatum(activeDatum: Datum | null) {\n    if (!activeDatum) {\n      this.activeDatumCircle.attr('display', 'none');\n      this.activeDatumToast.style('opacity', 0);\n      return;\n    }\n    const { date, value } = activeDatum;\n    this.activeDatumCircle\n      .transition(this.createTransition(50))\n      .attr('display', 'inherit')\n      .attr('transform', `translate(${this.scaleX(date)},${this.scaleY(value)})`);\n    this.activeDatumToast\n      .transition(this.createTransition(50))\n      .style('opacity', .8)\n      .style('top', `${this.scaleY(value) + 16}px`)\n      .style('left', `${this.scaleX(date) - 64}px`);\n  }\n}\n","import * as d3 from 'd3';\nimport { BaseD3, RenderOptions as BaseRenderOptions } from './base.d3';\nimport { Observable } from 'rxjs';\nimport { formatX } from '../utils/formatters';\n\nexport interface Datum {\n  date: Date;\n  value: number;\n}\n\nexport interface RenderOptions extends BaseRenderOptions {\n  data$: Observable<Datum[]>;\n  activeDatum$: Observable<Datum | null>;\n}\n\nexport abstract class XYChartD3 extends BaseD3<RenderOptions> {\n  protected scaleX: d3.ScaleTime<number, number>;\n  protected scaleY: d3.ScaleLinear<number, number>;\n  protected xAxis: d3.Axis<Date>;\n  protected yAxis: d3.Axis<number>;\n  protected xAxisG: d3.Selection<SVGGElement, unknown, null, undefined>;\n  protected yAxisG: d3.Selection<SVGGElement, unknown, null, undefined>;\n\n  render() {\n    super.render();\n\n    const { data$, activeDatum$ } = this.renderOptions;\n\n    this.renderAxis();\n    this.renderData();\n    this.renderActiveDatum();\n\n    data$\n      .pipe(this.takeUntilCleared())\n      .subscribe(data => {\n        this.updateAxis(data);\n        this.updateData(data);\n      });\n\n    activeDatum$\n      .pipe(this.takeUntilCleared())\n      .subscribe(activeDatum => {\n        this.updateActiveDatum(activeDatum);\n      });\n  }\n\n  protected renderAxis() {\n    const {\n      height, width,\n      marginTop, marginRight, marginBottom, marginLeft,\n    } = this.renderOptions;\n\n    this.scaleX = d3\n      .scaleUtc()\n      .range([marginLeft, width - marginRight]);\n    this.scaleY = d3\n      .scaleLinear()\n      .nice()\n      .range([height - marginBottom, marginTop]);\n\n    this.xAxis = d3\n      .axisBottom<Date>(this.scaleX)\n      .ticks(d3.timeWeek.every(1))\n      .tickFormat(formatX);\n    this.yAxis = d3.axisLeft<number>(this.scaleY);\n\n    this.xAxisG = this.svg\n      .append('g')\n      .attr('transform', `translate(0,${height - marginBottom})`);\n    this.yAxisG = this.svg\n      .append('g')\n      .attr('transform', `translate(${marginLeft},0)`);\n  }\n\n  protected updateAxis(data: Datum[]) {\n    this.scaleX.domain(d3.extent<Datum, Date>(data, d => d.date) as [Date, Date]);\n    this.scaleY.domain([0, d3.max(data, d => d.value)!]);\n\n    this.xAxisG\n      .transition(this.transition)\n      .call(this.xAxis)\n      .attr('font-size', 12);\n    this.yAxisG\n      .transition(this.transition)\n      .call(this.yAxis)\n      .attr('font-size', 12);\n  }\n\n  protected abstract renderData();\n\n  protected abstract updateData(data: Datum[]);\n\n  protected abstract renderActiveDatum();\n\n  protected abstract updateActiveDatum(activeDatum: Datum | null);\n}\n","import { Compiler, ComponentFactoryResolver, ComponentRef, Directive, Injector, Type, ViewContainerRef } from '@angular/core';\nimport { Preference } from '../../services/preference/types';\nimport { LazyA11yModule } from './types';\n\n@Directive({\n  selector: '[appA11yPlaceholder]',\n})\nexport class A11yPlaceholderDirective<Host> {\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private compiler: Compiler,\n  ) {\n  }\n\n  async addComponent<Component>(A11yModule: Type<LazyA11yModule<Component>>, host: Host, preference: Preference) {\n    this.viewContainerRef.clear();\n\n    // compile the asynchronously imported module to resolve the dependencies of the a11y component\n    const moduleFactory = await this.compiler.compileModuleAsync(A11yModule);\n    const moduleRef = moduleFactory.create(null);\n    const module = moduleRef.instance;\n\n    // create a component, providing the host to be injected\n    const injector = Injector.create({\n      providers: [{\n        provide: 'host',\n        useValue: host,\n      }],\n    });\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(module.A11yComponent);\n    const componentRef = this.viewContainerRef.createComponent(componentFactory, 0, injector);\n    const component = componentRef.instance;\n    Object.assign(component, preference);\n    return componentRef;\n  }\n\n  removeComponent<Component>(componentRef: ComponentRef<Component>) {\n    const index = this.viewContainerRef.indexOf(componentRef.hostView);\n    if (index >= 0) {\n      this.viewContainerRef.remove(index);\n    }\n    componentRef.destroy();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { A11yPlaceholderDirective } from './a11y-placeholder.directive';\n\n@NgModule({\n  declarations: [\n    A11yPlaceholderDirective,\n  ],\n  exports: [\n    A11yPlaceholderDirective,\n  ],\n})\nexport class A11yPlaceholderModule {\n}\n","import { ComponentRef, Directive, Host, OnDestroy, OnInit, Optional, Self } from '@angular/core';\nimport { LineChartComponent } from '../../components/line-chart/line-chart.component';\nimport { PreferenceService } from '../../services/preference/preference.service';\nimport { AudificationPreference } from '../../services/preference/types';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Directive({\n  selector: '[appAudification]',\n})\nexport class AudificationDirective implements OnInit, OnDestroy {\n  private audificationComponentRef: ComponentRef<unknown> | null;\n  private destroy$ = new Subject();\n\n  constructor(\n    private preferenceService: PreferenceService,\n    // candidate host components\n    @Host() @Self() @Optional() private lineChartComponent: LineChartComponent | null,\n    // @Host() @Self() @Optional() private barChartComponent: BarChartComponent | null,\n    // etc.\n  ) {\n  }\n\n  get host() {\n    const component = this.lineChartComponent; // later it will be like: this.lineChartComponent || this.barChartComponent || ...\n    if (!component) {\n      throw new Error('The component does not support audification.');\n    }\n    return component;\n  }\n\n  ngOnInit() {\n    this.preferenceService.audification$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(async preference => {\n        if (preference.enabled) {\n          await this.attach(preference);\n        } else {\n          this.detach();\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.detach();\n  }\n\n  async attach(preference: AudificationPreference) {\n    this.detach();\n\n    const { host } = this;\n    const { LineChartAudificationModule } = await import('../../components/line-chart-audification/line-chart-audification.module');\n    this.audificationComponentRef = await host.a11yPlaceholder.addComponent(LineChartAudificationModule, host, preference);\n  }\n\n  detach() {\n    if (this.audificationComponentRef) {\n      this.host.a11yPlaceholder.removeComponent(this.audificationComponentRef);\n      this.audificationComponentRef = null;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AudificationDirective } from './audification.directive';\nimport { PreferenceModule } from '../../services/preference/preference.module';\n\n@NgModule({\n  declarations: [\n    AudificationDirective,\n  ],\n  imports: [\n    PreferenceModule,\n  ],\n  exports: [\n    AudificationDirective,\n  ],\n})\nexport class AudificationModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","export * from './types';\nexport * from './utils';\n","import { AUDIFICATION, GUIDE_DOGE, I18n, VISUALIZATION } from '../types';\n\nexport const en: I18n = {\n  [GUIDE_DOGE.TITLE]: 'Guide-Doge',\n  [GUIDE_DOGE.VISUALIZATION]: 'Data visualization',\n  [GUIDE_DOGE.AUDIFICATION]: 'Data audification',\n\n  [VISUALIZATION.ACTIVE_DATUM]: '%(y)s on %(x)s',\n\n  [AUDIFICATION.INSTRUCTIONS]: [\n    'Hold down <kbd>SPACE</kbd> to play the audified melody and <kbd>SHIFT</kbd> + <kbd>SPACE</kbd> to play it backward.',\n    'Press <kbd>X</kbd> or <kbd>Y</kbd> to read out the domain or range respectively.',\n    'Press <kbd>L</kbd> to read out the legend items.',\n    'Press <kbd>0</kbd> ... <kbd>9</kbd> to move playhead.',\n  ].join(' <br/>'),\n  [AUDIFICATION.DOMAIN]: 'Domain from %(min)s to %(max)s',\n  [AUDIFICATION.RANGE]: 'Range from %(min)s to %(max)s',\n  [AUDIFICATION.ACTIVE_DATUM]: '%(y)s on %(x)s',\n};\n","export * from './en';\nexport * from './ko';\n","import { AUDIFICATION, GUIDE_DOGE, I18n, VISUALIZATION } from '../types';\n\nexport const ko: I18n = {\n  [GUIDE_DOGE.TITLE]: 'Guide-Doge',\n  [GUIDE_DOGE.VISUALIZATION]: '데이터 시각화',\n  [GUIDE_DOGE.AUDIFICATION]: '데이터 청각화',\n\n  [VISUALIZATION.ACTIVE_DATUM]: '%(y)s, %(x)s',\n\n  [AUDIFICATION.INSTRUCTIONS]: [\n    '<kbd>SPACE</kbd>를 눌러 청각화된 음향을 재생하고 <kbd>SHIFT</kbd> + <kbd>SPACE</kbd>를 눌러 거꾸로 재생합니다.',\n    '<kbd>X</kbd> 또는 <kbd>Y</kbd>를 눌러 정의역 또는 치역을 읽습니다.',\n    '<kbd>L</kbd>을 눌러 범례 항목들을 읽습니다.',\n    '<kbd>0</kbd> ... <kbd>9</kbd>를 눌러 재생 위치를 이동합니다.',\n  ].join(' <br/>'),\n  [AUDIFICATION.DOMAIN]: '정의역 %(min)s 부터 %(max)s 까지',\n  [AUDIFICATION.RANGE]: '치역 %(min)s 부터 %(max)s 까지',\n  [AUDIFICATION.ACTIVE_DATUM]: '%(y)s, %(x)s',\n};\n","export enum GUIDE_DOGE {\n  TITLE = 0x000, // explicitly inits the first value of each enum with a different value to prevent i18n key conflicts\n  VISUALIZATION,\n  AUDIFICATION\n}\n\nexport enum VISUALIZATION {\n  ACTIVE_DATUM = 0x100,\n}\n\nexport enum AUDIFICATION {\n  INSTRUCTIONS = 0x200,\n  DOMAIN,\n  RANGE,\n  ACTIVE_DATUM,\n}\n\nexport type I18n = {\n  [key in GUIDE_DOGE | VISUALIZATION | AUDIFICATION]: string;\n};\n","import { sprintf } from 'sprintf-js';\nimport * as striptags from 'striptags';\nimport * as dictionary from './languages';\nimport { I18n } from './types';\n\nexport type Language = keyof typeof dictionary;\n\nlet language: Language = 'en';\n\nexport function setLanguage(lang: Language) {\n  language = lang;\n}\n\nexport function getLanguage() {\n  return language;\n}\n\n/**\n * Returns a formatted i18n string using sprintf-js.\n *\n * @param key The key of an i18n string.\n * @param args The arguments to format the string with.\n */\nexport function t(key: keyof I18n, ...args: any[]) {\n  return sprintf(dictionary[language][key], ...args);\n}\n\n/**\n * Returns a screen-reader friendly formatted i18n string using sprintf-js.\n *\n * @param key The key of an i18n string.\n * @param args The arguments to format the string with.\n */\nexport function tA11y(key: keyof I18n, ...args: any[]) {\n  return striptags(t(key, ...args));\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Category, Filter, Measure, ResultRow, Row } from './types';\n\n/**\n * This cube is conceptually an n-dimensional array of numbers. The cube\n * represents categories and measures. Each category corresponds to a\n * dimension of the cube. Each category has several different values it can\n * take on. Each category value corresponds to a slice of the cube.\n *\n * For example, look at the following two dimensional cube (i.e. a table):\n *\n *       \\ Chrome \\ Firefox\n * -------+--------+--------\n * USA    |   65   |   78\n * Canada |  101   |   34\n * Mexico |   72   |  156\n *\n * This table has two categories: Country and Browser. Country has three\n * category values: USA, Canada, Mexico, whereas Browser has two: Chrome and\n * Firefox. This cube has only one measure (say, Active Users). So, the table\n * is saying that there were 65 active users from the USA using Chrome.\n * Similarly there were 156 Firefox users from Mexico.\n *\n * The slice represented by USA is the list [65, 78]. The slice represented by\n * Chrome is [65, 101, 72].\n *\n * The cube can support any number of categories, and any number of measures.\n * More categories mean a higher dimensional cube, and more measures means each\n * cell in the cube will be represented by a vector where each element in the\n * vector corresponds to a different measure. Here is a three dimensional\n * (Gender, Source and OS) cube with two measures (Average Visit Duration and\n * Event Count):\n *\n * Male:                              * Female:\n *       \\ Windows \\   Mac  \\  Linux  *       \\ Windows \\   Mac  \\  Linux\n * -------+---------+--------+------- * -------+---------+--------+-------\n * Direct |  5s, 60 | 9s, 23 | 6s, 64 * Direct |  2s, 57 | 6s, 65 | 3s, 34\n * Email  |  7s, 90 | 2s, 98 | 2s, 90 * Email  |  3s, 93 | 4s, 73 | 6s, 72\n * Search |  1s, 32 | 3s, 21 | 4s, 23 * Search |  8s, 86 | 3s, 53 | 5s, 35\n *\n * This cube is saying, for example, that female Linux users coming from\n * Search stayed on the page for an average of 5 seconds.\n *\n * The cube can be queried for specific categories and measures. This\n * will combine together the values for all the other categories and give\n * a breakdown based on the requested categories. For more information, see\n * the documentation for the `getDataFor()` method.\n */\nexport class DataCube {\n  constructor(\n    private readonly rows: Row[],\n    private readonly measures: Measure[],\n    private readonly categories: Category[],\n  ) {\n  }\n\n  /**\n   * Get a breakdown by the given categories in the given measures.\n   *\n   * Breaks down the data in the cube by the given categories and returns\n   * the given measures in a table. So, for the following cube, with\n   * categories Gender, Source and OS and measures Event Count and Sessions:\n   *\n   * Male:                              * Female:\n   *       \\ Windows \\   Mac  \\  Linux  *       \\ Windows \\   Mac  \\  Linux\n   * -------+---------+--------+------- * -------+---------+--------+-------\n   * Direct |  12, 60 |  1, 23 | 44, 64 * Direct |  50, 57 | 43, 65 | 25, 34\n   * Email  |  23, 90 | 51, 98 | 21, 90 * Email  |  39, 93 | 24, 73 | 64, 72\n   * Search |  16, 32 | 10, 21 |  9, 23 * Search |  93, 86 | 38, 53 | 31, 35\n   *\n   * If you get data for the Source category and Sessions measure, the\n   * result would be\n   *\n   * Categories | Measures\n   * -----------+------------\n   * Source     | Sessions\n   * ===========+============\n   * Direct     | 303\n   * Email      | 516\n   * Search     | 250\n   *\n   * The value of the measure Sessions for the category value \"Direct\",\n   * for example, is calculated by adding the the Sessions values\n   * across all the other categories\n   * (across the top row: 60 + 23 + 64 + 57 + 65 + 34). Other category\n   * values are calculated similarly.\n   *\n   * The data can be broken down by multiple categories, and multiple\n   * measures can be provided. For example, given the same cube as before,\n   * with the category names Gender and OS, and measure Event Count, the\n   * resulting table will be:\n   *\n   *    Categories    |  Measures\n   * -----------------+------------\n   * Gender |   OS    | Event Count\n   * =======+=========+============\n   * Male   | Windows | 51\n   * Male   | Mac     | 62\n   * Male   | Linux   | 74\n   * Female | Windows | 182\n   * Female | Mac     | 105\n   * Female | Linux   | 110\n   *\n   * Special handling is applied to the \"nthDay\" category. No matter what\n   * actual day it corresponds to, the earliest nthDay will always correspond\n   * to 0, the second earliest to 1, and so on.\n   *\n   * This method also supports filtering by category or measure values.\n   * Filtering takes place before the counting is done, so it is possible to\n   * filter on categories that are not in the query. By default, nothing is\n   * filtered.\n   *\n   * It's also possible to sort the results by any category or measure.\n   * By default, the results are sorted by the first requested category, then\n   * the second, and so on.\n   *\n   * @param categoryNames The categories to request a breakdown from.\n   * @param measureNames The measures to provide values for.\n   * @param filters The filters to apply to the cube before finding the results.\n   * @param sortBy The concept names to sort in ascending order.\n   */\n  getDataFor(\n    categoryNames: string[],\n    measureNames: string[],\n    filters: Filter[] = [],\n    sortBy?: string[],\n  ): ResultRow[] {\n    const measureIndices = measureNames.map(name =>\n      this.measures.findIndex(measure => measure.name === name),\n    );\n    const categoryIndices = categoryNames.map(name =>\n      this.categories.findIndex(category => category.name === name),\n    );\n    const categoryTrie: TrieNode = { children: {} };\n    const filterFuncs = filters.map(filter =>\n      filter(this.categories, this.measures),\n    );\n    this.rows\n      .filter(row => filterFuncs.every(filter => filter(row)))\n      .forEach(row => {\n        let trieNode = categoryTrie;\n        for (const categoryIndex of categoryIndices) {\n          if (!trieNode.children[row.header[categoryIndex]]) {\n            trieNode.children[row.header[categoryIndex]] = { children: {} };\n          }\n          trieNode = trieNode.children[row.header[categoryIndex]];\n        }\n        if (!trieNode.values) {\n          trieNode.values = measureNames.map(() => 0);\n        }\n        for (const [index, measureIndex] of measureIndices.entries()) {\n          trieNode.values[index] += row.values[measureIndex];\n        }\n      });\n\n    const result: ResultRow[] = [];\n    const labelList: string[] = [];\n    const traverseNode = (node: TrieNode) => {\n      if (node.values) {\n        result.push({\n          categories: new Map(\n            labelList.map((label, index) => [categoryNames[index], label]),\n          ),\n          values: new Map(\n            node.values.map((value, index) => [measureNames[index], value]),\n          ),\n        });\n      } else {\n        for (const [label, child] of Object.entries(node.children)) {\n          labelList.push(label);\n          traverseNode(child);\n          labelList.pop();\n        }\n      }\n    };\n    traverseNode(categoryTrie);\n    this.normalizeNthDay(result, categoryNames);\n    this.sortResults(\n      result,\n      categoryNames,\n      measureNames,\n      sortBy ?? [...categoryNames, ...measureNames],\n    );\n    return result;\n  }\n\n  private normalizeNthDay(rows: ResultRow[], categoryNames: string[]) {\n    if (!categoryNames.includes('nthDay')) {\n      return;\n    }\n    const largestNthDay = Math.max(...rows.map(row => row.categories.get('nthDay') as number));\n    for (const row of rows) {\n      const nthDay = row.categories.get('nthDay') as number;\n      row.categories.set('nthDay', largestNthDay - nthDay);\n    }\n  }\n\n  private sortResults(\n    results: ResultRow[],\n    categoryNames: string[],\n    measureNames: string[],\n    sortBy: string[],\n  ) {\n    function getComparator(sortConcept: string) {\n      if (categoryNames.includes(sortConcept)) {\n        return (a: ResultRow, b: ResultRow) => {\n          const aCategory = a.categories.get(sortConcept)!;\n          const bCategory = b.categories.get(sortConcept)!;\n          if (aCategory < bCategory) {\n            return -1;\n          }\n          if (aCategory > bCategory) {\n            return 1;\n          }\n          return 0;\n        };\n      }\n      if (measureNames.includes(sortConcept)) {\n        return (a: ResultRow, b: ResultRow) =>\n          a.values.get(sortConcept)! - b.values.get(sortConcept)!;\n      }\n      return () => 0;\n    }\n\n    const comparators = sortBy.map(getComparator);\n    const combinedComparator = (a: ResultRow, b: ResultRow) => {\n      for (const comparator of comparators) {\n        const result = comparator(a, b);\n        if (result !== 0) {\n          return result;\n        }\n      }\n      return 0;\n    };\n    results.sort(combinedComparator);\n  }\n}\n\ninterface TrieNode {\n  children: Record<string, TrieNode>;\n  values?: number[];\n}\n","import { Category, Filter, FilterOptions, Row } from './types';\n\nconst millisecondsPerDay = 24 * 60 * 60 * 1000;\n\nconst defaultOptions: FilterOptions = {\n  excludeStartDate: false,\n  excludeEndDate: false,\n};\n\nexport function betweenDates(startDate: Date, endDate: Date, options: Partial<FilterOptions> = {}): Filter {\n  const { excludeStartDate, excludeEndDate } = {\n    ...defaultOptions,\n    ...options,\n  };\n  return (categories: Category[]) => {\n    const nThDayIndex = categories.findIndex(\n      category => category.name === 'nthDay',\n    );\n    let startIndex = Math.round(\n      (Date.now() - startDate.getTime()) / millisecondsPerDay,\n    );\n    if (excludeStartDate) {\n      startIndex--;\n    }\n    let endIndex = Math.round(\n      (Date.now() - endDate.getTime()) / millisecondsPerDay,\n    );\n    if (excludeEndDate) {\n      endIndex++;\n    }\n    return (row: Row) =>\n      row.header[nThDayIndex] <= startIndex &&\n      row.header[nThDayIndex] >= endIndex;\n  };\n}\n","import * as random from 'random';\nimport {\n  Category,\n  CategoryValue,\n  HitGenerationSettings,\n  Measure,\n  MeasureType,\n  ModelSettings,\n  Row,\n  Scope,\n  SessionGenerationSettings,\n} from './types';\nimport { DataCube } from './data-cube.model';\n\n/**\n * Creates fake analytics data based on the model given by settings.\n *\n * The fake data is returned as a Cube. See [cube.ts](./cube.ts) for more\n * information on the properties of the cube.\n *\n * The shape of the cube is determined by the categories and measures that are\n * passed in. The content is generated based on `settings`. For details on\n * what each property in settings does, see the documentation for the settings\n * type in [types.ts](./types.ts).\n *\n * The nthDay category is added to the categories if not present. The number of\n * values is determined by the `days` setting and the weight of each day is\n * determined according to the dailyVariance setting.\n *\n * The data is generated as a series of hits. Each hit is randomly assigned\n * to a category value for each category, based on the weights for each value.\n *\n * The hit is then added to a measure if it is a hit scoped measure, or if it\n * is a session scoped measure and part of a new session or if it is a user\n * scoped measure and represents a new user. For measures of type COUNT, they\n * are incremented by 1, whereas for measures of type SUM a random value in its\n * range is selected and added to the measure for that combination of category\n * values.\n *\n * This generation code makes the following assumptions:\n *  - All categories are independent of each other.\n *  - Each hit has a corresponding category value for each dimension.\n *  - The number of users is normally distributed, with mean settings.avgUsers\n *    and standard deviation settings.usersStdDev.\n *  - The number of sessions per user is normally distributed with mean\n *    settings.avgUsersPerSession and standard deviation settings.sessionsPerUserStdDev.\n *  - The number of hits is normally distributed with mean settings.avgHits\n *    and standard deviation settings.hitsStdDev.\n *  - The value of each hit for measures of type SUM is uniformly distributed in\n *    its range.\n *  - The session a hit belongs to is uniformly distributed.\n *  - The weight of a day is normally distributed with mean 1 and standard\n *    deviation settings.dailyStdDev\n *\n */\nexport function generateCube(\n  categories: Category[],\n  measures: Measure[],\n  settings: Partial<ModelSettings> = {},\n): DataCube {\n  const completeSettings: ModelSettings = {\n    ...defaultSettings,\n    ...settings,\n  };\n  const actualCategories = [...categories];\n  if (completeSettings.nthDay) {\n    const nthDayCategory = generateNthDay(\n      completeSettings.days,\n      completeSettings.dailyStdDev,\n    );\n    actualCategories.push(nthDayCategory);\n  }\n  const rows = generateEmptyRows(actualCategories, measures);\n  const cumulativeWeights = generateCumulativeWeights(rows, actualCategories);\n\n  generateHits(\n    rows,\n    measures,\n    cumulativeWeights,\n    generateUsersAndSessions(completeSettings),\n    completeSettings,\n  );\n\n  return new DataCube(rows, measures, actualCategories);\n}\n\nconst defaultSettings: ModelSettings = {\n  avgHits: 1000000,\n  hitStdDev: 10000,\n  avgUsers: 10000,\n  userStdDev: 100,\n  avgSessionsPerUser: 5,\n  sessionsPerUserStdDev: 3,\n  nthDay: true,\n  days: 60,\n  dailyStdDev: 0.1,\n};\n\ninterface User {\n  rowsSeen: Set<number>;\n}\n\ninterface Session {\n  user: User;\n  rowsSeen: Set<number>;\n}\n\nfunction generateUsersAndSessions({\n                                    avgUsers,\n                                    userStdDev,\n                                    avgSessionsPerUser,\n                                    sessionsPerUserStdDev,\n                                  }: SessionGenerationSettings) {\n  const userCount = Math.round(random.normal(avgUsers, userStdDev)());\n  const sessionThunk = random.normal(avgSessionsPerUser, sessionsPerUserStdDev);\n  const sessions: Session[] = [];\n  for (let i = 0; i < userCount; i++) {\n    const user = { rowsSeen: new Set<number>() };\n    const userSessions = Math.round(sessionThunk());\n    for (let j = 0; j < userSessions; j++) {\n      sessions.push({ user, rowsSeen: new Set() });\n    }\n  }\n  return sessions;\n}\n\nfunction getNormalizedWeights(categories: Category[]) {\n  return categories.map(category => {\n    const total = category.values.reduce((accumulator, value) => value.weight + accumulator, 0);\n    return category.values.map(value => value.weight / total);\n  });\n}\n\nfunction binarySearch(\n  arr: number[],\n  probe: number,\n  start = 0,\n  end = arr.length,\n): number {\n  const len = end - start;\n  if (len < 2) {\n    return start;\n  }\n  const index = len % 2 === 0 ? (start + end) / 2 : (start + end - 1) / 2;\n  if (arr[index] <= probe) {\n    return binarySearch(arr, probe, index, end);\n  } else {\n    return binarySearch(arr, probe, start, index);\n  }\n}\n\nfunction generateMeasureIncrement(measure: Measure) {\n  if (measure.type === MeasureType.COUNT || !measure.range) {\n    return 1;\n  }\n  return random.float(measure.range[0], measure.range[1]);\n}\n\nfunction generateHits(\n  rows: Row[],\n  measures: Measure[],\n  cumulativeWeights: number[],\n  sessions: Session[],\n  { avgHits, hitStdDev }: HitGenerationSettings,\n) {\n  const hitTotal = Math.round(random.normal(avgHits, hitStdDev)());\n  const placementThunk = random.uniform();\n  const sessionThunk = random.uniformInt(0, sessions.length - 1);\n  for (let i = 0; i < hitTotal; i++) {\n    const placement = placementThunk();\n    const session = sessionThunk();\n    const rowIndex = binarySearch(cumulativeWeights, placement);\n    for (const [index, measure] of measures.entries()) {\n      const newSession = !sessions[session].rowsSeen.has(rowIndex);\n      const newUser = !sessions[session].user.rowsSeen.has(rowIndex);\n      if (newSession) {\n        sessions[session].rowsSeen.add(rowIndex);\n        if (newUser) {\n          sessions[session].user.rowsSeen.add(rowIndex);\n        }\n      }\n\n      switch (measure.scope) {\n        case Scope.EVENT:\n          rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          break;\n        case Scope.SESSION:\n          if (newSession) {\n            rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          }\n          break;\n        case Scope.USER:\n          if (newUser) {\n            rows[rowIndex].values[index] += generateMeasureIncrement(measure);\n          }\n          break;\n      }\n    }\n  }\n}\n\nfunction generateEmptyRows(categories: Category[], measures: Measure[]) {\n  const rows: Row[] = [];\n\n  // The current index in each category of which value we've looked at\n  const categoryValueIndices = categories.map(() => 0);\n  let categoryIndex = 0;\n  // This is going to loop through all combinations of category values.\n  // The approach we take is to iterate through all the first category's values.\n  // Then we move to the next value in the second category and iterate through\n  // all the values in the first category again. We then move to the next value\n  // in the second category, and repeat again and again until we've gone through\n  // all the values in the second category. We then move to the next value\n  // in the third category, then repeat, and so on and so on until we've gone\n  // through every possible value.\n  do {\n    // Get the current combination of values and add them to the list\n    const header = categories.map(\n      (category, index) => category.values[categoryValueIndices[index]].name,\n    );\n    const values = measures.map(() => 0);\n    rows.push({ header, values });\n\n    // Start with the first category\n    categoryIndex = 0;\n    do {\n      // Advance to the next category value in the current value\n      categoryValueIndices[categoryIndex] =\n        (categoryValueIndices[categoryIndex] + 1) %\n        categories[categoryIndex].values.length;\n      categoryIndex += 1;\n      // If we wrapped around to the beginning of the list of values for the\n      // current category, move to the next category so that its value can\n      // be incremented\n    } while (\n      categoryValueIndices[categoryIndex - 1] === 0 &&\n      categoryIndex < categories.length\n      );\n    // If we ended up with the first value in the previous category, then\n    // that means we ran off the end of the list of possible categories, so\n    // we should end the loop\n  } while (categoryValueIndices[categoryIndex - 1] !== 0);\n  return rows;\n}\n\nfunction generateCumulativeWeights(rows: Row[], categories: Category[]) {\n  const weights = getNormalizedWeights(categories);\n  const nameToWeightMapping = categories.map(\n    (category, categoryIndex) =>\n      new Map(\n        category.values.map((value, index) => [\n          value.name,\n          weights[categoryIndex][index],\n        ]),\n      ),\n  );\n  return rows.reduce(\n    (cumulativeWeights, row) => {\n      const rowWeights = row.header.map((label, categoryIndex) => nameToWeightMapping[categoryIndex].get(label) ?? 0);\n      const weightDelta = rowWeights.reduce((accumulator, weight) => accumulator * weight, 1);\n      cumulativeWeights.push(weightDelta + cumulativeWeights[cumulativeWeights.length - 1]);\n      return cumulativeWeights;\n    },\n    [0],\n  );\n}\n\nfunction generateNthDay(days: number, dailyVariance: number): Category {\n  const dailyThunk = random.normal(1, dailyVariance);\n  const values: CategoryValue[] = [];\n  for (let day = 0; day < days; day++) {\n    values.push({\n      name: day,\n      weight: dailyThunk(),\n    });\n  }\n  return {\n    name: 'nthDay',\n    values,\n  };\n}\n","import { Category, Measure, MeasureType, Scope } from './types';\n\nexport const countryCategory: Category = {\n  name: 'country',\n  values: [\n    {\n      name: 'Canada',\n      weight: 2,\n    },\n    {\n      name: 'USA',\n      weight: 16,\n    },\n    {\n      name: 'Mexico',\n      weight: 15,\n    },\n  ],\n};\n\nexport const browserCategory: Category = {\n  name: 'browser',\n  values: [\n    {\n      name: 'Chrome',\n      weight: 50,\n    },\n    {\n      name: 'Firefox',\n      weight: 19,\n    },\n    {\n      name: 'Safari',\n      weight: 20,\n    },\n    {\n      name: 'Edge',\n      weight: 10,\n    },\n  ],\n};\n\nexport const sourceCategory: Category = {\n  name: 'source',\n  values: [\n    {\n      name: 'Direct',\n      weight: 5,\n    },\n    {\n      name: 'Email',\n      weight: 5,\n    },\n  ],\n};\n\nexport const activeUserMeasure: Measure = {\n  name: 'activeUsers',\n  scope: Scope.USER,\n  type: MeasureType.COUNT,\n};\n\nexport const revenueMeasure: Measure = {\n  name: 'revenue',\n  scope: Scope.EVENT,\n  type: MeasureType.SUM,\n  range: [0, 10],\n};\n\nexport const eventCountMeasure: Measure = {\n  name: 'eventCount',\n  scope: Scope.EVENT,\n  type: MeasureType.SUM,\n};\n","/** A description of a type of value that a hit can belong to. */\nexport interface Category {\n  /** The canonical name for this category. */\n  name: string;\n\n  /** The possible values the category can take on. */\n  values: CategoryValue[];\n}\n\n/** Describes a possible value a category can have. */\nexport interface CategoryValue {\n  /** A label for this particular value */\n  name: string | number;\n\n  /**\n   * How likely this value is to occur, relative to the other values in this\n   * category.\n   */\n  weight: number;\n}\n\n/** A value that can be measured. */\nexport interface Measure {\n  /** The canonical name for this measure. */\n  name: string;\n  /** If this measure applies to events, sessions or users. */\n  scope: Scope;\n  /** How the values from this measure are calculated. */\n  type: MeasureType;\n  /**\n   * The range of values this measure can take on per hit, if the measure\n   * is of type SUM.\n   */\n  range?: [number, number];\n}\n\n/** The way this measure is calculated */\nexport enum MeasureType {\n  COUNT,\n  SUM,\n}\n\n/** What this measure is associated with. */\nexport enum Scope {\n  EVENT,\n  SESSION,\n  USER,\n}\n\n/**\n * Used to control the model for data generation. More details about how this\n * is used is available in [generation.ts](./generation.ts).\n */\nexport type ModelSettings = HitGenerationSettings &\n  SessionGenerationSettings &\n  NthDayGenerationSettings;\n\nexport interface HitGenerationSettings {\n  /** The average number of hits over the lifetime of the data generation. */\n  avgHits: number;\n  /** The standard deviation of hits over the time lifetime of the data generation. */\n  hitStdDev: number;\n}\n\nexport interface SessionGenerationSettings {\n  /** The average number of users for this data generation. */\n  avgUsers: number;\n  /** The standard deviation of users for this data generation. */\n  userStdDev: number;\n  /** The average number of sessions per user. */\n  avgSessionsPerUser: number;\n  /** The standard deviation of sessions per user. */\n  sessionsPerUserStdDev: number;\n}\n\nexport interface NthDayGenerationSettings {\n  /** Whether to generate nth day category or not */\n  nthDay: boolean;\n  /** The number of days worth of data to generate. */\n  days: number;\n  /** How much the number of hits can vary from day to day. */\n  dailyStdDev: number;\n}\n\n/**\n * A filter is applied to the data in a cube before being queried.\n *\n * A filter is a factory function that actually generates the filter when\n * called. The idea is that the first call will allow the filter to configure\n * itself with any necessary values, so that the second call can run very\n * quickly on each row.\n */\nexport type Filter = (\n  categories: Category[],\n  measures: Measure[],\n) => (row: Row) => boolean;\n\n/**\n * The internal storage of the cube. Although the cube is conceptually an\n * n-dimensional cube of data, in actuality it is a list of rows, to make for\n * easier querying.\n */\nexport interface Row {\n  /** The category values for this row. */\n  header: (string | number)[];\n  /** The measure values for this row. */\n  values: number[];\n}\n\n/**\n * The data returned from a query to a cube. The category and measure values\n * are stored in a map keyed on the name of the respective category or\n * dimension.\n */\nexport interface ResultRow {\n  categories: Map<string, string | number>;\n  values: Map<string, number>;\n}\n\n/**\n * The options used to filter rows.\n */\nexport interface FilterOptions {\n  /** Exclude start date */\n  excludeStartDate: boolean;\n  /** Exclude end date */\n  excludeEndDate: boolean;\n}\n","import { NgModule } from '@angular/core';\nimport { DataService } from './data.service';\n\n@NgModule({\n  providers: [\n    DataService,\n  ],\n})\nexport class DataModule {\n}\n","import { DateTime } from 'luxon';\nimport {\n  activeUserMeasure,\n  browserCategory,\n  countryCategory,\n  eventCountMeasure,\n  revenueMeasure,\n  sourceCategory,\n} from '../../models/data-cube/presets';\nimport { betweenDates } from '../../models/data-cube/filters';\nimport { generateCube } from 'src/models/data-cube/generation';\nimport { Datum } from '../../d3/xy-chart.d3';\n\nexport class DataService {\n  private dataCube = generateCube(\n    [countryCategory, browserCategory, sourceCategory],\n    [activeUserMeasure, revenueMeasure, eventCountMeasure],\n    {\n      avgHits: 10000,\n      hitStdDev: 100,\n      avgUsers: 100,\n      userStdDev: 1,\n      avgSessionsPerUser: 5,\n      sessionsPerUserStdDev: 3,\n    },\n  );\n\n  getMeasureOverDays(measureName: string, days = 30): Datum[] {\n    const categoryName = 'nthDay';\n    const endDate = DateTime.local();\n    const startDate = endDate.minus({ day: days });\n\n    return this.dataCube\n      .getDataFor(\n        [categoryName],\n        [measureName],\n        [betweenDates(startDate.toJSDate(), endDate.toJSDate(), { excludeStartDate: true })],\n      )\n      .map(row => ({\n        date: startDate\n          .plus({ days: row.categories.get(categoryName) as number })\n          .toJSDate(),\n        value: row.values.get(measureName)!,\n      }));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PreferenceService } from './preference.service';\n\n@NgModule({\n  providers: [\n    PreferenceService,\n  ],\n})\nexport class PreferenceModule {\n}\n","import { BehaviorSubject, combineLatest, Observable, ObservedValueOf } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AudificationPreference, DataTablePreference, TextSummaryPreference } from './types';\n\ntype ObservableDictionary = { [key: string]: Observable<any> };\ntype ObservedDictionaryOf<T extends ObservableDictionary> = { [key in keyof T]: ObservedValueOf<T[key]> };\n\nexport class PreferenceService {\n  audification = { // mimic namespace\n    enabled: new BehaviorSubject(true),\n    lowestPitch: new BehaviorSubject(256),\n    highestPitch: new BehaviorSubject(1024),\n    noteDuration: new BehaviorSubject(167),\n    readBefore: new BehaviorSubject(false),\n    readAfter: new BehaviorSubject(true),\n  };\n  audification$: Observable<AudificationPreference> = this.combineObservableDictionary(this.audification);\n\n  dataTable = {\n    enabled: new BehaviorSubject(false),\n    placeholder: new BehaviorSubject(null),\n  };\n  dataTable$: Observable<DataTablePreference> = this.combineObservableDictionary(this.dataTable);\n\n  textSummary = {\n    enabled: new BehaviorSubject(false),\n    placeholder: new BehaviorSubject(null),\n  };\n  textSummary$: Observable<TextSummaryPreference> = this.combineObservableDictionary(this.textSummary);\n\n  /**\n   * Creates a combined Observable that emits a dictionary of observed values.\n   *\n   * @param observableDictionary a dictionary of observable values\n   * @return a combined Observable\n   *\n   * @example\n   * // returns an observable of type Observable<{a: boolean, b: number}>\n   * const combined$ = this.combineObservableDictionary({a: new Subject<boolean>(), b: new Subject<number>>});\n   */\n  private combineObservableDictionary<T extends ObservableDictionary>(observableDictionary: T): Observable<ObservedDictionaryOf<T>> {\n    const keys = Object.keys(observableDictionary);\n    const subjects = Object.values(observableDictionary);\n    return combineLatest(subjects)\n      .pipe(map(values => {\n        const observedDictionary: any = {}; // will be of type ObservedDictionaryOf<T> after the iteration below\n        values.forEach((value, i) => {\n          const key = keys[i];\n          observedDictionary[key] = value;\n        });\n        return observedDictionary;\n      }));\n  }\n}\n","import * as d3 from 'd3';\n\nexport const formatX = d3.timeFormat('%B %d');\n\nexport const formatY = (value: number) => Number.isInteger(value) ? `${value}` : value.toFixed(1);\n\nexport const humanizeMeasureName = (str: string) => str\n  .replace(/([A-Z])/g, ' $1')\n  .replace(/^./, firstCharacter => firstCharacter.toUpperCase());\n","/* (ignored) */"]}