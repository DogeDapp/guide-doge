function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _createForOfIteratorHelper(o) { if (typeof Symbol === "undefined" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray2(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray2(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray2(arr); }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass2(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _classCallCheck2(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _slicedToArray2(arr, i) { return _arrayWithHoles2(arr) || _iterableToArrayLimit2(arr, i) || _unsupportedIterableToArray2(arr, i) || _nonIterableRest2(); }

function _nonIterableRest2() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray2(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray2(o, minLen); }

function _arrayLikeToArray2(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit2(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles2(arr) { if (Array.isArray(arr)) return arr; }

(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["components-line-chart-audification-line-chart-audification-module"], {
  /***/
  "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
    \*****************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesBabelRuntimeHelpersArrayLikeToArrayJs(module, exports) {
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;

      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }

      return arr2;
    }

    module.exports = _arrayLikeToArray;
    /***/
  },

  /***/
  "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
  /*!***************************************************************!*\
    !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
    \***************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesBabelRuntimeHelpersArrayWithHolesJs(module, exports) {
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }

    module.exports = _arrayWithHoles;
    /***/
  },

  /***/
  "./node_modules/@babel/runtime/helpers/classCallCheck.js":
  /*!***************************************************************!*\
    !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
    \***************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesBabelRuntimeHelpersClassCallCheckJs(module, exports) {
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }

    module.exports = _classCallCheck;
    /***/
  },

  /***/
  "./node_modules/@babel/runtime/helpers/createClass.js":
  /*!************************************************************!*\
    !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
    \************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesBabelRuntimeHelpersCreateClassJs(module, exports) {
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor) descriptor.writable = true;
        Object.defineProperty(target, descriptor.key, descriptor);
      }
    }

    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps) _defineProperties(Constructor.prototype, protoProps);
      if (staticProps) _defineProperties(Constructor, staticProps);
      return Constructor;
    }

    module.exports = _createClass;
    /***/
  },

  /***/
  "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
    \*********************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesBabelRuntimeHelpersIterableToArrayLimitJs(module, exports) {
    function _iterableToArrayLimit(arr, i) {
      if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = undefined;

      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);

          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }

      return _arr;
    }

    module.exports = _iterableToArrayLimit;
    /***/
  },

  /***/
  "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
  /*!****************************************************************!*\
    !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
    \****************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesBabelRuntimeHelpersNonIterableRestJs(module, exports) {
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }

    module.exports = _nonIterableRest;
    /***/
  },

  /***/
  "./node_modules/@babel/runtime/helpers/slicedToArray.js":
  /*!**************************************************************!*\
    !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
    \**************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesBabelRuntimeHelpersSlicedToArrayJs(module, exports, __webpack_require__) {
    var arrayWithHoles = __webpack_require__(
    /*! ./arrayWithHoles */
    "./node_modules/@babel/runtime/helpers/arrayWithHoles.js");

    var iterableToArrayLimit = __webpack_require__(
    /*! ./iterableToArrayLimit */
    "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

    var unsupportedIterableToArray = __webpack_require__(
    /*! ./unsupportedIterableToArray */
    "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js");

    var nonIterableRest = __webpack_require__(
    /*! ./nonIterableRest */
    "./node_modules/@babel/runtime/helpers/nonIterableRest.js");

    function _slicedToArray(arr, i) {
      return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
    }

    module.exports = _slicedToArray;
    /***/
  },

  /***/
  "./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js":
  /*!***************************************************************************!*\
    !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
    \***************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesBabelRuntimeHelpersUnsupportedIterableToArrayJs(module, exports, __webpack_require__) {
    var arrayLikeToArray = __webpack_require__(
    /*! ./arrayLikeToArray */
    "./node_modules/@babel/runtime/helpers/arrayLikeToArray.js");

    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
    }

    module.exports = _unsupportedIterableToArray;
    /***/
  },

  /***/
  "./node_modules/automation-events/build/es5/bundle.js":
  /*!************************************************************!*\
    !*** ./node_modules/automation-events/build/es5/bundle.js ***!
    \************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesAutomationEventsBuildEs5BundleJs(module, exports, __webpack_require__) {
    (function (global, factory) {
      true ? factory(exports, __webpack_require__(
      /*! @babel/runtime/helpers/slicedToArray */
      "./node_modules/@babel/runtime/helpers/slicedToArray.js"), __webpack_require__(
      /*! @babel/runtime/helpers/classCallCheck */
      "./node_modules/@babel/runtime/helpers/classCallCheck.js"), __webpack_require__(
      /*! @babel/runtime/helpers/createClass */
      "./node_modules/@babel/runtime/helpers/createClass.js")) : undefined;
    })(this, function (exports, _slicedToArray, _classCallCheck, _createClass) {
      'use strict';

      _slicedToArray = _slicedToArray && Object.prototype.hasOwnProperty.call(_slicedToArray, 'default') ? _slicedToArray['default'] : _slicedToArray;
      _classCallCheck = _classCallCheck && Object.prototype.hasOwnProperty.call(_classCallCheck, 'default') ? _classCallCheck['default'] : _classCallCheck;
      _createClass = _createClass && Object.prototype.hasOwnProperty.call(_createClass, 'default') ? _createClass['default'] : _createClass;

      var createExtendedExponentialRampToValueAutomationEvent = function createExtendedExponentialRampToValueAutomationEvent(value, endTime, insertTime) {
        return {
          endTime: endTime,
          insertTime: insertTime,
          type: 'exponentialRampToValue',
          value: value
        };
      };

      var createExtendedLinearRampToValueAutomationEvent = function createExtendedLinearRampToValueAutomationEvent(value, endTime, insertTime) {
        return {
          endTime: endTime,
          insertTime: insertTime,
          type: 'linearRampToValue',
          value: value
        };
      };

      var createSetValueAutomationEvent = function createSetValueAutomationEvent(value, startTime) {
        return {
          startTime: startTime,
          type: 'setValue',
          value: value
        };
      };

      var createSetValueCurveAutomationEvent = function createSetValueCurveAutomationEvent(values, startTime, duration) {
        return {
          duration: duration,
          startTime: startTime,
          type: 'setValueCurve',
          values: values
        };
      };

      var getTargetValueAtTime = function getTargetValueAtTime(time, valueAtStartTime, _ref) {
        var startTime = _ref.startTime,
            target = _ref.target,
            timeConstant = _ref.timeConstant;
        return target + (valueAtStartTime - target) * Math.exp((startTime - time) / timeConstant);
      };

      var isExponentialRampToValueAutomationEvent = function isExponentialRampToValueAutomationEvent(automationEvent) {
        return automationEvent.type === 'exponentialRampToValue';
      };

      var isLinearRampToValueAutomationEvent = function isLinearRampToValueAutomationEvent(automationEvent) {
        return automationEvent.type === 'linearRampToValue';
      };

      var isAnyRampToValueAutomationEvent = function isAnyRampToValueAutomationEvent(automationEvent) {
        return isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent);
      };

      var isSetValueAutomationEvent = function isSetValueAutomationEvent(automationEvent) {
        return automationEvent.type === 'setValue';
      };

      var isSetValueCurveAutomationEvent = function isSetValueCurveAutomationEvent(automationEvent) {
        return automationEvent.type === 'setValueCurve';
      };

      var getValueOfAutomationEventAtIndexAtTime = function getValueOfAutomationEventAtIndexAtTime(automationEvents, index, time, defaultValue) {
        var automationEvent = automationEvents[index];
        return automationEvent === undefined ? defaultValue : isAnyRampToValueAutomationEvent(automationEvent) || isSetValueAutomationEvent(automationEvent) ? automationEvent.value : isSetValueCurveAutomationEvent(automationEvent) ? automationEvent.values[automationEvent.values.length - 1] : getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, automationEvent.startTime, defaultValue), automationEvent);
      };

      var getEndTimeAndValueOfPreviousAutomationEvent = function getEndTimeAndValueOfPreviousAutomationEvent(automationEvents, index, currentAutomationEvent, nextAutomationEvent, defaultValue) {
        return currentAutomationEvent === undefined ? [nextAutomationEvent.insertTime, defaultValue] : isAnyRampToValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.endTime, currentAutomationEvent.value] : isSetValueAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime, currentAutomationEvent.value] : isSetValueCurveAutomationEvent(currentAutomationEvent) ? [currentAutomationEvent.startTime + currentAutomationEvent.duration, currentAutomationEvent.values[currentAutomationEvent.values.length - 1]] : [currentAutomationEvent.startTime, getValueOfAutomationEventAtIndexAtTime(automationEvents, index - 1, currentAutomationEvent.startTime, defaultValue)];
      };

      var isCancelAndHoldAutomationEvent = function isCancelAndHoldAutomationEvent(automationEvent) {
        return automationEvent.type === 'cancelAndHold';
      };

      var isCancelScheduledValuesAutomationEvent = function isCancelScheduledValuesAutomationEvent(automationEvent) {
        return automationEvent.type === 'cancelScheduledValues';
      };

      var getEventTime = function getEventTime(automationEvent) {
        if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {
          return automationEvent.cancelTime;
        }

        if (isExponentialRampToValueAutomationEvent(automationEvent) || isLinearRampToValueAutomationEvent(automationEvent)) {
          return automationEvent.endTime;
        }

        return automationEvent.startTime;
      };

      var getExponentialRampValueAtTime = function getExponentialRampValueAtTime(time, startTime, valueAtStartTime, _ref) {
        var endTime = _ref.endTime,
            value = _ref.value;

        if (valueAtStartTime === value) {
          return value;
        }

        if (0 < valueAtStartTime && 0 < value || valueAtStartTime < 0 && value < 0) {
          return valueAtStartTime * Math.pow(value / valueAtStartTime, (time - startTime) / (endTime - startTime));
        }

        return 0;
      };

      var getLinearRampValueAtTime = function getLinearRampValueAtTime(time, startTime, valueAtStartTime, _ref) {
        var endTime = _ref.endTime,
            value = _ref.value;
        return valueAtStartTime + (time - startTime) / (endTime - startTime) * (value - valueAtStartTime);
      };

      var interpolateValue = function interpolateValue(values, theoreticIndex) {
        var lowerIndex = Math.floor(theoreticIndex);
        var upperIndex = Math.ceil(theoreticIndex);

        if (lowerIndex === upperIndex) {
          return values[lowerIndex];
        }

        return (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];
      };

      var getValueCurveValueAtTime = function getValueCurveValueAtTime(time, _ref) {
        var duration = _ref.duration,
            startTime = _ref.startTime,
            values = _ref.values;
        var theoreticIndex = (time - startTime) / duration * (values.length - 1);
        return interpolateValue(values, theoreticIndex);
      };

      var isSetTargetAutomationEvent = function isSetTargetAutomationEvent(automationEvent) {
        return automationEvent.type === 'setTarget';
      };

      var AutomationEventList = /*#__PURE__*/function () {
        function AutomationEventList(defaultValue) {
          _classCallCheck(this, AutomationEventList);

          this._automationEvents = [];
          this._currenTime = 0;
          this._defaultValue = defaultValue;
        }

        _createClass(AutomationEventList, [{
          key: Symbol.iterator,
          value: function value() {
            return this._automationEvents[Symbol.iterator]();
          }
        }, {
          key: "add",
          value: function add(automationEvent) {
            var eventTime = getEventTime(automationEvent);

            if (isCancelAndHoldAutomationEvent(automationEvent) || isCancelScheduledValuesAutomationEvent(automationEvent)) {
              var index = this._automationEvents.findIndex(function (currentAutomationEvent) {
                return getEventTime(currentAutomationEvent) >= eventTime;
              });

              var removedAutomationEvent = this._automationEvents[index];

              if (index !== -1) {
                this._automationEvents = this._automationEvents.slice(0, index);
              }

              if (isCancelAndHoldAutomationEvent(automationEvent)) {
                var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];

                if (removedAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(removedAutomationEvent)) {
                  if (isSetTargetAutomationEvent(lastAutomationEvent)) {
                    throw new Error('The internal list is malformed.');
                  }

                  var startTime = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.startTime + lastAutomationEvent.duration : getEventTime(lastAutomationEvent);
                  var startValue = isSetValueCurveAutomationEvent(lastAutomationEvent) ? lastAutomationEvent.values[lastAutomationEvent.values.length - 1] : lastAutomationEvent.value;
                  var value = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? getExponentialRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent) : getLinearRampValueAtTime(eventTime, startTime, startValue, removedAutomationEvent);
                  var truncatedAutomationEvent = isExponentialRampToValueAutomationEvent(removedAutomationEvent) ? createExtendedExponentialRampToValueAutomationEvent(value, eventTime, this._currenTime) : createExtendedLinearRampToValueAutomationEvent(value, eventTime, this._currenTime);

                  this._automationEvents.push(truncatedAutomationEvent);
                }

                if (lastAutomationEvent !== undefined && isSetTargetAutomationEvent(lastAutomationEvent)) {
                  this._automationEvents.push(createSetValueAutomationEvent(this.getValue(eventTime), eventTime));
                }

                if (lastAutomationEvent !== undefined && isSetValueCurveAutomationEvent(lastAutomationEvent) && lastAutomationEvent.startTime + lastAutomationEvent.duration > eventTime) {
                  this._automationEvents[this._automationEvents.length - 1] = createSetValueCurveAutomationEvent(new Float32Array([6, 7]), lastAutomationEvent.startTime, eventTime - lastAutomationEvent.startTime);
                }
              }
            } else {
              var _index = this._automationEvents.findIndex(function (currentAutomationEvent) {
                return getEventTime(currentAutomationEvent) > eventTime;
              });

              var previousAutomationEvent = _index === -1 ? this._automationEvents[this._automationEvents.length - 1] : this._automationEvents[_index - 1];

              if (previousAutomationEvent !== undefined && isSetValueCurveAutomationEvent(previousAutomationEvent) && getEventTime(previousAutomationEvent) + previousAutomationEvent.duration > eventTime) {
                return false;
              }

              var persistentAutomationEvent = isExponentialRampToValueAutomationEvent(automationEvent) ? createExtendedExponentialRampToValueAutomationEvent(automationEvent.value, automationEvent.endTime, this._currenTime) : isLinearRampToValueAutomationEvent(automationEvent) ? createExtendedLinearRampToValueAutomationEvent(automationEvent.value, eventTime, this._currenTime) : automationEvent;

              if (_index === -1) {
                this._automationEvents.push(persistentAutomationEvent);
              } else {
                if (isSetValueCurveAutomationEvent(automationEvent) && eventTime + automationEvent.duration > getEventTime(this._automationEvents[_index])) {
                  return false;
                }

                this._automationEvents.splice(_index, 0, persistentAutomationEvent);
              }
            }

            return true;
          }
        }, {
          key: "flush",
          value: function flush(time) {
            var index = this._automationEvents.findIndex(function (currentAutomationEvent) {
              return getEventTime(currentAutomationEvent) > time;
            });

            if (index > 1) {
              var remainingAutomationEvents = this._automationEvents.slice(index - 1);

              var firstRemainingAutomationEvent = remainingAutomationEvents[0];

              if (isSetTargetAutomationEvent(firstRemainingAutomationEvent)) {
                remainingAutomationEvents.unshift(createSetValueAutomationEvent(getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, firstRemainingAutomationEvent.startTime, this._defaultValue), firstRemainingAutomationEvent.startTime));
              }

              this._automationEvents = remainingAutomationEvents;
            }
          }
        }, {
          key: "getValue",
          value: function getValue(time) {
            if (this._automationEvents.length === 0) {
              return this._defaultValue;
            }

            var lastAutomationEvent = this._automationEvents[this._automationEvents.length - 1];

            var index = this._automationEvents.findIndex(function (automationEvent) {
              return getEventTime(automationEvent) > time;
            });

            var nextAutomationEvent = this._automationEvents[index];
            var currentAutomationEvent = getEventTime(lastAutomationEvent) <= time ? lastAutomationEvent : this._automationEvents[index - 1];

            if (currentAutomationEvent !== undefined && isSetTargetAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || nextAutomationEvent.insertTime > time)) {
              return getTargetValueAtTime(time, getValueOfAutomationEventAtIndexAtTime(this._automationEvents, index - 2, currentAutomationEvent.startTime, this._defaultValue), currentAutomationEvent);
            }

            if (currentAutomationEvent !== undefined && isSetValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {
              return currentAutomationEvent.value;
            }

            if (currentAutomationEvent !== undefined && isSetValueCurveAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent) || currentAutomationEvent.startTime + currentAutomationEvent.duration > time)) {
              if (time < currentAutomationEvent.startTime + currentAutomationEvent.duration) {
                return getValueCurveValueAtTime(time, currentAutomationEvent);
              }

              return currentAutomationEvent.values[currentAutomationEvent.values.length - 1];
            }

            if (currentAutomationEvent !== undefined && isAnyRampToValueAutomationEvent(currentAutomationEvent) && (nextAutomationEvent === undefined || !isAnyRampToValueAutomationEvent(nextAutomationEvent))) {
              return currentAutomationEvent.value;
            }

            if (nextAutomationEvent !== undefined && isExponentialRampToValueAutomationEvent(nextAutomationEvent)) {
              var _getEndTimeAndValueOf = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),
                  _getEndTimeAndValueOf2 = _slicedToArray(_getEndTimeAndValueOf, 2),
                  startTime = _getEndTimeAndValueOf2[0],
                  value = _getEndTimeAndValueOf2[1];

              return getExponentialRampValueAtTime(time, startTime, value, nextAutomationEvent);
            }

            if (nextAutomationEvent !== undefined && isLinearRampToValueAutomationEvent(nextAutomationEvent)) {
              var _getEndTimeAndValueOf3 = getEndTimeAndValueOfPreviousAutomationEvent(this._automationEvents, index - 1, currentAutomationEvent, nextAutomationEvent, this._defaultValue),
                  _getEndTimeAndValueOf4 = _slicedToArray(_getEndTimeAndValueOf3, 2),
                  _startTime = _getEndTimeAndValueOf4[0],
                  _value = _getEndTimeAndValueOf4[1];

              return getLinearRampValueAtTime(time, _startTime, _value, nextAutomationEvent);
            }

            return this._defaultValue;
          }
        }]);

        return AutomationEventList;
      }();

      var createCancelAndHoldAutomationEvent = function createCancelAndHoldAutomationEvent(cancelTime) {
        return {
          cancelTime: cancelTime,
          type: 'cancelAndHold'
        };
      };

      var createCancelScheduledValuesAutomationEvent = function createCancelScheduledValuesAutomationEvent(cancelTime) {
        return {
          cancelTime: cancelTime,
          type: 'cancelScheduledValues'
        };
      };

      var createExponentialRampToValueAutomationEvent = function createExponentialRampToValueAutomationEvent(value, endTime) {
        return {
          endTime: endTime,
          type: 'exponentialRampToValue',
          value: value
        };
      };

      var createLinearRampToValueAutomationEvent = function createLinearRampToValueAutomationEvent(value, endTime) {
        return {
          endTime: endTime,
          type: 'linearRampToValue',
          value: value
        };
      };

      var createSetTargetAutomationEvent = function createSetTargetAutomationEvent(target, startTime, timeConstant) {
        return {
          startTime: startTime,
          target: target,
          timeConstant: timeConstant,
          type: 'setTarget'
        };
      };

      exports.AutomationEventList = AutomationEventList;
      exports.createCancelAndHoldAutomationEvent = createCancelAndHoldAutomationEvent;
      exports.createCancelScheduledValuesAutomationEvent = createCancelScheduledValuesAutomationEvent;
      exports.createExponentialRampToValueAutomationEvent = createExponentialRampToValueAutomationEvent;
      exports.createLinearRampToValueAutomationEvent = createLinearRampToValueAutomationEvent;
      exports.createSetTargetAutomationEvent = createSetTargetAutomationEvent;
      exports.createSetValueAutomationEvent = createSetValueAutomationEvent;
      exports.createSetValueCurveAutomationEvent = createSetValueCurveAutomationEvent;
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
    });
    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/constants.js":
  /*!***************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/constants.js ***!
    \***************************************************************************/

  /*! exports provided: MOST_NEGATIVE_SINGLE_FLOAT, MOST_POSITIVE_SINGLE_FLOAT */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019ConstantsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MOST_NEGATIVE_SINGLE_FLOAT", function () {
      return MOST_NEGATIVE_SINGLE_FLOAT;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MOST_POSITIVE_SINGLE_FLOAT", function () {
      return MOST_POSITIVE_SINGLE_FLOAT;
    });

    var MOST_NEGATIVE_SINGLE_FLOAT = -3.4028234663852886e38;
    var MOST_POSITIVE_SINGLE_FLOAT = -MOST_NEGATIVE_SINGLE_FLOAT; //# sourceMappingURL=/build/es2019/constants.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js":
  /*!***************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js ***!
    \***************************************************************************************/

  /*! exports provided: createAbortError */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAbortErrorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAbortError", function () {
      return createAbortError;
    });

    var createAbortError = function createAbortError() {
      try {
        return new DOMException('', 'AbortError');
      } catch (err) {
        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.
        err.code = 20;
        err.name = 'AbortError';
        return err;
      }
    }; //# sourceMappingURL=/build/es2019/factories/abort-error.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js ***!
    \******************************************************************************************************/

  /*! exports provided: createAddAudioNodeConnections */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAddAudioNodeConnectionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAddAudioNodeConnections", function () {
      return createAddAudioNodeConnections;
    });

    var createAddAudioNodeConnections = function createAddAudioNodeConnections(audioNodeConnectionsStore) {
      return function (audioNode, audioNodeRenderer, nativeAudioNode) {
        var activeInputs = [];

        for (var i = 0; i < nativeAudioNode.numberOfInputs; i += 1) {
          activeInputs.push(new Set());
        }

        audioNodeConnectionsStore.set(audioNode, {
          activeInputs: activeInputs,
          outputs: new Set(),
          passiveInputs: new WeakMap(),
          renderer: audioNodeRenderer
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/add-audio-node-connections.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js ***!
    \*******************************************************************************************************/

  /*! exports provided: createAddAudioParamConnections */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAddAudioParamConnectionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAddAudioParamConnections", function () {
      return createAddAudioParamConnections;
    });

    var createAddAudioParamConnections = function createAddAudioParamConnections(audioParamConnectionsStore) {
      return function (audioParam, audioParamRenderer) {
        audioParamConnectionsStore.set(audioParam, {
          activeInputs: new Set(),
          passiveInputs: new WeakMap(),
          renderer: audioParamRenderer
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/add-audio-param-connections.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js ***!
    \****************************************************************************************************/

  /*! exports provided: createAddAudioWorkletModule */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAddAudioWorkletModuleJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAddAudioWorkletModule", function () {
      return createAddAudioWorkletModule;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _helpers_is_constructible__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/is-constructible */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js");
    /* harmony import */


    var _helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/split-import-statements */
    "./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js");

    var verifyParameterDescriptors = function verifyParameterDescriptors(parameterDescriptors) {
      if (parameterDescriptors !== undefined && !Array.isArray(parameterDescriptors)) {
        throw new TypeError('The parameterDescriptors property of given value for processorCtor is not an array.');
      }
    };

    var verifyProcessorCtor = function verifyProcessorCtor(processorCtor) {
      if (!Object(_helpers_is_constructible__WEBPACK_IMPORTED_MODULE_1__["isConstructible"])(processorCtor)) {
        throw new TypeError('The given value for processorCtor should be a constructor.');
      }

      if (processorCtor.prototype === null || typeof processorCtor.prototype !== 'object') {
        throw new TypeError('The given value for processorCtor should have a prototype.');
      }
    };

    var createAddAudioWorkletModule = function createAddAudioWorkletModule(createNotSupportedError, evaluateSource, exposeCurrentFrameAndCurrentTime, fetchSource, getBackupNativeContext, getNativeContext, ongoingRequests, resolvedRequests, window) {
      return function (context, moduleURL) {
        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
          credentials: 'omit'
        };
        var nativeContext = getNativeContext(context);
        var absoluteUrl = new URL(moduleURL, window.location.href).toString(); // Bug #59: Only Chrome & Opera do implement the audioWorklet property.

        if (nativeContext.audioWorklet !== undefined) {
          return fetchSource(moduleURL).then(function (source) {
            var _Object = Object(_helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_2__["splitImportStatements"])(source, absoluteUrl),
                _Object2 = _slicedToArray2(_Object, 2),
                importStatements = _Object2[0],
                sourceWithoutImportStatements = _Object2[1];
            /*
             * Bug #170: Chrome and Opera do call process() with an array with empty channelData for each input if no input is
             * connected.
             *
             * This is the unminified version of the code used below:
             *
             * ```js
             * `${ importStatements };
             * ((registerProcessor) => {${ sourceWithoutImportStatements }
             * })((name, processorCtor) => registerProcessor(name, class extends processorCtor {
             *
             *     process (inputs, outputs, parameters) {
             *         return super.process(
             *             (inputs.map((input) => input.some((channelData) => channelData.length === 0)) ? [ ] : input),
             *             outputs,
             *             parameters
             *         );
             *     }
             *
             * }))`
             * ```
             */


            var wrappedSource = "".concat(importStatements, ";(registerProcessor=>{").concat(sourceWithoutImportStatements, "\n})((n,p)=>registerProcessor(n,class extends p{process(i,o,p){return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}))"); // tslint:disable-line:max-line-length

            var blob = new Blob([wrappedSource], {
              type: 'application/javascript; charset=utf-8'
            });
            var url = URL.createObjectURL(blob);
            var backupNativeContext = getBackupNativeContext(nativeContext);
            var nativeContextOrBackupNativeContext = backupNativeContext !== null ? backupNativeContext : nativeContext;
            return nativeContextOrBackupNativeContext.audioWorklet.addModule(url, options).then(function () {
              return URL.revokeObjectURL(url);
            }) // @todo This could be written more elegantly when Promise.finally() becomes avalaible.
            ["catch"](function (err) {
              URL.revokeObjectURL(url);

              if (err.code === undefined || err.name === 'SyntaxError') {
                err.code = 12;
              }

              throw err;
            });
          });
        }

        var resolvedRequestsOfContext = resolvedRequests.get(context);

        if (resolvedRequestsOfContext !== undefined && resolvedRequestsOfContext.has(moduleURL)) {
          return Promise.resolve();
        }

        var ongoingRequestsOfContext = ongoingRequests.get(context);

        if (ongoingRequestsOfContext !== undefined) {
          var promiseOfOngoingRequest = ongoingRequestsOfContext.get(moduleURL);

          if (promiseOfOngoingRequest !== undefined) {
            return promiseOfOngoingRequest;
          }
        }

        var promise = fetchSource(moduleURL).then(function (source) {
          var _Object3 = Object(_helpers_split_import_statements__WEBPACK_IMPORTED_MODULE_2__["splitImportStatements"])(source, absoluteUrl),
              _Object4 = _slicedToArray2(_Object3, 2),
              importStatements = _Object4[0],
              sourceWithoutImportStatements = _Object4[1];
          /*
           * This is the unminified version of the code used below:
           *
           * ```js
           * ${ importStatements };
           * ((a, b) => {
           *     (a[b] = a[b] || [ ]).push(
           *         (AudioWorkletProcessor, global, registerProcessor, sampleRate, self, window) => {
           *             ${ sourceWithoutImportStatements }
           *         }
           *     );
           * })(window, '_AWGS');
           * ```
           */
          // tslint:disable-next-line:max-line-length


          var wrappedSource = "".concat(importStatements, ";((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{").concat(sourceWithoutImportStatements, "\n})})(window,'_AWGS')"); // @todo Evaluating the given source code is a possible security problem.

          return evaluateSource(wrappedSource);
        }).then(function () {
          var evaluateAudioWorkletGlobalScope = window._AWGS.pop();

          if (evaluateAudioWorkletGlobalScope === undefined) {
            throw new SyntaxError();
          }

          exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, function () {
            return evaluateAudioWorkletGlobalScope(function AudioWorkletProcessor() {
              _classCallCheck2(this, AudioWorkletProcessor);
            }, undefined, function (name, processorCtor) {
              if (name.trim() === '') {
                throw createNotSupportedError();
              }

              var nodeNameToProcessorConstructorMap = _globals__WEBPACK_IMPORTED_MODULE_0__["NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS"].get(nativeContext);

              if (nodeNameToProcessorConstructorMap !== undefined) {
                if (nodeNameToProcessorConstructorMap.has(name)) {
                  throw createNotSupportedError();
                }

                verifyProcessorCtor(processorCtor);
                verifyParameterDescriptors(processorCtor.parameterDescriptors);
                nodeNameToProcessorConstructorMap.set(name, processorCtor);
              } else {
                verifyProcessorCtor(processorCtor);
                verifyParameterDescriptors(processorCtor.parameterDescriptors);

                _globals__WEBPACK_IMPORTED_MODULE_0__["NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS"].set(nativeContext, new Map([[name, processorCtor]]));
              }
            }, nativeContext.sampleRate, undefined, undefined);
          });
        })["catch"](function (err) {
          if (err.code === undefined || err.name === 'SyntaxError') {
            err.code = 12;
          }

          throw err;
        });

        if (ongoingRequestsOfContext === undefined) {
          ongoingRequests.set(context, new Map([[moduleURL, promise]]));
        } else {
          ongoingRequestsOfContext.set(moduleURL, promise);
        }

        promise.then(function () {
          var rslvdRqstsFCntxt = resolvedRequests.get(context);

          if (rslvdRqstsFCntxt === undefined) {
            resolvedRequests.set(context, new Set([moduleURL]));
          } else {
            rslvdRqstsFCntxt.add(moduleURL);
          }
        })["catch"](function () {}) // tslint:disable-line:no-empty
        // @todo Use finally when it becomes available in all supported browsers.
        .then(function () {
          var ngngRqstsFCntxt = ongoingRequests.get(context);

          if (ngngRqstsFCntxt !== undefined) {
            ngngRqstsFCntxt["delete"](moduleURL);
          }
        });
        return promise;
      };
    }; //# sourceMappingURL=/build/es2019/factories/add-audio-worklet-module.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js ***!
    \*************************************************************************************************/

  /*! exports provided: createAddSilentConnection */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAddSilentConnectionJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAddSilentConnection", function () {
      return createAddSilentConnection;
    });

    var createAddSilentConnection = function createAddSilentConnection(createNativeGainNode) {
      return function (nativeContext, nativeAudioScheduledSourceNode) {
        var nativeGainNode = createNativeGainNode(nativeContext, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
          gain: 0
        });
        nativeAudioScheduledSourceNode.connect(nativeGainNode)
        /*
         * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is
         * used here to make sure to connect the right destination.
         */
        .connect(nativeGainNode.context.destination);

        var disconnect = function disconnect() {
          nativeAudioScheduledSourceNode.removeEventListener('ended', disconnect);
          nativeAudioScheduledSourceNode.disconnect(nativeGainNode);
          nativeGainNode.disconnect();
        };

        nativeAudioScheduledSourceNode.addEventListener('ended', disconnect);
      };
    }; //# sourceMappingURL=/build/es2019/factories/add-silent-connection.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js ***!
    \*************************************************************************************************************/

  /*! exports provided: createAddUnrenderedAudioWorkletNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAddUnrenderedAudioWorkletNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAddUnrenderedAudioWorkletNode", function () {
      return createAddUnrenderedAudioWorkletNode;
    });

    var createAddUnrenderedAudioWorkletNode = function createAddUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes) {
      return function (nativeContext, audioWorkletNode) {
        getUnrenderedAudioWorkletNodes(nativeContext).add(audioWorkletNode);
      };
    }; //# sourceMappingURL=/build/es2019/factories/add-unrendered-audio-worklet-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js ***!
    \*****************************************************************************************************/

  /*! exports provided: createAnalyserNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAnalyserNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAnalyserNodeConstructor", function () {
      return createAnalyserNodeConstructor;
    });

    var DEFAULT_OPTIONS = {
      channelCount: 2,
      channelCountMode: 'max',
      channelInterpretation: 'speakers',
      fftSize: 2048,
      maxDecibels: -30,
      minDecibels: -100,
      smoothingTimeConstant: 0.8
    };

    var createAnalyserNodeConstructor = function createAnalyserNodeConstructor(audionNodeConstructor, createAnalyserNodeRenderer, createIndexSizeError, createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audionNodeConstructo) {
        _inherits(AnalyserNode, _audionNodeConstructo);

        var _super = _createSuper(AnalyserNode);

        function AnalyserNode(context) {
          var _this;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, AnalyserNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeAnalyserNode = createNativeAnalyserNode(nativeContext, mergedOptions);
          var analyserNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createAnalyserNodeRenderer() : null;
          _this = _super.call(this, context, false, nativeAnalyserNode, analyserNodeRenderer);
          _this._nativeAnalyserNode = nativeAnalyserNode;
          return _this;
        }

        _createClass2(AnalyserNode, [{
          key: "getByteFrequencyData",
          value: function getByteFrequencyData(array) {
            this._nativeAnalyserNode.getByteFrequencyData(array);
          }
        }, {
          key: "getByteTimeDomainData",
          value: function getByteTimeDomainData(array) {
            this._nativeAnalyserNode.getByteTimeDomainData(array);
          }
        }, {
          key: "getFloatFrequencyData",
          value: function getFloatFrequencyData(array) {
            this._nativeAnalyserNode.getFloatFrequencyData(array);
          }
        }, {
          key: "getFloatTimeDomainData",
          value: function getFloatTimeDomainData(array) {
            this._nativeAnalyserNode.getFloatTimeDomainData(array);
          }
        }, {
          key: "fftSize",
          get: function get() {
            return this._nativeAnalyserNode.fftSize;
          },
          set: function set(value) {
            this._nativeAnalyserNode.fftSize = value;
          }
        }, {
          key: "frequencyBinCount",
          get: function get() {
            return this._nativeAnalyserNode.frequencyBinCount;
          }
        }, {
          key: "maxDecibels",
          get: function get() {
            return this._nativeAnalyserNode.maxDecibels;
          },
          set: function set(value) {
            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.
            var maxDecibels = this._nativeAnalyserNode.maxDecibels;
            this._nativeAnalyserNode.maxDecibels = value;

            if (!(value > this._nativeAnalyserNode.minDecibels)) {
              this._nativeAnalyserNode.maxDecibels = maxDecibels;
              throw createIndexSizeError();
            }
          }
        }, {
          key: "minDecibels",
          get: function get() {
            return this._nativeAnalyserNode.minDecibels;
          },
          set: function set(value) {
            // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.
            var minDecibels = this._nativeAnalyserNode.minDecibels;
            this._nativeAnalyserNode.minDecibels = value;

            if (!(this._nativeAnalyserNode.maxDecibels > value)) {
              this._nativeAnalyserNode.minDecibels = minDecibels;
              throw createIndexSizeError();
            }
          }
        }, {
          key: "smoothingTimeConstant",
          get: function get() {
            return this._nativeAnalyserNode.smoothingTimeConstant;
          },
          set: function set(value) {
            this._nativeAnalyserNode.smoothingTimeConstant = value;
          }
        }]);

        return AnalyserNode;
      }(audionNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/analyser-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js ***!
    \**********************************************************************************************************/

  /*! exports provided: createAnalyserNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAnalyserNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAnalyserNodeRendererFactory", function () {
      return createAnalyserNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createAnalyserNodeRendererFactory = function createAnalyserNodeRendererFactory(createNativeAnalyserNode, getNativeAudioNode, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeAnalyserNodes = new WeakMap();

        var createAnalyserNode = /*#__PURE__*/function () {
          var _ref2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(proxy, nativeOfflineAudioContext, trace) {
            var nativeAnalyserNode, nativeAnalyserNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    nativeAnalyserNode = getNativeAudioNode(proxy); // If the initially used nativeAnalyserNode was not constructed on the same OfflineAudioContext it needs to be created again.

                    nativeAnalyserNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__["isOwnedByContext"])(nativeAnalyserNode, nativeOfflineAudioContext);

                    if (!nativeAnalyserNodeIsOwnedByContext) {
                      options = {
                        channelCount: nativeAnalyserNode.channelCount,
                        channelCountMode: nativeAnalyserNode.channelCountMode,
                        channelInterpretation: nativeAnalyserNode.channelInterpretation,
                        fftSize: nativeAnalyserNode.fftSize,
                        maxDecibels: nativeAnalyserNode.maxDecibels,
                        minDecibels: nativeAnalyserNode.minDecibels,
                        smoothingTimeConstant: nativeAnalyserNode.smoothingTimeConstant
                      };
                      nativeAnalyserNode = createNativeAnalyserNode(nativeOfflineAudioContext, options);
                    }

                    renderedNativeAnalyserNodes.set(nativeOfflineAudioContext, nativeAnalyserNode);
                    _context.next = 6;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAnalyserNode, trace);

                  case 6:
                    return _context.abrupt("return", nativeAnalyserNode);

                  case 7:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));

          return function createAnalyserNode(_x, _x2, _x3) {
            return _ref2.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeAnalyserNode = renderedNativeAnalyserNodes.get(nativeOfflineAudioContext);

            if (renderedNativeAnalyserNode !== undefined) {
              return Promise.resolve(renderedNativeAnalyserNode);
            }

            return createAnalyserNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/analyser-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js ***!
    \****************************************************************************************************/

  /*! exports provided: createAudioBufferConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioBufferConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioBufferConstructor", function () {
      return createAudioBufferConstructor;
    });
    /* harmony import */


    var _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support */
    "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js");
    /* harmony import */


    var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/wrap-audio-buffer-get-channel-data-method */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js");

    var DEFAULT_OPTIONS = {
      numberOfChannels: 1
    };

    var createAudioBufferConstructor = function createAudioBufferConstructor(audioBufferStore, cacheTestResult, createNotSupportedError, nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, testNativeAudioBufferConstructorSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) {
      var nativeOfflineAudioContext = null;
      return /*#__PURE__*/function () {
        function AudioBuffer(options) {
          _classCallCheck2(this, AudioBuffer);

          if (nativeOfflineAudioContextConstructor === null) {
            throw new Error('Missing the native OfflineAudioContext constructor.');
          }

          var _DEFAULT_OPTIONS$opti = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options),
              length = _DEFAULT_OPTIONS$opti.length,
              numberOfChannels = _DEFAULT_OPTIONS$opti.numberOfChannels,
              sampleRate = _DEFAULT_OPTIONS$opti.sampleRate;

          if (nativeOfflineAudioContext === null) {
            nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
          }
          /*
           * Bug #99: Firefox does not throw a NotSupportedError when the numberOfChannels is zero. But it only does it when using the
           * factory function. But since Firefox also supports the constructor everything should be fine.
           */


          var audioBuffer = nativeAudioBufferConstructor !== null && cacheTestResult(testNativeAudioBufferConstructorSupport, testNativeAudioBufferConstructorSupport) ? new nativeAudioBufferConstructor({
            length: length,
            numberOfChannels: numberOfChannels,
            sampleRate: sampleRate
          }) : nativeOfflineAudioContext.createBuffer(numberOfChannels, length, sampleRate); // Bug #99: Safari does not throw an error when the numberOfChannels is zero.

          if (audioBuffer.numberOfChannels === 0) {
            throw createNotSupportedError();
          } // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
          // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.


          if (typeof audioBuffer.copyFromChannel !== 'function') {
            wrapAudioBufferCopyChannelMethods(audioBuffer);
            Object(_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__["wrapAudioBufferGetChannelDataMethod"])(audioBuffer); // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.
          } else if (!cacheTestResult(_helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__["testAudioBufferCopyChannelMethodsOutOfBoundsSupport"], function () {
            return Object(_helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_0__["testAudioBufferCopyChannelMethodsOutOfBoundsSupport"])(audioBuffer);
          })) {
            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
          }

          audioBufferStore.add(audioBuffer);
          /*
           * This does violate all good pratices but it is necessary to allow this AudioBuffer to be used with native
           * (Offline)AudioContexts.
           */

          return audioBuffer;
        }

        _createClass2(AudioBuffer, null, [{
          key: Symbol.hasInstance,
          value: function value(instance) {
            return instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === AudioBuffer.prototype || audioBufferStore.has(instance);
          }
        }]);

        return AudioBuffer;
      }();
    }; //# sourceMappingURL=/build/es2019/factories/audio-buffer-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js ***!
    \****************************************************************************************************************/

  /*! exports provided: createAudioBufferSourceNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioBufferSourceNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioBufferSourceNodeConstructor", function () {
      return createAudioBufferSourceNodeConstructor;
    });
    /* harmony import */


    var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../constants */
    "./node_modules/standardized-audio-context/build/es2019/constants.js");
    /* harmony import */


    var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/set-internal-state-to-active */
    "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
    /* harmony import */


    var _helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/set-internal-state-to-passive */
    "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");

    var DEFAULT_OPTIONS = {
      buffer: null,
      channelCount: 2,
      channelCountMode: 'max',
      channelInterpretation: 'speakers',
      // Bug #149: Safari does not yet support the detune AudioParam.
      loop: false,
      loopEnd: 0,
      loopStart: 0,
      playbackRate: 1
    };

    var createAudioBufferSourceNodeConstructor = function createAudioBufferSourceNodeConstructor(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, createInvalidStateError, createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) {
      return /*#__PURE__*/function (_audioNodeConstructor) {
        _inherits(AudioBufferSourceNode, _audioNodeConstructor);

        var _super2 = _createSuper(AudioBufferSourceNode);

        function AudioBufferSourceNode(context) {
          var _this2;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, AudioBufferSourceNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, mergedOptions);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var audioBufferSourceNodeRenderer = isOffline ? createAudioBufferSourceNodeRenderer() : null;
          _this2 = _super2.call(this, context, false, nativeAudioBufferSourceNode, audioBufferSourceNodeRenderer);
          _this2._audioBufferSourceNodeRenderer = audioBufferSourceNodeRenderer;
          _this2._isBufferNullified = false;
          _this2._isBufferSet = options.buffer !== null && options.buffer !== undefined;
          _this2._nativeAudioBufferSourceNode = nativeAudioBufferSourceNode;
          _this2._onended = null; // Bug #73: Edge & Safari do not export the correct values for maxValue and minValue.

          _this2._playbackRate = createAudioParam(_assertThisInitialized(_this2), isOffline, nativeAudioBufferSourceNode.playbackRate, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
          return _this2;
        }

        _createClass2(AudioBufferSourceNode, [{
          key: "start",
          value: function start() {
            var _this3 = this;

            var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
            var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            var duration = arguments.length > 2 ? arguments[2] : undefined;

            this._nativeAudioBufferSourceNode.start(when, offset, duration);

            if (this._audioBufferSourceNodeRenderer !== null) {
              this._audioBufferSourceNodeRenderer.start = duration === undefined ? [when, offset] : [when, offset, duration];
            } else {
              Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__["setInternalStateToActive"])(this);

              var resetInternalStateToPassive = function resetInternalStateToPassive() {
                _this3._nativeAudioBufferSourceNode.removeEventListener('ended', resetInternalStateToPassive); // @todo Determine a meaningful delay instead of just using one second.


                setTimeout(function () {
                  return Object(_helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_2__["setInternalStateToPassive"])(_this3);
                }, 1000);
              };

              this._nativeAudioBufferSourceNode.addEventListener('ended', resetInternalStateToPassive);
            }
          }
        }, {
          key: "stop",
          value: function stop() {
            var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            this._nativeAudioBufferSourceNode.stop(when);

            if (this._audioBufferSourceNodeRenderer !== null) {
              this._audioBufferSourceNodeRenderer.stop = when;
            }
          }
        }, {
          key: "buffer",
          get: function get() {
            if (this._isBufferNullified) {
              return null;
            }

            return this._nativeAudioBufferSourceNode.buffer;
          },
          set: function set(value) {
            // Bug #71: Edge does not allow to set the buffer to null.
            try {
              this._nativeAudioBufferSourceNode.buffer = value;
            } catch (err) {
              if (value !== null || err.code !== 17) {
                throw err;
              } // This will modify the buffer in place. Luckily that works in Edge and has the same effect as setting the buffer to null.


              if (this._nativeAudioBufferSourceNode.buffer !== null) {
                var buffer = this._nativeAudioBufferSourceNode.buffer;
                var numberOfChannels = buffer.numberOfChannels;

                for (var i = 0; i < numberOfChannels; i += 1) {
                  buffer.getChannelData(i).fill(0);
                }

                this._isBufferNullified = true;
              }
            } // Bug #72: Only Chrome, Edge & Opera do not allow to reassign the buffer yet.


            if (value !== null) {
              if (this._isBufferSet) {
                throw createInvalidStateError();
              }

              this._isBufferSet = true;
            }
          }
        }, {
          key: "loop",
          get: function get() {
            return this._nativeAudioBufferSourceNode.loop;
          },
          set: function set(value) {
            this._nativeAudioBufferSourceNode.loop = value;
          }
        }, {
          key: "loopEnd",
          get: function get() {
            return this._nativeAudioBufferSourceNode.loopEnd;
          },
          set: function set(value) {
            this._nativeAudioBufferSourceNode.loopEnd = value;
          }
        }, {
          key: "loopStart",
          get: function get() {
            return this._nativeAudioBufferSourceNode.loopStart;
          },
          set: function set(value) {
            this._nativeAudioBufferSourceNode.loopStart = value;
          }
        }, {
          key: "onended",
          get: function get() {
            return this._onended;
          },
          set: function set(value) {
            var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
            this._nativeAudioBufferSourceNode.onended = wrappedListener;
            var nativeOnEnded = this._nativeAudioBufferSourceNode.onended;
            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
          }
        }, {
          key: "playbackRate",
          get: function get() {
            return this._playbackRate;
          }
        }]);

        return AudioBufferSourceNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/audio-buffer-source-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js ***!
    \*********************************************************************************************************************/

  /*! exports provided: createAudioBufferSourceNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioBufferSourceNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioBufferSourceNodeRendererFactory", function () {
      return createAudioBufferSourceNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createAudioBufferSourceNodeRendererFactory = function createAudioBufferSourceNodeRendererFactory(connectAudioParam, createNativeAudioBufferSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeAudioBufferSourceNodes = new WeakMap();
        var start = null;
        var stop = null;

        var createAudioBufferSourceNode = /*#__PURE__*/function () {
          var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(proxy, nativeOfflineAudioContext, trace) {
            var nativeAudioBufferSourceNode, nativeAudioBufferSourceNodeIsOwnedByContext, options, _nativeAudioBufferSou;

            return regeneratorRuntime.wrap(function _callee2$(_context2) {
              while (1) {
                switch (_context2.prev = _context2.next) {
                  case 0:
                    nativeAudioBufferSourceNode = getNativeAudioNode(proxy);
                    /*
                     * If the initially used nativeAudioBufferSourceNode was not constructed on the same OfflineAudioContext it needs to be created
                     * again.
                     */

                    nativeAudioBufferSourceNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__["isOwnedByContext"])(nativeAudioBufferSourceNode, nativeOfflineAudioContext);

                    if (!nativeAudioBufferSourceNodeIsOwnedByContext) {
                      options = {
                        buffer: nativeAudioBufferSourceNode.buffer,
                        channelCount: nativeAudioBufferSourceNode.channelCount,
                        channelCountMode: nativeAudioBufferSourceNode.channelCountMode,
                        channelInterpretation: nativeAudioBufferSourceNode.channelInterpretation,
                        // Bug #149: Safari does not yet support the detune AudioParam.
                        loop: nativeAudioBufferSourceNode.loop,
                        loopEnd: nativeAudioBufferSourceNode.loopEnd,
                        loopStart: nativeAudioBufferSourceNode.loopStart,
                        playbackRate: nativeAudioBufferSourceNode.playbackRate.value
                      };
                      nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, options);

                      if (start !== null) {
                        (_nativeAudioBufferSou = nativeAudioBufferSourceNode).start.apply(_nativeAudioBufferSou, _toConsumableArray(start));
                      }

                      if (stop !== null) {
                        nativeAudioBufferSourceNode.stop(stop);
                      }
                    }

                    renderedNativeAudioBufferSourceNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode);

                    if (nativeAudioBufferSourceNodeIsOwnedByContext) {
                      _context2.next = 9;
                      break;
                    }

                    _context2.next = 7;
                    return renderAutomation(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);

                  case 7:
                    _context2.next = 11;
                    break;

                  case 9:
                    _context2.next = 11;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.playbackRate, nativeAudioBufferSourceNode.playbackRate, trace);

                  case 11:
                    _context2.next = 13;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioBufferSourceNode, trace);

                  case 13:
                    return _context2.abrupt("return", nativeAudioBufferSourceNode);

                  case 14:
                  case "end":
                    return _context2.stop();
                }
              }
            }, _callee2);
          }));

          return function createAudioBufferSourceNode(_x4, _x5, _x6) {
            return _ref3.apply(this, arguments);
          };
        }();

        return {
          set start(value) {
            start = value;
          },

          set stop(value) {
            stop = value;
          },

          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeAudioBufferSourceNode = renderedNativeAudioBufferSourceNodes.get(nativeOfflineAudioContext);

            if (renderedNativeAudioBufferSourceNode !== undefined) {
              return Promise.resolve(renderedNativeAudioBufferSourceNode);
            }

            return createAudioBufferSourceNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/audio-buffer-source-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js ***!
    \*****************************************************************************************************/

  /*! exports provided: createAudioContextConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioContextConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioContextConstructor", function () {
      return createAudioContextConstructor;
    });
    /* harmony import */


    var _helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-valid-latency-hint */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js");

    var createAudioContextConstructor = function createAudioContextConstructor(baseAudioContextConstructor, createInvalidStateError, createNotSupportedError, createUnknownError, mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor) {
      return /*#__PURE__*/function (_baseAudioContextCons) {
        _inherits(AudioContext, _baseAudioContextCons);

        var _super3 = _createSuper(AudioContext);

        function AudioContext() {
          var _this4;

          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          _classCallCheck2(this, AudioContext);

          if (nativeAudioContextConstructor === null) {
            throw new Error('Missing the native AudioContext constructor.');
          }

          var nativeAudioContext = new nativeAudioContextConstructor(options); // Bug #131 Safari returns null when there are four other AudioContexts running already.

          if (nativeAudioContext === null) {
            throw createUnknownError();
          } // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.


          if (!Object(_helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_0__["isValidLatencyHint"])(options.latencyHint)) {
            throw new TypeError("The provided value '".concat(options.latencyHint, "' is not a valid enum value of type AudioContextLatencyCategory."));
          } // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.


          if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {
            throw createNotSupportedError();
          }

          _this4 = _super3.call(this, nativeAudioContext, 2);
          var latencyHint = options.latencyHint;
          var sampleRate = nativeAudioContext.sampleRate; // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.

          _this4._baseLatency = typeof nativeAudioContext.baseLatency === 'number' ? nativeAudioContext.baseLatency : latencyHint === 'balanced' ? 512 / sampleRate : latencyHint === 'interactive' || latencyHint === undefined ? 256 / sampleRate : latencyHint === 'playback' ? 1024 / sampleRate :
          /*
           * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a
           * ScriptProcessorNode.
           */
          Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;
          _this4._nativeAudioContext = nativeAudioContext;
          _this4._state = null;
          /*
           * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually changes
           * to 'running'.
           */

          if (nativeAudioContext.state === 'running') {
            _this4._state = 'suspended';

            var revokeState = function revokeState() {
              if (_this4._state === 'suspended') {
                _this4._state = null;
              }

              nativeAudioContext.removeEventListener('statechange', revokeState);
            };

            nativeAudioContext.addEventListener('statechange', revokeState);
          }

          return _this4;
        }

        _createClass2(AudioContext, [{
          key: "close",
          value: function close() {
            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.
            if (this.state === 'closed') {
              return this._nativeAudioContext.close().then(function () {
                throw createInvalidStateError();
              });
            } // Bug #34: If the state was set to suspended before it should be revoked now.


            if (this._state === 'suspended') {
              this._state = null;
            }

            return this._nativeAudioContext.close();
            /*
             * Bug #50: Deleting the AudioGraph is currently not possible anymore.
             * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));
             */
          }
        }, {
          key: "createMediaElementSource",
          value: function createMediaElementSource(mediaElement) {
            return new mediaElementAudioSourceNodeConstructor(this, {
              mediaElement: mediaElement
            });
          }
        }, {
          key: "createMediaStreamDestination",
          value: function createMediaStreamDestination() {
            return new mediaStreamAudioDestinationNodeConstructor(this);
          }
        }, {
          key: "createMediaStreamSource",
          value: function createMediaStreamSource(mediaStream) {
            return new mediaStreamAudioSourceNodeConstructor(this, {
              mediaStream: mediaStream
            });
          }
        }, {
          key: "createMediaStreamTrackSource",
          value: function createMediaStreamTrackSource(mediaStreamTrack) {
            return new mediaStreamTrackAudioSourceNodeConstructor(this, {
              mediaStreamTrack: mediaStreamTrack
            });
          }
        }, {
          key: "resume",
          value: function resume() {
            var _this5 = this;

            if (this._state === 'suspended') {
              return new Promise(function (resolve, reject) {
                var resolvePromise = function resolvePromise() {
                  _this5._nativeAudioContext.removeEventListener('statechange', resolvePromise);

                  if (_this5._nativeAudioContext.state === 'running') {
                    resolve();
                  } else {
                    _this5.resume().then(resolve, reject);
                  }
                };

                _this5._nativeAudioContext.addEventListener('statechange', resolvePromise);
              });
            }

            return this._nativeAudioContext.resume()["catch"](function (err) {
              // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.
              // Bug #56: Safari invokes the catch handler but without an error.
              if (err === undefined || err.code === 15) {
                throw createInvalidStateError();
              }

              throw err;
            });
          }
        }, {
          key: "suspend",
          value: function suspend() {
            return this._nativeAudioContext.suspend()["catch"](function (err) {
              // Bug #56: Safari invokes the catch handler but without an error.
              if (err === undefined) {
                throw createInvalidStateError();
              }

              throw err;
            });
          }
        }, {
          key: "baseLatency",
          get: function get() {
            return this._baseLatency;
          }
        }, {
          key: "state",
          get: function get() {
            return this._state !== null ? this._state : this._nativeAudioContext.state;
          }
        }]);

        return AudioContext;
      }(baseAudioContextConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/audio-context-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js ***!
    \**************************************************************************************************************/

  /*! exports provided: createAudioDestinationNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioDestinationNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioDestinationNodeConstructor", function () {
      return createAudioDestinationNodeConstructor;
    });

    var createAudioDestinationNodeConstructor = function createAudioDestinationNodeConstructor(audioNodeConstructor, createAudioDestinationNodeRenderer, createIndexSizeError, createInvalidStateError, createNativeAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode) {
      return /*#__PURE__*/function (_audioNodeConstructor2) {
        _inherits(AudioDestinationNode, _audioNodeConstructor2);

        var _super4 = _createSuper(AudioDestinationNode);

        function AudioDestinationNode(context, channelCount) {
          var _this6;

          _classCallCheck2(this, AudioDestinationNode);

          var nativeContext = getNativeContext(context);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var nativeAudioDestinationNode = createNativeAudioDestinationNode(nativeContext, channelCount, isOffline);
          var audioDestinationNodeRenderer = isOffline ? createAudioDestinationNodeRenderer(renderInputsOfAudioNode) : null;
          _this6 = _super4.call(this, context, false, nativeAudioDestinationNode, audioDestinationNodeRenderer);
          _this6._isNodeOfNativeOfflineAudioContext = isOffline;
          _this6._nativeAudioDestinationNode = nativeAudioDestinationNode;
          return _this6;
        }

        _createClass2(AudioDestinationNode, [{
          key: "channelCount",
          get: function get() {
            return this._nativeAudioDestinationNode.channelCount;
          },
          set: function set(value) {
            // Bug #52: Chrome, Edge, Opera & Safari do not throw an exception at all.
            // Bug #54: Firefox does throw an IndexSizeError.
            if (this._isNodeOfNativeOfflineAudioContext) {
              throw createInvalidStateError();
            } // Bug #47: The AudioDestinationNode in Edge and Safari do not initialize the maxChannelCount property correctly.


            if (value > this._nativeAudioDestinationNode.maxChannelCount) {
              throw createIndexSizeError();
            }

            this._nativeAudioDestinationNode.channelCount = value;
          }
        }, {
          key: "channelCountMode",
          get: function get() {
            return this._nativeAudioDestinationNode.channelCountMode;
          },
          set: function set(value) {
            // Bug #53: No browser does throw an exception yet.
            if (this._isNodeOfNativeOfflineAudioContext) {
              throw createInvalidStateError();
            }

            this._nativeAudioDestinationNode.channelCountMode = value;
          }
        }, {
          key: "maxChannelCount",
          get: function get() {
            return this._nativeAudioDestinationNode.maxChannelCount;
          }
        }]);

        return AudioDestinationNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/audio-destination-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js ***!
    \*******************************************************************************************************************/

  /*! exports provided: createAudioDestinationNodeRenderer */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioDestinationNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioDestinationNodeRenderer", function () {
      return createAudioDestinationNodeRenderer;
    });

    var createAudioDestinationNodeRenderer = function createAudioDestinationNodeRenderer(renderInputsOfAudioNode) {
      var nativeAudioDestinationNodePromise = null;

      var createAudioDestinationNode = /*#__PURE__*/function () {
        var _ref4 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(proxy, nativeOfflineAudioContext, trace) {
          var nativeAudioDestinationNode;
          return regeneratorRuntime.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  nativeAudioDestinationNode = nativeOfflineAudioContext.destination;
                  _context3.next = 3;
                  return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioDestinationNode, trace);

                case 3:
                  return _context3.abrupt("return", nativeAudioDestinationNode);

                case 4:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3);
        }));

        return function createAudioDestinationNode(_x7, _x8, _x9) {
          return _ref4.apply(this, arguments);
        };
      }();

      return {
        render: function render(proxy, nativeOfflineAudioContext, trace) {
          if (nativeAudioDestinationNodePromise === null) {
            nativeAudioDestinationNodePromise = createAudioDestinationNode(proxy, nativeOfflineAudioContext, trace);
          }

          return nativeAudioDestinationNodePromise;
        }
      };
    }; //# sourceMappingURL=/build/es2019/factories/audio-destination-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js ***!
    \**************************************************************************************************/

  /*! exports provided: createAudioListenerFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioListenerFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioListenerFactory", function () {
      return createAudioListenerFactory;
    });
    /* harmony import */


    var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../constants */
    "./node_modules/standardized-audio-context/build/es2019/constants.js");

    var createAudioListenerFactory = function createAudioListenerFactory(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext) {
      return function (context, nativeContext) {
        var nativeListener = nativeContext.listener; // Bug #117: Only Chrome & Opera support the new interface already.

        var createFakeAudioParams = function createFakeAudioParams() {
          var channelMergerNode = createNativeChannelMergerNode(nativeContext, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'speakers',
            numberOfInputs: 9
          });
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 9, 0);

          var createFakeAudioParam = function createFakeAudioParam(input, value) {
            var constantSourceNode = createNativeConstantSourceNode(nativeContext, {
              channelCount: 1,
              channelCountMode: 'explicit',
              channelInterpretation: 'discrete',
              offset: value
            });
            constantSourceNode.connect(channelMergerNode, 0, input); // @todo This should be stopped when the context is closed.

            constantSourceNode.start();
            Object.defineProperty(constantSourceNode.offset, 'defaultValue', {
              get: function get() {
                return value;
              }
            });
            /*
             * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and
             * minValue for GainNodes.
             */

            return createAudioParam({
              context: context
            }, isOffline, constantSourceNode.offset, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
          };

          var lastOrientation = [0, 0, -1, 0, 1, 0];
          var lastPosition = [0, 0, 0];

          scriptProcessorNode.onaudioprocess = function (_ref5) {
            var inputBuffer = _ref5.inputBuffer;
            var orientation = [inputBuffer.getChannelData(0)[0], inputBuffer.getChannelData(1)[0], inputBuffer.getChannelData(2)[0], inputBuffer.getChannelData(3)[0], inputBuffer.getChannelData(4)[0], inputBuffer.getChannelData(5)[0]];

            if (orientation.some(function (value, index) {
              return value !== lastOrientation[index];
            })) {
              nativeListener.setOrientation.apply(nativeListener, orientation); // tslint:disable-line:deprecation

              lastOrientation = orientation;
            }

            var positon = [inputBuffer.getChannelData(6)[0], inputBuffer.getChannelData(7)[0], inputBuffer.getChannelData(8)[0]];

            if (positon.some(function (value, index) {
              return value !== lastPosition[index];
            })) {
              nativeListener.setPosition.apply(nativeListener, positon); // tslint:disable-line:deprecation

              lastPosition = positon;
            }
          };

          channelMergerNode.connect(scriptProcessorNode);
          return {
            forwardX: createFakeAudioParam(0, 0),
            forwardY: createFakeAudioParam(1, 0),
            forwardZ: createFakeAudioParam(2, -1),
            positionX: createFakeAudioParam(6, 0),
            positionY: createFakeAudioParam(7, 0),
            positionZ: createFakeAudioParam(8, 0),
            upX: createFakeAudioParam(3, 0),
            upY: createFakeAudioParam(4, 1),
            upZ: createFakeAudioParam(5, 0)
          };
        };

        var _ref6 = nativeListener.forwardX === undefined ? createFakeAudioParams() : nativeListener,
            forwardX = _ref6.forwardX,
            forwardY = _ref6.forwardY,
            forwardZ = _ref6.forwardZ,
            positionX = _ref6.positionX,
            positionY = _ref6.positionY,
            positionZ = _ref6.positionZ,
            upX = _ref6.upX,
            upY = _ref6.upY,
            upZ = _ref6.upZ;

        return {
          get forwardX() {
            return forwardX;
          },

          get forwardY() {
            return forwardY;
          },

          get forwardZ() {
            return forwardZ;
          },

          get positionX() {
            return positionX;
          },

          get positionY() {
            return positionY;
          },

          get positionZ() {
            return positionZ;
          },

          get upX() {
            return upX;
          },

          get upY() {
            return upY;
          },

          get upZ() {
            return upZ;
          }

        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/audio-listener-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js ***!
    \**************************************************************************************************/

  /*! exports provided: createAudioNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioNodeConstructor", function () {
      return createAudioNodeConstructor;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _guards_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../guards/audio-node */
    "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js");
    /* harmony import */


    var _guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../guards/audio-node-output-connection */
    "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js");
    /* harmony import */


    var _guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../guards/audio-worklet-node */
    "./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js");
    /* harmony import */


    var _helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../helpers/connect-native-audio-node-to-native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js");
    /* harmony import */


    var _helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../helpers/delete-event-listeners-of-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js");
    /* harmony import */


    var _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../helpers/disconnect-native-audio-node-from-native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js");
    /* harmony import */


    var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../helpers/get-audio-node-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js");
    /* harmony import */


    var _helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../helpers/get-audio-param-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js");
    /* harmony import */


    var _helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../helpers/get-event-listeners-of-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");
    /* harmony import */


    var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../helpers/get-native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js");
    /* harmony import */


    var _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ../helpers/get-native-audio-param */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js");
    /* harmony import */


    var _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ../helpers/get-value-for-key */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
    /* harmony import */


    var _helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ../helpers/insert-element-in-set */
    "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js");
    /* harmony import */


    var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ../helpers/is-active-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
    /* harmony import */


    var _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ../helpers/is-part-of-a-cycle */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js");
    /* harmony import */


    var _helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ../helpers/is-passive-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js");
    /* harmony import */


    var _helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ../helpers/pick-element-from-set */
    "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js");
    /* harmony import */


    var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ../helpers/set-internal-state-to-active */
    "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
    /* harmony import */


    var _helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ../helpers/set-internal-state-to-passive-when-necessary */
    "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js");
    /* harmony import */


    var _helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ../helpers/test-audio-node-disconnect-method-support */
    "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js");
    /* harmony import */


    var _helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ../helpers/visit-each-audio-node-once */
    "./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js");
    /* harmony import */


    var _helpers_wrap_audio_node_disconnect_method__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ../helpers/wrap-audio-node-disconnect-method */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js");

    var addActiveInputConnectionToAudioNode = function addActiveInputConnectionToAudioNode(activeInputs, source, _ref7, ignoreDuplicates) {
      var _ref8 = _slicedToArray2(_ref7, 3),
          output = _ref8[0],
          input = _ref8[1],
          eventListener = _ref8[2];

      Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_13__["insertElementInSet"])(activeInputs[input], [source, output, eventListener], function (activeInputConnection) {
        return activeInputConnection[0] === source && activeInputConnection[1] === output;
      }, ignoreDuplicates);
    };

    var addActiveInputConnectionToAudioParam = function addActiveInputConnectionToAudioParam(activeInputs, source, _ref9, ignoreDuplicates) {
      var _ref10 = _slicedToArray2(_ref9, 2),
          output = _ref10[0],
          eventListener = _ref10[1];

      Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_13__["insertElementInSet"])(activeInputs, [source, output, eventListener], function (activeInputConnection) {
        return activeInputConnection[0] === source && activeInputConnection[1] === output;
      }, ignoreDuplicates);
    };

    var deleteActiveInputConnectionToAudioNode = function deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input) {
      return Object(_helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_17__["pickElementFromSet"])(activeInputs[input], function (activeInputConnection) {
        return activeInputConnection[0] === source && activeInputConnection[1] === output;
      });
    };

    var deleteActiveInputConnectionToAudioParam = function deleteActiveInputConnectionToAudioParam(activeInputs, source, output) {
      return Object(_helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_17__["pickElementFromSet"])(activeInputs, function (activeInputConnection) {
        return activeInputConnection[0] === source && activeInputConnection[1] === output;
      });
    };

    var addPassiveInputConnectionToAudioNode = function addPassiveInputConnectionToAudioNode(passiveInputs, input, _ref11, ignoreDuplicates) {
      var _ref12 = _slicedToArray2(_ref11, 3),
          source = _ref12[0],
          output = _ref12[1],
          eventListener = _ref12[2];

      var passiveInputConnections = passiveInputs.get(source);

      if (passiveInputConnections === undefined) {
        passiveInputs.set(source, new Set([[output, input, eventListener]]));
      } else {
        Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_13__["insertElementInSet"])(passiveInputConnections, [output, input, eventListener], function (passiveInputConnection) {
          return passiveInputConnection[0] === output && passiveInputConnection[1] === input;
        }, ignoreDuplicates);
      }
    };

    var addPassiveInputConnectionToAudioParam = function addPassiveInputConnectionToAudioParam(passiveInputs, _ref13, ignoreDuplicates) {
      var _ref14 = _slicedToArray2(_ref13, 3),
          source = _ref14[0],
          output = _ref14[1],
          eventListener = _ref14[2];

      var passiveInputConnections = passiveInputs.get(source);

      if (passiveInputConnections === undefined) {
        passiveInputs.set(source, new Set([[output, eventListener]]));
      } else {
        Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_13__["insertElementInSet"])(passiveInputConnections, [output, eventListener], function (passiveInputConnection) {
          return passiveInputConnection[0] === output;
        }, ignoreDuplicates);
      }
    };

    var deletePassiveInputConnectionToAudioNode = function deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input) {
      var passiveInputConnections = Object(_helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_12__["getValueForKey"])(passiveInputs, source);
      var matchingConnection = Object(_helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_17__["pickElementFromSet"])(passiveInputConnections, function (passiveInputConnection) {
        return passiveInputConnection[0] === output && passiveInputConnection[1] === input;
      });

      if (passiveInputConnections.size === 0) {
        passiveInputs["delete"](source);
      }

      return matchingConnection;
    };

    var deletePassiveInputConnectionToAudioParam = function deletePassiveInputConnectionToAudioParam(passiveInputs, source, output) {
      var passiveInputConnections = Object(_helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_12__["getValueForKey"])(passiveInputs, source);
      var matchingConnection = Object(_helpers_pick_element_from_set__WEBPACK_IMPORTED_MODULE_17__["pickElementFromSet"])(passiveInputConnections, function (passiveInputConnection) {
        return passiveInputConnection[0] === output;
      });

      if (passiveInputConnections.size === 0) {
        passiveInputs["delete"](source);
      }

      return matchingConnection;
    };

    var addConnectionToAudioNodeOfAudioContext = function addConnectionToAudioNodeOfAudioContext(source, destination, output, input) {
      var _Object5 = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(destination),
          activeInputs = _Object5.activeInputs,
          passiveInputs = _Object5.passiveInputs;

      var _Object6 = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(source),
          outputs = _Object6.outputs;

      var eventListeners = Object(_helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_9__["getEventListenersOfAudioNode"])(source);

      var eventListener = function eventListener(isActive) {
        var nativeDestinationAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_10__["getNativeAudioNode"])(destination);
        var nativeSourceAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_10__["getNativeAudioNode"])(source);

        if (isActive) {
          var partialConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);
          addActiveInputConnectionToAudioNode(activeInputs, source, partialConnection, false);

          if (!Object(_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_15__["isPartOfACycle"])(source)) {
            Object(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_4__["connectNativeAudioNodeToNativeAudioNode"])(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);
          }

          if (Object(_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_16__["isPassiveAudioNode"])(destination)) {
            Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_18__["setInternalStateToActive"])(destination);
          }
        } else {
          var _partialConnection = deleteActiveInputConnectionToAudioNode(activeInputs, source, output, input);

          addPassiveInputConnectionToAudioNode(passiveInputs, input, _partialConnection, false);

          if (!Object(_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_15__["isPartOfACycle"])(source)) {
            Object(_helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_6__["disconnectNativeAudioNodeFromNativeAudioNode"])(nativeSourceAudioNode, nativeDestinationAudioNode, output, input);
          }

          if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_14__["isActiveAudioNode"])(destination)) {
            Object(_helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_19__["setInternalStateToPassiveWhenNecessary"])(destination, activeInputs);
          }
        }
      };

      if (Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_13__["insertElementInSet"])(outputs, [destination, output, input], function (outputConnection) {
        return outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input;
      }, true)) {
        eventListeners.add(eventListener);

        if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_14__["isActiveAudioNode"])(source)) {
          addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, eventListener], true);
        } else {
          addPassiveInputConnectionToAudioNode(passiveInputs, input, [source, output, eventListener], true);
        }

        return true;
      }

      return false;
    };

    var addConnectionToAudioNodeOfOfflineAudioContext = function addConnectionToAudioNodeOfOfflineAudioContext(source, destination, output, input) {
      var _Object7 = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(source),
          outputs = _Object7.outputs;

      if (Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_13__["insertElementInSet"])(outputs, [destination, output, input], function (outputConnection) {
        return outputConnection[0] === destination && outputConnection[1] === output && outputConnection[2] === input;
      }, true)) {
        var _Object8 = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(destination),
            activeInputs = _Object8.activeInputs;

        addActiveInputConnectionToAudioNode(activeInputs, source, [output, input, null], true);
        return true;
      }

      return false;
    };

    var addConnectionToAudioParamOfAudioContext = function addConnectionToAudioParamOfAudioContext(source, destination, output) {
      var _Object9 = Object(_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_8__["getAudioParamConnections"])(destination),
          activeInputs = _Object9.activeInputs,
          passiveInputs = _Object9.passiveInputs;

      var _Object10 = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(source),
          outputs = _Object10.outputs;

      var eventListeners = Object(_helpers_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_9__["getEventListenersOfAudioNode"])(source);

      var eventListener = function eventListener(isActive) {
        var nativeAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_10__["getNativeAudioNode"])(source);
        var nativeAudioParam = Object(_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_11__["getNativeAudioParam"])(destination);

        if (isActive) {
          var partialConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);
          addActiveInputConnectionToAudioParam(activeInputs, source, partialConnection, false);

          if (!Object(_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_15__["isPartOfACycle"])(source)) {
            nativeAudioNode.connect(nativeAudioParam, output);
          }
        } else {
          var _partialConnection2 = deleteActiveInputConnectionToAudioParam(activeInputs, source, output);

          addPassiveInputConnectionToAudioParam(passiveInputs, _partialConnection2, false);

          if (!Object(_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_15__["isPartOfACycle"])(source)) {
            nativeAudioNode.disconnect(nativeAudioParam, output);
          }
        }
      };

      if (Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_13__["insertElementInSet"])(outputs, [destination, output], function (outputConnection) {
        return outputConnection[0] === destination && outputConnection[1] === output;
      }, true)) {
        eventListeners.add(eventListener);

        if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_14__["isActiveAudioNode"])(source)) {
          addActiveInputConnectionToAudioParam(activeInputs, source, [output, eventListener], true);
        } else {
          addPassiveInputConnectionToAudioParam(passiveInputs, [source, output, eventListener], true);
        }

        return true;
      }

      return false;
    };

    var addConnectionToAudioParamOfOfflineAudioContext = function addConnectionToAudioParamOfOfflineAudioContext(source, destination, output) {
      var _Object11 = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(source),
          outputs = _Object11.outputs;

      if (Object(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_13__["insertElementInSet"])(outputs, [destination, output], function (outputConnection) {
        return outputConnection[0] === destination && outputConnection[1] === output;
      }, true)) {
        var _Object12 = Object(_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_8__["getAudioParamConnections"])(destination),
            activeInputs = _Object12.activeInputs;

        addActiveInputConnectionToAudioParam(activeInputs, source, [output, null], true);
        return true;
      }

      return false;
    };

    var deleteActiveInputConnection = function deleteActiveInputConnection(activeInputConnections, source, output) {
      var _iterator = _createForOfIteratorHelper(activeInputConnections),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var activeInputConnection = _step.value;

          if (activeInputConnection[0] === source && activeInputConnection[1] === output) {
            activeInputConnections["delete"](activeInputConnection);
            return activeInputConnection;
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return null;
    };

    var deleteInputConnectionOfAudioNode = function deleteInputConnectionOfAudioNode(source, destination, output, input) {
      var _Object13 = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(destination),
          activeInputs = _Object13.activeInputs,
          passiveInputs = _Object13.passiveInputs;

      var activeInputConnection = deleteActiveInputConnection(activeInputs[input], source, output);

      if (activeInputConnection === null) {
        var passiveInputConnection = deletePassiveInputConnectionToAudioNode(passiveInputs, source, output, input);
        return [passiveInputConnection[2], false];
      }

      return [activeInputConnection[2], true];
    };

    var deleteInputConnectionOfAudioParam = function deleteInputConnectionOfAudioParam(source, destination, output) {
      var _Object14 = Object(_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_8__["getAudioParamConnections"])(destination),
          activeInputs = _Object14.activeInputs,
          passiveInputs = _Object14.passiveInputs;

      var activeInputConnection = deleteActiveInputConnection(activeInputs, source, output);

      if (activeInputConnection === null) {
        var passiveInputConnection = deletePassiveInputConnectionToAudioParam(passiveInputs, source, output);
        return [passiveInputConnection[1], false];
      }

      return [activeInputConnection[2], true];
    };

    var deleteInputsOfAudioNode = function deleteInputsOfAudioNode(source, destination, output, input) {
      var _deleteInputConnectio = deleteInputConnectionOfAudioNode(source, destination, output, input),
          _deleteInputConnectio2 = _slicedToArray2(_deleteInputConnectio, 2),
          listener = _deleteInputConnectio2[0],
          isActive = _deleteInputConnectio2[1];

      if (listener !== null) {
        Object(_helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_5__["deleteEventListenerOfAudioNode"])(source, listener);

        if (isActive && !Object(_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_15__["isPartOfACycle"])(source)) {
          Object(_helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_6__["disconnectNativeAudioNodeFromNativeAudioNode"])(Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_10__["getNativeAudioNode"])(source), Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_10__["getNativeAudioNode"])(destination), output, input);
        }
      }

      if (Object(_helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_14__["isActiveAudioNode"])(destination)) {
        var _Object15 = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(destination),
            activeInputs = _Object15.activeInputs;

        Object(_helpers_set_internal_state_to_passive_when_necessary__WEBPACK_IMPORTED_MODULE_19__["setInternalStateToPassiveWhenNecessary"])(destination, activeInputs);
      }
    };

    var deleteInputsOfAudioParam = function deleteInputsOfAudioParam(source, destination, output) {
      var _deleteInputConnectio3 = deleteInputConnectionOfAudioParam(source, destination, output),
          _deleteInputConnectio4 = _slicedToArray2(_deleteInputConnectio3, 2),
          listener = _deleteInputConnectio4[0],
          isActive = _deleteInputConnectio4[1];

      if (listener !== null) {
        Object(_helpers_delete_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_5__["deleteEventListenerOfAudioNode"])(source, listener);

        if (isActive && !Object(_helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_15__["isPartOfACycle"])(source)) {
          Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_10__["getNativeAudioNode"])(source).disconnect(Object(_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_11__["getNativeAudioParam"])(destination), output);
        }
      }
    };

    var deleteAnyConnection = function deleteAnyConnection(source) {
      var audioNodeConnectionsOfSource = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(source);
      var destinations = [];

      var _iterator2 = _createForOfIteratorHelper(audioNodeConnectionsOfSource.outputs),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var outputConnection = _step2.value;

          if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__["isAudioNodeOutputConnection"])(outputConnection)) {
            deleteInputsOfAudioNode.apply(void 0, [source].concat(_toConsumableArray(outputConnection)));
          } else {
            deleteInputsOfAudioParam.apply(void 0, [source].concat(_toConsumableArray(outputConnection)));
          }

          destinations.push(outputConnection[0]);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      audioNodeConnectionsOfSource.outputs.clear();
      return destinations;
    };

    var deleteConnectionAtOutput = function deleteConnectionAtOutput(source, output) {
      var audioNodeConnectionsOfSource = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(source);
      var destinations = [];

      var _iterator3 = _createForOfIteratorHelper(audioNodeConnectionsOfSource.outputs),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var outputConnection = _step3.value;

          if (outputConnection[1] === output) {
            if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__["isAudioNodeOutputConnection"])(outputConnection)) {
              deleteInputsOfAudioNode.apply(void 0, [source].concat(_toConsumableArray(outputConnection)));
            } else {
              deleteInputsOfAudioParam.apply(void 0, [source].concat(_toConsumableArray(outputConnection)));
            }

            destinations.push(outputConnection[0]);
            audioNodeConnectionsOfSource.outputs["delete"](outputConnection);
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }

      return destinations;
    };

    var deleteConnectionToDestination = function deleteConnectionToDestination(source, destination, output, input) {
      var audioNodeConnectionsOfSource = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_7__["getAudioNodeConnections"])(source);
      return Array.from(audioNodeConnectionsOfSource.outputs).filter(function (outputConnection) {
        return outputConnection[0] === destination && (output === undefined || outputConnection[1] === output) && (input === undefined || outputConnection[2] === input);
      }).map(function (outputConnection) {
        if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_2__["isAudioNodeOutputConnection"])(outputConnection)) {
          deleteInputsOfAudioNode.apply(void 0, [source].concat(_toConsumableArray(outputConnection)));
        } else {
          deleteInputsOfAudioParam.apply(void 0, [source].concat(_toConsumableArray(outputConnection)));
        }

        audioNodeConnectionsOfSource.outputs["delete"](outputConnection);
        return outputConnection[0];
      });
    };

    var createAudioNodeConstructor = function createAudioNodeConstructor(addAudioNodeConnections, auxiliaryGainNodeStore, cacheTestResult, createIncrementCycleCounter, createIndexSizeError, createInvalidAccessError, createNotSupportedError, decrementCycleCounter, detectCycles, eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_eventTargetConstruct) {
        _inherits(AudioNode, _eventTargetConstruct);

        var _super5 = _createSuper(AudioNode);

        function AudioNode(context, isActive, nativeAudioNode, audioNodeRenderer) {
          var _this7;

          _classCallCheck2(this, AudioNode);

          _this7 = _super5.call(this, nativeAudioNode);
          _this7._context = context;
          _this7._nativeAudioNode = nativeAudioNode;
          var nativeContext = getNativeContext(context); // Bug #12: Safari does not support to disconnect a specific destination.

          if (isNativeAudioContext(nativeContext) && true !== cacheTestResult(_helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_20__["testAudioNodeDisconnectMethodSupport"], function () {
            return Object(_helpers_test_audio_node_disconnect_method_support__WEBPACK_IMPORTED_MODULE_20__["testAudioNodeDisconnectMethodSupport"])(nativeContext);
          })) {
            Object(_helpers_wrap_audio_node_disconnect_method__WEBPACK_IMPORTED_MODULE_22__["wrapAudioNodeDisconnectMethod"])(nativeAudioNode);
          }

          _globals__WEBPACK_IMPORTED_MODULE_0__["AUDIO_NODE_STORE"].set(_assertThisInitialized(_this7), nativeAudioNode);

          _globals__WEBPACK_IMPORTED_MODULE_0__["EVENT_LISTENERS"].set(_assertThisInitialized(_this7), new Set());

          if (isActive) {
            Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_18__["setInternalStateToActive"])(_assertThisInitialized(_this7));
          }

          addAudioNodeConnections(_assertThisInitialized(_this7), audioNodeRenderer, nativeAudioNode);
          return _this7;
        }

        _createClass2(AudioNode, [{
          key: "connect",
          value: function connect(destination) {
            var output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            var input = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

            // Bug #174: Safari does expose a wrong numberOfOutputs for MediaStreamAudioDestinationNodes.
            if (output < 0 || output >= this._nativeAudioNode.numberOfOutputs) {
              throw createIndexSizeError();
            }

            var nativeContext = getNativeContext(this._context);
            var isOffline = isNativeOfflineAudioContext(nativeContext);

            if (isNativeAudioNode(destination) || isNativeAudioParam(destination)) {
              throw createInvalidAccessError();
            }

            if (Object(_guards_audio_node__WEBPACK_IMPORTED_MODULE_1__["isAudioNode"])(destination)) {
              var nativeDestinationAudioNode = Object(_helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_10__["getNativeAudioNode"])(destination);

              try {
                var connection = Object(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_4__["connectNativeAudioNodeToNativeAudioNode"])(this._nativeAudioNode, nativeDestinationAudioNode, output, input);

                if (isOffline || Object(_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_16__["isPassiveAudioNode"])(this)) {
                  var _this$_nativeAudioNod;

                  (_this$_nativeAudioNod = this._nativeAudioNode).disconnect.apply(_this$_nativeAudioNod, _toConsumableArray(connection));
                } else if (Object(_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_16__["isPassiveAudioNode"])(destination)) {
                  Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_18__["setInternalStateToActive"])(destination);
                } // An AudioWorklet needs a connection because it otherwise may truncate the input array.
                // @todo Count the number of connections which depend on this auxiliary GainNode to know when it can be removed again.


                if (Object(_guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_3__["isAudioWorkletNode"])(destination)) {
                  var auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeDestinationAudioNode);

                  if (auxiliaryGainNodes === undefined) {
                    var nativeGainNode = nativeContext.createGain();
                    nativeGainNode.connect(connection[0], 0, connection[2]);
                    auxiliaryGainNodeStore.set(nativeDestinationAudioNode, new Map([[input, nativeGainNode]]));
                  } else if (auxiliaryGainNodes.get(input) === undefined) {
                    var _nativeGainNode = nativeContext.createGain();

                    _nativeGainNode.connect(connection[0], 0, connection[2]);

                    auxiliaryGainNodes.set(input, _nativeGainNode);
                  }
                }
              } catch (err) {
                // Bug #41: Only Chrome, Firefox and Opera throw the correct exception by now.
                if (err.code === 12) {
                  throw createInvalidAccessError();
                }

                throw err;
              }

              var isNewConnectionToAudioNode = isOffline ? addConnectionToAudioNodeOfOfflineAudioContext(this, destination, output, input) : addConnectionToAudioNodeOfAudioContext(this, destination, output, input); // Bug #164: Only Firefox detects cycles so far.

              if (isNewConnectionToAudioNode) {
                var cycles = detectCycles([this], destination);
                Object(_helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_21__["visitEachAudioNodeOnce"])(cycles, createIncrementCycleCounter(isOffline));
              }

              return destination;
            }

            var nativeAudioParam = Object(_helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_11__["getNativeAudioParam"])(destination);
            /*
             * Bug #147 & #153: Safari does not support to connect an input signal to the playbackRate AudioParam of an
             * AudioBufferSourceNode. This can't be easily detected and that's why the outdated name property is used here to identify
             * Safari.
             */

            if (nativeAudioParam.name === 'playbackRate') {
              throw createNotSupportedError();
            }

            try {
              this._nativeAudioNode.connect(nativeAudioParam, output);

              if (isOffline || Object(_helpers_is_passive_audio_node__WEBPACK_IMPORTED_MODULE_16__["isPassiveAudioNode"])(this)) {
                this._nativeAudioNode.disconnect(nativeAudioParam, output);
              }
            } catch (err) {
              // Bug #58: Only Firefox does throw an InvalidStateError yet.
              if (err.code === 12) {
                throw createInvalidAccessError();
              }

              throw err;
            }

            var isNewConnectionToAudioParam = isOffline ? addConnectionToAudioParamOfOfflineAudioContext(this, destination, output) : addConnectionToAudioParamOfAudioContext(this, destination, output); // Bug #164: Only Firefox detects cycles so far.

            if (isNewConnectionToAudioParam) {
              var _cycles = detectCycles([this], destination);

              Object(_helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_21__["visitEachAudioNodeOnce"])(_cycles, createIncrementCycleCounter(isOffline));
            }
          }
        }, {
          key: "disconnect",
          value: function disconnect(destinationOrOutput, output, input) {
            var destinations;

            if (destinationOrOutput === undefined) {
              destinations = deleteAnyConnection(this);
            } else if (typeof destinationOrOutput === 'number') {
              if (destinationOrOutput < 0 || destinationOrOutput >= this.numberOfOutputs) {
                throw createIndexSizeError();
              }

              destinations = deleteConnectionAtOutput(this, destinationOrOutput);
            } else {
              if (output !== undefined && (output < 0 || output >= this.numberOfOutputs)) {
                throw createIndexSizeError();
              }

              if (Object(_guards_audio_node__WEBPACK_IMPORTED_MODULE_1__["isAudioNode"])(destinationOrOutput) && input !== undefined && (input < 0 || input >= destinationOrOutput.numberOfInputs)) {
                throw createIndexSizeError();
              }

              destinations = deleteConnectionToDestination(this, destinationOrOutput, output, input);

              if (destinations.length === 0) {
                throw createInvalidAccessError();
              }
            } // Bug #164: Only Firefox detects cycles so far.


            var _iterator4 = _createForOfIteratorHelper(destinations),
                _step4;

            try {
              for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
                var destination = _step4.value;
                var cycles = detectCycles([this], destination);
                Object(_helpers_visit_each_audio_node_once__WEBPACK_IMPORTED_MODULE_21__["visitEachAudioNodeOnce"])(cycles, decrementCycleCounter);
              }
            } catch (err) {
              _iterator4.e(err);
            } finally {
              _iterator4.f();
            }
          }
        }, {
          key: "channelCount",
          get: function get() {
            return this._nativeAudioNode.channelCount;
          },
          set: function set(value) {
            this._nativeAudioNode.channelCount = value;
          }
        }, {
          key: "channelCountMode",
          get: function get() {
            return this._nativeAudioNode.channelCountMode;
          },
          set: function set(value) {
            this._nativeAudioNode.channelCountMode = value;
          }
        }, {
          key: "channelInterpretation",
          get: function get() {
            return this._nativeAudioNode.channelInterpretation;
          },
          set: function set(value) {
            this._nativeAudioNode.channelInterpretation = value;
          }
        }, {
          key: "context",
          get: function get() {
            return this._context;
          }
        }, {
          key: "numberOfInputs",
          get: function get() {
            return this._nativeAudioNode.numberOfInputs;
          }
        }, {
          key: "numberOfOutputs",
          get: function get() {
            return this._nativeAudioNode.numberOfOutputs;
          }
        }]);

        return AudioNode;
      }(eventTargetConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/audio-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js ***!
    \***********************************************************************************************/

  /*! exports provided: createAudioParamFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioParamFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioParamFactory", function () {
      return createAudioParamFactory;
    });
    /* harmony import */


    var automation_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! automation-events */
    "./node_modules/automation-events/build/es5/bundle.js");
    /* harmony import */


    var automation_events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(automation_events__WEBPACK_IMPORTED_MODULE_0__);

    var createAudioParamFactory = function createAudioParamFactory(addAudioParamConnections, audioParamAudioNodeStore, audioParamStore, createAudioParamRenderer, createCancelAndHoldAutomationEvent, createCancelScheduledValuesAutomationEvent, createExponentialRampToValueAutomationEvent, createLinearRampToValueAutomationEvent, createSetTargetAutomationEvent, createSetValueAutomationEvent, createSetValueCurveAutomationEvent, nativeAudioContextConstructor) {
      return function (audioNode, isAudioParamOfOfflineAudioContext, nativeAudioParam) {
        var maxValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
        var minValue = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;
        var automationEventList = new automation_events__WEBPACK_IMPORTED_MODULE_0__["AutomationEventList"](nativeAudioParam.defaultValue);
        var audioParamRenderer = isAudioParamOfOfflineAudioContext ? createAudioParamRenderer(automationEventList) : null;
        var audioParam = {
          get defaultValue() {
            return nativeAudioParam.defaultValue;
          },

          get maxValue() {
            return maxValue === null ? nativeAudioParam.maxValue : maxValue;
          },

          get minValue() {
            return minValue === null ? nativeAudioParam.minValue : minValue;
          },

          get value() {
            return nativeAudioParam.value;
          },

          set value(value) {
            nativeAudioParam.value = value; // Bug #98: Edge, Firefox & Safari do not yet treat the value setter like a call to setValueAtTime().

            audioParam.setValueAtTime(value, audioNode.context.currentTime);
          },

          cancelAndHoldAtTime: function cancelAndHoldAtTime(cancelTime) {
            // Bug #28: Edge, Firefox & Safari do not yet implement cancelAndHoldAtTime().
            if (typeof nativeAudioParam.cancelAndHoldAtTime === 'function') {
              if (audioParamRenderer === null) {
                automationEventList.flush(audioNode.context.currentTime);
              }

              automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));
              nativeAudioParam.cancelAndHoldAtTime(cancelTime);
            } else {
              var previousLastEvent = Array.from(automationEventList).pop();

              if (audioParamRenderer === null) {
                automationEventList.flush(audioNode.context.currentTime);
              }

              automationEventList.add(createCancelAndHoldAutomationEvent(cancelTime));
              var currentLastEvent = Array.from(automationEventList).pop();
              nativeAudioParam.cancelScheduledValues(cancelTime);

              if (previousLastEvent !== currentLastEvent && currentLastEvent !== undefined) {
                if (currentLastEvent.type === 'exponentialRampToValue') {
                  nativeAudioParam.exponentialRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);
                } else if (currentLastEvent.type === 'linearRampToValue') {
                  nativeAudioParam.linearRampToValueAtTime(currentLastEvent.value, currentLastEvent.endTime);
                } else if (currentLastEvent.type === 'setValue') {
                  nativeAudioParam.setValueAtTime(currentLastEvent.value, currentLastEvent.startTime);
                } else if (currentLastEvent.type === 'setValueCurve') {
                  nativeAudioParam.setValueCurveAtTime(currentLastEvent.values, currentLastEvent.startTime, currentLastEvent.duration);
                }
              }
            }

            return audioParam;
          },
          cancelScheduledValues: function cancelScheduledValues(cancelTime) {
            if (audioParamRenderer === null) {
              automationEventList.flush(audioNode.context.currentTime);
            }

            automationEventList.add(createCancelScheduledValuesAutomationEvent(cancelTime));
            nativeAudioParam.cancelScheduledValues(cancelTime);
            return audioParam;
          },
          exponentialRampToValueAtTime: function exponentialRampToValueAtTime(value, endTime) {
            if (audioParamRenderer === null) {
              automationEventList.flush(audioNode.context.currentTime);
            }

            automationEventList.add(createExponentialRampToValueAutomationEvent(value, endTime));
            nativeAudioParam.exponentialRampToValueAtTime(value, endTime);
            return audioParam;
          },
          linearRampToValueAtTime: function linearRampToValueAtTime(value, endTime) {
            if (audioParamRenderer === null) {
              automationEventList.flush(audioNode.context.currentTime);
            }

            automationEventList.add(createLinearRampToValueAutomationEvent(value, endTime));
            nativeAudioParam.linearRampToValueAtTime(value, endTime);
            return audioParam;
          },
          setTargetAtTime: function setTargetAtTime(target, startTime, timeConstant) {
            if (audioParamRenderer === null) {
              automationEventList.flush(audioNode.context.currentTime);
            }

            automationEventList.add(createSetTargetAutomationEvent(target, startTime, timeConstant));
            nativeAudioParam.setTargetAtTime(target, startTime, timeConstant);
            return audioParam;
          },
          setValueAtTime: function setValueAtTime(value, startTime) {
            if (audioParamRenderer === null) {
              automationEventList.flush(audioNode.context.currentTime);
            }

            automationEventList.add(createSetValueAutomationEvent(value, startTime));
            nativeAudioParam.setValueAtTime(value, startTime);
            return audioParam;
          },
          setValueCurveAtTime: function setValueCurveAtTime(values, startTime, duration) {
            /*
             * Bug #152: Safari does not correctly interpolate the values of the curve.
             * @todo Unfortunately there is no way to test for this behavior in synchronous fashion which is why testing for the
             * existence of the webkitAudioContext is used as a workaround here.
             */
            if (nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name === 'webkitAudioContext') {
              var endTime = startTime + duration;
              var sampleRate = audioNode.context.sampleRate;
              var firstSample = Math.ceil(startTime * sampleRate);
              var lastSample = Math.floor(endTime * sampleRate);
              var numberOfInterpolatedValues = lastSample - firstSample;
              var interpolatedValues = new Float32Array(numberOfInterpolatedValues);

              for (var i = 0; i < numberOfInterpolatedValues; i += 1) {
                var theoreticIndex = (values.length - 1) / duration * ((firstSample + i) / sampleRate - startTime);
                var lowerIndex = Math.floor(theoreticIndex);
                var upperIndex = Math.ceil(theoreticIndex);
                interpolatedValues[i] = lowerIndex === upperIndex ? values[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * values[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * values[upperIndex];
              }

              if (audioParamRenderer === null) {
                automationEventList.flush(audioNode.context.currentTime);
              }

              automationEventList.add(createSetValueCurveAutomationEvent(interpolatedValues, startTime, duration));
              nativeAudioParam.setValueCurveAtTime(interpolatedValues, startTime, duration);
              var timeOfLastSample = lastSample / sampleRate;

              if (timeOfLastSample < endTime) {
                audioParam.setValueAtTime(interpolatedValues[interpolatedValues.length - 1], timeOfLastSample);
              }

              audioParam.setValueAtTime(values[values.length - 1], endTime);
            } else {
              if (audioParamRenderer === null) {
                automationEventList.flush(audioNode.context.currentTime);
              }

              automationEventList.add(createSetValueCurveAutomationEvent(values, startTime, duration));
              nativeAudioParam.setValueCurveAtTime(values, startTime, duration);
            }

            return audioParam;
          }
        };
        audioParamStore.set(audioParam, nativeAudioParam);
        audioParamAudioNodeStore.set(audioParam, audioNode);
        addAudioParamConnections(audioParam, audioParamRenderer);
        return audioParam;
      };
    }; //# sourceMappingURL=/build/es2019/factories/audio-param-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js ***!
    \************************************************************************************************/

  /*! exports provided: createAudioParamRenderer */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioParamRendererJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioParamRenderer", function () {
      return createAudioParamRenderer;
    });

    var createAudioParamRenderer = function createAudioParamRenderer(automationEventList) {
      return {
        replay: function replay(audioParam) {
          var _iterator5 = _createForOfIteratorHelper(automationEventList),
              _step5;

          try {
            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
              var automationEvent = _step5.value;

              if (automationEvent.type === 'exponentialRampToValue') {
                var endTime = automationEvent.endTime,
                    value = automationEvent.value;
                audioParam.exponentialRampToValueAtTime(value, endTime);
              } else if (automationEvent.type === 'linearRampToValue') {
                var _endTime = automationEvent.endTime,
                    _value2 = automationEvent.value;
                audioParam.linearRampToValueAtTime(_value2, _endTime);
              } else if (automationEvent.type === 'setTarget') {
                var startTime = automationEvent.startTime,
                    target = automationEvent.target,
                    timeConstant = automationEvent.timeConstant;
                audioParam.setTargetAtTime(target, startTime, timeConstant);
              } else if (automationEvent.type === 'setValue') {
                var _startTime2 = automationEvent.startTime,
                    _value3 = automationEvent.value;
                audioParam.setValueAtTime(_value3, _startTime2);
              } else if (automationEvent.type === 'setValueCurve') {
                var duration = automationEvent.duration,
                    _startTime3 = automationEvent.startTime,
                    values = automationEvent.values;
                audioParam.setValueCurveAtTime(values, _startTime3, duration);
              } else {
                throw new Error("Can't apply an unknown automation.");
              }
            }
          } catch (err) {
            _iterator5.e(err);
          } finally {
            _iterator5.f();
          }
        }
      };
    }; //# sourceMappingURL=/build/es2019/factories/audio-param-renderer.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js ***!
    \**********************************************************************************************************/

  /*! exports provided: createAudioWorkletNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioWorkletNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioWorkletNodeConstructor", function () {
      return createAudioWorkletNodeConstructor;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _read_only_map__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../read-only-map */
    "./node_modules/standardized-audio-context/build/es2019/read-only-map.js");

    var DEFAULT_OPTIONS = {
      channelCount: 2,
      // Bug #61: The channelCountMode should be 'max' according to the spec but is set to 'explicit' to achieve consistent behavior.
      channelCountMode: 'explicit',
      channelInterpretation: 'speakers',
      numberOfInputs: 1,
      numberOfOutputs: 1,
      outputChannelCount: undefined,
      parameterData: {},
      processorOptions: {}
    };

    var createChannelCount = function createChannelCount(length) {
      var channelCount = [];

      for (var i = 0; i < length; i += 1) {
        channelCount.push(1);
      }

      return channelCount;
    };

    var sanitizedOptions = function sanitizedOptions(options) {
      return _objectSpread(_objectSpread({}, options), {}, {
        outputChannelCount: options.outputChannelCount !== undefined ? options.outputChannelCount : options.numberOfInputs === 1 && options.numberOfOutputs === 1 ?
        /*
         * Bug #61: This should be the computedNumberOfChannels, but unfortunately that is almost impossible to fake. That's why
         * the channelCountMode is required to be 'explicit' as long as there is not a native implementation in every browser. That
         * makes sure the computedNumberOfChannels is equivilant to the channelCount which makes it much easier to compute.
         */
        [options.channelCount] : createChannelCount(options.numberOfOutputs)
      });
    };

    var createAudioWorkletNodeConstructor = function createAudioWorkletNodeConstructor(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, wrapEventListener) {
      return /*#__PURE__*/function (_audioNodeConstructor3) {
        _inherits(AudioWorkletNode, _audioNodeConstructor3);

        var _super6 = _createSuper(AudioWorkletNode);

        function AudioWorkletNode(context, name) {
          var _this8;

          var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_OPTIONS;

          _classCallCheck2(this, AudioWorkletNode);

          var nativeContext = getNativeContext(context);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var mergedOptions = sanitizedOptions(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options));

          var nodeNameToProcessorConstructorMap = _globals__WEBPACK_IMPORTED_MODULE_0__["NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS"].get(nativeContext);

          var processorConstructor = nodeNameToProcessorConstructorMap === undefined ? undefined : nodeNameToProcessorConstructorMap.get(name);
          var nativeAudioWorkletNode = createNativeAudioWorkletNode(nativeContext, isOffline ? null : context.baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, mergedOptions);
          var audioWorkletNodeRenderer = isOffline ? createAudioWorkletNodeRenderer(name, mergedOptions, processorConstructor) : null;
          /*
           * @todo Add a mechanism to switch an AudioWorkletNode to passive once the process() function of the AudioWorkletProcessor
           * returns false.
           */

          _this8 = _super6.call(this, context, true, nativeAudioWorkletNode, audioWorkletNodeRenderer);
          var parameters = [];
          nativeAudioWorkletNode.parameters.forEach(function (nativeAudioParam, nm) {
            var audioParam = createAudioParam(_assertThisInitialized(_this8), isOffline, nativeAudioParam);
            parameters.push([nm, audioParam]);
          });
          _this8._nativeAudioWorkletNode = nativeAudioWorkletNode;
          _this8._onprocessorerror = null;
          _this8._parameters = new _read_only_map__WEBPACK_IMPORTED_MODULE_1__["ReadOnlyMap"](parameters);
          /*
           * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to
           * the destination.
           */

          if (isOffline) {
            addUnrenderedAudioWorkletNode(nativeContext, _assertThisInitialized(_this8));
          }

          return _this8;
        }

        _createClass2(AudioWorkletNode, [{
          key: "onprocessorerror",
          get: function get() {
            return this._onprocessorerror;
          },
          set: function set(value) {
            var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
            this._nativeAudioWorkletNode.onprocessorerror = wrappedListener;
            var nativeOnProcessorError = this._nativeAudioWorkletNode.onprocessorerror;
            this._onprocessorerror = nativeOnProcessorError !== null && nativeOnProcessorError === wrappedListener ? value : nativeOnProcessorError;
          }
        }, {
          key: "parameters",
          get: function get() {
            if (this._parameters === null) {
              // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
              return this._nativeAudioWorkletNode.parameters;
            }

            return this._parameters;
          }
        }, {
          key: "port",
          get: function get() {
            return this._nativeAudioWorkletNode.port;
          }
        }]);

        return AudioWorkletNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/audio-worklet-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js ***!
    \***************************************************************************************************************/

  /*! exports provided: createAudioWorkletNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesAudioWorkletNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioWorkletNodeRendererFactory", function () {
      return createAudioWorkletNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/copy-from-channel */
    "./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js");
    /* harmony import */


    var _helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/copy-to-channel */
    "./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js");
    /* harmony import */


    var _helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/create-nested-arrays */
    "./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js");
    /* harmony import */


    var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../helpers/get-audio-node-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js");
    /* harmony import */


    var _helpers_get_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../helpers/get-audio-worklet-processor */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js");
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var processBuffer = /*#__PURE__*/function () {
      var _ref15 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(proxy, renderedBuffer, nativeOfflineAudioContext, options, processorConstructor, exposeCurrentFrameAndCurrentTime) {
        var length, numberOfInputChannels, numberOfOutputChannels, processedBuffer, audioNodeConnections, audioWorkletProcessor, inputs, outputs, parameters, _loop, i, _ret;

        return regeneratorRuntime.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                // Ceil the length to the next full render quantum.
                // Bug #17: Safari does not yet expose the length.
                length = renderedBuffer === null ? Math.ceil(proxy.context.length / 128) * 128 : renderedBuffer.length;
                numberOfInputChannels = options.channelCount * options.numberOfInputs;
                numberOfOutputChannels = options.outputChannelCount.reduce(function (sum, value) {
                  return sum + value;
                }, 0);
                processedBuffer = numberOfOutputChannels === 0 ? null : nativeOfflineAudioContext.createBuffer(numberOfOutputChannels, length, nativeOfflineAudioContext.sampleRate);

                if (!(processorConstructor === undefined)) {
                  _context4.next = 6;
                  break;
                }

                throw new Error('Missing the processor constructor.');

              case 6:
                audioNodeConnections = Object(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_3__["getAudioNodeConnections"])(proxy);
                _context4.next = 9;
                return Object(_helpers_get_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_4__["getAudioWorkletProcessor"])(nativeOfflineAudioContext, proxy);

              case 9:
                audioWorkletProcessor = _context4.sent;
                inputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_2__["createNestedArrays"])(options.numberOfInputs, options.channelCount);
                outputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_2__["createNestedArrays"])(options.numberOfOutputs, options.outputChannelCount);
                parameters = Array.from(proxy.parameters.keys()).reduce(function (prmtrs, name) {
                  return _objectSpread(_objectSpread({}, prmtrs), {}, _defineProperty({}, name, new Float32Array(128)));
                }, {});

                _loop = function _loop(i) {
                  if (options.numberOfInputs > 0 && renderedBuffer !== null) {
                    for (var j = 0; j < options.numberOfInputs; j += 1) {
                      for (var k = 0; k < options.channelCount; k += 1) {
                        Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_0__["copyFromChannel"])(renderedBuffer, inputs[j], k, k, i);
                      }
                    }
                  }

                  if (processorConstructor.parameterDescriptors !== undefined && renderedBuffer !== null) {
                    processorConstructor.parameterDescriptors.forEach(function (_ref16, index) {
                      var name = _ref16.name;
                      Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_0__["copyFromChannel"])(renderedBuffer, parameters, name, numberOfInputChannels + index, i);
                    });
                  }

                  for (var _j = 0; _j < options.numberOfInputs; _j += 1) {
                    for (var _k = 0; _k < options.outputChannelCount[_j]; _k += 1) {
                      // The byteLength will be 0 when the ArrayBuffer was transferred.
                      if (outputs[_j][_k].byteLength === 0) {
                        outputs[_j][_k] = new Float32Array(128);
                      }
                    }
                  }

                  try {
                    var potentiallyEmptyInputs = inputs.map(function (input, index) {
                      if (audioNodeConnections.activeInputs[index].size === 0) {
                        return [];
                      }

                      return input;
                    });
                    var activeSourceFlag = exposeCurrentFrameAndCurrentTime(i / nativeOfflineAudioContext.sampleRate, nativeOfflineAudioContext.sampleRate, function () {
                      return audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters);
                    });

                    if (processedBuffer !== null) {
                      for (var _j2 = 0, outputChannelSplitterNodeOutput = 0; _j2 < options.numberOfOutputs; _j2 += 1) {
                        for (var _k2 = 0; _k2 < options.outputChannelCount[_j2]; _k2 += 1) {
                          Object(_helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_1__["copyToChannel"])(processedBuffer, outputs[_j2], _k2, outputChannelSplitterNodeOutput + _k2, i);
                        }

                        outputChannelSplitterNodeOutput += options.outputChannelCount[_j2];
                      }
                    }

                    if (!activeSourceFlag) {
                      return "break";
                    }
                  } catch (error) {
                    proxy.dispatchEvent(new ErrorEvent('processorerror', {
                      error: error
                    }));
                    return "break";
                  }
                };

                i = 0;

              case 15:
                if (!(i < length)) {
                  _context4.next = 22;
                  break;
                }

                _ret = _loop(i);

                if (!(_ret === "break")) {
                  _context4.next = 19;
                  break;
                }

                return _context4.abrupt("break", 22);

              case 19:
                i += 128;
                _context4.next = 15;
                break;

              case 22:
                return _context4.abrupt("return", processedBuffer);

              case 23:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4);
      }));

      return function processBuffer(_x10, _x11, _x12, _x13, _x14, _x15) {
        return _ref15.apply(this, arguments);
      };
    }();

    var createAudioWorkletNodeRendererFactory = function createAudioWorkletNodeRendererFactory(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, getNativeAudioNode, nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) {
      return function (name, options, processorConstructor) {
        var renderedNativeAudioNodes = new WeakMap();
        var processedBufferPromise = null;

        var createAudioNode = /*#__PURE__*/function () {
          var _ref17 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(proxy, nativeOfflineAudioContext, trace) {
            var nativeAudioWorkletNode, nativeOutputNodes, nativeAudioWorkletNodeIsOwnedByContext, numberOfOutputChannels, outputChannelSplitterNode, outputChannelMergerNodes, i, outputGainNode, _numberOfInputChannels, numberOfParameters, numberOfChannels, renderBuffer, _processedBuffer, audioBufferSourceNode, _nativeOutputNodes, _nativeOutputNodes2, _outputChannelSplitterNode, _outputChannelMergerNodes, _outputGainNode, _i4, outputChannelSplitterNodeOutput, outputChannelMergerNode, j, _iterator7, _step7, _step7$value, nm, audioParam, _iterator8, _step8, _step8$value, _nm, _audioParam;

            return regeneratorRuntime.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    nativeAudioWorkletNode = getNativeAudioNode(proxy);
                    nativeOutputNodes = null;
                    nativeAudioWorkletNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_5__["isOwnedByContext"])(nativeAudioWorkletNode, nativeOfflineAudioContext); // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.

                    if (nativeAudioWorkletNodeConstructor === null) {
                      numberOfOutputChannels = options.outputChannelCount.reduce(function (sum, value) {
                        return sum + value;
                      }, 0);
                      outputChannelSplitterNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, {
                        channelCount: Math.max(1, numberOfOutputChannels),
                        channelCountMode: 'explicit',
                        channelInterpretation: 'discrete',
                        numberOfOutputs: Math.max(1, numberOfOutputChannels)
                      });
                      outputChannelMergerNodes = [];

                      for (i = 0; i < proxy.numberOfOutputs; i += 1) {
                        outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeOfflineAudioContext, {
                          channelCount: 1,
                          channelCountMode: 'explicit',
                          channelInterpretation: 'speakers',
                          numberOfInputs: options.outputChannelCount[i]
                        }));
                      }

                      outputGainNode = createNativeGainNode(nativeOfflineAudioContext, {
                        channelCount: options.channelCount,
                        channelCountMode: options.channelCountMode,
                        channelInterpretation: options.channelInterpretation,
                        gain: 1
                      });
                      outputGainNode.connect = connectMultipleOutputs.bind(null, outputChannelMergerNodes);
                      outputGainNode.disconnect = disconnectMultipleOutputs.bind(null, outputChannelMergerNodes);
                      nativeOutputNodes = [outputChannelSplitterNode, outputChannelMergerNodes, outputGainNode];
                    } else if (!nativeAudioWorkletNodeIsOwnedByContext) {
                      nativeAudioWorkletNode = new nativeAudioWorkletNodeConstructor(nativeOfflineAudioContext, name);
                    }

                    renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeOutputNodes === null ? nativeAudioWorkletNode : nativeOutputNodes[2]);

                    if (!(nativeOutputNodes !== null)) {
                      _context7.next = 39;
                      break;
                    }

                    if (!(processedBufferPromise === null)) {
                      _context7.next = 30;
                      break;
                    }

                    if (!(processorConstructor === undefined)) {
                      _context7.next = 9;
                      break;
                    }

                    throw new Error('Missing the processor constructor.');

                  case 9:
                    if (!(nativeOfflineAudioContextConstructor === null)) {
                      _context7.next = 11;
                      break;
                    }

                    throw new Error('Missing the native OfflineAudioContext constructor.');

                  case 11:
                    // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.
                    _numberOfInputChannels = proxy.channelCount * proxy.numberOfInputs;
                    numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length;
                    numberOfChannels = _numberOfInputChannels + numberOfParameters;

                    renderBuffer = /*#__PURE__*/function () {
                      var _ref18 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {
                        var partialOfflineAudioContext, gainNodes, inputChannelSplitterNodes, _i2, constantSourceNodes, inputChannelMergerNode, _i3, j, _iterator6, _step6, _step6$value, index, constantSourceNode;

                        return regeneratorRuntime.wrap(function _callee6$(_context6) {
                          while (1) {
                            switch (_context6.prev = _context6.next) {
                              case 0:
                                partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(numberOfChannels, // Ceil the length to the next full render quantum.
                                // Bug #17: Safari does not yet expose the length.
                                Math.ceil(proxy.context.length / 128) * 128, nativeOfflineAudioContext.sampleRate);
                                gainNodes = [];
                                inputChannelSplitterNodes = [];

                                for (_i2 = 0; _i2 < options.numberOfInputs; _i2 += 1) {
                                  gainNodes.push(createNativeGainNode(partialOfflineAudioContext, {
                                    channelCount: options.channelCount,
                                    channelCountMode: options.channelCountMode,
                                    channelInterpretation: options.channelInterpretation,
                                    gain: 1
                                  }));
                                  inputChannelSplitterNodes.push(createNativeChannelSplitterNode(partialOfflineAudioContext, {
                                    channelCount: options.channelCount,
                                    channelCountMode: 'explicit',
                                    channelInterpretation: 'discrete',
                                    numberOfOutputs: options.channelCount
                                  }));
                                }

                                _context6.next = 6;
                                return Promise.all(Array.from(proxy.parameters.values()).map( /*#__PURE__*/function () {
                                  var _ref19 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(audioParam) {
                                    var constantSourceNode;
                                    return regeneratorRuntime.wrap(function _callee5$(_context5) {
                                      while (1) {
                                        switch (_context5.prev = _context5.next) {
                                          case 0:
                                            constantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {
                                              channelCount: 1,
                                              channelCountMode: 'explicit',
                                              channelInterpretation: 'discrete',
                                              offset: audioParam.value
                                            });
                                            _context5.next = 3;
                                            return renderAutomation(partialOfflineAudioContext, audioParam, constantSourceNode.offset, trace);

                                          case 3:
                                            return _context5.abrupt("return", constantSourceNode);

                                          case 4:
                                          case "end":
                                            return _context5.stop();
                                        }
                                      }
                                    }, _callee5);
                                  }));

                                  return function (_x19) {
                                    return _ref19.apply(this, arguments);
                                  };
                                }()));

                              case 6:
                                constantSourceNodes = _context6.sent;
                                inputChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {
                                  channelCount: 1,
                                  channelCountMode: 'explicit',
                                  channelInterpretation: 'speakers',
                                  numberOfInputs: Math.max(1, _numberOfInputChannels + numberOfParameters)
                                });

                                for (_i3 = 0; _i3 < options.numberOfInputs; _i3 += 1) {
                                  gainNodes[_i3].connect(inputChannelSplitterNodes[_i3]);

                                  for (j = 0; j < options.channelCount; j += 1) {
                                    inputChannelSplitterNodes[_i3].connect(inputChannelMergerNode, j, _i3 * options.channelCount + j);
                                  }
                                }

                                _iterator6 = _createForOfIteratorHelper(constantSourceNodes.entries());

                                try {
                                  for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
                                    _step6$value = _slicedToArray2(_step6.value, 2), index = _step6$value[0], constantSourceNode = _step6$value[1];
                                    constantSourceNode.connect(inputChannelMergerNode, 0, _numberOfInputChannels + index);
                                    constantSourceNode.start(0);
                                  }
                                } catch (err) {
                                  _iterator6.e(err);
                                } finally {
                                  _iterator6.f();
                                }

                                inputChannelMergerNode.connect(partialOfflineAudioContext.destination);
                                _context6.next = 14;
                                return Promise.all(gainNodes.map(function (gainNode) {
                                  return renderInputsOfAudioNode(proxy, partialOfflineAudioContext, gainNode, trace);
                                }));

                              case 14:
                                return _context6.abrupt("return", renderNativeOfflineAudioContext(partialOfflineAudioContext));

                              case 15:
                              case "end":
                                return _context6.stop();
                            }
                          }
                        }, _callee6);
                      }));

                      return function renderBuffer() {
                        return _ref18.apply(this, arguments);
                      };
                    }();

                    _context7.t0 = processBuffer;
                    _context7.t1 = proxy;

                    if (!(numberOfChannels === 0)) {
                      _context7.next = 21;
                      break;
                    }

                    _context7.t2 = null;
                    _context7.next = 24;
                    break;

                  case 21:
                    _context7.next = 23;
                    return renderBuffer();

                  case 23:
                    _context7.t2 = _context7.sent;

                  case 24:
                    _context7.t3 = _context7.t2;
                    _context7.t4 = nativeOfflineAudioContext;
                    _context7.t5 = options;
                    _context7.t6 = processorConstructor;
                    _context7.t7 = exposeCurrentFrameAndCurrentTime;
                    processedBufferPromise = (0, _context7.t0)(_context7.t1, _context7.t3, _context7.t4, _context7.t5, _context7.t6, _context7.t7);

                  case 30:
                    _context7.next = 32;
                    return processedBufferPromise;

                  case 32:
                    _processedBuffer = _context7.sent;
                    audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {
                      buffer: null,
                      channelCount: 2,
                      channelCountMode: 'max',
                      channelInterpretation: 'speakers',
                      loop: false,
                      loopEnd: 0,
                      loopStart: 0,
                      playbackRate: 1
                    });
                    _nativeOutputNodes = nativeOutputNodes, _nativeOutputNodes2 = _slicedToArray2(_nativeOutputNodes, 3), _outputChannelSplitterNode = _nativeOutputNodes2[0], _outputChannelMergerNodes = _nativeOutputNodes2[1], _outputGainNode = _nativeOutputNodes2[2];

                    if (_processedBuffer !== null) {
                      audioBufferSourceNode.buffer = _processedBuffer;
                      audioBufferSourceNode.start(0);
                    }

                    audioBufferSourceNode.connect(_outputChannelSplitterNode);

                    for (_i4 = 0, outputChannelSplitterNodeOutput = 0; _i4 < proxy.numberOfOutputs; _i4 += 1) {
                      outputChannelMergerNode = _outputChannelMergerNodes[_i4];

                      for (j = 0; j < options.outputChannelCount[_i4]; j += 1) {
                        _outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + j, j);
                      }

                      outputChannelSplitterNodeOutput += options.outputChannelCount[_i4];
                    }

                    return _context7.abrupt("return", _outputGainNode);

                  case 39:
                    if (nativeAudioWorkletNodeIsOwnedByContext) {
                      _context7.next = 59;
                      break;
                    }

                    _iterator7 = _createForOfIteratorHelper(proxy.parameters.entries());
                    _context7.prev = 41;

                    _iterator7.s();

                  case 43:
                    if ((_step7 = _iterator7.n()).done) {
                      _context7.next = 49;
                      break;
                    }

                    _step7$value = _slicedToArray2(_step7.value, 2), nm = _step7$value[0], audioParam = _step7$value[1];
                    _context7.next = 47;
                    return renderAutomation(nativeOfflineAudioContext, audioParam, // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
                    nativeAudioWorkletNode.parameters.get(nm), trace);

                  case 47:
                    _context7.next = 43;
                    break;

                  case 49:
                    _context7.next = 54;
                    break;

                  case 51:
                    _context7.prev = 51;
                    _context7.t8 = _context7["catch"](41);

                    _iterator7.e(_context7.t8);

                  case 54:
                    _context7.prev = 54;

                    _iterator7.f();

                    return _context7.finish(54);

                  case 57:
                    _context7.next = 76;
                    break;

                  case 59:
                    _iterator8 = _createForOfIteratorHelper(proxy.parameters.entries());
                    _context7.prev = 60;

                    _iterator8.s();

                  case 62:
                    if ((_step8 = _iterator8.n()).done) {
                      _context7.next = 68;
                      break;
                    }

                    _step8$value = _slicedToArray2(_step8.value, 2), _nm = _step8$value[0], _audioParam = _step8$value[1];
                    _context7.next = 66;
                    return connectAudioParam(nativeOfflineAudioContext, _audioParam, // @todo The definition that TypeScript uses of the AudioParamMap is lacking many methods.
                    nativeAudioWorkletNode.parameters.get(_nm), trace);

                  case 66:
                    _context7.next = 62;
                    break;

                  case 68:
                    _context7.next = 73;
                    break;

                  case 70:
                    _context7.prev = 70;
                    _context7.t9 = _context7["catch"](60);

                    _iterator8.e(_context7.t9);

                  case 73:
                    _context7.prev = 73;

                    _iterator8.f();

                    return _context7.finish(73);

                  case 76:
                    _context7.next = 78;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioWorkletNode, trace);

                  case 78:
                    return _context7.abrupt("return", nativeAudioWorkletNode);

                  case 79:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7, null, [[41, 51, 54, 57], [60, 70, 73, 76]]);
          }));

          return function createAudioNode(_x16, _x17, _x18) {
            return _ref17.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            deleteUnrenderedAudioWorkletNode(nativeOfflineAudioContext, proxy);
            var renderedNativeAudioWorkletNodeOrGainNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);

            if (renderedNativeAudioWorkletNodeOrGainNode !== undefined) {
              return Promise.resolve(renderedNativeAudioWorkletNodeOrGainNode);
            }

            return createAudioNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/audio-worklet-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js ***!
    \**********************************************************************************************************/

  /*! exports provided: createBaseAudioContextConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesBaseAudioContextConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createBaseAudioContextConstructor", function () {
      return createBaseAudioContextConstructor;
    });

    var createBaseAudioContextConstructor = function createBaseAudioContextConstructor(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, _decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor) {
      return /*#__PURE__*/function (_minimalBaseAudioCont) {
        _inherits(BaseAudioContext, _minimalBaseAudioCont);

        var _super7 = _createSuper(BaseAudioContext);

        function BaseAudioContext(_nativeContext, numberOfChannels) {
          var _this9;

          _classCallCheck2(this, BaseAudioContext);

          _this9 = _super7.call(this, _nativeContext, numberOfChannels);
          _this9._nativeContext = _nativeContext;
          _this9._audioWorklet = addAudioWorkletModule === undefined ? undefined : {
            addModule: function addModule(moduleURL, options) {
              return addAudioWorkletModule(_assertThisInitialized(_this9), moduleURL, options);
            }
          };
          return _this9;
        }

        _createClass2(BaseAudioContext, [{
          key: "createAnalyser",
          value: function createAnalyser() {
            return new analyserNodeConstructor(this);
          }
        }, {
          key: "createBiquadFilter",
          value: function createBiquadFilter() {
            return new biquadFilterNodeConstructor(this);
          }
        }, {
          key: "createBuffer",
          value: function createBuffer(numberOfChannels, length, sampleRate) {
            return new audioBufferConstructor({
              length: length,
              numberOfChannels: numberOfChannels,
              sampleRate: sampleRate
            });
          }
        }, {
          key: "createBufferSource",
          value: function createBufferSource() {
            return new audioBufferSourceNodeConstructor(this);
          }
        }, {
          key: "createChannelMerger",
          value: function createChannelMerger() {
            var numberOfInputs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;
            return new channelMergerNodeConstructor(this, {
              numberOfInputs: numberOfInputs
            });
          }
        }, {
          key: "createChannelSplitter",
          value: function createChannelSplitter() {
            var numberOfOutputs = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 6;
            return new channelSplitterNodeConstructor(this, {
              numberOfOutputs: numberOfOutputs
            });
          }
        }, {
          key: "createConstantSource",
          value: function createConstantSource() {
            return new constantSourceNodeConstructor(this);
          }
        }, {
          key: "createConvolver",
          value: function createConvolver() {
            return new convolverNodeConstructor(this);
          }
        }, {
          key: "createDelay",
          value: function createDelay() {
            var maxDelayTime = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
            return new delayNodeConstructor(this, {
              maxDelayTime: maxDelayTime
            });
          }
        }, {
          key: "createDynamicsCompressor",
          value: function createDynamicsCompressor() {
            return new dynamicsCompressorNodeConstructor(this);
          }
        }, {
          key: "createGain",
          value: function createGain() {
            return new gainNodeConstructor(this);
          }
        }, {
          key: "createIIRFilter",
          value: function createIIRFilter(feedforward, feedback) {
            return new iIRFilterNodeConstructor(this, {
              feedback: feedback,
              feedforward: feedforward
            });
          }
        }, {
          key: "createOscillator",
          value: function createOscillator() {
            return new oscillatorNodeConstructor(this);
          }
        }, {
          key: "createPanner",
          value: function createPanner() {
            return new pannerNodeConstructor(this);
          }
        }, {
          key: "createPeriodicWave",
          value: function createPeriodicWave(real, imag) {
            var constraints = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
              disableNormalization: false
            };
            return new periodicWaveConstructor(this, _objectSpread(_objectSpread({}, constraints), {}, {
              imag: imag,
              real: real
            }));
          }
        }, {
          key: "createStereoPanner",
          value: function createStereoPanner() {
            return new stereoPannerNodeConstructor(this);
          }
        }, {
          key: "createWaveShaper",
          value: function createWaveShaper() {
            return new waveShaperNodeConstructor(this);
          }
        }, {
          key: "decodeAudioData",
          value: function decodeAudioData(audioData, successCallback, errorCallback) {
            return _decodeAudioData(this._nativeContext, audioData).then(function (audioBuffer) {
              if (typeof successCallback === 'function') {
                successCallback(audioBuffer);
              }

              return audioBuffer;
            })["catch"](function (err) {
              if (typeof errorCallback === 'function') {
                errorCallback(err);
              }

              throw err;
            });
          }
        }, {
          key: "audioWorklet",
          get: function get() {
            return this._audioWorklet;
          }
        }]);

        return BaseAudioContext;
      }(minimalBaseAudioContextConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/base-audio-context-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js ***!
    \**********************************************************************************************************/

  /*! exports provided: createBiquadFilterNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesBiquadFilterNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createBiquadFilterNodeConstructor", function () {
      return createBiquadFilterNodeConstructor;
    });
    /* harmony import */


    var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../constants */
    "./node_modules/standardized-audio-context/build/es2019/constants.js");

    var DEFAULT_OPTIONS = {
      Q: 1,
      channelCount: 2,
      channelCountMode: 'max',
      channelInterpretation: 'speakers',
      detune: 0,
      frequency: 350,
      gain: 0,
      type: 'lowpass'
    };

    var createBiquadFilterNodeConstructor = function createBiquadFilterNodeConstructor(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, createInvalidAccessError, createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor4) {
        _inherits(BiquadFilterNode, _audioNodeConstructor4);

        var _super8 = _createSuper(BiquadFilterNode);

        function BiquadFilterNode(context) {
          var _this10;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, BiquadFilterNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeContext, mergedOptions);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var biquadFilterNodeRenderer = isOffline ? createBiquadFilterNodeRenderer() : null;
          _this10 = _super8.call(this, context, false, nativeBiquadFilterNode, biquadFilterNodeRenderer); // Bug #80: Edge & Safari do not export the correct values for maxValue and minValue.

          _this10._Q = createAudioParam(_assertThisInitialized(_this10), isOffline, nativeBiquadFilterNode.Q, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]); // Bug #78: Firefox & Safari do not export the correct values for maxValue and minValue.

          _this10._detune = createAudioParam(_assertThisInitialized(_this10), isOffline, nativeBiquadFilterNode.detune, 1200 * Math.log2(_constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"]), -1200 * Math.log2(_constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"]));
          /*
           * Bug #77: Edge does not export the correct values for maxValue and minValue. Firefox & Safari do not export the correct value
           * for minValue.
           */

          _this10._frequency = createAudioParam(_assertThisInitialized(_this10), isOffline, nativeBiquadFilterNode.frequency, context.sampleRate / 2, 0); // Bug #79: Firefox & Safari do not export the correct values for maxValue and minValue.

          _this10._gain = createAudioParam(_assertThisInitialized(_this10), isOffline, nativeBiquadFilterNode.gain, 40 * Math.log10(_constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"]), _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
          _this10._nativeBiquadFilterNode = nativeBiquadFilterNode;
          return _this10;
        }

        _createClass2(BiquadFilterNode, [{
          key: "getFrequencyResponse",
          value: function getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
            this._nativeBiquadFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse); // Bug #68: Only Chrome, Firefox & Opera do throw an error if the parameters differ in their length.


            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
              throw createInvalidAccessError();
            }
          }
        }, {
          key: "detune",
          get: function get() {
            return this._detune;
          }
        }, {
          key: "frequency",
          get: function get() {
            return this._frequency;
          }
        }, {
          key: "gain",
          get: function get() {
            return this._gain;
          }
        }, {
          key: "Q",
          get: function get() {
            return this._Q;
          }
        }, {
          key: "type",
          get: function get() {
            return this._nativeBiquadFilterNode.type;
          },
          set: function set(value) {
            this._nativeBiquadFilterNode.type = value;
          }
        }]);

        return BiquadFilterNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/biquad-filter-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js ***!
    \***************************************************************************************************************/

  /*! exports provided: createBiquadFilterNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesBiquadFilterNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createBiquadFilterNodeRendererFactory", function () {
      return createBiquadFilterNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createBiquadFilterNodeRendererFactory = function createBiquadFilterNodeRendererFactory(connectAudioParam, createNativeBiquadFilterNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeBiquadFilterNodes = new WeakMap();

        var createBiquadFilterNode = /*#__PURE__*/function () {
          var _ref20 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(proxy, nativeOfflineAudioContext, trace) {
            var nativeBiquadFilterNode, nativeBiquadFilterNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee8$(_context8) {
              while (1) {
                switch (_context8.prev = _context8.next) {
                  case 0:
                    nativeBiquadFilterNode = getNativeAudioNode(proxy);
                    /*
                     * If the initially used nativeBiquadFilterNode was not constructed on the same OfflineAudioContext it needs to be created
                     * again.
                     */

                    nativeBiquadFilterNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__["isOwnedByContext"])(nativeBiquadFilterNode, nativeOfflineAudioContext);

                    if (!nativeBiquadFilterNodeIsOwnedByContext) {
                      options = {
                        Q: nativeBiquadFilterNode.Q.value,
                        channelCount: nativeBiquadFilterNode.channelCount,
                        channelCountMode: nativeBiquadFilterNode.channelCountMode,
                        channelInterpretation: nativeBiquadFilterNode.channelInterpretation,
                        detune: nativeBiquadFilterNode.detune.value,
                        frequency: nativeBiquadFilterNode.frequency.value,
                        gain: nativeBiquadFilterNode.gain.value,
                        type: nativeBiquadFilterNode.type
                      };
                      nativeBiquadFilterNode = createNativeBiquadFilterNode(nativeOfflineAudioContext, options);
                    }

                    renderedNativeBiquadFilterNodes.set(nativeOfflineAudioContext, nativeBiquadFilterNode);

                    if (nativeBiquadFilterNodeIsOwnedByContext) {
                      _context8.next = 15;
                      break;
                    }

                    _context8.next = 7;
                    return renderAutomation(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);

                  case 7:
                    _context8.next = 9;
                    return renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);

                  case 9:
                    _context8.next = 11;
                    return renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);

                  case 11:
                    _context8.next = 13;
                    return renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);

                  case 13:
                    _context8.next = 23;
                    break;

                  case 15:
                    _context8.next = 17;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.Q, nativeBiquadFilterNode.Q, trace);

                  case 17:
                    _context8.next = 19;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeBiquadFilterNode.detune, trace);

                  case 19:
                    _context8.next = 21;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeBiquadFilterNode.frequency, trace);

                  case 21:
                    _context8.next = 23;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeBiquadFilterNode.gain, trace);

                  case 23:
                    _context8.next = 25;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeBiquadFilterNode, trace);

                  case 25:
                    return _context8.abrupt("return", nativeBiquadFilterNode);

                  case 26:
                  case "end":
                    return _context8.stop();
                }
              }
            }, _callee8);
          }));

          return function createBiquadFilterNode(_x20, _x21, _x22) {
            return _ref20.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeBiquadFilterNode = renderedNativeBiquadFilterNodes.get(nativeOfflineAudioContext);

            if (renderedNativeBiquadFilterNode !== undefined) {
              return Promise.resolve(renderedNativeBiquadFilterNode);
            }

            return createBiquadFilterNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/biquad-filter-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js ***!
    \*********************************************************************************************/

  /*! exports provided: createCacheTestResult */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesCacheTestResultJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createCacheTestResult", function () {
      return createCacheTestResult;
    });

    var createCacheTestResult = function createCacheTestResult(ongoingTests, testResults) {
      return function (tester, test) {
        var cachedTestResult = testResults.get(tester);

        if (cachedTestResult !== undefined) {
          return cachedTestResult;
        }

        var ongoingTest = ongoingTests.get(tester);

        if (ongoingTest !== undefined) {
          return ongoingTest;
        }

        try {
          var synchronousTestResult = test();

          if (synchronousTestResult instanceof Promise) {
            ongoingTests.set(tester, synchronousTestResult);
            return synchronousTestResult["catch"](function () {
              return false;
            }).then(function (finalTestResult) {
              ongoingTests["delete"](tester);
              testResults.set(tester, finalTestResult);
              return finalTestResult;
            });
          }

          testResults.set(tester, synchronousTestResult);
          return synchronousTestResult;
        } catch (_unused) {
          testResults.set(tester, false);
          return false;
        }
      };
    }; //# sourceMappingURL=/build/es2019/factories/cache-test-result.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js ***!
    \***********************************************************************************************************/

  /*! exports provided: createChannelMergerNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesChannelMergerNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createChannelMergerNodeConstructor", function () {
      return createChannelMergerNodeConstructor;
    });

    var DEFAULT_OPTIONS = {
      channelCount: 1,
      channelCountMode: 'explicit',
      channelInterpretation: 'speakers',
      numberOfInputs: 6
    };

    var createChannelMergerNodeConstructor = function createChannelMergerNodeConstructor(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor5) {
        _inherits(ChannelMergerNode, _audioNodeConstructor5);

        var _super9 = _createSuper(ChannelMergerNode);

        function ChannelMergerNode(context) {
          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, ChannelMergerNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeChannelMergerNode = createNativeChannelMergerNode(nativeContext, mergedOptions);
          var channelMergerNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelMergerNodeRenderer() : null;
          return _super9.call(this, context, false, nativeChannelMergerNode, channelMergerNodeRenderer);
        }

        return ChannelMergerNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/channel-merger-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js ***!
    \****************************************************************************************************************/

  /*! exports provided: createChannelMergerNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesChannelMergerNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createChannelMergerNodeRendererFactory", function () {
      return createChannelMergerNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createChannelMergerNodeRendererFactory = function createChannelMergerNodeRendererFactory(createNativeChannelMergerNode, getNativeAudioNode, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeAudioNodes = new WeakMap();

        var createAudioNode = /*#__PURE__*/function () {
          var _ref21 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(proxy, nativeOfflineAudioContext, trace) {
            var nativeAudioNode, nativeAudioNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee9$(_context9) {
              while (1) {
                switch (_context9.prev = _context9.next) {
                  case 0:
                    nativeAudioNode = getNativeAudioNode(proxy); // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.

                    nativeAudioNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__["isOwnedByContext"])(nativeAudioNode, nativeOfflineAudioContext);

                    if (!nativeAudioNodeIsOwnedByContext) {
                      options = {
                        channelCount: nativeAudioNode.channelCount,
                        channelCountMode: nativeAudioNode.channelCountMode,
                        channelInterpretation: nativeAudioNode.channelInterpretation,
                        numberOfInputs: nativeAudioNode.numberOfInputs
                      };
                      nativeAudioNode = createNativeChannelMergerNode(nativeOfflineAudioContext, options);
                    }

                    renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);
                    _context9.next = 6;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);

                  case 6:
                    return _context9.abrupt("return", nativeAudioNode);

                  case 7:
                  case "end":
                    return _context9.stop();
                }
              }
            }, _callee9);
          }));

          return function createAudioNode(_x23, _x24, _x25) {
            return _ref21.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);

            if (renderedNativeAudioNode !== undefined) {
              return Promise.resolve(renderedNativeAudioNode);
            }

            return createAudioNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/channel-merger-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js ***!
    \*************************************************************************************************************/

  /*! exports provided: createChannelSplitterNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesChannelSplitterNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createChannelSplitterNodeConstructor", function () {
      return createChannelSplitterNodeConstructor;
    });

    var DEFAULT_OPTIONS = {
      channelCount: 6,
      channelCountMode: 'explicit',
      channelInterpretation: 'discrete',
      numberOfOutputs: 6
    };

    var sanitizedOptions = function sanitizedOptions(options) {
      return _objectSpread(_objectSpread({}, options), {}, {
        channelCount: options.numberOfOutputs
      });
    };

    var createChannelSplitterNodeConstructor = function createChannelSplitterNodeConstructor(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor6) {
        _inherits(ChannelSplitterNode, _audioNodeConstructor6);

        var _super10 = _createSuper(ChannelSplitterNode);

        function ChannelSplitterNode(context) {
          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, ChannelSplitterNode);

          var nativeContext = getNativeContext(context);
          var mergedOptions = sanitizedOptions(_objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options));
          var nativeChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, mergedOptions);
          var channelSplitterNodeRenderer = isNativeOfflineAudioContext(nativeContext) ? createChannelSplitterNodeRenderer() : null;
          return _super10.call(this, context, false, nativeChannelSplitterNode, channelSplitterNodeRenderer);
        }

        return ChannelSplitterNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/channel-splitter-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js ***!
    \******************************************************************************************************************/

  /*! exports provided: createChannelSplitterNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesChannelSplitterNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createChannelSplitterNodeRendererFactory", function () {
      return createChannelSplitterNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createChannelSplitterNodeRendererFactory = function createChannelSplitterNodeRendererFactory(createNativeChannelSplitterNode, getNativeAudioNode, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeAudioNodes = new WeakMap();

        var createAudioNode = /*#__PURE__*/function () {
          var _ref22 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(proxy, nativeOfflineAudioContext, trace) {
            var nativeAudioNode, nativeAudioNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee10$(_context10) {
              while (1) {
                switch (_context10.prev = _context10.next) {
                  case 0:
                    nativeAudioNode = getNativeAudioNode(proxy); // If the initially used nativeAudioNode was not constructed on the same OfflineAudioContext it needs to be created again.

                    nativeAudioNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__["isOwnedByContext"])(nativeAudioNode, nativeOfflineAudioContext);

                    if (!nativeAudioNodeIsOwnedByContext) {
                      options = {
                        channelCount: nativeAudioNode.channelCount,
                        channelCountMode: nativeAudioNode.channelCountMode,
                        channelInterpretation: nativeAudioNode.channelInterpretation,
                        numberOfOutputs: nativeAudioNode.numberOfOutputs
                      };
                      nativeAudioNode = createNativeChannelSplitterNode(nativeOfflineAudioContext, options);
                    }

                    renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioNode);
                    _context10.next = 6;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeAudioNode, trace);

                  case 6:
                    return _context10.abrupt("return", nativeAudioNode);

                  case 7:
                  case "end":
                    return _context10.stop();
                }
              }
            }, _callee10);
          }));

          return function createAudioNode(_x26, _x27, _x28) {
            return _ref22.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);

            if (renderedNativeAudioNode !== undefined) {
              return Promise.resolve(renderedNativeAudioNode);
            }

            return createAudioNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/channel-splitter-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js ***!
    \***********************************************************************************************/

  /*! exports provided: createConnectAudioParam */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesConnectAudioParamJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createConnectAudioParam", function () {
      return createConnectAudioParam;
    });

    var createConnectAudioParam = function createConnectAudioParam(renderInputsOfAudioParam) {
      return function (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) {
        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);
      };
    }; //# sourceMappingURL=/build/es2019/factories/connect-audio-param.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js ***!
    \****************************************************************************************************/

  /*! exports provided: createConnectMultipleOutputs */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesConnectMultipleOutputsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createConnectMultipleOutputs", function () {
      return createConnectMultipleOutputs;
    });
    /* harmony import */


    var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js");

    var createConnectMultipleOutputs = function createConnectMultipleOutputs(createIndexSizeError) {
      return function (outputAudioNodes, destination) {
        var output = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
        var input = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
        var outputAudioNode = outputAudioNodes[output];

        if (outputAudioNode === undefined) {
          throw createIndexSizeError();
        }

        if (Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNode"])(destination)) {
          return outputAudioNode.connect(destination, 0, input);
        }

        return outputAudioNode.connect(destination, 0);
      };
    }; //# sourceMappingURL=/build/es2019/factories/connect-multiple-outputs.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js":
  /*!*****************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js ***!
    \*****************************************************************************************************************************/

  /*! exports provided: createConnectedNativeAudioBufferSourceNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesConnectedNativeAudioBufferSourceNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createConnectedNativeAudioBufferSourceNodeFactory", function () {
      return createConnectedNativeAudioBufferSourceNodeFactory;
    });

    var createConnectedNativeAudioBufferSourceNodeFactory = function createConnectedNativeAudioBufferSourceNodeFactory(createNativeAudioBufferSourceNode) {
      return function (nativeContext, nativeAudioNode) {
        var nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {
          buffer: null,
          channelCount: 2,
          channelCountMode: 'max',
          channelInterpretation: 'speakers',
          loop: false,
          loopEnd: 0,
          loopStart: 0,
          playbackRate: 1
        });
        var nativeAudioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);
        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
        nativeAudioBufferSourceNode.loop = true;
        nativeAudioBufferSourceNode.connect(nativeAudioNode);
        nativeAudioBufferSourceNode.start();
        return function () {
          nativeAudioBufferSourceNode.stop();
          nativeAudioBufferSourceNode.disconnect(nativeAudioNode);
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js ***!
    \************************************************************************************************************/

  /*! exports provided: createConstantSourceNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesConstantSourceNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createConstantSourceNodeConstructor", function () {
      return createConstantSourceNodeConstructor;
    });
    /* harmony import */


    var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../constants */
    "./node_modules/standardized-audio-context/build/es2019/constants.js");
    /* harmony import */


    var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/set-internal-state-to-active */
    "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
    /* harmony import */


    var _helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/set-internal-state-to-passive */
    "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");

    var DEFAULT_OPTIONS = {
      channelCount: 2,
      channelCountMode: 'max',
      channelInterpretation: 'speakers',
      offset: 1
    };

    var createConstantSourceNodeConstructor = function createConstantSourceNodeConstructor(audioNodeConstructor, createAudioParam, createConstantSourceNodeRendererFactory, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) {
      return /*#__PURE__*/function (_audioNodeConstructor7) {
        _inherits(ConstantSourceNode, _audioNodeConstructor7);

        var _super11 = _createSuper(ConstantSourceNode);

        function ConstantSourceNode(context) {
          var _this11;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, ConstantSourceNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeConstantSourceNode = createNativeConstantSourceNode(nativeContext, mergedOptions);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var constantSourceNodeRenderer = isOffline ? createConstantSourceNodeRendererFactory() : null;
          _this11 = _super11.call(this, context, false, nativeConstantSourceNode, constantSourceNodeRenderer);
          _this11._constantSourceNodeRenderer = constantSourceNodeRenderer;
          _this11._nativeConstantSourceNode = nativeConstantSourceNode;
          /*
           * Bug #62 & #74: Edge & Safari do not support ConstantSourceNodes and do not export the correct values for maxValue and
           * minValue for GainNodes.
           */

          _this11._offset = createAudioParam(_assertThisInitialized(_this11), isOffline, nativeConstantSourceNode.offset, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
          _this11._onended = null;
          return _this11;
        }

        _createClass2(ConstantSourceNode, [{
          key: "start",
          value: function start() {
            var _this12 = this;

            var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            this._nativeConstantSourceNode.start(when);

            if (this._constantSourceNodeRenderer !== null) {
              this._constantSourceNodeRenderer.start = when;
            } else {
              Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_1__["setInternalStateToActive"])(this);

              var resetInternalStateToPassive = function resetInternalStateToPassive() {
                _this12._nativeConstantSourceNode.removeEventListener('ended', resetInternalStateToPassive); // @todo Determine a meaningful delay instead of just using one second.


                setTimeout(function () {
                  return Object(_helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_2__["setInternalStateToPassive"])(_this12);
                }, 1000);
              };

              this._nativeConstantSourceNode.addEventListener('ended', resetInternalStateToPassive);
            }
          }
        }, {
          key: "stop",
          value: function stop() {
            var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            this._nativeConstantSourceNode.stop(when);

            if (this._constantSourceNodeRenderer !== null) {
              this._constantSourceNodeRenderer.stop = when;
            }
          }
        }, {
          key: "offset",
          get: function get() {
            return this._offset;
          }
        }, {
          key: "onended",
          get: function get() {
            return this._onended;
          },
          set: function set(value) {
            var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
            this._nativeConstantSourceNode.onended = wrappedListener;
            var nativeOnEnded = this._nativeConstantSourceNode.onended;
            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
          }
        }]);

        return ConstantSourceNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/constant-source-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js ***!
    \*****************************************************************************************************************/

  /*! exports provided: createConstantSourceNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesConstantSourceNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createConstantSourceNodeRendererFactory", function () {
      return createConstantSourceNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createConstantSourceNodeRendererFactory = function createConstantSourceNodeRendererFactory(connectAudioParam, createNativeConstantSourceNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeConstantSourceNodes = new WeakMap();
        var start = null;
        var stop = null;

        var createConstantSourceNode = /*#__PURE__*/function () {
          var _ref23 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(proxy, nativeOfflineAudioContext, trace) {
            var nativeConstantSourceNode, nativeConstantSourceNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee11$(_context11) {
              while (1) {
                switch (_context11.prev = _context11.next) {
                  case 0:
                    nativeConstantSourceNode = getNativeAudioNode(proxy);
                    /*
                     * If the initially used nativeConstantSourceNode was not constructed on the same OfflineAudioContext it needs to be created
                     * again.
                     */

                    nativeConstantSourceNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__["isOwnedByContext"])(nativeConstantSourceNode, nativeOfflineAudioContext);

                    if (!nativeConstantSourceNodeIsOwnedByContext) {
                      options = {
                        channelCount: nativeConstantSourceNode.channelCount,
                        channelCountMode: nativeConstantSourceNode.channelCountMode,
                        channelInterpretation: nativeConstantSourceNode.channelInterpretation,
                        offset: nativeConstantSourceNode.offset.value
                      };
                      nativeConstantSourceNode = createNativeConstantSourceNode(nativeOfflineAudioContext, options);

                      if (start !== null) {
                        nativeConstantSourceNode.start(start);
                      }

                      if (stop !== null) {
                        nativeConstantSourceNode.stop(stop);
                      }
                    }

                    renderedNativeConstantSourceNodes.set(nativeOfflineAudioContext, nativeConstantSourceNode);

                    if (nativeConstantSourceNodeIsOwnedByContext) {
                      _context11.next = 9;
                      break;
                    }

                    _context11.next = 7;
                    return renderAutomation(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);

                  case 7:
                    _context11.next = 11;
                    break;

                  case 9:
                    _context11.next = 11;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.offset, nativeConstantSourceNode.offset, trace);

                  case 11:
                    _context11.next = 13;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConstantSourceNode, trace);

                  case 13:
                    return _context11.abrupt("return", nativeConstantSourceNode);

                  case 14:
                  case "end":
                    return _context11.stop();
                }
              }
            }, _callee11);
          }));

          return function createConstantSourceNode(_x29, _x30, _x31) {
            return _ref23.apply(this, arguments);
          };
        }();

        return {
          set start(value) {
            start = value;
          },

          set stop(value) {
            stop = value;
          },

          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeConstantSourceNode = renderedNativeConstantSourceNodes.get(nativeOfflineAudioContext);

            if (renderedNativeConstantSourceNode !== undefined) {
              return Promise.resolve(renderedNativeConstantSourceNode);
            }

            return createConstantSourceNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/constant-source-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js ***!
    \***********************************************************************************************************/

  /*! exports provided: createConvertNumberToUnsignedLong */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesConvertNumberToUnsignedLongJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createConvertNumberToUnsignedLong", function () {
      return createConvertNumberToUnsignedLong;
    });

    var createConvertNumberToUnsignedLong = function createConvertNumberToUnsignedLong(unit32Array) {
      return function (value) {
        unit32Array[0] = value;
        return unit32Array[0];
      };
    }; //# sourceMappingURL=/build/es2019/factories/convert-number-to-unsigned-long.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js ***!
    \******************************************************************************************************/

  /*! exports provided: createConvolverNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesConvolverNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createConvolverNodeConstructor", function () {
      return createConvolverNodeConstructor;
    });

    var DEFAULT_OPTIONS = {
      buffer: null,
      channelCount: 2,
      channelCountMode: 'clamped-max',
      channelInterpretation: 'speakers',
      disableNormalization: false
    };

    var createConvolverNodeConstructor = function createConvolverNodeConstructor(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor8) {
        _inherits(ConvolverNode, _audioNodeConstructor8);

        var _super12 = _createSuper(ConvolverNode);

        function ConvolverNode(context) {
          var _this13;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, ConvolverNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeConvolverNode = createNativeConvolverNode(nativeContext, mergedOptions);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var convolverNodeRenderer = isOffline ? createConvolverNodeRenderer() : null;
          _this13 = _super12.call(this, context, false, nativeConvolverNode, convolverNodeRenderer);
          _this13._isBufferNullified = false;
          _this13._nativeConvolverNode = nativeConvolverNode;
          return _this13;
        }

        _createClass2(ConvolverNode, [{
          key: "buffer",
          get: function get() {
            if (this._isBufferNullified) {
              return null;
            }

            return this._nativeConvolverNode.buffer;
          },
          set: function set(value) {
            this._nativeConvolverNode.buffer = value; // Bug #115: Safari does not allow to set the buffer to null.

            if (value === null && this._nativeConvolverNode.buffer !== null) {
              var nativeContext = this._nativeConvolverNode.context;
              this._nativeConvolverNode.buffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);
              this._isBufferNullified = true;
            } else {
              this._isBufferNullified = false;
            }
          }
        }, {
          key: "normalize",
          get: function get() {
            return this._nativeConvolverNode.normalize;
          },
          set: function set(value) {
            this._nativeConvolverNode.normalize = value;
          }
        }]);

        return ConvolverNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/convolver-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js ***!
    \***********************************************************************************************************/

  /*! exports provided: createConvolverNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesConvolverNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createConvolverNodeRendererFactory", function () {
      return createConvolverNodeRendererFactory;
    });
    /* harmony import */


    var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/native-audio-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createConvolverNodeRendererFactory = function createConvolverNodeRendererFactory(createNativeConvolverNode, getNativeAudioNode, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeConvolverNodes = new WeakMap();

        var createConvolverNode = /*#__PURE__*/function () {
          var _ref24 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(proxy, nativeOfflineAudioContext, trace) {
            var nativeConvolverNode, nativeConvolverNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee12$(_context12) {
              while (1) {
                switch (_context12.prev = _context12.next) {
                  case 0:
                    nativeConvolverNode = getNativeAudioNode(proxy); // If the initially used nativeConvolverNode was not constructed on the same OfflineAudioContext it needs to be created again.

                    nativeConvolverNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeConvolverNode, nativeOfflineAudioContext);

                    if (!nativeConvolverNodeIsOwnedByContext) {
                      options = {
                        buffer: nativeConvolverNode.buffer,
                        channelCount: nativeConvolverNode.channelCount,
                        channelCountMode: nativeConvolverNode.channelCountMode,
                        channelInterpretation: nativeConvolverNode.channelInterpretation,
                        disableNormalization: !nativeConvolverNode.normalize
                      };
                      nativeConvolverNode = createNativeConvolverNode(nativeOfflineAudioContext, options);
                    }

                    renderedNativeConvolverNodes.set(nativeOfflineAudioContext, nativeConvolverNode);

                    if (!Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNodeFaker"])(nativeConvolverNode)) {
                      _context12.next = 9;
                      break;
                    }

                    _context12.next = 7;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode.inputs[0], trace);

                  case 7:
                    _context12.next = 11;
                    break;

                  case 9:
                    _context12.next = 11;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeConvolverNode, trace);

                  case 11:
                    return _context12.abrupt("return", nativeConvolverNode);

                  case 12:
                  case "end":
                    return _context12.stop();
                }
              }
            }, _callee12);
          }));

          return function createConvolverNode(_x32, _x33, _x34) {
            return _ref24.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeConvolverNode = renderedNativeConvolverNodes.get(nativeOfflineAudioContext);

            if (renderedNativeConvolverNode !== undefined) {
              return Promise.resolve(renderedNativeConvolverNode);
            }

            return createConvolverNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/convolver-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js ***!
    \***************************************************************************************************************/

  /*! exports provided: createCreateNativeOfflineAudioContext */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesCreateNativeOfflineAudioContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createCreateNativeOfflineAudioContext", function () {
      return createCreateNativeOfflineAudioContext;
    });

    var createCreateNativeOfflineAudioContext = function createCreateNativeOfflineAudioContext(createNotSupportedError, nativeOfflineAudioContextConstructor) {
      return function (numberOfChannels, length, sampleRate) {
        if (nativeOfflineAudioContextConstructor === null) {
          throw new Error('Missing the native OfflineAudioContext constructor.');
        }

        try {
          return new nativeOfflineAudioContextConstructor(numberOfChannels, length, sampleRate);
        } catch (err) {
          // Bug #143, #144 & #146: Safari throws a SyntaxError when numberOfChannels, length or sampleRate are invalid.
          // Bug #143: Edge throws a SyntaxError when numberOfChannels or length are invalid.
          // Bug #145: Edge throws an IndexSizeError when sampleRate is zero.
          if (err.name === 'IndexSizeError' || err.name === 'SyntaxError') {
            throw createNotSupportedError();
          }

          throw err;
        }
      };
    }; //# sourceMappingURL=/build/es2019/factories/create-native-offline-audio-context.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js ***!
    \********************************************************************************************/

  /*! exports provided: createDataCloneError */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesDataCloneErrorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createDataCloneError", function () {
      return createDataCloneError;
    });

    var createDataCloneError = function createDataCloneError() {
      try {
        return new DOMException('', 'DataCloneError');
      } catch (err) {
        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.
        err.code = 25;
        err.name = 'DataCloneError';
        return err;
      }
    }; //# sourceMappingURL=/build/es2019/factories/data-clone-error.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js ***!
    \*********************************************************************************************/

  /*! exports provided: createDecodeAudioData */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesDecodeAudioDataJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createDecodeAudioData", function () {
      return createDecodeAudioData;
    });
    /* harmony import */


    var _helpers_detach_array_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/detach-array-buffer */
    "./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js");
    /* harmony import */


    var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/wrap-audio-buffer-get-channel-data-method */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js");

    var createDecodeAudioData = function createDecodeAudioData(audioBufferStore, cacheTestResult, createDataCloneError, createEncodingError, detachedArrayBuffers, getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, testPromiseSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) {
      return function (anyContext, audioData) {
        var nativeContext = isNativeContext(anyContext) ? anyContext : getNativeContext(anyContext); // Bug #43: Only Chrome and Opera do throw a DataCloneError.

        if (detachedArrayBuffers.has(audioData)) {
          var _err = createDataCloneError();

          return Promise.reject(_err);
        } // The audioData parameter maybe of a type which can't be added to a WeakSet.


        try {
          detachedArrayBuffers.add(audioData);
        } catch (_unused2) {} // Ignore errors.
        // Bug #21: Safari does not support promises yet.


        if (cacheTestResult(testPromiseSupport, function () {
          return testPromiseSupport(nativeContext);
        })) {
          // Bug #101: Edge does not decode something on a closed OfflineAudioContext.
          var nativeContextOrBackupNativeContext = nativeContext.state === 'closed' && nativeOfflineAudioContextConstructor !== null && isNativeOfflineAudioContext(nativeContext) ? new nativeOfflineAudioContextConstructor(1, 1, nativeContext.sampleRate) : nativeContext;
          var promise = nativeContextOrBackupNativeContext.decodeAudioData(audioData)["catch"](function (err) {
            // Bug #27: Edge is rejecting invalid arrayBuffers with a DOMException.
            if (err instanceof DOMException && err.name === 'NotSupportedError') {
              throw new TypeError();
            }

            throw err;
          });
          return promise.then(function (audioBuffer) {
            // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.
            if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, function () {
              return testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer);
            })) {
              wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
            }

            audioBufferStore.add(audioBuffer);
            return audioBuffer;
          });
        } // Bug #21: Safari does not return a Promise yet.


        return new Promise(function (resolve, reject) {
          var complete = function complete() {
            // Bug #133: Safari does neuter the ArrayBuffer.
            try {
              Object(_helpers_detach_array_buffer__WEBPACK_IMPORTED_MODULE_0__["detachArrayBuffer"])(audioData);
            } catch (_unused3) {
              /* Ignore errors. */
            }
          };

          var fail = function fail(err) {
            reject(err);
            complete();
          }; // Bug #26: Safari throws a synchronous error.


          try {
            // Bug #1: Safari requires a successCallback.
            nativeContext.decodeAudioData(audioData, function (audioBuffer) {
              // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
              // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.
              if (typeof audioBuffer.copyFromChannel !== 'function') {
                wrapAudioBufferCopyChannelMethods(audioBuffer);
                Object(_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_1__["wrapAudioBufferGetChannelDataMethod"])(audioBuffer);
              }

              audioBufferStore.add(audioBuffer);
              complete();
              resolve(audioBuffer);
            }, function (err) {
              // Bug #4: Safari returns null instead of an error.
              if (err === null) {
                fail(createEncodingError());
              } else {
                fail(err);
              }
            });
          } catch (err) {
            fail(err);
          }
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/decode-audio-data.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js ***!
    \***************************************************************************************************/

  /*! exports provided: createDecrementCycleCounter */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesDecrementCycleCounterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createDecrementCycleCounter", function () {
      return createDecrementCycleCounter;
    });
    /* harmony import */


    var _guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/audio-node-output-connection */
    "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js");

    var createDecrementCycleCounter = function createDecrementCycleCounter(connectNativeAudioNodeToNativeAudioNode, cycleCounters, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, getNativeContext, isActiveAudioNode, isNativeOfflineAudioContext) {
      return function (audioNode, count) {
        var cycleCounter = cycleCounters.get(audioNode);

        if (cycleCounter === undefined) {
          throw new Error('Missing the expected cycle count.');
        }

        var nativeContext = getNativeContext(audioNode.context);
        var isOffline = isNativeOfflineAudioContext(nativeContext);

        if (cycleCounter === count) {
          cycleCounters["delete"](audioNode);

          if (!isOffline && isActiveAudioNode(audioNode)) {
            var nativeSourceAudioNode = getNativeAudioNode(audioNode);

            var _getAudioNodeConnecti = getAudioNodeConnections(audioNode),
                _outputs = _getAudioNodeConnecti.outputs;

            var _iterator9 = _createForOfIteratorHelper(_outputs),
                _step9;

            try {
              for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
                var output = _step9.value;

                if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__["isAudioNodeOutputConnection"])(output)) {
                  var nativeDestinationAudioNode = getNativeAudioNode(output[0]);
                  connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);
                } else {
                  var nativeDestinationAudioParam = getNativeAudioParam(output[0]);
                  nativeSourceAudioNode.connect(nativeDestinationAudioParam, output[1]);
                }
              }
            } catch (err) {
              _iterator9.e(err);
            } finally {
              _iterator9.f();
            }
          }
        } else {
          cycleCounters.set(audioNode, cycleCounter - count);
        }
      };
    }; //# sourceMappingURL=/build/es2019/factories/decrement-cycle-counter.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js ***!
    \**************************************************************************************************/

  /*! exports provided: createDelayNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesDelayNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createDelayNodeConstructor", function () {
      return createDelayNodeConstructor;
    });

    var DEFAULT_OPTIONS = {
      channelCount: 2,
      channelCountMode: 'max',
      channelInterpretation: 'speakers',
      delayTime: 0,
      maxDelayTime: 1
    };

    var createDelayNodeConstructor = function createDelayNodeConstructor(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor9) {
        _inherits(DelayNode, _audioNodeConstructor9);

        var _super13 = _createSuper(DelayNode);

        function DelayNode(context) {
          var _this14;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, DelayNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeDelayNode = createNativeDelayNode(nativeContext, mergedOptions);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var delayNodeRenderer = isOffline ? createDelayNodeRenderer(mergedOptions.maxDelayTime) : null;
          _this14 = _super13.call(this, context, false, nativeDelayNode, delayNodeRenderer); // Bug #161: Edge does not export the correct values for maxValue and minValue.

          _this14._delayTime = createAudioParam(_assertThisInitialized(_this14), isOffline, nativeDelayNode.delayTime, mergedOptions.maxDelayTime, 0);
          return _this14;
        }

        _createClass2(DelayNode, [{
          key: "delayTime",
          get: function get() {
            return this._delayTime;
          }
        }]);

        return DelayNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/delay-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js ***!
    \*******************************************************************************************************/

  /*! exports provided: createDelayNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesDelayNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createDelayNodeRendererFactory", function () {
      return createDelayNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createDelayNodeRendererFactory = function createDelayNodeRendererFactory(connectAudioParam, createNativeDelayNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
      return function (maxDelayTime) {
        var renderedNativeDelayNodes = new WeakMap();

        var createDelayNode = /*#__PURE__*/function () {
          var _ref25 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(proxy, nativeOfflineAudioContext, trace) {
            var nativeDelayNode, nativeDelayNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee13$(_context13) {
              while (1) {
                switch (_context13.prev = _context13.next) {
                  case 0:
                    nativeDelayNode = getNativeAudioNode(proxy); // If the initially used nativeDelayNode was not constructed on the same OfflineAudioContext it needs to be created again.

                    nativeDelayNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__["isOwnedByContext"])(nativeDelayNode, nativeOfflineAudioContext);

                    if (!nativeDelayNodeIsOwnedByContext) {
                      options = {
                        channelCount: nativeDelayNode.channelCount,
                        channelCountMode: nativeDelayNode.channelCountMode,
                        channelInterpretation: nativeDelayNode.channelInterpretation,
                        delayTime: nativeDelayNode.delayTime.value,
                        maxDelayTime: maxDelayTime
                      };
                      nativeDelayNode = createNativeDelayNode(nativeOfflineAudioContext, options);
                    }

                    renderedNativeDelayNodes.set(nativeOfflineAudioContext, nativeDelayNode);

                    if (nativeDelayNodeIsOwnedByContext) {
                      _context13.next = 9;
                      break;
                    }

                    _context13.next = 7;
                    return renderAutomation(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);

                  case 7:
                    _context13.next = 11;
                    break;

                  case 9:
                    _context13.next = 11;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.delayTime, nativeDelayNode.delayTime, trace);

                  case 11:
                    _context13.next = 13;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDelayNode, trace);

                  case 13:
                    return _context13.abrupt("return", nativeDelayNode);

                  case 14:
                  case "end":
                    return _context13.stop();
                }
              }
            }, _callee13);
          }));

          return function createDelayNode(_x35, _x36, _x37) {
            return _ref25.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeDelayNode = renderedNativeDelayNodes.get(nativeOfflineAudioContext);

            if (renderedNativeDelayNode !== undefined) {
              return Promise.resolve(renderedNativeDelayNode);
            }

            return createDelayNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/delay-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js ***!
    \****************************************************************************************************************/

  /*! exports provided: createDeleteUnrenderedAudioWorkletNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesDeleteUnrenderedAudioWorkletNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createDeleteUnrenderedAudioWorkletNode", function () {
      return createDeleteUnrenderedAudioWorkletNode;
    });

    var createDeleteUnrenderedAudioWorkletNode = function createDeleteUnrenderedAudioWorkletNode(getUnrenderedAudioWorkletNodes) {
      return function (nativeContext, audioWorkletNode) {
        getUnrenderedAudioWorkletNodes(nativeContext)["delete"](audioWorkletNode);
      };
    }; //# sourceMappingURL=/build/es2019/factories/delete-unrendered-audio-worklet-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js":
  /*!*****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js ***!
    \*****************************************************************************************/

  /*! exports provided: createDetectCycles */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesDetectCyclesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createDetectCycles", function () {
      return createDetectCycles;
    });
    /* harmony import */


    var _guards_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/audio-node */
    "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js");
    /* harmony import */


    var _guards_delay_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../guards/delay-node */
    "./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js");

    var createDetectCycles = function createDetectCycles(audioParamAudioNodeStore, getAudioNodeConnections, getValueForKey) {
      return function detectCycles(chain, nextLink) {
        var audioNode = Object(_guards_audio_node__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(nextLink) ? nextLink : getValueForKey(audioParamAudioNodeStore, nextLink);

        if (Object(_guards_delay_node__WEBPACK_IMPORTED_MODULE_1__["isDelayNode"])(audioNode)) {
          return [];
        }

        if (chain[0] === audioNode) {
          return [chain];
        }

        if (chain.includes(audioNode)) {
          return [];
        }

        var _getAudioNodeConnecti2 = getAudioNodeConnections(audioNode),
            outputs = _getAudioNodeConnecti2.outputs;

        return Array.from(outputs).map(function (outputConnection) {
          return detectCycles([].concat(_toConsumableArray(chain), [audioNode]), outputConnection[0]);
        }).reduce(function (mergedCycles, nestedCycles) {
          return mergedCycles.concat(nestedCycles);
        }, []);
      };
    }; //# sourceMappingURL=/build/es2019/factories/detect-cycles.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js ***!
    \*******************************************************************************************************/

  /*! exports provided: createDisconnectMultipleOutputs */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesDisconnectMultipleOutputsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createDisconnectMultipleOutputs", function () {
      return createDisconnectMultipleOutputs;
    });
    /* harmony import */


    var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js");

    var getOutputAudioNodeAtIndex = function getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output) {
      var outputAudioNode = outputAudioNodes[output];

      if (outputAudioNode === undefined) {
        throw createIndexSizeError();
      }

      return outputAudioNode;
    };

    var createDisconnectMultipleOutputs = function createDisconnectMultipleOutputs(createIndexSizeError) {
      return function (outputAudioNodes) {
        var destinationOrOutput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
        var output = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;
        var input = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

        if (destinationOrOutput === undefined) {
          return outputAudioNodes.forEach(function (outputAudioNode) {
            return outputAudioNode.disconnect();
          });
        }

        if (typeof destinationOrOutput === 'number') {
          return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, destinationOrOutput).disconnect();
        }

        if (Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNode"])(destinationOrOutput)) {
          if (output === undefined) {
            return outputAudioNodes.forEach(function (outputAudioNode) {
              return outputAudioNode.disconnect(destinationOrOutput);
            });
          }

          if (input === undefined) {
            return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);
          }

          return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0, input);
        }

        if (output === undefined) {
          return outputAudioNodes.forEach(function (outputAudioNode) {
            return outputAudioNode.disconnect(destinationOrOutput);
          });
        }

        return getOutputAudioNodeAtIndex(createIndexSizeError, outputAudioNodes, output).disconnect(destinationOrOutput, 0);
      };
    }; //# sourceMappingURL=/build/es2019/factories/disconnect-multiple-outputs.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js ***!
    \****************************************************************************************************************/

  /*! exports provided: createDynamicsCompressorNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesDynamicsCompressorNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createDynamicsCompressorNodeConstructor", function () {
      return createDynamicsCompressorNodeConstructor;
    });

    var DEFAULT_OPTIONS = {
      attack: 0.003,
      channelCount: 2,
      channelCountMode: 'clamped-max',
      channelInterpretation: 'speakers',
      knee: 30,
      ratio: 12,
      release: 0.25,
      threshold: -24
    };

    var createDynamicsCompressorNodeConstructor = function createDynamicsCompressorNodeConstructor(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, createNotSupportedError, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor10) {
        _inherits(DynamicsCompressorNode, _audioNodeConstructor10);

        var _super14 = _createSuper(DynamicsCompressorNode);

        function DynamicsCompressorNode(context) {
          var _this15;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, DynamicsCompressorNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeContext, mergedOptions);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var dynamicsCompressorNodeRenderer = isOffline ? createDynamicsCompressorNodeRenderer() : null;
          _this15 = _super14.call(this, context, false, nativeDynamicsCompressorNode, dynamicsCompressorNodeRenderer); // Bug #110: Edge does not export the correct values for maxValue and minValue.

          _this15._attack = createAudioParam(_assertThisInitialized(_this15), isOffline, nativeDynamicsCompressorNode.attack, 1, 0);
          _this15._knee = createAudioParam(_assertThisInitialized(_this15), isOffline, nativeDynamicsCompressorNode.knee, 40, 0);
          _this15._nativeDynamicsCompressorNode = nativeDynamicsCompressorNode;
          _this15._ratio = createAudioParam(_assertThisInitialized(_this15), isOffline, nativeDynamicsCompressorNode.ratio, 20, 1);
          _this15._release = createAudioParam(_assertThisInitialized(_this15), isOffline, nativeDynamicsCompressorNode.release, 1, 0);
          _this15._threshold = createAudioParam(_assertThisInitialized(_this15), isOffline, nativeDynamicsCompressorNode.threshold, 0, -100);
          return _this15;
        }

        _createClass2(DynamicsCompressorNode, [{
          key: "attack",
          get: function get() {
            return this._attack;
          }
          /*
           * Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet which is why the getter and setter needs
           * to be overwritten here.
           */

        }, {
          key: "channelCount",
          get: function get() {
            return this._nativeDynamicsCompressorNode.channelCount;
          },
          set: function set(value) {
            var previousChannelCount = this._nativeDynamicsCompressorNode.channelCount;
            this._nativeDynamicsCompressorNode.channelCount = value;

            if (value > 2) {
              this._nativeDynamicsCompressorNode.channelCount = previousChannelCount;
              throw createNotSupportedError();
            }
          }
          /*
           * Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max' yet which is why the getter and setter needs to be
           * overwritten here.
           */

        }, {
          key: "channelCountMode",
          get: function get() {
            return this._nativeDynamicsCompressorNode.channelCountMode;
          },
          set: function set(value) {
            var previousChannelCount = this._nativeDynamicsCompressorNode.channelCountMode;
            this._nativeDynamicsCompressorNode.channelCountMode = value;

            if (value === 'max') {
              this._nativeDynamicsCompressorNode.channelCountMode = previousChannelCount;
              throw createNotSupportedError();
            }
          }
        }, {
          key: "knee",
          get: function get() {
            return this._knee;
          }
        }, {
          key: "ratio",
          get: function get() {
            return this._ratio;
          }
        }, {
          key: "reduction",
          get: function get() {
            // Bug #111: Safari returns an AudioParam instead of a number.
            if (typeof this._nativeDynamicsCompressorNode.reduction.value === 'number') {
              return this._nativeDynamicsCompressorNode.reduction.value;
            }

            return this._nativeDynamicsCompressorNode.reduction;
          }
        }, {
          key: "release",
          get: function get() {
            return this._release;
          }
        }, {
          key: "threshold",
          get: function get() {
            return this._threshold;
          }
        }]);

        return DynamicsCompressorNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/dynamics-compressor-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js ***!
    \*********************************************************************************************************************/

  /*! exports provided: createDynamicsCompressorNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesDynamicsCompressorNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createDynamicsCompressorNodeRendererFactory", function () {
      return createDynamicsCompressorNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createDynamicsCompressorNodeRendererFactory = function createDynamicsCompressorNodeRendererFactory(connectAudioParam, createNativeDynamicsCompressorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeDynamicsCompressorNodes = new WeakMap();

        var createDynamicsCompressorNode = /*#__PURE__*/function () {
          var _ref26 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(proxy, nativeOfflineAudioContext, trace) {
            var nativeDynamicsCompressorNode, nativeDynamicsCompressorNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee14$(_context14) {
              while (1) {
                switch (_context14.prev = _context14.next) {
                  case 0:
                    nativeDynamicsCompressorNode = getNativeAudioNode(proxy);
                    /*
                     * If the initially used nativeDynamicsCompressorNode was not constructed on the same OfflineAudioContext it needs to be
                     * created again.
                     */

                    nativeDynamicsCompressorNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__["isOwnedByContext"])(nativeDynamicsCompressorNode, nativeOfflineAudioContext);

                    if (!nativeDynamicsCompressorNodeIsOwnedByContext) {
                      options = {
                        attack: nativeDynamicsCompressorNode.attack.value,
                        channelCount: nativeDynamicsCompressorNode.channelCount,
                        channelCountMode: nativeDynamicsCompressorNode.channelCountMode,
                        channelInterpretation: nativeDynamicsCompressorNode.channelInterpretation,
                        knee: nativeDynamicsCompressorNode.knee.value,
                        ratio: nativeDynamicsCompressorNode.ratio.value,
                        release: nativeDynamicsCompressorNode.release.value,
                        threshold: nativeDynamicsCompressorNode.threshold.value
                      };
                      nativeDynamicsCompressorNode = createNativeDynamicsCompressorNode(nativeOfflineAudioContext, options);
                    }

                    renderedNativeDynamicsCompressorNodes.set(nativeOfflineAudioContext, nativeDynamicsCompressorNode);

                    if (nativeDynamicsCompressorNodeIsOwnedByContext) {
                      _context14.next = 17;
                      break;
                    }

                    _context14.next = 7;
                    return renderAutomation(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);

                  case 7:
                    _context14.next = 9;
                    return renderAutomation(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);

                  case 9:
                    _context14.next = 11;
                    return renderAutomation(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);

                  case 11:
                    _context14.next = 13;
                    return renderAutomation(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);

                  case 13:
                    _context14.next = 15;
                    return renderAutomation(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);

                  case 15:
                    _context14.next = 27;
                    break;

                  case 17:
                    _context14.next = 19;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.attack, nativeDynamicsCompressorNode.attack, trace);

                  case 19:
                    _context14.next = 21;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.knee, nativeDynamicsCompressorNode.knee, trace);

                  case 21:
                    _context14.next = 23;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.ratio, nativeDynamicsCompressorNode.ratio, trace);

                  case 23:
                    _context14.next = 25;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.release, nativeDynamicsCompressorNode.release, trace);

                  case 25:
                    _context14.next = 27;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.threshold, nativeDynamicsCompressorNode.threshold, trace);

                  case 27:
                    _context14.next = 29;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeDynamicsCompressorNode, trace);

                  case 29:
                    return _context14.abrupt("return", nativeDynamicsCompressorNode);

                  case 30:
                  case "end":
                    return _context14.stop();
                }
              }
            }, _callee14);
          }));

          return function createDynamicsCompressorNode(_x38, _x39, _x40) {
            return _ref26.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeDynamicsCompressorNode = renderedNativeDynamicsCompressorNodes.get(nativeOfflineAudioContext);

            if (renderedNativeDynamicsCompressorNode !== undefined) {
              return Promise.resolve(renderedNativeDynamicsCompressorNode);
            }

            return createDynamicsCompressorNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/dynamics-compressor-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js ***!
    \******************************************************************************************/

  /*! exports provided: createEncodingError */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesEncodingErrorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createEncodingError", function () {
      return createEncodingError;
    });

    var createEncodingError = function createEncodingError() {
      try {
        return new DOMException('', 'EncodingError');
      } catch (err) {
        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.
        err.code = 0;
        err.name = 'EncodingError';
        return err;
      }
    }; //# sourceMappingURL=/build/es2019/factories/encoding-error.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js ***!
    \*******************************************************************************************/

  /*! exports provided: createEvaluateSource */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesEvaluateSourceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createEvaluateSource", function () {
      return createEvaluateSource;
    });

    var createEvaluateSource = function createEvaluateSource(window) {
      return function (source) {
        return new Promise(function (resolve, reject) {
          if (window === null) {
            reject(new SyntaxError());
            return;
          }

          var head = window.document.head;

          if (head === null) {
            reject(new SyntaxError());
          } else {
            var script = window.document.createElement('script'); // @todo Safari doesn't like URLs with a type of 'application/javascript; charset=utf-8'.

            var blob = new Blob([source], {
              type: 'application/javascript'
            });
            var url = URL.createObjectURL(blob);
            var originalOnErrorHandler = window.onerror;

            var removeErrorEventListenerAndRevokeUrl = function removeErrorEventListenerAndRevokeUrl() {
              window.onerror = originalOnErrorHandler;
              URL.revokeObjectURL(url);
            };

            window.onerror = function (message, src, lineno, colno, error) {
              // @todo Edge thinks the source is the one of the html document.
              if (src === url || src === window.location.href && lineno === 1 && colno === 1) {
                removeErrorEventListenerAndRevokeUrl();
                reject(error);
                return false;
              }

              if (originalOnErrorHandler !== null) {
                return originalOnErrorHandler(message, src, lineno, colno, error);
              }
            };

            script.onerror = function () {
              removeErrorEventListenerAndRevokeUrl();
              reject(new SyntaxError());
            };

            script.onload = function () {
              removeErrorEventListenerAndRevokeUrl();
              resolve();
            };

            script.src = url;
            script.type = 'module';
            head.appendChild(script);
          }
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/evaluate-source.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js ***!
    \****************************************************************************************************/

  /*! exports provided: createEventTargetConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesEventTargetConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createEventTargetConstructor", function () {
      return createEventTargetConstructor;
    });

    var createEventTargetConstructor = function createEventTargetConstructor(wrapEventListener) {
      return /*#__PURE__*/function () {
        function EventTarget(_nativeEventTarget) {
          _classCallCheck2(this, EventTarget);

          this._nativeEventTarget = _nativeEventTarget;
          this._listeners = new WeakMap();
        }

        _createClass2(EventTarget, [{
          key: "addEventListener",
          value: function addEventListener(type, listener, options) {
            if (listener !== null) {
              var wrappedEventListener = this._listeners.get(listener);

              if (wrappedEventListener === undefined) {
                wrappedEventListener = wrapEventListener(this, listener);

                if (typeof listener === 'function') {
                  this._listeners.set(listener, wrappedEventListener);
                }
              }

              this._nativeEventTarget.addEventListener(type, wrappedEventListener, options);
            }
          }
        }, {
          key: "dispatchEvent",
          value: function dispatchEvent(event) {
            return this._nativeEventTarget.dispatchEvent(event);
          }
        }, {
          key: "removeEventListener",
          value: function removeEventListener(type, listener, options) {
            var wrappedEventListener = listener === null ? undefined : this._listeners.get(listener);

            this._nativeEventTarget.removeEventListener(type, wrappedEventListener === undefined ? null : wrappedEventListener, options);
          }
        }]);

        return EventTarget;
      }();
    }; //# sourceMappingURL=/build/es2019/factories/event-target-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js ***!
    \*****************************************************************************************************************/

  /*! exports provided: createExposeCurrentFrameAndCurrentTime */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesExposeCurrentFrameAndCurrentTimeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createExposeCurrentFrameAndCurrentTime", function () {
      return createExposeCurrentFrameAndCurrentTime;
    });

    var createExposeCurrentFrameAndCurrentTime = function createExposeCurrentFrameAndCurrentTime(window) {
      return function (currentTime, sampleRate, fn) {
        Object.defineProperties(window, {
          currentFrame: {
            configurable: true,
            get: function get() {
              return Math.round(currentTime * sampleRate);
            }
          },
          currentTime: {
            configurable: true,
            get: function get() {
              return currentTime;
            }
          }
        });

        try {
          return fn();
        } finally {
          if (window !== null) {
            delete window.currentFrame;
            delete window.currentTime;
          }
        }
      };
    }; //# sourceMappingURL=/build/es2019/factories/expose-current-frame-and-current-time.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js":
  /*!****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js ***!
    \****************************************************************************************/

  /*! exports provided: createFetchSource */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesFetchSourceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createFetchSource", function () {
      return createFetchSource;
    });

    var createFetchSource = function createFetchSource(createAbortError) {
      return /*#__PURE__*/function () {
        var _ref27 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(url) {
          var response;
          return regeneratorRuntime.wrap(function _callee15$(_context15) {
            while (1) {
              switch (_context15.prev = _context15.next) {
                case 0:
                  _context15.prev = 0;
                  _context15.next = 3;
                  return fetch(url);

                case 3:
                  response = _context15.sent;

                  if (!response.ok) {
                    _context15.next = 6;
                    break;
                  }

                  return _context15.abrupt("return", response.text());

                case 6:
                  _context15.next = 10;
                  break;

                case 8:
                  _context15.prev = 8;
                  _context15.t0 = _context15["catch"](0);

                case 10:
                  throw createAbortError();

                case 11:
                case "end":
                  return _context15.stop();
              }
            }
          }, _callee15, null, [[0, 8]]);
        }));

        return function (_x41) {
          return _ref27.apply(this, arguments);
        };
      }();
    }; //# sourceMappingURL=/build/es2019/factories/fetch-source.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js ***!
    \*************************************************************************************************/

  /*! exports provided: createGainNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesGainNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createGainNodeConstructor", function () {
      return createGainNodeConstructor;
    });
    /* harmony import */


    var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../constants */
    "./node_modules/standardized-audio-context/build/es2019/constants.js");

    var DEFAULT_OPTIONS = {
      channelCount: 2,
      channelCountMode: 'max',
      channelInterpretation: 'speakers',
      gain: 1
    };

    var createGainNodeConstructor = function createGainNodeConstructor(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor11) {
        _inherits(GainNode, _audioNodeConstructor11);

        var _super15 = _createSuper(GainNode);

        function GainNode(context) {
          var _this16;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, GainNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeGainNode = createNativeGainNode(nativeContext, mergedOptions);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var gainNodeRenderer = isOffline ? createGainNodeRenderer() : null;
          _this16 = _super15.call(this, context, false, nativeGainNode, gainNodeRenderer); // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue.

          _this16._gain = createAudioParam(_assertThisInitialized(_this16), isOffline, nativeGainNode.gain, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
          return _this16;
        }

        _createClass2(GainNode, [{
          key: "gain",
          get: function get() {
            return this._gain;
          }
        }]);

        return GainNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/gain-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js ***!
    \******************************************************************************************************/

  /*! exports provided: createGainNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesGainNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createGainNodeRendererFactory", function () {
      return createGainNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createGainNodeRendererFactory = function createGainNodeRendererFactory(connectAudioParam, createNativeGainNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeGainNodes = new WeakMap();

        var createGainNode = /*#__PURE__*/function () {
          var _ref28 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(proxy, nativeOfflineAudioContext, trace) {
            var nativeGainNode, nativeGainNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee16$(_context16) {
              while (1) {
                switch (_context16.prev = _context16.next) {
                  case 0:
                    nativeGainNode = getNativeAudioNode(proxy); // If the initially used nativeGainNode was not constructed on the same OfflineAudioContext it needs to be created again.

                    nativeGainNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__["isOwnedByContext"])(nativeGainNode, nativeOfflineAudioContext);

                    if (!nativeGainNodeIsOwnedByContext) {
                      options = {
                        channelCount: nativeGainNode.channelCount,
                        channelCountMode: nativeGainNode.channelCountMode,
                        channelInterpretation: nativeGainNode.channelInterpretation,
                        gain: nativeGainNode.gain.value
                      };
                      nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, options);
                    }

                    renderedNativeGainNodes.set(nativeOfflineAudioContext, nativeGainNode);

                    if (nativeGainNodeIsOwnedByContext) {
                      _context16.next = 9;
                      break;
                    }

                    _context16.next = 7;
                    return renderAutomation(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);

                  case 7:
                    _context16.next = 11;
                    break;

                  case 9:
                    _context16.next = 11;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.gain, nativeGainNode.gain, trace);

                  case 11:
                    _context16.next = 13;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeGainNode, trace);

                  case 13:
                    return _context16.abrupt("return", nativeGainNode);

                  case 14:
                  case "end":
                    return _context16.stop();
                }
              }
            }, _callee16);
          }));

          return function createGainNode(_x42, _x43, _x44) {
            return _ref28.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeGainNode = renderedNativeGainNodes.get(nativeOfflineAudioContext);

            if (renderedNativeGainNode !== undefined) {
              return Promise.resolve(renderedNativeGainNode);
            }

            return createGainNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/gain-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js ***!
    \***************************************************************************************************/

  /*! exports provided: createGetAudioNodeRenderer */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesGetAudioNodeRendererJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createGetAudioNodeRenderer", function () {
      return createGetAudioNodeRenderer;
    });

    var createGetAudioNodeRenderer = function createGetAudioNodeRenderer(getAudioNodeConnections) {
      return function (audioNode) {
        var audioNodeConnections = getAudioNodeConnections(audioNode);

        if (audioNodeConnections.renderer === null) {
          throw new Error('Missing the renderer of the given AudioNode in the audio graph.');
        }

        return audioNodeConnections.renderer;
      };
    }; //# sourceMappingURL=/build/es2019/factories/get-audio-node-renderer.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js ***!
    \****************************************************************************************************/

  /*! exports provided: createGetAudioParamRenderer */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesGetAudioParamRendererJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createGetAudioParamRenderer", function () {
      return createGetAudioParamRenderer;
    });

    var createGetAudioParamRenderer = function createGetAudioParamRenderer(getAudioParamConnections) {
      return function (audioParam) {
        var audioParamConnections = getAudioParamConnections(audioParam);

        if (audioParamConnections.renderer === null) {
          throw new Error('Missing the renderer of the given AudioParam in the audio graph.');
        }

        return audioParamConnections.renderer;
      };
    }; //# sourceMappingURL=/build/es2019/factories/get-audio-param-renderer.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/get-backup-native-context.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-backup-native-context.js ***!
    \*****************************************************************************************************/

  /*! exports provided: createGetBackupNativeContext */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesGetBackupNativeContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createGetBackupNativeContext", function () {
      return createGetBackupNativeContext;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");

    var createGetBackupNativeContext = function createGetBackupNativeContext(isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor) {
      return function (nativeContext) {
        /*
         * Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet which is why there needs to be no
         * backupNativeContext in that case.
         */
        if (nativeContext.state === 'closed' && nativeAudioContextConstructor !== null && nativeAudioContextConstructor.name !== 'webkitAudioContext') {
          if (isNativeOfflineAudioContext(nativeContext)) {
            var backupNativeContext = _globals__WEBPACK_IMPORTED_MODULE_0__["BACKUP_NATIVE_CONTEXT_STORE"].get(nativeContext);

            if (backupNativeContext !== undefined) {
              return backupNativeContext;
            }

            if (nativeOfflineAudioContextConstructor !== null) {
              // @todo Copy the attached AudioWorkletProcessors and other settings.
              var bckpNtveCntxt = new nativeOfflineAudioContextConstructor(1, 1, 44100);

              _globals__WEBPACK_IMPORTED_MODULE_0__["BACKUP_NATIVE_CONTEXT_STORE"].set(nativeContext, bckpNtveCntxt);

              return bckpNtveCntxt;
            }
          } else {
            var _backupNativeContext = _globals__WEBPACK_IMPORTED_MODULE_0__["BACKUP_NATIVE_CONTEXT_STORE"].get(nativeContext);

            if (_backupNativeContext !== undefined) {
              return _backupNativeContext;
            } // @todo Copy the attached AudioWorkletProcessors and other settings.


            var _bckpNtveCntxt = new nativeAudioContextConstructor();

            _globals__WEBPACK_IMPORTED_MODULE_0__["BACKUP_NATIVE_CONTEXT_STORE"].set(nativeContext, _bckpNtveCntxt);

            return _bckpNtveCntxt;
          }
        }

        return null;
      };
    }; //# sourceMappingURL=/build/es2019/factories/get-backup-native-context.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js ***!
    \**********************************************************************************************/

  /*! exports provided: createGetNativeContext */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesGetNativeContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createGetNativeContext", function () {
      return createGetNativeContext;
    });
    /* harmony import */


    var _invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./invalid-state-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");

    var createGetNativeContext = function createGetNativeContext(contextStore) {
      return function (context) {
        var nativeContext = contextStore.get(context);

        if (nativeContext === undefined) {
          throw Object(_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidStateError"])();
        }

        return nativeContext;
      };
    }; //# sourceMappingURL=/build/es2019/factories/get-native-context.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js ***!
    \**************************************************************************************************************/

  /*! exports provided: createGetUnrenderedAudioWorkletNodes */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesGetUnrenderedAudioWorkletNodesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createGetUnrenderedAudioWorkletNodes", function () {
      return createGetUnrenderedAudioWorkletNodes;
    });

    var createGetUnrenderedAudioWorkletNodes = function createGetUnrenderedAudioWorkletNodes(unrenderedAudioWorkletNodeStore) {
      return function (nativeContext) {
        var unrenderedAudioWorkletNodes = unrenderedAudioWorkletNodeStore.get(nativeContext);

        if (unrenderedAudioWorkletNodes === undefined) {
          throw new Error('The context has no set of AudioWorkletNodes.');
        }

        return unrenderedAudioWorkletNodes;
      };
    }; //# sourceMappingURL=/build/es2019/factories/get-unrendered-audio-worklet-nodes.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js ***!
    \*******************************************************************************************************/

  /*! exports provided: createIIRFilterNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIirFilterNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIIRFilterNodeConstructor", function () {
      return createIIRFilterNodeConstructor;
    });
    /* harmony import */


    var _helpers_wrap_iir_filter_node_get_frequency_response_method__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/wrap-iir-filter-node-get-frequency-response-method */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js");

    var DEFAULT_OPTIONS = {
      channelCount: 2,
      channelCountMode: 'max',
      channelInterpretation: 'speakers'
    };

    var createIIRFilterNodeConstructor = function createIIRFilterNodeConstructor(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor12) {
        _inherits(IIRFilterNode, _audioNodeConstructor12);

        var _super16 = _createSuper(IIRFilterNode);

        function IIRFilterNode(context, options) {
          var _this17;

          _classCallCheck2(this, IIRFilterNode);

          var nativeContext = getNativeContext(context);
          var isOffline = isNativeOfflineAudioContext(nativeContext);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeIIRFilterNode = createNativeIIRFilterNode(nativeContext, isOffline ? null : context.baseLatency, mergedOptions);
          var iirFilterNodeRenderer = isOffline ? createIIRFilterNodeRenderer(mergedOptions.feedback, mergedOptions.feedforward) : null;
          _this17 = _super16.call(this, context, false, nativeIIRFilterNode, iirFilterNodeRenderer); // Bug #23 & #24: FirefoxDeveloper does not throw an InvalidAccessError.
          // @todo Write a test which allows other browsers to remain unpatched.

          Object(_helpers_wrap_iir_filter_node_get_frequency_response_method__WEBPACK_IMPORTED_MODULE_0__["wrapIIRFilterNodeGetFrequencyResponseMethod"])(nativeIIRFilterNode);
          _this17._nativeIIRFilterNode = nativeIIRFilterNode;
          return _this17;
        }

        _createClass2(IIRFilterNode, [{
          key: "getFrequencyResponse",
          value: function getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
            return this._nativeIIRFilterNode.getFrequencyResponse(frequencyHz, magResponse, phaseResponse);
          }
        }]);

        return IIRFilterNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/iir-filter-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js ***!
    \************************************************************************************************************/

  /*! exports provided: createIIRFilterNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIirFilterNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIIRFilterNodeRendererFactory", function () {
      return createIIRFilterNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/filter-buffer */
    "./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js");
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var filterFullBuffer = function filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward) {
      var feedbackLength = feedback.length;
      var feedforwardLength = feedforward.length;
      var minLength = Math.min(feedbackLength, feedforwardLength);

      if (feedback[0] !== 1) {
        for (var i = 0; i < feedbackLength; i += 1) {
          feedforward[i] /= feedback[0];
        }

        for (var _i5 = 1; _i5 < feedforwardLength; _i5 += 1) {
          feedback[_i5] /= feedback[0];
        }
      }

      var bufferLength = 32;
      var xBuffer = new Float32Array(bufferLength);
      var yBuffer = new Float32Array(bufferLength);
      var filteredBuffer = nativeOfflineAudioContext.createBuffer(renderedBuffer.numberOfChannels, renderedBuffer.length, renderedBuffer.sampleRate);
      var numberOfChannels = renderedBuffer.numberOfChannels;

      for (var _i6 = 0; _i6 < numberOfChannels; _i6 += 1) {
        var input = renderedBuffer.getChannelData(_i6);
        var output = filteredBuffer.getChannelData(_i6);
        xBuffer.fill(0);
        yBuffer.fill(0);
        Object(_helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_0__["filterBuffer"])(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, 0, bufferLength, input, output);
      }

      return filteredBuffer;
    };

    var createIIRFilterNodeRendererFactory = function createIIRFilterNodeRendererFactory(createNativeAudioBufferSourceNode, createNativeAudioNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext) {
      return function (feedback, feedforward) {
        var renderedNativeAudioNodes = new WeakMap();
        var filteredBufferPromise = null;

        var createAudioNode = /*#__PURE__*/function () {
          var _ref29 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(proxy, nativeOfflineAudioContext, trace) {
            var nativeAudioBufferSourceNode, nativeIIRFilterNode, nativeIIRFilterNodeIsOwnedByContext, partialOfflineAudioContext, filteredBuffer;
            return regeneratorRuntime.wrap(function _callee18$(_context18) {
              while (1) {
                switch (_context18.prev = _context18.next) {
                  case 0:
                    nativeAudioBufferSourceNode = null;
                    nativeIIRFilterNode = getNativeAudioNode(proxy); // If the initially used nativeIIRFilterNode was not constructed on the same OfflineAudioContext it needs to be created again.

                    nativeIIRFilterNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeIIRFilterNode, nativeOfflineAudioContext); // Bug #9: Safari does not support IIRFilterNodes.

                    if (nativeOfflineAudioContext.createIIRFilter === undefined) {
                      nativeAudioBufferSourceNode = createNativeAudioBufferSourceNode(nativeOfflineAudioContext, {
                        buffer: null,
                        channelCount: 2,
                        channelCountMode: 'max',
                        channelInterpretation: 'speakers',
                        loop: false,
                        loopEnd: 0,
                        loopStart: 0,
                        playbackRate: 1
                      });
                    } else if (!nativeIIRFilterNodeIsOwnedByContext) {
                      nativeIIRFilterNode = createNativeAudioNode(nativeOfflineAudioContext, function (ntvCntxt) {
                        return ntvCntxt.createIIRFilter(feedforward, feedback);
                      });
                    }

                    renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeAudioBufferSourceNode === null ? nativeIIRFilterNode : nativeAudioBufferSourceNode);

                    if (!(nativeAudioBufferSourceNode !== null)) {
                      _context18.next = 17;
                      break;
                    }

                    if (!(filteredBufferPromise === null)) {
                      _context18.next = 11;
                      break;
                    }

                    if (!(nativeOfflineAudioContextConstructor === null)) {
                      _context18.next = 9;
                      break;
                    }

                    throw new Error('Missing the native OfflineAudioContext constructor.');

                  case 9:
                    partialOfflineAudioContext = new nativeOfflineAudioContextConstructor( // Bug #47: The AudioDestinationNode in Edge and Safari gets not initialized correctly.
                    proxy.context.destination.channelCount, // Bug #17: Safari does not yet expose the length.
                    proxy.context.length, nativeOfflineAudioContext.sampleRate);
                    filteredBufferPromise = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17() {
                      var renderedBuffer;
                      return regeneratorRuntime.wrap(function _callee17$(_context17) {
                        while (1) {
                          switch (_context17.prev = _context17.next) {
                            case 0:
                              _context17.next = 2;
                              return renderInputsOfAudioNode(proxy, partialOfflineAudioContext, partialOfflineAudioContext.destination, trace);

                            case 2:
                              _context17.next = 4;
                              return renderNativeOfflineAudioContext(partialOfflineAudioContext);

                            case 4:
                              renderedBuffer = _context17.sent;
                              return _context17.abrupt("return", filterFullBuffer(renderedBuffer, nativeOfflineAudioContext, feedback, feedforward));

                            case 6:
                            case "end":
                              return _context17.stop();
                          }
                        }
                      }, _callee17);
                    }))();

                  case 11:
                    _context18.next = 13;
                    return filteredBufferPromise;

                  case 13:
                    filteredBuffer = _context18.sent;
                    nativeAudioBufferSourceNode.buffer = filteredBuffer;
                    nativeAudioBufferSourceNode.start(0);
                    return _context18.abrupt("return", nativeAudioBufferSourceNode);

                  case 17:
                    _context18.next = 19;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeIIRFilterNode, trace);

                  case 19:
                    return _context18.abrupt("return", nativeIIRFilterNode);

                  case 20:
                  case "end":
                    return _context18.stop();
                }
              }
            }, _callee18);
          }));

          return function createAudioNode(_x45, _x46, _x47) {
            return _ref29.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeAudioNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);

            if (renderedNativeAudioNode !== undefined) {
              return Promise.resolve(renderedNativeAudioNode);
            }

            return createAudioNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/iir-filter-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js ***!
    \***********************************************************************************************************/

  /*! exports provided: createIncrementCycleCounterFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIncrementCycleCounterFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIncrementCycleCounterFactory", function () {
      return createIncrementCycleCounterFactory;
    });
    /* harmony import */


    var _guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/audio-node-output-connection */
    "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js");

    var createIncrementCycleCounterFactory = function createIncrementCycleCounterFactory(cycleCounters, disconnectNativeAudioNodeFromNativeAudioNode, getAudioNodeConnections, getNativeAudioNode, getNativeAudioParam, isActiveAudioNode) {
      return function (isOffline) {
        return function (audioNode, count) {
          var cycleCounter = cycleCounters.get(audioNode);

          if (cycleCounter === undefined) {
            if (!isOffline && isActiveAudioNode(audioNode)) {
              var nativeSourceAudioNode = getNativeAudioNode(audioNode);

              var _getAudioNodeConnecti3 = getAudioNodeConnections(audioNode),
                  _outputs2 = _getAudioNodeConnecti3.outputs;

              var _iterator10 = _createForOfIteratorHelper(_outputs2),
                  _step10;

              try {
                for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
                  var output = _step10.value;

                  if (Object(_guards_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_0__["isAudioNodeOutputConnection"])(output)) {
                    var nativeDestinationAudioNode = getNativeAudioNode(output[0]);
                    disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output[1], output[2]);
                  } else {
                    var nativeDestinationAudioParam = getNativeAudioParam(output[0]);
                    nativeSourceAudioNode.disconnect(nativeDestinationAudioParam, output[1]);
                  }
                }
              } catch (err) {
                _iterator10.e(err);
              } finally {
                _iterator10.f();
              }
            }

            cycleCounters.set(audioNode, count);
          } else {
            cycleCounters.set(audioNode, cycleCounter + count);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/increment-cycle-counter-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js ***!
    \********************************************************************************************/

  /*! exports provided: createIndexSizeError */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIndexSizeErrorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIndexSizeError", function () {
      return createIndexSizeError;
    });

    var createIndexSizeError = function createIndexSizeError() {
      try {
        return new DOMException('', 'IndexSizeError');
      } catch (err) {
        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.
        err.code = 1;
        err.name = 'IndexSizeError';
        return err;
      }
    }; //# sourceMappingURL=/build/es2019/factories/index-size-error.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js ***!
    \************************************************************************************************/

  /*! exports provided: createInvalidAccessError */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesInvalidAccessErrorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createInvalidAccessError", function () {
      return createInvalidAccessError;
    });

    var createInvalidAccessError = function createInvalidAccessError() {
      try {
        return new DOMException('', 'InvalidAccessError');
      } catch (err) {
        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.
        err.code = 15;
        err.name = 'InvalidAccessError';
        return err;
      }
    }; //# sourceMappingURL=/build/es2019/factories/invalid-access-error.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js ***!
    \***********************************************************************************************/

  /*! exports provided: createInvalidStateError */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesInvalidStateErrorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createInvalidStateError", function () {
      return createInvalidStateError;
    });

    var createInvalidStateError = function createInvalidStateError() {
      try {
        return new DOMException('', 'InvalidStateError');
      } catch (err) {
        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.
        err.code = 11;
        err.name = 'InvalidStateError';
        return err;
      }
    }; //# sourceMappingURL=/build/es2019/factories/invalid-state-error.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js ***!
    \************************************************************************************************/

  /*! exports provided: createIsAnyAudioContext */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIsAnyAudioContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIsAnyAudioContext", function () {
      return createIsAnyAudioContext;
    });

    var createIsAnyAudioContext = function createIsAnyAudioContext(contextStore, isNativeAudioContext) {
      return function (anything) {
        var nativeContext = contextStore.get(anything);
        return isNativeAudioContext(nativeContext) || isNativeAudioContext(anything);
      };
    }; //# sourceMappingURL=/build/es2019/factories/is-any-audio-context.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js ***!
    \*********************************************************************************************/

  /*! exports provided: createIsAnyAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIsAnyAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIsAnyAudioNode", function () {
      return createIsAnyAudioNode;
    });

    var createIsAnyAudioNode = function createIsAnyAudioNode(audioNodeStore, isNativeAudioNode) {
      return function (anything) {
        return audioNodeStore.has(anything) || isNativeAudioNode(anything);
      };
    }; //# sourceMappingURL=/build/es2019/factories/is-any-audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js ***!
    \**********************************************************************************************/

  /*! exports provided: createIsAnyAudioParam */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIsAnyAudioParamJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIsAnyAudioParam", function () {
      return createIsAnyAudioParam;
    });

    var createIsAnyAudioParam = function createIsAnyAudioParam(audioParamStore, isNativeAudioParam) {
      return function (anything) {
        return audioParamStore.has(anything) || isNativeAudioParam(anything);
      };
    }; //# sourceMappingURL=/build/es2019/factories/is-any-audio-param.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js ***!
    \********************************************************************************************************/

  /*! exports provided: createIsAnyOfflineAudioContext */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIsAnyOfflineAudioContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIsAnyOfflineAudioContext", function () {
      return createIsAnyOfflineAudioContext;
    });

    var createIsAnyOfflineAudioContext = function createIsAnyOfflineAudioContext(contextStore, isNativeOfflineAudioContext) {
      return function (anything) {
        var nativeContext = contextStore.get(anything);
        return isNativeOfflineAudioContext(nativeContext) || isNativeOfflineAudioContext(anything);
      };
    }; //# sourceMappingURL=/build/es2019/factories/is-any-offline-audio-context.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js ***!
    \***************************************************************************************************/

  /*! exports provided: createIsNativeAudioContext */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIsNativeAudioContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIsNativeAudioContext", function () {
      return createIsNativeAudioContext;
    });

    var createIsNativeAudioContext = function createIsNativeAudioContext(nativeAudioContextConstructor) {
      return function (anything) {
        return nativeAudioContextConstructor !== null && anything instanceof nativeAudioContextConstructor;
      };
    }; //# sourceMappingURL=/build/es2019/factories/is-native-audio-context.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js ***!
    \************************************************************************************************/

  /*! exports provided: createIsNativeAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIsNativeAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIsNativeAudioNode", function () {
      return createIsNativeAudioNode;
    });

    var createIsNativeAudioNode = function createIsNativeAudioNode(window) {
      return function (anything) {
        return window !== null && typeof window.AudioNode === 'function' && anything instanceof window.AudioNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/is-native-audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js ***!
    \*************************************************************************************************/

  /*! exports provided: createIsNativeAudioParam */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIsNativeAudioParamJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIsNativeAudioParam", function () {
      return createIsNativeAudioParam;
    });

    var createIsNativeAudioParam = function createIsNativeAudioParam(window) {
      return function (anything) {
        return window !== null && typeof window.AudioParam === 'function' && anything instanceof window.AudioParam;
      };
    }; //# sourceMappingURL=/build/es2019/factories/is-native-audio-param.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js ***!
    \*********************************************************************************************/

  /*! exports provided: createIsNativeContext */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIsNativeContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIsNativeContext", function () {
      return createIsNativeContext;
    });

    var createIsNativeContext = function createIsNativeContext(isNativeAudioContext, isNativeOfflineAudioContext) {
      return function (anything) {
        return isNativeAudioContext(anything) || isNativeOfflineAudioContext(anything);
      };
    }; //# sourceMappingURL=/build/es2019/factories/is-native-context.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js ***!
    \***********************************************************************************************************/

  /*! exports provided: createIsNativeOfflineAudioContext */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIsNativeOfflineAudioContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIsNativeOfflineAudioContext", function () {
      return createIsNativeOfflineAudioContext;
    });

    var createIsNativeOfflineAudioContext = function createIsNativeOfflineAudioContext(nativeOfflineAudioContextConstructor) {
      return function (anything) {
        return nativeOfflineAudioContextConstructor !== null && anything instanceof nativeOfflineAudioContextConstructor;
      };
    }; //# sourceMappingURL=/build/es2019/factories/is-native-offline-audio-context.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js ***!
    \*********************************************************************************************/

  /*! exports provided: createIsSecureContext */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIsSecureContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIsSecureContext", function () {
      return createIsSecureContext;
    });

    var createIsSecureContext = function createIsSecureContext(window) {
      return window !== null && window.isSecureContext;
    }; //# sourceMappingURL=/build/es2019/factories/is-secure-context.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js ***!
    \************************************************************************************************/

  /*! exports provided: createIsSupportedPromise */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesIsSupportedPromiseJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createIsSupportedPromise", function () {
      return createIsSupportedPromise;
    });

    var createIsSupportedPromise = /*#__PURE__*/function () {
      var _ref31 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(cacheTestResult, testAudioBufferCopyChannelMethodsSubarraySupport, testAudioContextCloseMethodSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextOptionsSupport, testAudioNodeConnectMethodSupport, testAudioWorkletProcessorNoOutputsSupport, testChannelMergerNodeChannelCountSupport, testConstantSourceNodeAccurateSchedulingSupport, testConvolverNodeBufferReassignabilitySupport, testIsSecureContextSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testStereoPannerNodeDefaultValueSupport, testTransferablesSupport) {
        var results;
        return regeneratorRuntime.wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                if (!(cacheTestResult(testAudioBufferCopyChannelMethodsSubarraySupport, testAudioBufferCopyChannelMethodsSubarraySupport) && cacheTestResult(testAudioContextCloseMethodSupport, testAudioContextCloseMethodSupport) && cacheTestResult(testAudioContextOptionsSupport, testAudioContextOptionsSupport) && cacheTestResult(testAudioNodeConnectMethodSupport, testAudioNodeConnectMethodSupport) && cacheTestResult(testChannelMergerNodeChannelCountSupport, testChannelMergerNodeChannelCountSupport) && cacheTestResult(testConstantSourceNodeAccurateSchedulingSupport, testConstantSourceNodeAccurateSchedulingSupport) && cacheTestResult(testConvolverNodeBufferReassignabilitySupport, testConvolverNodeBufferReassignabilitySupport) && cacheTestResult(testIsSecureContextSupport, testIsSecureContextSupport) && cacheTestResult(testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport, testMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport))) {
                  _context19.next = 5;
                  break;
                }

                _context19.next = 3;
                return Promise.all([cacheTestResult(testAudioContextDecodeAudioDataMethodTypeErrorSupport, testAudioContextDecodeAudioDataMethodTypeErrorSupport), cacheTestResult(testAudioWorkletProcessorNoOutputsSupport, testAudioWorkletProcessorNoOutputsSupport), cacheTestResult(testStereoPannerNodeDefaultValueSupport, testStereoPannerNodeDefaultValueSupport), cacheTestResult(testTransferablesSupport, testTransferablesSupport)]);

              case 3:
                results = _context19.sent;
                return _context19.abrupt("return", results.every(function (result) {
                  return result;
                }));

              case 5:
                return _context19.abrupt("return", false);

              case 6:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19);
      }));

      return function createIsSupportedPromise(_x48, _x49, _x50, _x51, _x52, _x53, _x54, _x55, _x56, _x57, _x58, _x59, _x60, _x61) {
        return _ref31.apply(this, arguments);
      };
    }(); //# sourceMappingURL=/build/es2019/factories/is-supported-promise.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js":
  /*!***********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js ***!
    \***********************************************************************************************************************/

  /*! exports provided: createMediaElementAudioSourceNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesMediaElementAudioSourceNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createMediaElementAudioSourceNodeConstructor", function () {
      return createMediaElementAudioSourceNodeConstructor;
    });

    var createMediaElementAudioSourceNodeConstructor = function createMediaElementAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor13) {
        _inherits(MediaElementAudioSourceNode, _audioNodeConstructor13);

        var _super17 = _createSuper(MediaElementAudioSourceNode);

        function MediaElementAudioSourceNode(context, options) {
          var _this18;

          _classCallCheck2(this, MediaElementAudioSourceNode);

          var nativeContext = getNativeContext(context);
          var nativeMediaElementAudioSourceNode = createNativeMediaElementAudioSourceNode(nativeContext, options); // Bug #171: Safari allows to create a MediaElementAudioSourceNode with an OfflineAudioContext.

          if (isNativeOfflineAudioContext(nativeContext)) {
            throw TypeError();
          }

          _this18 = _super17.call(this, context, true, nativeMediaElementAudioSourceNode, null); // Bug #63: Edge does not expose the mediaElement yet.

          _this18._mediaElement = options.mediaElement;
          _this18._nativeMediaElementAudioSourceNode = nativeMediaElementAudioSourceNode;
          return _this18;
        }

        _createClass2(MediaElementAudioSourceNode, [{
          key: "mediaElement",
          get: function get() {
            return this._nativeMediaElementAudioSourceNode.mediaElement === undefined ? this._mediaElement : this._nativeMediaElementAudioSourceNode.mediaElement;
          }
        }]);

        return MediaElementAudioSourceNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/media-element-audio-source-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js":
  /*!***************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js ***!
    \***************************************************************************************************************************/

  /*! exports provided: createMediaStreamAudioDestinationNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesMediaStreamAudioDestinationNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createMediaStreamAudioDestinationNodeConstructor", function () {
      return createMediaStreamAudioDestinationNodeConstructor;
    });

    var DEFAULT_OPTIONS = {
      channelCount: 2,
      channelCountMode: 'explicit',
      channelInterpretation: 'speakers'
    };

    var createMediaStreamAudioDestinationNodeConstructor = function createMediaStreamAudioDestinationNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor14) {
        _inherits(MediaStreamAudioDestinationNode, _audioNodeConstructor14);

        var _super18 = _createSuper(MediaStreamAudioDestinationNode);

        function MediaStreamAudioDestinationNode(context) {
          var _this19;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, MediaStreamAudioDestinationNode);

          var nativeContext = getNativeContext(context); // Bug #173: Safari allows to create a MediaStreamAudioDestinationNode with an OfflineAudioContext.

          if (isNativeOfflineAudioContext(nativeContext)) {
            throw new TypeError();
          }

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeMediaStreamAudioDestinationNode = createNativeMediaStreamAudioDestinationNode(nativeContext, mergedOptions);
          _this19 = _super18.call(this, context, false, nativeMediaStreamAudioDestinationNode, null);
          _this19._nativeMediaStreamAudioDestinationNode = nativeMediaStreamAudioDestinationNode;
          return _this19;
        }

        _createClass2(MediaStreamAudioDestinationNode, [{
          key: "stream",
          get: function get() {
            return this._nativeMediaStreamAudioDestinationNode.stream;
          }
        }]);

        return MediaStreamAudioDestinationNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/media-stream-audio-destination-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js":
  /*!**********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js ***!
    \**********************************************************************************************************************/

  /*! exports provided: createMediaStreamAudioSourceNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesMediaStreamAudioSourceNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createMediaStreamAudioSourceNodeConstructor", function () {
      return createMediaStreamAudioSourceNodeConstructor;
    });

    var createMediaStreamAudioSourceNodeConstructor = function createMediaStreamAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor15) {
        _inherits(MediaStreamAudioSourceNode, _audioNodeConstructor15);

        var _super19 = _createSuper(MediaStreamAudioSourceNode);

        function MediaStreamAudioSourceNode(context, options) {
          var _this20;

          _classCallCheck2(this, MediaStreamAudioSourceNode);

          var nativeContext = getNativeContext(context);
          var nativeMediaStreamAudioSourceNode = createNativeMediaStreamAudioSourceNode(nativeContext, options); // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.

          if (isNativeOfflineAudioContext(nativeContext)) {
            throw new TypeError();
          }

          _this20 = _super19.call(this, context, true, nativeMediaStreamAudioSourceNode, null);
          _this20._nativeMediaStreamAudioSourceNode = nativeMediaStreamAudioSourceNode;
          return _this20;
        }

        _createClass2(MediaStreamAudioSourceNode, [{
          key: "mediaStream",
          get: function get() {
            return this._nativeMediaStreamAudioSourceNode.mediaStream;
          }
        }]);

        return MediaStreamAudioSourceNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/media-stream-audio-source-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js":
  /*!****************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js ***!
    \****************************************************************************************************************************/

  /*! exports provided: createMediaStreamTrackAudioSourceNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesMediaStreamTrackAudioSourceNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createMediaStreamTrackAudioSourceNodeConstructor", function () {
      return createMediaStreamTrackAudioSourceNodeConstructor;
    });

    var createMediaStreamTrackAudioSourceNodeConstructor = function createMediaStreamTrackAudioSourceNodeConstructor(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext) {
      return /*#__PURE__*/function (_audioNodeConstructor16) {
        _inherits(MediaStreamTrackAudioSourceNode, _audioNodeConstructor16);

        var _super20 = _createSuper(MediaStreamTrackAudioSourceNode);

        function MediaStreamTrackAudioSourceNode(context, options) {
          _classCallCheck2(this, MediaStreamTrackAudioSourceNode);

          var nativeContext = getNativeContext(context);
          var nativeMediaStreamTrackAudioSourceNode = createNativeMediaStreamTrackAudioSourceNode(nativeContext, options);
          return _super20.call(this, context, true, nativeMediaStreamTrackAudioSourceNode, null);
        }

        return MediaStreamTrackAudioSourceNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/media-stream-track-audio-source-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js ***!
    \*************************************************************************************************************/

  /*! exports provided: createMinimalAudioContextConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesMinimalAudioContextConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createMinimalAudioContextConstructor", function () {
      return createMinimalAudioContextConstructor;
    });
    /* harmony import */


    var _helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-valid-latency-hint */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js");

    var createMinimalAudioContextConstructor = function createMinimalAudioContextConstructor(createInvalidStateError, createNotSupportedError, createUnknownError, minimalBaseAudioContextConstructor, nativeAudioContextConstructor) {
      return /*#__PURE__*/function (_minimalBaseAudioCont2) {
        _inherits(MinimalAudioContext, _minimalBaseAudioCont2);

        var _super21 = _createSuper(MinimalAudioContext);

        function MinimalAudioContext() {
          var _this21;

          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

          _classCallCheck2(this, MinimalAudioContext);

          if (nativeAudioContextConstructor === null) {
            throw new Error('Missing the native AudioContext constructor.');
          }

          var nativeAudioContext = new nativeAudioContextConstructor(options); // Bug #131 Safari returns null when there are four other AudioContexts running already.

          if (nativeAudioContext === null) {
            throw createUnknownError();
          } // Bug #51 Only Chrome and Opera throw an error if the given latencyHint is invalid.


          if (!Object(_helpers_is_valid_latency_hint__WEBPACK_IMPORTED_MODULE_0__["isValidLatencyHint"])(options.latencyHint)) {
            throw new TypeError("The provided value '".concat(options.latencyHint, "' is not a valid enum value of type AudioContextLatencyCategory."));
          } // Bug #150 Only Chrome, Firefox and Opera support setting the sampleRate.


          if (options.sampleRate !== undefined && nativeAudioContext.sampleRate !== options.sampleRate) {
            throw createNotSupportedError();
          }

          _this21 = _super21.call(this, nativeAudioContext, 2);
          var latencyHint = options.latencyHint;
          var sampleRate = nativeAudioContext.sampleRate; // @todo The values for 'balanced', 'interactive' and 'playback' are just copied from Chrome's implementation.

          _this21._baseLatency = typeof nativeAudioContext.baseLatency === 'number' ? nativeAudioContext.baseLatency : latencyHint === 'balanced' ? 512 / sampleRate : latencyHint === 'interactive' || latencyHint === undefined ? 256 / sampleRate : latencyHint === 'playback' ? 1024 / sampleRate :
          /*
           * @todo The min (256) and max (16384) values are taken from the allowed bufferSize values of a
           * ScriptProcessorNode.
           */
          Math.max(2, Math.min(128, Math.round(latencyHint * sampleRate / 128))) * 128 / sampleRate;
          _this21._nativeAudioContext = nativeAudioContext;
          _this21._state = null;
          /*
           * Bug #34: Chrome and Opera pretend to be running right away, but fire an onstatechange event when the state actually
           * changes to 'running'.
           */

          if (nativeAudioContext.state === 'running') {
            _this21._state = 'suspended';

            var revokeState = function revokeState() {
              if (_this21._state === 'suspended') {
                _this21._state = null;
              }

              nativeAudioContext.removeEventListener('statechange', revokeState);
            };

            nativeAudioContext.addEventListener('statechange', revokeState);
          }

          return _this21;
        }

        _createClass2(MinimalAudioContext, [{
          key: "close",
          value: function close() {
            // Bug #35: Firefox does not throw an error if the AudioContext was closed before.
            if (this.state === 'closed') {
              return this._nativeAudioContext.close().then(function () {
                throw createInvalidStateError();
              });
            } // Bug #34: If the state was set to suspended before it should be revoked now.


            if (this._state === 'suspended') {
              this._state = null;
            }

            return this._nativeAudioContext.close();
            /*
             * Bug #50: Deleting the AudioGraph is currently not possible anymore.
             * ...then(() => deleteAudioGraph(this, this._nativeAudioContext));
             */
          }
        }, {
          key: "resume",
          value: function resume() {
            var _this22 = this;

            if (this._state === 'suspended') {
              return new Promise(function (resolve, reject) {
                var resolvePromise = function resolvePromise() {
                  _this22._nativeAudioContext.removeEventListener('statechange', resolvePromise);

                  if (_this22._nativeAudioContext.state === 'running') {
                    resolve();
                  } else {
                    _this22.resume().then(resolve, reject);
                  }
                };

                _this22._nativeAudioContext.addEventListener('statechange', resolvePromise);
              });
            }

            return this._nativeAudioContext.resume()["catch"](function (err) {
              // Bug #55: Chrome, Edge and Opera do throw an InvalidAccessError instead of an InvalidStateError.
              // Bug #56: Safari invokes the catch handler but without an error.
              if (err === undefined || err.code === 15) {
                throw createInvalidStateError();
              }

              throw err;
            });
          }
        }, {
          key: "suspend",
          value: function suspend() {
            return this._nativeAudioContext.suspend()["catch"](function (err) {
              // Bug #56: Safari invokes the catch handler but without an error.
              if (err === undefined) {
                throw createInvalidStateError();
              }

              throw err;
            });
          }
        }, {
          key: "baseLatency",
          get: function get() {
            return this._baseLatency;
          }
        }, {
          key: "state",
          get: function get() {
            return this._state !== null ? this._state : this._nativeAudioContext.state;
          }
        }]);

        return MinimalAudioContext;
      }(minimalBaseAudioContextConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/minimal-audio-context-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js ***!
    \******************************************************************************************************************/

  /*! exports provided: createMinimalBaseAudioContextConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesMinimalBaseAudioContextConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createMinimalBaseAudioContextConstructor", function () {
      return createMinimalBaseAudioContextConstructor;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");

    var createMinimalBaseAudioContextConstructor = function createMinimalBaseAudioContextConstructor(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, wrapEventListener) {
      return /*#__PURE__*/function (_eventTargetConstruct2) {
        _inherits(MinimalBaseAudioContext, _eventTargetConstruct2);

        var _super22 = _createSuper(MinimalBaseAudioContext);

        function MinimalBaseAudioContext(_nativeContext, numberOfChannels) {
          var _this23;

          _classCallCheck2(this, MinimalBaseAudioContext);

          _this23 = _super22.call(this, _nativeContext);
          _this23._nativeContext = _nativeContext;

          _globals__WEBPACK_IMPORTED_MODULE_0__["CONTEXT_STORE"].set(_assertThisInitialized(_this23), _nativeContext); // Bug #93: Edge will set the sampleRate of an AudioContext to zero when it is closed.


          var sampleRate = _nativeContext.sampleRate;
          Object.defineProperty(_nativeContext, 'sampleRate', {
            get: function get() {
              return sampleRate;
            }
          });

          if (isNativeOfflineAudioContext(_nativeContext)) {
            unrenderedAudioWorkletNodeStore.set(_nativeContext, new Set());
          }

          _this23._destination = new audioDestinationNodeConstructor(_assertThisInitialized(_this23), numberOfChannels);
          _this23._listener = createAudioListener(_assertThisInitialized(_this23), _nativeContext);
          _this23._onstatechange = null;
          return _this23;
        }

        _createClass2(MinimalBaseAudioContext, [{
          key: "currentTime",
          get: function get() {
            return this._nativeContext.currentTime;
          }
        }, {
          key: "destination",
          get: function get() {
            return this._destination;
          }
        }, {
          key: "listener",
          get: function get() {
            return this._listener;
          }
        }, {
          key: "onstatechange",
          get: function get() {
            return this._onstatechange;
          },
          set: function set(value) {
            var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
            this._nativeContext.onstatechange = wrappedListener;
            var nativeOnStateChange = this._nativeContext.onstatechange;
            this._onstatechange = nativeOnStateChange !== null && nativeOnStateChange === wrappedListener ? value : nativeOnStateChange;
          }
        }, {
          key: "sampleRate",
          get: function get() {
            return this._nativeContext.sampleRate;
          }
        }, {
          key: "state",
          get: function get() {
            return this._nativeContext.state;
          }
        }]);

        return MinimalBaseAudioContext;
      }(eventTargetConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/minimal-base-audio-context-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js ***!
    \*********************************************************************************************************************/

  /*! exports provided: createMinimalOfflineAudioContextConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesMinimalOfflineAudioContextConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createMinimalOfflineAudioContextConstructor", function () {
      return createMinimalOfflineAudioContextConstructor;
    });
    /* harmony import */


    var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/test-promise-support */
    "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");

    var DEFAULT_OPTIONS = {
      numberOfChannels: 1
    };

    var createMinimalOfflineAudioContextConstructor = function createMinimalOfflineAudioContextConstructor(cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, _startRendering) {
      return /*#__PURE__*/function (_minimalBaseAudioCont3) {
        _inherits(MinimalOfflineAudioContext, _minimalBaseAudioCont3);

        var _super23 = _createSuper(MinimalOfflineAudioContext);

        function MinimalOfflineAudioContext(options) {
          var _this24;

          _classCallCheck2(this, MinimalOfflineAudioContext);

          var _DEFAULT_OPTIONS$opti2 = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options),
              length = _DEFAULT_OPTIONS$opti2.length,
              numberOfChannels = _DEFAULT_OPTIONS$opti2.numberOfChannels,
              sampleRate = _DEFAULT_OPTIONS$opti2.sampleRate;

          var nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate); // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.

          if (!cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__["testPromiseSupport"], function () {
            return Object(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__["testPromiseSupport"])(nativeOfflineAudioContext);
          })) {
            nativeOfflineAudioContext.addEventListener('statechange', function () {
              var i = 0;

              var delayStateChangeEvent = function delayStateChangeEvent(event) {
                if (_this24._state === 'running') {
                  if (i > 0) {
                    nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);
                    event.stopImmediatePropagation();

                    _this24._waitForThePromiseToSettle(event);
                  } else {
                    i += 1;
                  }
                }
              };

              return delayStateChangeEvent;
            }());
          }

          _this24 = _super23.call(this, nativeOfflineAudioContext, numberOfChannels);
          _this24._length = length;
          _this24._nativeOfflineAudioContext = nativeOfflineAudioContext;
          _this24._state = null;
          return _this24;
        }

        _createClass2(MinimalOfflineAudioContext, [{
          key: "startRendering",
          value: function startRendering() {
            var _this25 = this;

            /*
             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore
             * the state of the nativeOfflineAudioContext might no transition to running immediately.
             */
            if (this._state === 'running') {
              return Promise.reject(createInvalidStateError());
            }

            this._state = 'running';
            return _startRendering(this.destination, this._nativeOfflineAudioContext).then(function (audioBuffer) {
              _this25._state = null;
              /*
               * Bug #50: Deleting the AudioGraph is currently not possible anymore.
               * deleteAudioGraph(this, this._nativeOfflineAudioContext);
               */

              return audioBuffer;
            }) // @todo This could be written more elegantly when Promise.finally() becomes avalaible.
            ["catch"](function (err) {
              _this25._state = null;
              /*
               * Bug #50: Deleting the AudioGraph is currently not possible anymore.
               * deleteAudioGraph(this, this._nativeOfflineAudioContext);
               */

              throw err;
            });
          }
        }, {
          key: "_waitForThePromiseToSettle",
          value: function _waitForThePromiseToSettle(event) {
            var _this26 = this;

            if (this._state === null) {
              this._nativeOfflineAudioContext.dispatchEvent(event);
            } else {
              setTimeout(function () {
                return _this26._waitForThePromiseToSettle(event);
              });
            }
          }
        }, {
          key: "length",
          get: function get() {
            // Bug #17: Safari does not yet expose the length.
            if (this._nativeOfflineAudioContext.length === undefined) {
              return this._length;
            }

            return this._nativeOfflineAudioContext.length;
          }
        }, {
          key: "state",
          get: function get() {
            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;
          }
        }]);

        return MinimalOfflineAudioContext;
      }(minimalBaseAudioContextConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/minimal-offline-audio-context-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js ***!
    \***********************************************************************************************/

  /*! exports provided: createMonitorConnections */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesMonitorConnectionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createMonitorConnections", function () {
      return createMonitorConnections;
    });

    var createMonitorConnections = function createMonitorConnections(insertElementInSet, isNativeAudioNode) {
      return function (nativeAudioNode, whenConnected, whenDisconnected) {
        var connections = new Set();

        nativeAudioNode.connect = function (connect) {
          return function (destination) {
            var output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
            var input = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
            var wasDisconnected = connections.size === 0;

            if (isNativeAudioNode(destination)) {
              // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.
              connect.call(nativeAudioNode, destination, output, input);
              insertElementInSet(connections, [destination, output, input], function (connection) {
                return connection[0] === destination && connection[1] === output && connection[2] === input;
              }, true);

              if (wasDisconnected) {
                whenConnected();
              }

              return destination;
            }

            connect.call(nativeAudioNode, destination, output);
            insertElementInSet(connections, [destination, output], function (connection) {
              return connection[0] === destination && connection[1] === output;
            }, true);

            if (wasDisconnected) {
              whenConnected();
            }

            return;
          };
        }(nativeAudioNode.connect);

        nativeAudioNode.disconnect = function (disconnect) {
          return function (destinationOrOutput, output, input) {
            var wasConnected = connections.size > 0;

            if (destinationOrOutput === undefined) {
              disconnect.apply(nativeAudioNode);
              connections.clear();
            } else if (typeof destinationOrOutput === 'number') {
              // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.
              disconnect.call(nativeAudioNode, destinationOrOutput);

              var _iterator11 = _createForOfIteratorHelper(connections),
                  _step11;

              try {
                for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
                  var connection = _step11.value;

                  if (connection[1] === destinationOrOutput) {
                    connections["delete"](connection);
                  }
                }
              } catch (err) {
                _iterator11.e(err);
              } finally {
                _iterator11.f();
              }
            } else {
              if (isNativeAudioNode(destinationOrOutput)) {
                // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.
                disconnect.call(nativeAudioNode, destinationOrOutput, output, input);
              } else {
                // @todo TypeScript cannot infer the overloaded signature with 2 arguments yet.
                disconnect.call(nativeAudioNode, destinationOrOutput, output);
              }

              var _iterator12 = _createForOfIteratorHelper(connections),
                  _step12;

              try {
                for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
                  var _connection = _step12.value;

                  if (_connection[0] === destinationOrOutput && (output === undefined || _connection[1] === output) && (input === undefined || _connection[2] === input)) {
                    connections["delete"](_connection);
                  }
                }
              } catch (err) {
                _iterator12.e(err);
              } finally {
                _iterator12.f();
              }
            }

            var isDisconnected = connections.size === 0;

            if (wasConnected && isDisconnected) {
              whenDisconnected();
            }
          };
        }(nativeAudioNode.disconnect);

        return nativeAudioNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/monitor-connections.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js ***!
    \********************************************************************************************************/

  /*! exports provided: createNativeAnalyserNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeAnalyserNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeAnalyserNodeFactory", function () {
      return createNativeAnalyserNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-option */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
    /* harmony import */


    var _helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/test-analyser-node-get-float-time-domain-data-method-support */
    "./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js");
    /* harmony import */


    var _helpers_wrap_analyser_node_get_float_time_domain_data_method__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../helpers/wrap-analyser-node-get-float-time-domain-data-method */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js");

    var createNativeAnalyserNodeFactory = function createNativeAnalyserNodeFactory(cacheTestResult, createIndexSizeError, createNativeAudioNode) {
      return function (nativeContext, options) {
        var nativeAnalyserNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createAnalyser();
        }); // Bug #37: Firefox does not create an AnalyserNode with the default properties.

        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeAnalyserNode, options); // Bug #118: Safari does not throw an error if maxDecibels is not more than minDecibels.

        if (!(options.maxDecibels > options.minDecibels)) {
          throw createIndexSizeError();
        }

        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAnalyserNode, options, 'fftSize');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAnalyserNode, options, 'maxDecibels');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAnalyserNode, options, 'minDecibels');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAnalyserNode, options, 'smoothingTimeConstant'); // Bug #36: Safari does not support getFloatTimeDomainData() yet.

        if (!cacheTestResult(_helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__["testAnalyserNodeGetFloatTimeDomainDataMethodSupport"], function () {
          return Object(_helpers_test_analyser_node_get_float_time_domain_data_method_support__WEBPACK_IMPORTED_MODULE_2__["testAnalyserNodeGetFloatTimeDomainDataMethodSupport"])(nativeAnalyserNode);
        })) {
          Object(_helpers_wrap_analyser_node_get_float_time_domain_data_method__WEBPACK_IMPORTED_MODULE_3__["wrapAnalyserNodeGetFloatTimeDomainDataMethod"])(nativeAnalyserNode);
        }

        return nativeAnalyserNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-analyser-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js ***!
    \***********************************************************************************************************/

  /*! exports provided: createNativeAudioBufferConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeAudioBufferConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeAudioBufferConstructor", function () {
      return createNativeAudioBufferConstructor;
    });

    var createNativeAudioBufferConstructor = function createNativeAudioBufferConstructor(window) {
      if (window === null) {
        return null;
      }

      if (window.hasOwnProperty('AudioBuffer')) {
        return window.AudioBuffer;
      }

      return null;
    }; //# sourceMappingURL=/build/es2019/factories/native-audio-buffer-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js ***!
    \*******************************************************************************************************************/

  /*! exports provided: createNativeAudioBufferSourceNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeAudioBufferSourceNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeAudioBufferSourceNodeFactory", function () {
      return createNativeAudioBufferSourceNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-audio-param-value */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-option */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
    /* harmony import */


    var _helpers_wrap_audio_buffer_source_node_start_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js");
    /* harmony import */


    var _helpers_wrap_audio_buffer_source_node_start_method_duration_parameter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../helpers/wrap-audio-buffer-source-node-start-method-duration-parameter */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js");
    /* harmony import */


    var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js");
    /* harmony import */


    var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js");

    var createNativeAudioBufferSourceNodeFactory = function createNativeAudioBufferSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodOffsetClampingSupport, testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioBufferSourceNodeStartMethodOffsetClampling, wrapAudioBufferSourceNodeStopMethodNullifiedBuffer, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) {
      return function (nativeContext, options) {
        var nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createBufferSource();
        });
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__["assignNativeAudioNodeOptions"])(nativeAudioBufferSourceNode, options);
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeAudioBufferSourceNode, options, 'playbackRate'); // Bug #71: Edge does not allow to set the buffer to null.

        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeAudioBufferSourceNode, options, 'buffer'); // Bug #149: Safari does not yet support the detune AudioParam.

        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeAudioBufferSourceNode, options, 'loop');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeAudioBufferSourceNode, options, 'loopEnd');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeAudioBufferSourceNode, options, 'loopStart'); // Bug #69: Safari does allow calls to start() of an already scheduled AudioBufferSourceNode.

        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport, function () {
          return testAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(nativeContext);
        })) {
          Object(_helpers_wrap_audio_buffer_source_node_start_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_3__["wrapAudioBufferSourceNodeStartMethodConsecutiveCalls"])(nativeAudioBufferSourceNode);
        } // Bug #92: Chrome & Edge do not respect the duration parameter yet.


        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodDurationParameterSupport, testAudioBufferSourceNodeStartMethodDurationParameterSupport)) {
          Object(_helpers_wrap_audio_buffer_source_node_start_method_duration_parameter__WEBPACK_IMPORTED_MODULE_4__["wrapAudioBufferSourceNodeStartMethodDurationParameter"])(nativeAudioBufferSourceNode, nativeContext);
        } // Bug #154 & #155: Safari does not handle offsets which are equal to or greater than the duration of the buffer.


        if (!cacheTestResult(testAudioBufferSourceNodeStartMethodOffsetClampingSupport, function () {
          return testAudioBufferSourceNodeStartMethodOffsetClampingSupport(nativeContext);
        })) {
          wrapAudioBufferSourceNodeStartMethodOffsetClampling(nativeAudioBufferSourceNode);
        } // Bug #162: Safari does throw an error when stop() is called on an AudioBufferSourceNode which has no buffer assigned to it.


        if (!cacheTestResult(testAudioBufferSourceNodeStopMethodNullifiedBufferSupport, function () {
          return testAudioBufferSourceNodeStopMethodNullifiedBufferSupport(nativeContext);
        })) {
          wrapAudioBufferSourceNodeStopMethodNullifiedBuffer(nativeAudioBufferSourceNode, nativeContext);
        } // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.


        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, function () {
          return testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext);
        })) {
          Object(_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_5__["wrapAudioScheduledSourceNodeStartMethodNegativeParameters"])(nativeAudioBufferSourceNode);
        } // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.


        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, function () {
          return testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext);
        })) {
          wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeAudioBufferSourceNode, nativeContext);
        } // Bug #44: Only Firefox does not throw a RangeError yet.


        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, function () {
          return testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext);
        })) {
          Object(_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_6__["wrapAudioScheduledSourceNodeStopMethodNegativeParameters"])(nativeAudioBufferSourceNode);
        } // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.


        addSilentConnection(nativeContext, nativeAudioBufferSourceNode);
        return nativeAudioBufferSourceNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-audio-buffer-source-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js ***!
    \************************************************************************************************************/

  /*! exports provided: createNativeAudioContextConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeAudioContextConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeAudioContextConstructor", function () {
      return createNativeAudioContextConstructor;
    });

    var createNativeAudioContextConstructor = function createNativeAudioContextConstructor(window) {
      if (window === null) {
        return null;
      }

      if (window.hasOwnProperty('AudioContext')) {
        return window.AudioContext;
      }

      return window.hasOwnProperty('webkitAudioContext') ? window.webkitAudioContext : null;
    }; //# sourceMappingURL=/build/es2019/factories/native-audio-context-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js ***!
    \*********************************************************************************************************/

  /*! exports provided: createNativeAudioDestinationNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeAudioDestinationNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeAudioDestinationNodeFactory", function () {
      return createNativeAudioDestinationNodeFactory;
    });

    var createNativeAudioDestinationNodeFactory = function createNativeAudioDestinationNodeFactory(createNativeGainNode, overwriteAccessors) {
      return function (nativeContext, channelCount, isNodeOfNativeOfflineAudioContext) {
        var nativeAudioDestinationNode = nativeContext.destination; // Bug #132: Edge & Safari do not have the correct channelCount.

        if (nativeAudioDestinationNode.channelCount !== channelCount) {
          try {
            nativeAudioDestinationNode.channelCount = channelCount;
          } catch (_unused5) {// Bug #169: Safari throws an error on each attempt to change the channelCount.
          }
        } // Bug #83: Edge & Safari do not have the correct channelCountMode.


        if (isNodeOfNativeOfflineAudioContext && nativeAudioDestinationNode.channelCountMode !== 'explicit') {
          nativeAudioDestinationNode.channelCountMode = 'explicit';
        } // Bug #47: The AudioDestinationNode in Edge and Safari does not initialize the maxChannelCount property correctly.


        if (nativeAudioDestinationNode.maxChannelCount === 0) {
          Object.defineProperty(nativeAudioDestinationNode, 'maxChannelCount', {
            value: channelCount
          });
        } // Bug #168: No browser does yet have an AudioDestinationNode with an output.


        var gainNode = createNativeGainNode(nativeContext, {
          channelCount: channelCount,
          channelCountMode: nativeAudioDestinationNode.channelCountMode,
          channelInterpretation: nativeAudioDestinationNode.channelInterpretation,
          gain: 1
        });
        overwriteAccessors(gainNode, 'channelCount', function (get) {
          return function () {
            return get.call(gainNode);
          };
        }, function (set) {
          return function (value) {
            set.call(gainNode, value);

            try {
              nativeAudioDestinationNode.channelCount = value;
            } catch (err) {
              // Bug #169: Safari throws an error on each attempt to change the channelCount.
              if (value > nativeAudioDestinationNode.maxChannelCount) {
                throw err;
              }
            }
          };
        });
        overwriteAccessors(gainNode, 'channelCountMode', function (get) {
          return function () {
            return get.call(gainNode);
          };
        }, function (set) {
          return function (value) {
            set.call(gainNode, value);
            nativeAudioDestinationNode.channelCountMode = value;
          };
        });
        overwriteAccessors(gainNode, 'channelInterpretation', function (get) {
          return function () {
            return get.call(gainNode);
          };
        }, function (set) {
          return function (value) {
            set.call(gainNode, value);
            nativeAudioDestinationNode.channelInterpretation = value;
          };
        });
        Object.defineProperty(gainNode, 'maxChannelCount', {
          get: function get() {
            return nativeAudioDestinationNode.maxChannelCount;
          }
        }); // @todo This should be disconnected when the context is closed.

        gainNode.connect(nativeAudioDestinationNode);
        return gainNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-audio-destination-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-node-factory.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-node-factory.js ***!
    \*****************************************************************************************************/

  /*! exports provided: createNativeAudioNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeAudioNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeAudioNodeFactory", function () {
      return createNativeAudioNodeFactory;
    });

    var createNativeAudioNodeFactory = function createNativeAudioNodeFactory(getBackupNativeContext) {
      return function (nativeContext, factoryFunction) {
        // Bug #50: Only Edge does currently not allow to create AudioNodes on a closed context yet.
        var backupNativeContext = getBackupNativeContext(nativeContext);

        if (backupNativeContext !== null) {
          return factoryFunction(backupNativeContext);
        }

        return factoryFunction(nativeContext);
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-audio-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js ***!
    \*****************************************************************************************************************/

  /*! exports provided: createNativeAudioWorkletNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeAudioWorkletNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeAudioWorkletNodeConstructor", function () {
      return createNativeAudioWorkletNodeConstructor;
    });

    var createNativeAudioWorkletNodeConstructor = function createNativeAudioWorkletNodeConstructor(window) {
      if (window === null) {
        return null;
      }

      return window.hasOwnProperty('AudioWorkletNode') ? window.AudioWorkletNode : null;
    }; //# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js ***!
    \*************************************************************************************************************/

  /*! exports provided: createNativeAudioWorkletNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeAudioWorkletNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeAudioWorkletNodeFactory", function () {
      return createNativeAudioWorkletNodeFactory;
    });
    /* harmony import */


    var _helpers_test_clonability_of_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/test-clonability-of-audio-worklet-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js");

    var createNativeAudioWorkletNodeFactory = function createNativeAudioWorkletNodeFactory(createInvalidStateError, createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, createNotSupportedError, monitorConnections) {
      return function (nativeContext, baseLatency, nativeAudioWorkletNodeConstructor, name, processorConstructor, options) {
        if (nativeAudioWorkletNodeConstructor !== null) {
          try {
            var nativeAudioWorkletNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
              return new nativeAudioWorkletNodeConstructor(ntvCntxt, name, options);
            });
            var patchedEventListeners = new Map(); // tslint:disable-line:max-line-length

            var onprocessorerror = null;
            Object.defineProperties(nativeAudioWorkletNode, {
              /*
               * Bug #61: Overwriting the property accessors for channelCount and channelCountMode is necessary as long as some
               * browsers have no native implementation to achieve a consistent behavior.
               */
              channelCount: {
                get: function get() {
                  return options.channelCount;
                },
                set: function set() {
                  throw createInvalidStateError();
                }
              },
              channelCountMode: {
                get: function get() {
                  return 'explicit';
                },
                set: function set() {
                  throw createInvalidStateError();
                }
              },
              // Bug #156: Chrome & Opera do not yet fire an ErrorEvent.
              onprocessorerror: {
                get: function get() {
                  return onprocessorerror;
                },
                set: function set(value) {
                  if (typeof onprocessorerror === 'function') {
                    nativeAudioWorkletNode.removeEventListener('processorerror', onprocessorerror);
                  }

                  onprocessorerror = typeof value === 'function' ? value : null;

                  if (typeof onprocessorerror === 'function') {
                    nativeAudioWorkletNode.addEventListener('processorerror', onprocessorerror);
                  }
                }
              }
            });

            nativeAudioWorkletNode.addEventListener = function (addEventListener) {
              return function () {
                for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                  args[_key] = arguments[_key];
                }

                if (args[0] === 'processorerror') {
                  var unpatchedEventListener = typeof args[1] === 'function' ? args[1] : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function' ? args[1].handleEvent : null;

                  if (unpatchedEventListener !== null) {
                    var patchedEventListener = patchedEventListeners.get(args[1]);

                    if (patchedEventListener !== undefined) {
                      args[1] = patchedEventListener;
                    } else {
                      args[1] = function (event) {
                        unpatchedEventListener(new ErrorEvent(args[0], _objectSpread(_objectSpread({}, event), {}, {
                          error: new Error()
                        })));
                      };

                      patchedEventListeners.set(unpatchedEventListener, args[1]);
                    }
                  }
                }

                return addEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);
              };
            }(nativeAudioWorkletNode.addEventListener);

            nativeAudioWorkletNode.removeEventListener = function (removeEventListener) {
              return function () {
                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                  args[_key2] = arguments[_key2];
                }

                if (args[0] === 'processorerror') {
                  var patchedEventListener = patchedEventListeners.get(args[1]);

                  if (patchedEventListener !== undefined) {
                    patchedEventListeners["delete"](args[1]);
                    args[1] = patchedEventListener;
                  }
                }

                return removeEventListener.call(nativeAudioWorkletNode, args[0], args[1], args[2]);
              };
            }(nativeAudioWorkletNode.removeEventListener);
            /*
             * Bug #86: Chrome & Opera do not invoke the process() function if the corresponding AudioWorkletNode is unconnected but has
             * an output.
             */


            if (options.numberOfOutputs !== 0) {
              var nativeGainNode = createNativeGainNode(nativeContext, {
                channelCount: 1,
                channelCountMode: 'explicit',
                channelInterpretation: 'discrete',
                gain: 0
              });
              nativeAudioWorkletNode.connect(nativeGainNode)
              /*
               * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is
               * used here to make sure to connect the right destination.
               */
              .connect(nativeGainNode.context.destination);

              var whenConnected = function whenConnected() {
                return nativeGainNode.disconnect();
              };
              /*
               * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is
               * used here to make sure to connect the right destination.
               */


              var whenDisconnected = function whenDisconnected() {
                return nativeGainNode.connect(nativeGainNode.context.destination);
              }; // @todo Disconnect the connection when the process() function of the AudioWorkletNode returns false.


              return monitorConnections(nativeAudioWorkletNode, whenConnected, whenDisconnected);
            }

            return nativeAudioWorkletNode;
          } catch (err) {
            // Bug #60: Chrome & Opera throw an InvalidStateError instead of a NotSupportedError.
            if (err.code === 11) {
              throw createNotSupportedError();
            }

            throw err;
          }
        } // Bug #61: Only Chrome & Opera have an implementation of the AudioWorkletNode yet.


        if (processorConstructor === undefined) {
          throw createNotSupportedError();
        }

        Object(_helpers_test_clonability_of_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__["testClonabilityOfAudioWorkletNodeOptions"])(options);
        return createNativeAudioWorkletNodeFaker(nativeContext, baseLatency, processorConstructor, options);
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js ***!
    \*******************************************************************************************************************/

  /*! exports provided: createNativeAudioWorkletNodeFakerFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeAudioWorkletNodeFakerFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeAudioWorkletNodeFakerFactory", function () {
      return createNativeAudioWorkletNodeFakerFactory;
    });
    /* harmony import */


    var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../constants */
    "./node_modules/standardized-audio-context/build/es2019/constants.js");
    /* harmony import */


    var _helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/compute-buffer-size */
    "./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js");
    /* harmony import */


    var _helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/copy-from-channel */
    "./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js");
    /* harmony import */


    var _helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../helpers/copy-to-channel */
    "./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js");
    /* harmony import */


    var _helpers_create_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../helpers/create-audio-worklet-processor */
    "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js");
    /* harmony import */


    var _helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../helpers/create-nested-arrays */
    "./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js");
    /* harmony import */


    var _read_only_map__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../read-only-map */
    "./node_modules/standardized-audio-context/build/es2019/read-only-map.js");

    var createNativeAudioWorkletNodeFakerFactory = function createNativeAudioWorkletNodeFakerFactory(auxiliaryGainNodeStore, connectMultipleOutputs, createIndexSizeError, createInvalidStateError, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, createNotSupportedError, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections) {
      return function (nativeContext, baseLatency, processorConstructor, options) {
        if (options.numberOfInputs === 0 && options.numberOfOutputs === 0) {
          throw createNotSupportedError();
        }

        if (options.outputChannelCount !== undefined) {
          // @todo Check if any of the channelCount values is greater than the implementation's maximum number of channels.
          if (options.outputChannelCount.some(function (channelCount) {
            return channelCount < 1;
          })) {
            throw createNotSupportedError();
          }

          if (options.outputChannelCount.length !== options.numberOfOutputs) {
            throw createIndexSizeError();
          }
        } // Bug #61: This is not part of the standard but required for the faker to work.


        if (options.channelCountMode !== 'explicit') {
          throw createNotSupportedError();
        }

        var numberOfInputChannels = options.channelCount * options.numberOfInputs;
        var numberOfOutputChannels = options.outputChannelCount.reduce(function (sum, value) {
          return sum + value;
        }, 0);
        var numberOfParameters = processorConstructor.parameterDescriptors === undefined ? 0 : processorConstructor.parameterDescriptors.length; // Bug #61: This is not part of the standard but required for the faker to work.

        if (numberOfInputChannels + numberOfParameters > 6 || numberOfOutputChannels > 6) {
          throw createNotSupportedError();
        }

        var messageChannel = new MessageChannel();
        var gainNodes = [];
        var inputChannelSplitterNodes = [];

        for (var i = 0; i < options.numberOfInputs; i += 1) {
          gainNodes.push(createNativeGainNode(nativeContext, {
            channelCount: options.channelCount,
            channelCountMode: options.channelCountMode,
            channelInterpretation: options.channelInterpretation,
            gain: 1
          }));
          inputChannelSplitterNodes.push(createNativeChannelSplitterNode(nativeContext, {
            channelCount: options.channelCount,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            numberOfOutputs: options.channelCount
          }));
        }

        var constantSourceNodes = [];

        if (processorConstructor.parameterDescriptors !== undefined) {
          var _iterator13 = _createForOfIteratorHelper(processorConstructor.parameterDescriptors),
              _step13;

          try {
            var _loop2 = function _loop2() {
              var _step13$value = _step13.value,
                  defaultValue = _step13$value.defaultValue,
                  maxValue = _step13$value.maxValue,
                  minValue = _step13$value.minValue,
                  name = _step13$value.name;
              var constantSourceNode = createNativeConstantSourceNode(nativeContext, {
                channelCount: 1,
                channelCountMode: 'explicit',
                channelInterpretation: 'discrete',
                offset: options.parameterData[name] !== undefined ? options.parameterData[name] : defaultValue === undefined ? 0 : defaultValue
              });
              Object.defineProperties(constantSourceNode.offset, {
                defaultValue: {
                  get: function get() {
                    return defaultValue === undefined ? 0 : defaultValue;
                  }
                },
                maxValue: {
                  get: function get() {
                    return maxValue === undefined ? _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"] : maxValue;
                  }
                },
                minValue: {
                  get: function get() {
                    return minValue === undefined ? _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"] : minValue;
                  }
                }
              });
              constantSourceNodes.push(constantSourceNode);
            };

            for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
              _loop2();
            }
          } catch (err) {
            _iterator13.e(err);
          } finally {
            _iterator13.f();
          }
        }

        var inputChannelMergerNode = createNativeChannelMergerNode(nativeContext, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'speakers',
          numberOfInputs: Math.max(1, numberOfInputChannels + numberOfParameters)
        });
        var bufferSize = Object(_helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_1__["computeBufferSize"])(baseLatency, nativeContext.sampleRate);
        var scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, numberOfInputChannels + numberOfParameters, // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.
        Math.max(1, numberOfOutputChannels));
        var outputChannelSplitterNode = createNativeChannelSplitterNode(nativeContext, {
          channelCount: Math.max(1, numberOfOutputChannels),
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
          numberOfOutputs: Math.max(1, numberOfOutputChannels)
        });
        var outputChannelMergerNodes = [];

        for (var _i7 = 0; _i7 < options.numberOfOutputs; _i7 += 1) {
          outputChannelMergerNodes.push(createNativeChannelMergerNode(nativeContext, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'speakers',
            numberOfInputs: options.outputChannelCount[_i7]
          }));
        }

        for (var _i8 = 0; _i8 < options.numberOfInputs; _i8 += 1) {
          gainNodes[_i8].connect(inputChannelSplitterNodes[_i8]);

          for (var j = 0; j < options.channelCount; j += 1) {
            inputChannelSplitterNodes[_i8].connect(inputChannelMergerNode, j, _i8 * options.channelCount + j);
          }
        }

        var parameterMap = new _read_only_map__WEBPACK_IMPORTED_MODULE_6__["ReadOnlyMap"](processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.map(function (_ref32, index) {
          var name = _ref32.name;
          var constantSourceNode = constantSourceNodes[index];
          constantSourceNode.connect(inputChannelMergerNode, 0, numberOfInputChannels + index);
          constantSourceNode.start(0);
          return [name, constantSourceNode.offset];
        }));
        inputChannelMergerNode.connect(scriptProcessorNode);
        var channelInterpretation = options.channelInterpretation;
        var onprocessorerror = null; // Bug #87: Expose at least one output to make this node connectable.

        var outputAudioNodes = options.numberOfOutputs === 0 ? [scriptProcessorNode] : outputChannelMergerNodes;
        var nativeAudioWorkletNodeFaker = {
          get bufferSize() {
            return bufferSize;
          },

          get channelCount() {
            return options.channelCount;
          },

          set channelCount(_) {
            // Bug #61: This is not part of the standard but required for the faker to work.
            throw createInvalidStateError();
          },

          get channelCountMode() {
            return options.channelCountMode;
          },

          set channelCountMode(_) {
            // Bug #61: This is not part of the standard but required for the faker to work.
            throw createInvalidStateError();
          },

          get channelInterpretation() {
            return channelInterpretation;
          },

          set channelInterpretation(value) {
            var _iterator14 = _createForOfIteratorHelper(gainNodes),
                _step14;

            try {
              for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
                var gainNode = _step14.value;
                gainNode.channelInterpretation = value;
              }
            } catch (err) {
              _iterator14.e(err);
            } finally {
              _iterator14.f();
            }

            channelInterpretation = value;
          },

          get context() {
            return scriptProcessorNode.context;
          },

          get inputs() {
            return gainNodes;
          },

          get numberOfInputs() {
            return options.numberOfInputs;
          },

          get numberOfOutputs() {
            return options.numberOfOutputs;
          },

          get onprocessorerror() {
            return onprocessorerror;
          },

          set onprocessorerror(value) {
            if (typeof onprocessorerror === 'function') {
              nativeAudioWorkletNodeFaker.removeEventListener('processorerror', onprocessorerror);
            }

            onprocessorerror = typeof value === 'function' ? value : null;

            if (typeof onprocessorerror === 'function') {
              nativeAudioWorkletNodeFaker.addEventListener('processorerror', onprocessorerror);
            }
          },

          get parameters() {
            return parameterMap;
          },

          get port() {
            return messageChannel.port2;
          },

          addEventListener: function addEventListener() {
            return scriptProcessorNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          },
          connect: connectMultipleOutputs.bind(null, outputAudioNodes),
          disconnect: disconnectMultipleOutputs.bind(null, outputAudioNodes),
          dispatchEvent: function dispatchEvent() {
            return scriptProcessorNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
          },
          removeEventListener: function removeEventListener() {
            return scriptProcessorNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          }
        };
        var patchedEventListeners = new Map(); // tslint:disable-line:max-line-length

        messageChannel.port1.addEventListener = function (addEventListener) {
          return function () {
            for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
              args[_key3] = arguments[_key3];
            }

            if (args[0] === 'message') {
              var unpatchedEventListener = typeof args[1] === 'function' ? args[1] : typeof args[1] === 'object' && args[1] !== null && typeof args[1].handleEvent === 'function' ? args[1].handleEvent : null;

              if (unpatchedEventListener !== null) {
                var patchedEventListener = patchedEventListeners.get(args[1]);

                if (patchedEventListener !== undefined) {
                  args[1] = patchedEventListener;
                } else {
                  args[1] = function (event) {
                    exposeCurrentFrameAndCurrentTime(nativeContext.currentTime, nativeContext.sampleRate, function () {
                      return unpatchedEventListener(event);
                    });
                  };

                  patchedEventListeners.set(unpatchedEventListener, args[1]);
                }
              }
            }

            return addEventListener.call(messageChannel.port1, args[0], args[1], args[2]);
          };
        }(messageChannel.port1.addEventListener);

        messageChannel.port1.removeEventListener = function (removeEventListener) {
          return function () {
            for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
              args[_key4] = arguments[_key4];
            }

            if (args[0] === 'message') {
              var patchedEventListener = patchedEventListeners.get(args[1]);

              if (patchedEventListener !== undefined) {
                patchedEventListeners["delete"](args[1]);
                args[1] = patchedEventListener;
              }
            }

            return removeEventListener.call(messageChannel.port1, args[0], args[1], args[2]);
          };
        }(messageChannel.port1.removeEventListener);

        var onmessage = null;
        Object.defineProperty(messageChannel.port1, 'onmessage', {
          get: function get() {
            return onmessage;
          },
          set: function set(value) {
            if (typeof onmessage === 'function') {
              messageChannel.port1.removeEventListener('message', onmessage);
            }

            onmessage = typeof value === 'function' ? value : null;

            if (typeof onmessage === 'function') {
              messageChannel.port1.addEventListener('message', onmessage);
              messageChannel.port1.start();
            }
          }
        });
        processorConstructor.prototype.port = messageChannel.port1;
        var audioWorkletProcessor = null;
        var audioWorkletProcessorPromise = Object(_helpers_create_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_4__["createAudioWorkletProcessor"])(nativeContext, nativeAudioWorkletNodeFaker, processorConstructor, options);
        audioWorkletProcessorPromise.then(function (dWrkltPrcssr) {
          return audioWorkletProcessor = dWrkltPrcssr;
        });
        var inputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_5__["createNestedArrays"])(options.numberOfInputs, options.channelCount);
        var outputs = Object(_helpers_create_nested_arrays__WEBPACK_IMPORTED_MODULE_5__["createNestedArrays"])(options.numberOfOutputs, options.outputChannelCount);
        var parameters = processorConstructor.parameterDescriptors === undefined ? [] : processorConstructor.parameterDescriptors.reduce(function (prmtrs, _ref33) {
          var name = _ref33.name;
          return _objectSpread(_objectSpread({}, prmtrs), {}, _defineProperty({}, name, new Float32Array(128)));
        }, {});
        var isActive = true;

        var disconnectOutputsGraph = function disconnectOutputsGraph() {
          if (options.numberOfOutputs > 0) {
            scriptProcessorNode.disconnect(outputChannelSplitterNode);
          }

          for (var _i9 = 0, outputChannelSplitterNodeOutput = 0; _i9 < options.numberOfOutputs; _i9 += 1) {
            var outputChannelMergerNode = outputChannelMergerNodes[_i9];

            for (var _j3 = 0; _j3 < options.outputChannelCount[_i9]; _j3 += 1) {
              outputChannelSplitterNode.disconnect(outputChannelMergerNode, outputChannelSplitterNodeOutput + _j3, _j3);
            }

            outputChannelSplitterNodeOutput += options.outputChannelCount[_i9];
          }
        };

        scriptProcessorNode.onaudioprocess = function (_ref34) {
          var inputBuffer = _ref34.inputBuffer,
              outputBuffer = _ref34.outputBuffer;

          if (audioWorkletProcessor !== null) {
            var _loop3 = function _loop3(_i10) {
              for (var _j4 = 0; _j4 < options.numberOfInputs; _j4 += 1) {
                for (var k = 0; k < options.channelCount; k += 1) {
                  Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_2__["copyFromChannel"])(inputBuffer, inputs[_j4], k, k, _i10);
                }
              }

              if (processorConstructor.parameterDescriptors !== undefined) {
                processorConstructor.parameterDescriptors.forEach(function (_ref35, index) {
                  var name = _ref35.name;
                  Object(_helpers_copy_from_channel__WEBPACK_IMPORTED_MODULE_2__["copyFromChannel"])(inputBuffer, parameters, name, numberOfInputChannels + index, _i10);
                });
              }

              for (var _j5 = 0; _j5 < options.numberOfInputs; _j5 += 1) {
                for (var _k3 = 0; _k3 < options.outputChannelCount[_j5]; _k3 += 1) {
                  // The byteLength will be 0 when the ArrayBuffer was transferred.
                  if (outputs[_j5][_k3].byteLength === 0) {
                    outputs[_j5][_k3] = new Float32Array(128);
                  }
                }
              }

              try {
                var potentiallyEmptyInputs = inputs.map(function (input, index) {
                  var auxiliaryGainNodes = auxiliaryGainNodeStore.get(nativeAudioWorkletNodeFaker);

                  if (auxiliaryGainNodes === undefined || auxiliaryGainNodes.get(index) === undefined) {
                    return [];
                  }

                  return input;
                });
                var activeSourceFlag = exposeCurrentFrameAndCurrentTime(nativeContext.currentTime + _i10 / nativeContext.sampleRate, nativeContext.sampleRate, function () {
                  return audioWorkletProcessor.process(potentiallyEmptyInputs, outputs, parameters);
                });
                isActive = activeSourceFlag;

                for (var _j6 = 0, outputChannelSplitterNodeOutput = 0; _j6 < options.numberOfOutputs; _j6 += 1) {
                  for (var _k4 = 0; _k4 < options.outputChannelCount[_j6]; _k4 += 1) {
                    Object(_helpers_copy_to_channel__WEBPACK_IMPORTED_MODULE_3__["copyToChannel"])(outputBuffer, outputs[_j6], _k4, outputChannelSplitterNodeOutput + _k4, _i10);
                  }

                  outputChannelSplitterNodeOutput += options.outputChannelCount[_j6];
                }
              } catch (error) {
                isActive = false;
                nativeAudioWorkletNodeFaker.dispatchEvent(new ErrorEvent('processorerror', {
                  error: error
                }));
              }

              if (!isActive) {
                for (var _j7 = 0; _j7 < options.numberOfInputs; _j7 += 1) {
                  gainNodes[_j7].disconnect(inputChannelSplitterNodes[_j7]);

                  for (var _k5 = 0; _k5 < options.channelCount; _k5 += 1) {
                    inputChannelSplitterNodes[_i10].disconnect(inputChannelMergerNode, _k5, _j7 * options.channelCount + _k5);
                  }
                }

                if (processorConstructor.parameterDescriptors !== undefined) {
                  var length = processorConstructor.parameterDescriptors.length;

                  for (var _j8 = 0; _j8 < length; _j8 += 1) {
                    var constantSourceNode = constantSourceNodes[_j8];
                    constantSourceNode.disconnect(inputChannelMergerNode, 0, numberOfInputChannels + _j8);
                    constantSourceNode.stop();
                  }
                }

                inputChannelMergerNode.disconnect(scriptProcessorNode);
                scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation

                if (isConnected) {
                  disconnectOutputsGraph();
                } else {
                  disconnectFakeGraph();
                }

                return "break";
              }
            };

            for (var _i10 = 0; _i10 < bufferSize; _i10 += 128) {
              var _ret2 = _loop3(_i10);

              if (_ret2 === "break") break;
            }
          }
        };

        var isConnected = false; // Bug #87: Only Firefox will fire an AudioProcessingEvent if there is no connected output.

        var nativeGainNode = createNativeGainNode(nativeContext, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
          gain: 0
        });

        var connectFakeGraph = function connectFakeGraph() {
          return scriptProcessorNode.connect(nativeGainNode)
          /*
           * Bug #50: Edge does not yet allow to create AudioNodes on a closed AudioContext. Therefore the context property is used here
           * to make sure to connect the right destination.
           */
          .connect(nativeGainNode.context.destination);
        };

        var disconnectFakeGraph = function disconnectFakeGraph() {
          scriptProcessorNode.disconnect(nativeGainNode);
          nativeGainNode.disconnect();
        };

        var whenConnected = function whenConnected() {
          if (isActive) {
            disconnectFakeGraph();

            if (options.numberOfOutputs > 0) {
              scriptProcessorNode.connect(outputChannelSplitterNode);
            }

            for (var _i11 = 0, outputChannelSplitterNodeOutput = 0; _i11 < options.numberOfOutputs; _i11 += 1) {
              var outputChannelMergerNode = outputChannelMergerNodes[_i11];

              for (var _j9 = 0; _j9 < options.outputChannelCount[_i11]; _j9 += 1) {
                outputChannelSplitterNode.connect(outputChannelMergerNode, outputChannelSplitterNodeOutput + _j9, _j9);
              }

              outputChannelSplitterNodeOutput += options.outputChannelCount[_i11];
            }
          }

          isConnected = true;
        };

        var whenDisconnected = function whenDisconnected() {
          if (isActive) {
            connectFakeGraph();
            disconnectOutputsGraph();
          }

          isConnected = false;
        };

        connectFakeGraph();
        return monitorConnections(nativeAudioWorkletNodeFaker, whenConnected, whenDisconnected);
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-audio-worklet-node-faker-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node-factory.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node-factory.js ***!
    \*************************************************************************************************************/

  /*! exports provided: createNativeBiquadFilterNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeBiquadFilterNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeBiquadFilterNodeFactory", function () {
      return createNativeBiquadFilterNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-audio-param-value */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-option */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

    var createNativeBiquadFilterNodeFactory = function createNativeBiquadFilterNodeFactory(createNativeAudioNode) {
      return function (nativeContext, options) {
        var nativeBiquadFilterNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createBiquadFilter();
        });
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__["assignNativeAudioNodeOptions"])(nativeBiquadFilterNode, options);
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeBiquadFilterNode, options, 'Q');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeBiquadFilterNode, options, 'detune');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeBiquadFilterNode, options, 'frequency');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeBiquadFilterNode, options, 'gain');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeBiquadFilterNode, options, 'type');
        return nativeBiquadFilterNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-biquad-filter-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js ***!
    \**************************************************************************************************************/

  /*! exports provided: createNativeChannelMergerNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeChannelMergerNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeChannelMergerNodeFactory", function () {
      return createNativeChannelMergerNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

    var createNativeChannelMergerNodeFactory = function createNativeChannelMergerNodeFactory(createNativeAudioNode, wrapChannelMergerNode) {
      return function (nativeContext, options) {
        var nativeChannelMergerNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createChannelMerger(options.numberOfInputs);
        }); // Bug #15: Safari does not return the default properties.
        // Bug #16: Safari does not throw an error when setting a different channelCount or channelCountMode.

        if (nativeChannelMergerNode.channelCount !== 1 && nativeChannelMergerNode.channelCountMode !== 'explicit') {
          wrapChannelMergerNode(nativeContext, nativeChannelMergerNode);
        }

        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(nativeChannelMergerNode, options);
        return nativeChannelMergerNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-channel-merger-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node-factory.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node-factory.js ***!
    \****************************************************************************************************************/

  /*! exports provided: createNativeChannelSplitterNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeChannelSplitterNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeChannelSplitterNodeFactory", function () {
      return createNativeChannelSplitterNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
    /* harmony import */


    var _helpers_wrap_channel_splitter_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/wrap-channel-splitter-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js");

    var createNativeChannelSplitterNodeFactory = function createNativeChannelSplitterNodeFactory(createNativeAudioNode) {
      return function (nativeContext, options) {
        var nativeChannelSplitterNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createChannelSplitter(options.numberOfOutputs);
        }); // Bug #96: Safari does not have the correct channelCount.
        // Bug #29: Edge & Safari do not have the correct channelCountMode.
        // Bug #31: Edge & Safari do not have the correct channelInterpretation.

        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(nativeChannelSplitterNode, options); // Bug #29, #30, #31, #32, #96 & #97: Only Chrome, Firefox & Opera partially support the spec yet.

        Object(_helpers_wrap_channel_splitter_node__WEBPACK_IMPORTED_MODULE_1__["wrapChannelSplitterNode"])(nativeChannelSplitterNode);
        return nativeChannelSplitterNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-channel-splitter-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js ***!
    \***************************************************************************************************************/

  /*! exports provided: createNativeConstantSourceNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeConstantSourceNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeConstantSourceNodeFactory", function () {
      return createNativeConstantSourceNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-audio-param-value */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
    /* harmony import */


    var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js");
    /* harmony import */


    var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js");

    var createNativeConstantSourceNodeFactory = function createNativeConstantSourceNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport) {
      return function (nativeContext, options) {
        // Bug #62: Edge & Safari do not support ConstantSourceNodes.
        if (nativeContext.createConstantSource === undefined) {
          return createNativeConstantSourceNodeFaker(nativeContext, options);
        }

        var nativeConstantSourceNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createConstantSource();
        });
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeConstantSourceNode, options);
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeConstantSourceNode, options, 'offset'); // Bug #44: Only Chrome, Firefox & Opera throw a RangeError yet.

        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, function () {
          return testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext);
        })) {
          Object(_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_2__["wrapAudioScheduledSourceNodeStartMethodNegativeParameters"])(nativeConstantSourceNode);
        } // Bug #44: Only Firefox does not throw a RangeError yet.


        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, function () {
          return testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext);
        })) {
          Object(_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__["wrapAudioScheduledSourceNodeStopMethodNegativeParameters"])(nativeConstantSourceNode);
        } // Bug #175: Safari will not fire an ended event if the ConstantSourceNode is unconnected.


        addSilentConnection(nativeContext, nativeConstantSourceNode);
        return nativeConstantSourceNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-constant-source-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js ***!
    \*********************************************************************************************************************/

  /*! exports provided: createNativeConstantSourceNodeFakerFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeConstantSourceNodeFakerFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeConstantSourceNodeFakerFactory", function () {
      return createNativeConstantSourceNodeFakerFactory;
    });
    /* harmony import */


    var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/intercept-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");

    var createNativeConstantSourceNodeFakerFactory = function createNativeConstantSourceNodeFakerFactory(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections) {
      return function (nativeContext, _ref36) {
        var offset = _ref36.offset,
            audioNodeOptions = _objectWithoutProperties(_ref36, ["offset"]);

        var audioBuffer = nativeContext.createBuffer(1, 2, nativeContext.sampleRate);
        var audioBufferSourceNode = createNativeAudioBufferSourceNode(nativeContext, {
          buffer: null,
          channelCount: 2,
          channelCountMode: 'max',
          channelInterpretation: 'speakers',
          loop: false,
          loopEnd: 0,
          loopStart: 0,
          playbackRate: 1
        });
        var gainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
          gain: offset
        })); // Bug #5: Safari does not support copyFromChannel() and copyToChannel().

        var channelData = audioBuffer.getChannelData(0); // Bug #95: Safari does not play or loop one sample buffers.

        channelData[0] = 1;
        channelData[1] = 1;
        audioBufferSourceNode.buffer = audioBuffer;
        audioBufferSourceNode.loop = true;
        var nativeConstantSourceNodeFaker = {
          get bufferSize() {
            return undefined;
          },

          get channelCount() {
            return gainNode.channelCount;
          },

          set channelCount(value) {
            gainNode.channelCount = value;
          },

          get channelCountMode() {
            return gainNode.channelCountMode;
          },

          set channelCountMode(value) {
            gainNode.channelCountMode = value;
          },

          get channelInterpretation() {
            return gainNode.channelInterpretation;
          },

          set channelInterpretation(value) {
            gainNode.channelInterpretation = value;
          },

          get context() {
            return gainNode.context;
          },

          get inputs() {
            return [];
          },

          get numberOfInputs() {
            return audioBufferSourceNode.numberOfInputs;
          },

          get numberOfOutputs() {
            return gainNode.numberOfOutputs;
          },

          get offset() {
            return gainNode.gain;
          },

          get onended() {
            return audioBufferSourceNode.onended;
          },

          set onended(value) {
            audioBufferSourceNode.onended = value;
          },

          addEventListener: function addEventListener() {
            return audioBufferSourceNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          },
          dispatchEvent: function dispatchEvent() {
            return audioBufferSourceNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
          },
          removeEventListener: function removeEventListener() {
            return audioBufferSourceNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          },
          start: function start() {
            var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
            audioBufferSourceNode.start.call(audioBufferSourceNode, when);
          },
          stop: function stop() {
            var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
            audioBufferSourceNode.stop.call(audioBufferSourceNode, when);
          }
        };

        var whenConnected = function whenConnected() {
          return audioBufferSourceNode.connect(gainNode);
        };

        var whenDisconnected = function whenDisconnected() {
          return audioBufferSourceNode.disconnect(gainNode);
        }; // Bug #175: Safari will not fire an ended event if the AudioBufferSourceNode is unconnected.


        addSilentConnection(nativeContext, audioBufferSourceNode);
        return monitorConnections(Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__["interceptConnections"])(nativeConstantSourceNodeFaker, gainNode), whenConnected, whenDisconnected);
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-constant-source-node-faker-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js ***!
    \*********************************************************************************************************/

  /*! exports provided: createNativeConvolverNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeConvolverNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeConvolverNodeFactory", function () {
      return createNativeConvolverNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-option */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

    var createNativeConvolverNodeFactory = function createNativeConvolverNodeFactory(createNativeAudioNode, createNativeConvolverNodeFaker, createNotSupportedError, overwriteAccessors) {
      return function (nativeContext, options) {
        var nativeConvolverNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createConvolver();
        });

        try {
          // Bug #166: Opera does not allow yet to set the channelCount to 1.
          nativeConvolverNode.channelCount = 1;
        } catch (err) {
          return createNativeConvolverNodeFaker(nativeContext, options);
        }

        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeConvolverNode, options); // The normalize property needs to be set before setting the buffer.

        if (options.disableNormalization === nativeConvolverNode.normalize) {
          nativeConvolverNode.normalize = !options.disableNormalization;
        }

        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeConvolverNode, options, 'buffer'); // Bug #113: Edge & Safari allow to set the channelCount to a value larger than 2.

        if (options.channelCount > 2) {
          throw createNotSupportedError();
        }

        overwriteAccessors(nativeConvolverNode, 'channelCount', function (get) {
          return function () {
            return get.call(nativeConvolverNode);
          };
        }, function (set) {
          return function (value) {
            if (value > 2) {
              throw createNotSupportedError();
            }

            return set.call(nativeConvolverNode, value);
          };
        }); // Bug #114: Edge & Safari allow to set the channelCountMode to 'max'.

        if (options.channelCountMode === 'max') {
          throw createNotSupportedError();
        }

        overwriteAccessors(nativeConvolverNode, 'channelCountMode', function (get) {
          return function () {
            return get.call(nativeConvolverNode);
          };
        }, function (set) {
          return function (value) {
            if (value === 'max') {
              throw createNotSupportedError();
            }

            return set.call(nativeConvolverNode, value);
          };
        });
        return nativeConvolverNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-convolver-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-faker-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-faker-factory.js ***!
    \***************************************************************************************************************/

  /*! exports provided: createNativeConvolverNodeFakerFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeConvolverNodeFakerFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeConvolverNodeFakerFactory", function () {
      return createNativeConvolverNodeFakerFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
    /* harmony import */


    var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/intercept-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");

    var createNativeConvolverNodeFakerFactory = function createNativeConvolverNodeFakerFactory(createNativeAudioNode, createNativeGainNode, monitorConnections) {
      return function (nativeContext, _ref37) {
        var buffer = _ref37.buffer,
            channelCount = _ref37.channelCount,
            channelCountMode = _ref37.channelCountMode,
            channelInterpretation = _ref37.channelInterpretation,
            disableNormalization = _ref37.disableNormalization;
        var convolverNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createConvolver();
        });
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(convolverNode, {
          // Bug #166: Opera does not allow yet to set the channelCount to 1.
          channelCount: Math.max(channelCount, 2),
          // Bug #167: Opera does not allow yet to set the channelCountMode to 'explicit'.
          channelCountMode: channelCountMode === 'max' ? channelCountMode : 'clamped-max',
          channelInterpretation: channelInterpretation
        });
        var gainNode = createNativeGainNode(nativeContext, {
          channelCount: channelCount,
          channelCountMode: channelCountMode,
          channelInterpretation: channelInterpretation,
          gain: 1
        });
        var nativeConvolverNodeFaker = {
          get buffer() {
            return convolverNode.buffer;
          },

          set buffer(value) {
            convolverNode.buffer = value;
          },

          get bufferSize() {
            return undefined;
          },

          get channelCount() {
            return gainNode.channelCount;
          },

          set channelCount(value) {
            // Bug #166: Opera does not allow yet to set the channelCount to 1.
            if (value > 2) {
              convolverNode.channelCount = value;
            }

            gainNode.channelCount = value;
          },

          get channelCountMode() {
            return gainNode.channelCountMode;
          },

          set channelCountMode(value) {
            // Bug #167: Opera does not allow yet to set the channelCountMode to 'explicit'.
            if (value === 'max') {
              convolverNode.channelCountMode = value;
            }

            gainNode.channelCountMode = value;
          },

          get channelInterpretation() {
            return convolverNode.channelInterpretation;
          },

          set channelInterpretation(value) {
            convolverNode.channelInterpretation = value;
            gainNode.channelInterpretation = value;
          },

          get context() {
            return convolverNode.context;
          },

          get inputs() {
            return [convolverNode];
          },

          get numberOfInputs() {
            return convolverNode.numberOfInputs;
          },

          get numberOfOutputs() {
            return convolverNode.numberOfOutputs;
          },

          get normalize() {
            return convolverNode.normalize;
          },

          set normalize(value) {
            convolverNode.normalize = value;
          },

          addEventListener: function addEventListener() {
            return convolverNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          },
          dispatchEvent: function dispatchEvent() {
            return convolverNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
          },
          removeEventListener: function removeEventListener() {
            return convolverNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          }
        }; // The normalize property needs to be set before setting the buffer.

        if (disableNormalization === nativeConvolverNodeFaker.normalize) {
          nativeConvolverNodeFaker.normalize = !disableNormalization;
        }

        if (buffer !== nativeConvolverNodeFaker.buffer) {
          nativeConvolverNodeFaker.buffer = buffer;
        }

        var whenConnected = function whenConnected() {
          return convolverNode.connect(gainNode);
        };

        var whenDisconnected = function whenDisconnected() {
          return convolverNode.disconnect(gainNode);
        };

        return monitorConnections(Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__["interceptConnections"])(nativeConvolverNodeFaker, gainNode), whenConnected, whenDisconnected);
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-convolver-node-faker-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node-factory.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node-factory.js ***!
    \*****************************************************************************************************/

  /*! exports provided: createNativeDelayNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeDelayNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeDelayNodeFactory", function () {
      return createNativeDelayNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-audio-param-value */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

    var createNativeDelayNodeFactory = function createNativeDelayNodeFactory(createNativeAudioNode) {
      return function (nativeContext, options) {
        var nativeDelayNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createDelay(options.maxDelayTime);
        });
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeDelayNode, options);
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDelayNode, options, 'delayTime');
        return nativeDelayNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-delay-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js ***!
    \*******************************************************************************************************************/

  /*! exports provided: createNativeDynamicsCompressorNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeDynamicsCompressorNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeDynamicsCompressorNodeFactory", function () {
      return createNativeDynamicsCompressorNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-audio-param-value */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

    var createNativeDynamicsCompressorNodeFactory = function createNativeDynamicsCompressorNodeFactory(createNativeAudioNode, createNotSupportedError) {
      return function (nativeContext, options) {
        var nativeDynamicsCompressorNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createDynamicsCompressor();
        });
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeDynamicsCompressorNode, options); // Bug #108: Only Chrome, Firefox and Opera disallow a channelCount of three and above yet.

        if (options.channelCount > 2) {
          throw createNotSupportedError();
        } // Bug #109: Only Chrome, Firefox and Opera disallow a channelCountMode of 'max'.


        if (options.channelCountMode === 'max') {
          throw createNotSupportedError();
        }

        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDynamicsCompressorNode, options, 'attack');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDynamicsCompressorNode, options, 'knee');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDynamicsCompressorNode, options, 'ratio');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDynamicsCompressorNode, options, 'release');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeDynamicsCompressorNode, options, 'threshold');
        return nativeDynamicsCompressorNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-dynamics-compressor-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node-factory.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node-factory.js ***!
    \****************************************************************************************************/

  /*! exports provided: createNativeGainNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeGainNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeGainNodeFactory", function () {
      return createNativeGainNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-audio-param-value */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

    var createNativeGainNodeFactory = function createNativeGainNodeFactory(createNativeAudioNode) {
      return function (nativeContext, options) {
        var nativeGainNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createGain();
        });
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeGainNode, options);
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeGainNode, options, 'gain');
        return nativeGainNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-gain-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js ***!
    \**********************************************************************************************************/

  /*! exports provided: createNativeIIRFilterNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeIirFilterNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeIIRFilterNodeFactory", function () {
      return createNativeIIRFilterNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

    var createNativeIIRFilterNodeFactory = function createNativeIIRFilterNodeFactory(createNativeAudioNode, createNativeIIRFilterNodeFaker) {
      return function (nativeContext, baseLatency, options) {
        // Bug #9: Safari does not support IIRFilterNodes.
        if (nativeContext.createIIRFilter === undefined) {
          return createNativeIIRFilterNodeFaker(nativeContext, baseLatency, options);
        }

        var nativeIIRFilterNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createIIRFilter(options.feedforward, options.feedback);
        });
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(nativeIIRFilterNode, options);
        return nativeIIRFilterNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-iir-filter-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js ***!
    \****************************************************************************************************************/

  /*! exports provided: createNativeIIRFilterNodeFakerFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeIirFilterNodeFakerFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeIIRFilterNodeFakerFactory", function () {
      return createNativeIIRFilterNodeFakerFactory;
    });
    /* harmony import */


    var _helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/compute-buffer-size */
    "./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js");
    /* harmony import */


    var _helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/filter-buffer */
    "./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js");
    /* harmony import */


    var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/intercept-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");

    function divide(a, b) {
      var denominator = b[0] * b[0] + b[1] * b[1];
      return [(a[0] * b[0] + a[1] * b[1]) / denominator, (a[1] * b[0] - a[0] * b[1]) / denominator];
    }

    function multiply(a, b) {
      return [a[0] * b[0] - a[1] * b[1], a[0] * b[1] + a[1] * b[0]];
    }

    function evaluatePolynomial(coefficient, z) {
      var result = [0, 0];

      for (var i = coefficient.length - 1; i >= 0; i -= 1) {
        result = multiply(result, z);
        result[0] += coefficient[i];
      }

      return result;
    }

    var createNativeIIRFilterNodeFakerFactory = function createNativeIIRFilterNodeFakerFactory(createInvalidAccessError, createInvalidStateError, createNativeScriptProcessorNode, createNotSupportedError) {
      return function (nativeContext, baseLatency, _ref38) {
        var channelCount = _ref38.channelCount,
            channelCountMode = _ref38.channelCountMode,
            channelInterpretation = _ref38.channelInterpretation,
            feedback = _ref38.feedback,
            feedforward = _ref38.feedforward;
        var bufferSize = Object(_helpers_compute_buffer_size__WEBPACK_IMPORTED_MODULE_0__["computeBufferSize"])(baseLatency, nativeContext.sampleRate);
        var feedbackLength = feedback.length;
        var feedforwardLength = feedforward.length;
        var minLength = Math.min(feedbackLength, feedforwardLength);

        if (feedback.length === 0 || feedback.length > 20) {
          throw createNotSupportedError();
        }

        if (feedback[0] === 0) {
          throw createInvalidStateError();
        }

        if (feedforward.length === 0 || feedforward.length > 20) {
          throw createNotSupportedError();
        }

        if (feedforward[0] === 0) {
          throw createInvalidStateError();
        }

        if (feedback[0] !== 1) {
          for (var i = 0; i < feedforwardLength; i += 1) {
            feedforward[i] /= feedback[0];
          }

          for (var _i12 = 1; _i12 < feedbackLength; _i12 += 1) {
            feedback[_i12] /= feedback[0];
          }
        }

        var scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, bufferSize, channelCount, channelCount);
        scriptProcessorNode.channelCount = channelCount;
        scriptProcessorNode.channelCountMode = channelCountMode;
        scriptProcessorNode.channelInterpretation = channelInterpretation;
        var bufferLength = 32;
        var bufferIndexes = [];
        var xBuffers = [];
        var yBuffers = [];

        for (var _i13 = 0; _i13 < channelCount; _i13 += 1) {
          bufferIndexes.push(0);
          var xBuffer = new Float32Array(bufferLength);
          var yBuffer = new Float32Array(bufferLength);
          xBuffer.fill(0);
          yBuffer.fill(0);
          xBuffers.push(xBuffer);
          yBuffers.push(yBuffer);
        }

        scriptProcessorNode.onaudioprocess = function (event) {
          var inputBuffer = event.inputBuffer;
          var outputBuffer = event.outputBuffer;
          var numberOfChannels = inputBuffer.numberOfChannels;

          for (var _i14 = 0; _i14 < numberOfChannels; _i14 += 1) {
            var input = inputBuffer.getChannelData(_i14);
            var output = outputBuffer.getChannelData(_i14);
            bufferIndexes[_i14] = Object(_helpers_filter_buffer__WEBPACK_IMPORTED_MODULE_1__["filterBuffer"])(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffers[_i14], yBuffers[_i14], bufferIndexes[_i14], bufferLength, input, output);
          }
        };

        var nyquist = nativeContext.sampleRate / 2;
        var nativeIIRFilterNodeFaker = {
          get bufferSize() {
            return bufferSize;
          },

          get channelCount() {
            return scriptProcessorNode.channelCount;
          },

          set channelCount(value) {
            scriptProcessorNode.channelCount = value;
          },

          get channelCountMode() {
            return scriptProcessorNode.channelCountMode;
          },

          set channelCountMode(value) {
            scriptProcessorNode.channelCountMode = value;
          },

          get channelInterpretation() {
            return scriptProcessorNode.channelInterpretation;
          },

          set channelInterpretation(value) {
            scriptProcessorNode.channelInterpretation = value;
          },

          get context() {
            return scriptProcessorNode.context;
          },

          get inputs() {
            return [scriptProcessorNode];
          },

          get numberOfInputs() {
            return scriptProcessorNode.numberOfInputs;
          },

          get numberOfOutputs() {
            return scriptProcessorNode.numberOfOutputs;
          },

          addEventListener: function addEventListener() {
            // @todo Dissallow adding an audioprocess listener.
            return scriptProcessorNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          },
          dispatchEvent: function dispatchEvent() {
            return scriptProcessorNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
          },
          getFrequencyResponse: function getFrequencyResponse(frequencyHz, magResponse, phaseResponse) {
            if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
              throw createInvalidAccessError();
            }

            var length = frequencyHz.length;

            for (var _i15 = 0; _i15 < length; _i15 += 1) {
              var omega = -Math.PI * (frequencyHz[_i15] / nyquist);
              var z = [Math.cos(omega), Math.sin(omega)];
              var numerator = evaluatePolynomial(feedforward, z);
              var denominator = evaluatePolynomial(feedback, z);
              var response = divide(numerator, denominator);
              magResponse[_i15] = Math.sqrt(response[0] * response[0] + response[1] * response[1]);
              phaseResponse[_i15] = Math.atan2(response[1], response[0]);
            }
          },
          removeEventListener: function removeEventListener() {
            return scriptProcessorNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          }
        };
        return Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_2__["interceptConnections"])(nativeIIRFilterNodeFaker, scriptProcessorNode);
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-iir-filter-node-faker-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node-factory.js":
  /*!**************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node-factory.js ***!
    \**************************************************************************************************************************/

  /*! exports provided: createNativeMediaElementAudioSourceNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeMediaElementAudioSourceNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeMediaElementAudioSourceNodeFactory", function () {
      return createNativeMediaElementAudioSourceNodeFactory;
    });

    var createNativeMediaElementAudioSourceNodeFactory = function createNativeMediaElementAudioSourceNodeFactory(createNativeAudioNode) {
      return function (nativeAudioContext, options) {
        return createNativeAudioNode(nativeAudioContext, function (ntvDCntxt) {
          return ntvDCntxt.createMediaElementSource(options.mediaElement);
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-media-element-audio-source-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node-factory.js":
  /*!******************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node-factory.js ***!
    \******************************************************************************************************************************/

  /*! exports provided: createNativeMediaStreamAudioDestinationNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeMediaStreamAudioDestinationNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeMediaStreamAudioDestinationNodeFactory", function () {
      return createNativeMediaStreamAudioDestinationNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

    var createNativeMediaStreamAudioDestinationNodeFactory = function createNativeMediaStreamAudioDestinationNodeFactory(createNativeAudioNode, createNotSupportedError) {
      return function (nativeAudioContext, options) {
        // Bug #64: Edge does not support MediaStreamAudioDestinationNodes.
        if (nativeAudioContext.createMediaStreamDestination === undefined) {
          throw createNotSupportedError();
        }

        var nativeMediaStreamAudioDestinationNode = createNativeAudioNode(nativeAudioContext, function (ntvDCntxt) {
          return ntvDCntxt.createMediaStreamDestination();
        });
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(nativeMediaStreamAudioDestinationNode, options); // Bug #174: Safari does expose a wrong numberOfOutputs.

        if (nativeMediaStreamAudioDestinationNode.numberOfOutputs === 1) {
          Object.defineProperty(nativeMediaStreamAudioDestinationNode, 'numberOfOutputs', {
            get: function get() {
              return 0;
            }
          });
        }

        return nativeMediaStreamAudioDestinationNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-media-stream-audio-destination-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node-factory.js":
  /*!*************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node-factory.js ***!
    \*************************************************************************************************************************/

  /*! exports provided: createNativeMediaStreamAudioSourceNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeMediaStreamAudioSourceNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeMediaStreamAudioSourceNodeFactory", function () {
      return createNativeMediaStreamAudioSourceNodeFactory;
    });

    var createNativeMediaStreamAudioSourceNodeFactory = function createNativeMediaStreamAudioSourceNodeFactory(createNativeAudioNode) {
      return function (nativeAudioContext, _ref39) {
        var mediaStream = _ref39.mediaStream;
        var audioStreamTracks = mediaStream.getAudioTracks();
        var nativeMediaStreamAudioSourceNode = createNativeAudioNode(nativeAudioContext, function (ntvDCntxt) {
          /*
           * Bug #151: Safari does not use the audio track as input anymore if it gets removed from the mediaStream after construction.
           * Bug #159: Safari picks the first audio track if the MediaStream has more than one audio track.
           */
          var filteredAudioStreamTracks = audioStreamTracks.sort(function (a, b) {
            return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;
          }).slice(0, 1);
          return ntvDCntxt.createMediaStreamSource(new MediaStream(filteredAudioStreamTracks));
        }); // Bug #63: Edge does not expose the mediaStream yet.

        Object.defineProperty(nativeMediaStreamAudioSourceNode, 'mediaStream', {
          value: mediaStream
        });
        return nativeMediaStreamAudioSourceNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-media-stream-audio-source-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js":
  /*!*******************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js ***!
    \*******************************************************************************************************************************/

  /*! exports provided: createNativeMediaStreamTrackAudioSourceNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeMediaStreamTrackAudioSourceNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeMediaStreamTrackAudioSourceNodeFactory", function () {
      return createNativeMediaStreamTrackAudioSourceNodeFactory;
    });

    var createNativeMediaStreamTrackAudioSourceNodeFactory = function createNativeMediaStreamTrackAudioSourceNodeFactory(createInvalidStateError, createNativeAudioNode, isNativeOfflineAudioContext) {
      return function (nativeAudioContext, _ref40) {
        var mediaStreamTrack = _ref40.mediaStreamTrack;

        if (typeof nativeAudioContext.createMediaStreamTrackSource === 'function') {
          return createNativeAudioNode(nativeAudioContext, function (ntvDCntxt) {
            return ntvDCntxt.createMediaStreamTrackSource(mediaStreamTrack);
          });
        } // Bug #121: Only Firefox does yet support the MediaStreamTrackAudioSourceNode.


        return createNativeAudioNode(nativeAudioContext, function (ntvDCntxt) {
          var mediaStream = new MediaStream([mediaStreamTrack]);
          var nativeMediaStreamAudioSourceNode = ntvDCntxt.createMediaStreamSource(mediaStream); // Bug #120: Firefox does not throw an error if the mediaStream has no audio track.

          if (mediaStreamTrack.kind !== 'audio') {
            throw createInvalidStateError();
          } // Bug #172: Safari allows to create a MediaStreamAudioSourceNode with an OfflineAudioContext.


          if (isNativeOfflineAudioContext(ntvDCntxt)) {
            throw new TypeError();
          }

          return nativeMediaStreamAudioSourceNode;
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js ***!
    \********************************************************************************************************************/

  /*! exports provided: createNativeOfflineAudioContextConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeOfflineAudioContextConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeOfflineAudioContextConstructor", function () {
      return createNativeOfflineAudioContextConstructor;
    });

    var createNativeOfflineAudioContextConstructor = function createNativeOfflineAudioContextConstructor(window) {
      if (window === null) {
        return null;
      }

      if (window.hasOwnProperty('OfflineAudioContext')) {
        return window.OfflineAudioContext;
      }

      return window.hasOwnProperty('webkitOfflineAudioContext') ? window.webkitOfflineAudioContext : null;
    }; //# sourceMappingURL=/build/es2019/factories/native-offline-audio-context-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js ***!
    \**********************************************************************************************************/

  /*! exports provided: createNativeOscillatorNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeOscillatorNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeOscillatorNodeFactory", function () {
      return createNativeOscillatorNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-audio-param-value */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-option */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
    /* harmony import */


    var _helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js");
    /* harmony import */


    var _helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js");

    var createNativeOscillatorNodeFactory = function createNativeOscillatorNodeFactory(addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls) {
      return function (nativeContext, options) {
        var nativeOscillatorNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createOscillator();
        });
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__["assignNativeAudioNodeOptions"])(nativeOscillatorNode, options);
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeOscillatorNode, options, 'detune');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeOscillatorNode, options, 'frequency');

        if (options.periodicWave !== undefined) {
          nativeOscillatorNode.setPeriodicWave(options.periodicWave);
        } else {
          Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativeOscillatorNode, options, 'type');
        } // Bug #44: Only Chrome & Opera throw a RangeError yet.


        if (!cacheTestResult(testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, function () {
          return testAudioScheduledSourceNodeStartMethodNegativeParametersSupport(nativeContext);
        })) {
          Object(_helpers_wrap_audio_scheduled_source_node_start_method_negative_parameters__WEBPACK_IMPORTED_MODULE_3__["wrapAudioScheduledSourceNodeStartMethodNegativeParameters"])(nativeOscillatorNode);
        } // Bug #19: Safari does not ignore calls to stop() of an already stopped AudioBufferSourceNode.


        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, function () {
          return testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(nativeContext);
        })) {
          wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(nativeOscillatorNode, nativeContext);
        } // Bug #44: Only Firefox does not throw a RangeError yet.


        if (!cacheTestResult(testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, function () {
          return testAudioScheduledSourceNodeStopMethodNegativeParametersSupport(nativeContext);
        })) {
          Object(_helpers_wrap_audio_scheduled_source_node_stop_method_negative_parameters__WEBPACK_IMPORTED_MODULE_4__["wrapAudioScheduledSourceNodeStopMethodNegativeParameters"])(nativeOscillatorNode);
        } // Bug #175: Safari will not fire an ended event if the OscillatorNode is unconnected.


        addSilentConnection(nativeContext, nativeOscillatorNode);
        return nativeOscillatorNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-oscillator-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js ***!
    \******************************************************************************************************/

  /*! exports provided: createNativePannerNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativePannerNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativePannerNodeFactory", function () {
      return createNativePannerNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-audio-param-value */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-option */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

    var createNativePannerNodeFactory = function createNativePannerNodeFactory(createNativeAudioNode, createNativePannerNodeFaker) {
      return function (nativeContext, options) {
        var nativePannerNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createPanner();
        }); // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.

        if (nativePannerNode.orientationX === undefined) {
          return createNativePannerNodeFaker(nativeContext, options);
        }

        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_2__["assignNativeAudioNodeOptions"])(nativePannerNode, options);
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'orientationX');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'orientationY');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'orientationZ');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'positionX');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'positionY');
        Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativePannerNode, options, 'positionZ');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'coneInnerAngle');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'coneOuterAngle');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'coneOuterGain');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'distanceModel');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'maxDistance');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'panningModel');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'refDistance');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOption"])(nativePannerNode, options, 'rolloffFactor');
        return nativePannerNode;
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-panner-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js ***!
    \************************************************************************************************************/

  /*! exports provided: createNativePannerNodeFakerFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativePannerNodeFakerFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativePannerNodeFakerFactory", function () {
      return createNativePannerNodeFakerFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
    /* harmony import */


    var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/intercept-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");

    var createNativePannerNodeFakerFactory = function createNativePannerNodeFakerFactory(connectNativeAudioNodeToNativeAudioNode, createInvalidStateError, createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, createNotSupportedError, disconnectNativeAudioNodeFromNativeAudioNode, monitorConnections) {
      return function (nativeContext, _ref41) {
        var coneInnerAngle = _ref41.coneInnerAngle,
            coneOuterAngle = _ref41.coneOuterAngle,
            coneOuterGain = _ref41.coneOuterGain,
            distanceModel = _ref41.distanceModel,
            maxDistance = _ref41.maxDistance,
            orientationX = _ref41.orientationX,
            orientationY = _ref41.orientationY,
            orientationZ = _ref41.orientationZ,
            panningModel = _ref41.panningModel,
            positionX = _ref41.positionX,
            positionY = _ref41.positionY,
            positionZ = _ref41.positionZ,
            refDistance = _ref41.refDistance,
            rolloffFactor = _ref41.rolloffFactor,
            audioNodeOptions = _objectWithoutProperties(_ref41, ["coneInnerAngle", "coneOuterAngle", "coneOuterGain", "distanceModel", "maxDistance", "orientationX", "orientationY", "orientationZ", "panningModel", "positionX", "positionY", "positionZ", "refDistance", "rolloffFactor"]);

        var pannerNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createPanner();
        }); // Bug #125: Safari does not throw an error yet.

        if (audioNodeOptions.channelCount > 2) {
          throw createNotSupportedError();
        } // Bug #126: Safari does not throw an error yet.


        if (audioNodeOptions.channelCountMode === 'max') {
          throw createNotSupportedError();
        }

        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(pannerNode, audioNodeOptions);
        var SINGLE_CHANNEL_OPTIONS = {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete'
        };
        var channelMergerNode = createNativeChannelMergerNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          channelInterpretation: 'speakers',
          numberOfInputs: 6
        }));
        var inputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
          gain: 1
        }));
        var orientationXGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 1
        }));
        var orientationYGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 0
        }));
        var orientationZGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 0
        }));
        var positionXGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 0
        }));
        var positionYGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 0
        }));
        var positionZGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 0
        }));
        var scriptProcessorNode = createNativeScriptProcessorNode(nativeContext, 256, 6, 1);
        var waveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          curve: new Float32Array([1, 1]),
          oversample: 'none'
        }));
        var lastOrientation = [orientationX, orientationY, orientationZ];
        var lastPosition = [positionX, positionY, positionZ];

        scriptProcessorNode.onaudioprocess = function (_ref42) {
          var inputBuffer = _ref42.inputBuffer;
          var orientation = [inputBuffer.getChannelData(0)[0], inputBuffer.getChannelData(1)[0], inputBuffer.getChannelData(2)[0]];

          if (orientation.some(function (value, index) {
            return value !== lastOrientation[index];
          })) {
            pannerNode.setOrientation.apply(pannerNode, orientation); // tslint:disable-line:deprecation

            lastOrientation = orientation;
          }

          var positon = [inputBuffer.getChannelData(3)[0], inputBuffer.getChannelData(4)[0], inputBuffer.getChannelData(5)[0]];

          if (positon.some(function (value, index) {
            return value !== lastPosition[index];
          })) {
            pannerNode.setPosition.apply(pannerNode, positon); // tslint:disable-line:deprecation

            lastPosition = positon;
          }
        };

        Object.defineProperty(orientationYGainNode.gain, 'defaultValue', {
          get: function get() {
            return 0;
          }
        });
        Object.defineProperty(orientationZGainNode.gain, 'defaultValue', {
          get: function get() {
            return 0;
          }
        });
        Object.defineProperty(positionXGainNode.gain, 'defaultValue', {
          get: function get() {
            return 0;
          }
        });
        Object.defineProperty(positionYGainNode.gain, 'defaultValue', {
          get: function get() {
            return 0;
          }
        });
        Object.defineProperty(positionZGainNode.gain, 'defaultValue', {
          get: function get() {
            return 0;
          }
        });
        var nativePannerNodeFaker = {
          get bufferSize() {
            return undefined;
          },

          get channelCount() {
            return pannerNode.channelCount;
          },

          set channelCount(value) {
            // Bug #125: Safari does not throw an error yet.
            if (value > 2) {
              throw createNotSupportedError();
            }

            inputGainNode.channelCount = value;
            pannerNode.channelCount = value;
          },

          get channelCountMode() {
            return pannerNode.channelCountMode;
          },

          set channelCountMode(value) {
            // Bug #126: Safari does not throw an error yet.
            if (value === 'max') {
              throw createNotSupportedError();
            }

            inputGainNode.channelCountMode = value;
            pannerNode.channelCountMode = value;
          },

          get channelInterpretation() {
            return pannerNode.channelInterpretation;
          },

          set channelInterpretation(value) {
            inputGainNode.channelInterpretation = value;
            pannerNode.channelInterpretation = value;
          },

          get coneInnerAngle() {
            return pannerNode.coneInnerAngle;
          },

          set coneInnerAngle(value) {
            pannerNode.coneInnerAngle = value;
          },

          get coneOuterAngle() {
            return pannerNode.coneOuterAngle;
          },

          set coneOuterAngle(value) {
            pannerNode.coneOuterAngle = value;
          },

          get coneOuterGain() {
            return pannerNode.coneOuterGain;
          },

          set coneOuterGain(value) {
            // Bug #127: Edge & Safari do not throw an InvalidStateError yet.
            if (value < 0 || value > 1) {
              throw createInvalidStateError();
            }

            pannerNode.coneOuterGain = value;
          },

          get context() {
            return pannerNode.context;
          },

          get distanceModel() {
            return pannerNode.distanceModel;
          },

          set distanceModel(value) {
            pannerNode.distanceModel = value;
          },

          get inputs() {
            return [inputGainNode];
          },

          get maxDistance() {
            return pannerNode.maxDistance;
          },

          set maxDistance(value) {
            // Bug #128: Edge & Safari do not throw an error yet.
            if (value < 0) {
              throw new RangeError();
            }

            pannerNode.maxDistance = value;
          },

          get numberOfInputs() {
            return pannerNode.numberOfInputs;
          },

          get numberOfOutputs() {
            return pannerNode.numberOfOutputs;
          },

          get orientationX() {
            return orientationXGainNode.gain;
          },

          get orientationY() {
            return orientationYGainNode.gain;
          },

          get orientationZ() {
            return orientationZGainNode.gain;
          },

          get panningModel() {
            return pannerNode.panningModel;
          },

          set panningModel(value) {
            pannerNode.panningModel = value; // Bug #123: Edge does not support HRTF as panningModel.

            if (pannerNode.panningModel !== value && value === 'HRTF') {
              throw createNotSupportedError();
            }
          },

          get positionX() {
            return positionXGainNode.gain;
          },

          get positionY() {
            return positionYGainNode.gain;
          },

          get positionZ() {
            return positionZGainNode.gain;
          },

          get refDistance() {
            return pannerNode.refDistance;
          },

          set refDistance(value) {
            // Bug #129: Edge & Safari do not throw an error yet.
            if (value < 0) {
              throw new RangeError();
            }

            pannerNode.refDistance = value;
          },

          get rolloffFactor() {
            return pannerNode.rolloffFactor;
          },

          set rolloffFactor(value) {
            // Bug #130: Edge & Safari do not throw an error yet.
            if (value < 0) {
              throw new RangeError();
            }

            pannerNode.rolloffFactor = value;
          },

          addEventListener: function addEventListener() {
            return inputGainNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          },
          dispatchEvent: function dispatchEvent() {
            return inputGainNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
          },
          removeEventListener: function removeEventListener() {
            return inputGainNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          }
        };

        if (coneInnerAngle !== nativePannerNodeFaker.coneInnerAngle) {
          nativePannerNodeFaker.coneInnerAngle = coneInnerAngle;
        }

        if (coneOuterAngle !== nativePannerNodeFaker.coneOuterAngle) {
          nativePannerNodeFaker.coneOuterAngle = coneOuterAngle;
        }

        if (coneOuterGain !== nativePannerNodeFaker.coneOuterGain) {
          nativePannerNodeFaker.coneOuterGain = coneOuterGain;
        }

        if (distanceModel !== nativePannerNodeFaker.distanceModel) {
          nativePannerNodeFaker.distanceModel = distanceModel;
        }

        if (maxDistance !== nativePannerNodeFaker.maxDistance) {
          nativePannerNodeFaker.maxDistance = maxDistance;
        }

        if (orientationX !== nativePannerNodeFaker.orientationX.value) {
          nativePannerNodeFaker.orientationX.value = orientationX;
        }

        if (orientationY !== nativePannerNodeFaker.orientationY.value) {
          nativePannerNodeFaker.orientationY.value = orientationY;
        }

        if (orientationZ !== nativePannerNodeFaker.orientationZ.value) {
          nativePannerNodeFaker.orientationZ.value = orientationZ;
        }

        if (panningModel !== nativePannerNodeFaker.panningModel) {
          nativePannerNodeFaker.panningModel = panningModel;
        }

        if (positionX !== nativePannerNodeFaker.positionX.value) {
          nativePannerNodeFaker.positionX.value = positionX;
        }

        if (positionY !== nativePannerNodeFaker.positionY.value) {
          nativePannerNodeFaker.positionY.value = positionY;
        }

        if (positionZ !== nativePannerNodeFaker.positionZ.value) {
          nativePannerNodeFaker.positionZ.value = positionZ;
        }

        if (refDistance !== nativePannerNodeFaker.refDistance) {
          nativePannerNodeFaker.refDistance = refDistance;
        }

        if (rolloffFactor !== nativePannerNodeFaker.rolloffFactor) {
          nativePannerNodeFaker.rolloffFactor = rolloffFactor;
        }

        if (lastOrientation[0] !== 1 || lastOrientation[1] !== 0 || lastOrientation[2] !== 0) {
          pannerNode.setOrientation.apply(pannerNode, _toConsumableArray(lastOrientation)); // tslint:disable-line:deprecation
        }

        if (lastPosition[0] !== 0 || lastPosition[1] !== 0 || lastPosition[2] !== 0) {
          pannerNode.setPosition.apply(pannerNode, _toConsumableArray(lastPosition)); // tslint:disable-line:deprecation
        }

        var whenConnected = function whenConnected() {
          inputGainNode.connect(pannerNode); // Bug #119: Safari does not fully support the WaveShaperNode.

          connectNativeAudioNodeToNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);
          waveShaperNode.connect(orientationXGainNode).connect(channelMergerNode, 0, 0);
          waveShaperNode.connect(orientationYGainNode).connect(channelMergerNode, 0, 1);
          waveShaperNode.connect(orientationZGainNode).connect(channelMergerNode, 0, 2);
          waveShaperNode.connect(positionXGainNode).connect(channelMergerNode, 0, 3);
          waveShaperNode.connect(positionYGainNode).connect(channelMergerNode, 0, 4);
          waveShaperNode.connect(positionZGainNode).connect(channelMergerNode, 0, 5);
          channelMergerNode.connect(scriptProcessorNode).connect(nativeContext.destination);
        };

        var whenDisconnected = function whenDisconnected() {
          inputGainNode.disconnect(pannerNode); // Bug #119: Safari does not fully support the WaveShaperNode.

          disconnectNativeAudioNodeFromNativeAudioNode(inputGainNode, waveShaperNode, 0, 0);
          waveShaperNode.disconnect(orientationXGainNode);
          orientationXGainNode.disconnect(channelMergerNode);
          waveShaperNode.disconnect(orientationYGainNode);
          orientationYGainNode.disconnect(channelMergerNode);
          waveShaperNode.disconnect(orientationZGainNode);
          orientationZGainNode.disconnect(channelMergerNode);
          waveShaperNode.disconnect(positionXGainNode);
          positionXGainNode.disconnect(channelMergerNode);
          waveShaperNode.disconnect(positionYGainNode);
          positionYGainNode.disconnect(channelMergerNode);
          waveShaperNode.disconnect(positionZGainNode);
          positionZGainNode.disconnect(channelMergerNode);
          channelMergerNode.disconnect(scriptProcessorNode);
          scriptProcessorNode.disconnect(nativeContext.destination);
        };

        return monitorConnections(Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__["interceptConnections"])(nativePannerNodeFaker, pannerNode), whenConnected, whenDisconnected);
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-panner-node-faker-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js ***!
    \********************************************************************************************************/

  /*! exports provided: createNativePeriodicWaveFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativePeriodicWaveFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativePeriodicWaveFactory", function () {
      return createNativePeriodicWaveFactory;
    });

    var createNativePeriodicWaveFactory = function createNativePeriodicWaveFactory(getBackupNativeContext) {
      return function (nativeContext, _ref43) {
        var disableNormalization = _ref43.disableNormalization,
            imag = _ref43.imag,
            real = _ref43.real;
        // Bug #50: Only Edge does currently not allow to create AudioNodes (and other objects) on a closed context yet.
        var backupNativeContext = getBackupNativeContext(nativeContext); // @todo Edge, Firefox & Safari do only accept Float32Arrays.

        var wrappedImag = new Float32Array(imag);
        var wrappedReal = new Float32Array(real);

        if (backupNativeContext !== null) {
          return backupNativeContext.createPeriodicWave(wrappedReal, wrappedImag, {
            disableNormalization: disableNormalization
          });
        }

        return nativeContext.createPeriodicWave(wrappedReal, wrappedImag, {
          disableNormalization: disableNormalization
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-periodic-wave-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node-factory.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node-factory.js ***!
    \****************************************************************************************************************/

  /*! exports provided: createNativeScriptProcessorNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeScriptProcessorNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeScriptProcessorNodeFactory", function () {
      return createNativeScriptProcessorNodeFactory;
    });

    var createNativeScriptProcessorNodeFactory = function createNativeScriptProcessorNodeFactory(createNativeAudioNode) {
      return function (nativeContext, bufferSize, numberOfInputChannels, numberOfOutputChannels) {
        return createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels);
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-script-processor-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js ***!
    \*************************************************************************************************************/

  /*! exports provided: createNativeStereoPannerNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeStereoPannerNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeStereoPannerNodeFactory", function () {
      return createNativeStereoPannerNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-audio-param-value */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

    var createNativeStereoPannerNodeFactory = function createNativeStereoPannerNodeFactory(createNativeAudioNode, createNativeStereoPannerNodeFaker, createNotSupportedError) {
      return function (nativeContext, options) {
        return createNativeAudioNode(nativeContext, function (ntvCntxt) {
          var channelCountMode = options.channelCountMode;
          /*
           * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari
           * which supports it and therefore it can't be supported at all.
           */

          if (channelCountMode === 'clamped-max') {
            throw createNotSupportedError();
          } // Bug #105: Safari does not support the StereoPannerNode.


          if (nativeContext.createStereoPanner === undefined) {
            return createNativeStereoPannerNodeFaker(nativeContext, options);
          }

          var nativeStereoPannerNode = ntvCntxt.createStereoPanner();
          Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeStereoPannerNode, options);
          Object(_helpers_assign_native_audio_node_audio_param_value__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeAudioParamValue"])(nativeStereoPannerNode, options, 'pan');
          /*
           * Bug #105: The channelCountMode of 'clamped-max' should be supported. However it is not possible to write a polyfill for Safari
           * which supports it and therefore it can't be supported at all.
           */

          Object.defineProperty(nativeStereoPannerNode, 'channelCountMode', {
            get: function get() {
              return channelCountMode;
            },
            set: function set(value) {
              if (value !== channelCountMode) {
                throw createNotSupportedError();
              }
            }
          });
          return nativeStereoPannerNode;
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-stereo-panner-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js ***!
    \*******************************************************************************************************************/

  /*! exports provided: createNativeStereoPannerNodeFakerFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeStereoPannerNodeFakerFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeStereoPannerNodeFakerFactory", function () {
      return createNativeStereoPannerNodeFakerFactory;
    });
    /* harmony import */


    var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/intercept-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");

    var createNativeStereoPannerNodeFakerFactory = function createNativeStereoPannerNodeFakerFactory(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, createNotSupportedError, monitorConnections) {
      // The curve has a size of 14bit plus 1 value to have an exact representation for zero. This value has been determined experimentally.
      var CURVE_SIZE = 16385;
      var DC_CURVE = new Float32Array([1, 1]);
      var HALF_PI = Math.PI / 2;
      var SINGLE_CHANNEL_OPTIONS = {
        channelCount: 1,
        channelCountMode: 'explicit',
        channelInterpretation: 'discrete'
      };

      var SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS = _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
        oversample: 'none'
      });

      var buildInternalGraphForMono = function buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode) {
        var leftWaveShaperCurve = new Float32Array(CURVE_SIZE);
        var rightWaveShaperCurve = new Float32Array(CURVE_SIZE);

        for (var i = 0; i < CURVE_SIZE; i += 1) {
          var x = i / (CURVE_SIZE - 1) * HALF_PI;
          leftWaveShaperCurve[i] = Math.cos(x);
          rightWaveShaperCurve[i] = Math.sin(x);
        }

        var leftGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 0
        })); // Bug #119: Safari does not fully support the WaveShaperNode.

        var leftWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
          curve: leftWaveShaperCurve
        })); // Bug #119: Safari does not fully support the WaveShaperNode.

        var panWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
          curve: DC_CURVE
        }));
        var rightGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 0
        })); // Bug #119: Safari does not fully support the WaveShaperNode.

        var rightWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
          curve: rightWaveShaperCurve
        }));
        return {
          connectGraph: function connectGraph() {
            inputGainNode.connect(leftGainNode);
            inputGainNode.connect(panWaveShaperNode.inputs[0]);
            inputGainNode.connect(rightGainNode);
            panWaveShaperNode.connect(panGainNode);
            panGainNode.connect(leftWaveShaperNode.inputs[0]);
            panGainNode.connect(rightWaveShaperNode.inputs[0]);
            leftWaveShaperNode.connect(leftGainNode.gain);
            rightWaveShaperNode.connect(rightGainNode.gain);
            leftGainNode.connect(channelMergerNode, 0, 0);
            rightGainNode.connect(channelMergerNode, 0, 1);
          },
          disconnectGraph: function disconnectGraph() {
            inputGainNode.disconnect(leftGainNode);
            inputGainNode.disconnect(panWaveShaperNode.inputs[0]);
            inputGainNode.disconnect(rightGainNode);
            panWaveShaperNode.disconnect(panGainNode);
            panGainNode.disconnect(leftWaveShaperNode.inputs[0]);
            panGainNode.disconnect(rightWaveShaperNode.inputs[0]);
            leftWaveShaperNode.disconnect(leftGainNode.gain);
            rightWaveShaperNode.disconnect(rightGainNode.gain);
            leftGainNode.disconnect(channelMergerNode, 0, 0);
            rightGainNode.disconnect(channelMergerNode, 0, 1);
          }
        };
      };

      var buildInternalGraphForStereo = function buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode) {
        var leftInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        var leftInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        var rightInputForLeftOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        var rightInputForRightOutputWaveShaperCurve = new Float32Array(CURVE_SIZE);
        var centerIndex = Math.floor(CURVE_SIZE / 2);

        for (var i = 0; i < CURVE_SIZE; i += 1) {
          if (i > centerIndex) {
            var x = (i - centerIndex) / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;
            leftInputForLeftOutputWaveShaperCurve[i] = Math.cos(x);
            leftInputForRightOutputWaveShaperCurve[i] = Math.sin(x);
            rightInputForLeftOutputWaveShaperCurve[i] = 0;
            rightInputForRightOutputWaveShaperCurve[i] = 1;
          } else {
            var _x62 = i / (CURVE_SIZE - 1 - centerIndex) * HALF_PI;

            leftInputForLeftOutputWaveShaperCurve[i] = 1;
            leftInputForRightOutputWaveShaperCurve[i] = 0;
            rightInputForLeftOutputWaveShaperCurve[i] = Math.cos(_x62);
            rightInputForRightOutputWaveShaperCurve[i] = Math.sin(_x62);
          }
        }

        var channelSplitterNode = createNativeChannelSplitterNode(nativeContext, {
          channelCount: 2,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
          numberOfOutputs: 2
        });
        var leftInputForLeftOutputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 0
        })); // Bug #119: Safari does not fully support the WaveShaperNode.

        var leftInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
          curve: leftInputForLeftOutputWaveShaperCurve
        }));
        var leftInputForRightOutputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 0
        })); // Bug #119: Safari does not fully support the WaveShaperNode.

        var leftInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
          curve: leftInputForRightOutputWaveShaperCurve
        })); // Bug #119: Safari does not fully support the WaveShaperNode.

        var panWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
          curve: DC_CURVE
        }));
        var rightInputForLeftOutputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 0
        })); // Bug #119: Safari does not fully support the WaveShaperNode.

        var rightInputForLeftOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
          curve: rightInputForLeftOutputWaveShaperCurve
        }));
        var rightInputForRightOutputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_OPTIONS), {}, {
          gain: 0
        })); // Bug #119: Safari does not fully support the WaveShaperNode.

        var rightInputForRightOutputWaveShaperNode = createNativeWaveShaperNode(nativeContext, _objectSpread(_objectSpread({}, SINGLE_CHANNEL_WAVE_SHAPER_OPTIONS), {}, {
          curve: rightInputForRightOutputWaveShaperCurve
        }));
        return {
          connectGraph: function connectGraph() {
            inputGainNode.connect(channelSplitterNode);
            inputGainNode.connect(panWaveShaperNode.inputs[0]);
            channelSplitterNode.connect(leftInputForLeftOutputGainNode, 1);
            channelSplitterNode.connect(leftInputForRightOutputGainNode, 1);
            channelSplitterNode.connect(rightInputForLeftOutputGainNode, 1);
            channelSplitterNode.connect(rightInputForRightOutputGainNode, 1);
            panWaveShaperNode.connect(panGainNode);
            panGainNode.connect(leftInputForLeftOutputWaveShaperNode.inputs[0]);
            panGainNode.connect(leftInputForRightOutputWaveShaperNode.inputs[0]);
            panGainNode.connect(rightInputForLeftOutputWaveShaperNode.inputs[0]);
            panGainNode.connect(rightInputForRightOutputWaveShaperNode.inputs[0]);
            leftInputForLeftOutputWaveShaperNode.connect(leftInputForLeftOutputGainNode.gain);
            leftInputForRightOutputWaveShaperNode.connect(leftInputForRightOutputGainNode.gain);
            rightInputForLeftOutputWaveShaperNode.connect(rightInputForLeftOutputGainNode.gain);
            rightInputForRightOutputWaveShaperNode.connect(rightInputForRightOutputGainNode.gain);
            leftInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);
            rightInputForLeftOutputGainNode.connect(channelMergerNode, 0, 0);
            leftInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);
            rightInputForRightOutputGainNode.connect(channelMergerNode, 0, 1);
          },
          disconnectGraph: function disconnectGraph() {
            inputGainNode.disconnect(channelSplitterNode);
            inputGainNode.disconnect(panWaveShaperNode.inputs[0]);
            channelSplitterNode.disconnect(leftInputForLeftOutputGainNode, 1);
            channelSplitterNode.disconnect(leftInputForRightOutputGainNode, 1);
            channelSplitterNode.disconnect(rightInputForLeftOutputGainNode, 1);
            channelSplitterNode.disconnect(rightInputForRightOutputGainNode, 1);
            panWaveShaperNode.disconnect(panGainNode);
            panGainNode.disconnect(leftInputForLeftOutputWaveShaperNode.inputs[0]);
            panGainNode.disconnect(leftInputForRightOutputWaveShaperNode.inputs[0]);
            panGainNode.disconnect(rightInputForLeftOutputWaveShaperNode.inputs[0]);
            panGainNode.disconnect(rightInputForRightOutputWaveShaperNode.inputs[0]);
            leftInputForLeftOutputWaveShaperNode.disconnect(leftInputForLeftOutputGainNode.gain);
            leftInputForRightOutputWaveShaperNode.disconnect(leftInputForRightOutputGainNode.gain);
            rightInputForLeftOutputWaveShaperNode.disconnect(rightInputForLeftOutputGainNode.gain);
            rightInputForRightOutputWaveShaperNode.disconnect(rightInputForRightOutputGainNode.gain);
            leftInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);
            rightInputForLeftOutputGainNode.disconnect(channelMergerNode, 0, 0);
            leftInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);
            rightInputForRightOutputGainNode.disconnect(channelMergerNode, 0, 1);
          }
        };
      };

      var buildInternalGraph = function buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode) {
        if (channelCount === 1) {
          return buildInternalGraphForMono(nativeContext, inputGainNode, panGainNode, channelMergerNode);
        }

        if (channelCount === 2) {
          return buildInternalGraphForStereo(nativeContext, inputGainNode, panGainNode, channelMergerNode);
        }

        throw createNotSupportedError();
      };

      return function (nativeContext, _ref44) {
        var channelCount = _ref44.channelCount,
            channelCountMode = _ref44.channelCountMode,
            pan = _ref44.pan,
            audioNodeOptions = _objectWithoutProperties(_ref44, ["channelCount", "channelCountMode", "pan"]);

        if (channelCountMode === 'max') {
          throw createNotSupportedError();
        }

        var channelMergerNode = createNativeChannelMergerNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
          channelCount: 1,
          channelCountMode: channelCountMode,
          numberOfInputs: 2
        }));
        var inputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
          channelCount: channelCount,
          channelCountMode: channelCountMode,
          gain: 1
        }));
        var panGainNode = createNativeGainNode(nativeContext, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
          gain: pan
        });

        var _buildInternalGraph = buildInternalGraph(nativeContext, channelCount, inputGainNode, panGainNode, channelMergerNode),
            connectGraph = _buildInternalGraph.connectGraph,
            disconnectGraph = _buildInternalGraph.disconnectGraph;

        Object.defineProperty(panGainNode.gain, 'defaultValue', {
          get: function get() {
            return 0;
          }
        });
        var nativeStereoPannerNodeFakerFactory = {
          get bufferSize() {
            return undefined;
          },

          get channelCount() {
            return inputGainNode.channelCount;
          },

          set channelCount(value) {
            if (inputGainNode.channelCount !== value) {
              if (isConnected) {
                disconnectGraph();
              }

              var _buildInternalGraph2 = buildInternalGraph(nativeContext, value, inputGainNode, panGainNode, channelMergerNode);

              connectGraph = _buildInternalGraph2.connectGraph;
              disconnectGraph = _buildInternalGraph2.disconnectGraph;

              if (isConnected) {
                connectGraph();
              }
            }

            inputGainNode.channelCount = value;
          },

          get channelCountMode() {
            return inputGainNode.channelCountMode;
          },

          set channelCountMode(value) {
            if (value === 'clamped-max' || value === 'max') {
              throw createNotSupportedError();
            }

            inputGainNode.channelCountMode = value;
          },

          get channelInterpretation() {
            return inputGainNode.channelInterpretation;
          },

          set channelInterpretation(value) {
            inputGainNode.channelInterpretation = value;
          },

          get context() {
            return inputGainNode.context;
          },

          get inputs() {
            return [inputGainNode];
          },

          get numberOfInputs() {
            return inputGainNode.numberOfInputs;
          },

          get numberOfOutputs() {
            return inputGainNode.numberOfOutputs;
          },

          get pan() {
            return panGainNode.gain;
          },

          addEventListener: function addEventListener() {
            return inputGainNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          },
          dispatchEvent: function dispatchEvent() {
            return inputGainNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
          },
          removeEventListener: function removeEventListener() {
            return inputGainNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          }
        };
        var isConnected = false;

        var whenConnected = function whenConnected() {
          connectGraph();
          isConnected = true;
        };

        var whenDisconnected = function whenDisconnected() {
          disconnectGraph();
          isConnected = false;
        };

        return monitorConnections(Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__["interceptConnections"])(nativeStereoPannerNodeFakerFactory, channelMergerNode), whenConnected, whenDisconnected);
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-stereo-panner-node-faker-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js ***!
    \***********************************************************************************************************/

  /*! exports provided: createNativeWaveShaperNodeFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeWaveShaperNodeFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeWaveShaperNodeFactory", function () {
      return createNativeWaveShaperNodeFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-option */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");

    var createNativeWaveShaperNodeFactory = function createNativeWaveShaperNodeFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeWaveShaperNodeFaker, isDCCurve, monitorConnections, overwriteAccessors) {
      return function (nativeContext, options) {
        var nativeWaveShaperNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createWaveShaper();
        });

        try {
          // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.
          // Bug #119: Safari does not correctly map the values. Bug #102 is only used to detect Safari in this case.
          nativeWaveShaperNode.curve = new Float32Array([1]);
          return createNativeWaveShaperNodeFaker(nativeContext, options);
        } catch (_unused6) {
          /* Ignore errors. */
        }

        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_1__["assignNativeAudioNodeOptions"])(nativeWaveShaperNode, options);
        var curve = options.curve; // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.

        if (curve !== null && curve.length < 2) {
          throw createInvalidStateError();
        }

        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeWaveShaperNode, options, 'curve');
        Object(_helpers_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeWaveShaperNode, options, 'oversample');
        var disconnectNativeAudioBufferSourceNode = null;
        var isConnected = false;
        overwriteAccessors(nativeWaveShaperNode, 'curve', function (get) {
          return function () {
            return get.call(nativeWaveShaperNode);
          };
        }, function (set) {
          return function (value) {
            set.call(nativeWaveShaperNode, value);

            if (isConnected) {
              if (isDCCurve(value) && disconnectNativeAudioBufferSourceNode === null) {
                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);
              } else if (!isDCCurve(value) && disconnectNativeAudioBufferSourceNode !== null) {
                disconnectNativeAudioBufferSourceNode();
                disconnectNativeAudioBufferSourceNode = null;
              }
            }

            return value;
          };
        });

        var whenConnected = function whenConnected() {
          isConnected = true;

          if (isDCCurve(nativeWaveShaperNode.curve)) {
            disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, nativeWaveShaperNode);
          }
        };

        var whenDisconnected = function whenDisconnected() {
          isConnected = false;

          if (disconnectNativeAudioBufferSourceNode !== null) {
            disconnectNativeAudioBufferSourceNode();
            disconnectNativeAudioBufferSourceNode = null;
          }
        };

        return monitorConnections(nativeWaveShaperNode, whenConnected, whenDisconnected);
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-wave-shaper-node-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js ***!
    \*****************************************************************************************************************/

  /*! exports provided: createNativeWaveShaperNodeFakerFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNativeWaveShaperNodeFakerFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNativeWaveShaperNodeFakerFactory", function () {
      return createNativeWaveShaperNodeFakerFactory;
    });
    /* harmony import */


    var _helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/assign-native-audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js");
    /* harmony import */


    var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/intercept-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");

    var createNativeWaveShaperNodeFakerFactory = function createNativeWaveShaperNodeFakerFactory(createConnectedNativeAudioBufferSourceNode, createInvalidStateError, createNativeAudioNode, createNativeGainNode, isDCCurve, monitorConnections) {
      return function (nativeContext, _ref45) {
        var curve = _ref45.curve,
            oversample = _ref45.oversample,
            audioNodeOptions = _objectWithoutProperties(_ref45, ["curve", "oversample"]);

        var negativeWaveShaperNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createWaveShaper();
        });
        var positiveWaveShaperNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createWaveShaper();
        });
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(negativeWaveShaperNode, audioNodeOptions);
        Object(_helpers_assign_native_audio_node_options__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOptions"])(positiveWaveShaperNode, audioNodeOptions);
        var inputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
          gain: 1
        }));
        var invertGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
          gain: -1
        }));
        var outputGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
          gain: 1
        }));
        var revertGainNode = createNativeGainNode(nativeContext, _objectSpread(_objectSpread({}, audioNodeOptions), {}, {
          gain: -1
        }));
        var disconnectNativeAudioBufferSourceNode = null;
        var isConnected = false;
        var unmodifiedCurve = null;
        var nativeWaveShaperNodeFaker = {
          get bufferSize() {
            return undefined;
          },

          get channelCount() {
            return negativeWaveShaperNode.channelCount;
          },

          set channelCount(value) {
            inputGainNode.channelCount = value;
            invertGainNode.channelCount = value;
            negativeWaveShaperNode.channelCount = value;
            outputGainNode.channelCount = value;
            positiveWaveShaperNode.channelCount = value;
            revertGainNode.channelCount = value;
          },

          get channelCountMode() {
            return negativeWaveShaperNode.channelCountMode;
          },

          set channelCountMode(value) {
            inputGainNode.channelCountMode = value;
            invertGainNode.channelCountMode = value;
            negativeWaveShaperNode.channelCountMode = value;
            outputGainNode.channelCountMode = value;
            positiveWaveShaperNode.channelCountMode = value;
            revertGainNode.channelCountMode = value;
          },

          get channelInterpretation() {
            return negativeWaveShaperNode.channelInterpretation;
          },

          set channelInterpretation(value) {
            inputGainNode.channelInterpretation = value;
            invertGainNode.channelInterpretation = value;
            negativeWaveShaperNode.channelInterpretation = value;
            outputGainNode.channelInterpretation = value;
            positiveWaveShaperNode.channelInterpretation = value;
            revertGainNode.channelInterpretation = value;
          },

          get context() {
            return negativeWaveShaperNode.context;
          },

          get curve() {
            return unmodifiedCurve;
          },

          set curve(value) {
            // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.
            if (curve !== null && curve.length < 2) {
              throw createInvalidStateError();
            }

            if (value === null) {
              negativeWaveShaperNode.curve = value;
              positiveWaveShaperNode.curve = value;
            } else {
              var curveLength = value.length;
              var negativeCurve = new Float32Array(curveLength + 2 - curveLength % 2);
              var positiveCurve = new Float32Array(curveLength + 2 - curveLength % 2);
              negativeCurve[0] = value[0];
              positiveCurve[0] = -value[curveLength - 1];
              var length = Math.ceil((curveLength + 1) / 2);
              var centerIndex = (curveLength + 1) / 2 - 1;

              for (var i = 1; i < length; i += 1) {
                var theoreticIndex = i / length * centerIndex;
                var lowerIndex = Math.floor(theoreticIndex);
                var upperIndex = Math.ceil(theoreticIndex);
                negativeCurve[i] = lowerIndex === upperIndex ? value[lowerIndex] : (1 - (theoreticIndex - lowerIndex)) * value[lowerIndex] + (1 - (upperIndex - theoreticIndex)) * value[upperIndex];
                positiveCurve[i] = lowerIndex === upperIndex ? -value[curveLength - 1 - lowerIndex] : -((1 - (theoreticIndex - lowerIndex)) * value[curveLength - 1 - lowerIndex]) - (1 - (upperIndex - theoreticIndex)) * value[curveLength - 1 - upperIndex];
              }

              negativeCurve[length] = curveLength % 2 === 1 ? value[length - 1] : (value[length - 2] + value[length - 1]) / 2;
              negativeWaveShaperNode.curve = negativeCurve;
              positiveWaveShaperNode.curve = positiveCurve;
            }

            unmodifiedCurve = value;

            if (isConnected) {
              if (isDCCurve(unmodifiedCurve) && disconnectNativeAudioBufferSourceNode === null) {
                disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);
              } else if (disconnectNativeAudioBufferSourceNode !== null) {
                disconnectNativeAudioBufferSourceNode();
                disconnectNativeAudioBufferSourceNode = null;
              }
            }
          },

          get inputs() {
            return [inputGainNode];
          },

          get numberOfInputs() {
            return negativeWaveShaperNode.numberOfInputs;
          },

          get numberOfOutputs() {
            return negativeWaveShaperNode.numberOfOutputs;
          },

          get oversample() {
            return negativeWaveShaperNode.oversample;
          },

          set oversample(value) {
            negativeWaveShaperNode.oversample = value;
            positiveWaveShaperNode.oversample = value;
          },

          addEventListener: function addEventListener() {
            return inputGainNode.addEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          },
          dispatchEvent: function dispatchEvent() {
            return inputGainNode.dispatchEvent(arguments.length <= 0 ? undefined : arguments[0]);
          },
          removeEventListener: function removeEventListener() {
            return inputGainNode.removeEventListener(arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], arguments.length <= 2 ? undefined : arguments[2]);
          }
        };

        if (curve !== nativeWaveShaperNodeFaker.curve) {
          nativeWaveShaperNodeFaker.curve = curve;
        }

        if (oversample !== nativeWaveShaperNodeFaker.oversample) {
          nativeWaveShaperNodeFaker.oversample = oversample;
        }

        var whenConnected = function whenConnected() {
          inputGainNode.connect(negativeWaveShaperNode).connect(outputGainNode);
          inputGainNode.connect(invertGainNode).connect(positiveWaveShaperNode).connect(revertGainNode).connect(outputGainNode);
          isConnected = true;

          if (isDCCurve(unmodifiedCurve)) {
            disconnectNativeAudioBufferSourceNode = createConnectedNativeAudioBufferSourceNode(nativeContext, inputGainNode);
          }
        };

        var whenDisconnected = function whenDisconnected() {
          inputGainNode.disconnect(negativeWaveShaperNode);
          negativeWaveShaperNode.disconnect(outputGainNode);
          inputGainNode.disconnect(invertGainNode);
          invertGainNode.disconnect(positiveWaveShaperNode);
          positiveWaveShaperNode.disconnect(revertGainNode);
          revertGainNode.disconnect(outputGainNode);
          isConnected = false;

          if (disconnectNativeAudioBufferSourceNode !== null) {
            disconnectNativeAudioBufferSourceNode();
            disconnectNativeAudioBufferSourceNode = null;
          }
        };

        return monitorConnections(Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_1__["interceptConnections"])(nativeWaveShaperNodeFaker, outputGainNode), whenConnected, whenDisconnected);
      };
    }; //# sourceMappingURL=/build/es2019/factories/native-wave-shaper-node-faker-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js ***!
    \***********************************************************************************************/

  /*! exports provided: createNotSupportedError */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesNotSupportedErrorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNotSupportedError", function () {
      return createNotSupportedError;
    });

    var createNotSupportedError = function createNotSupportedError() {
      try {
        return new DOMException('', 'NotSupportedError');
      } catch (err) {
        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.
        err.code = 9;
        err.name = 'NotSupportedError';
        return err;
      }
    }; //# sourceMappingURL=/build/es2019/factories/not-supported-error.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js ***!
    \*************************************************************************************************************/

  /*! exports provided: createOfflineAudioContextConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesOfflineAudioContextConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createOfflineAudioContextConstructor", function () {
      return createOfflineAudioContextConstructor;
    });
    /* harmony import */


    var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/test-promise-support */
    "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");

    var DEFAULT_OPTIONS = {
      numberOfChannels: 1
    };

    var createOfflineAudioContextConstructor = function createOfflineAudioContextConstructor(baseAudioContextConstructor, cacheTestResult, createInvalidStateError, createNativeOfflineAudioContext, _startRendering2) {
      return /*#__PURE__*/function (_baseAudioContextCons2) {
        _inherits(OfflineAudioContext, _baseAudioContextCons2);

        var _super24 = _createSuper(OfflineAudioContext);

        function OfflineAudioContext(a, b, c) {
          var _this27;

          _classCallCheck2(this, OfflineAudioContext);

          var options;

          if (typeof a === 'number' && b !== undefined && c !== undefined) {
            options = {
              length: b,
              numberOfChannels: a,
              sampleRate: c
            };
          } else if (typeof a === 'object') {
            options = a;
          } else {
            throw new Error('The given parameters are not valid.');
          }

          var _DEFAULT_OPTIONS$opti3 = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options),
              length = _DEFAULT_OPTIONS$opti3.length,
              numberOfChannels = _DEFAULT_OPTIONS$opti3.numberOfChannels,
              sampleRate = _DEFAULT_OPTIONS$opti3.sampleRate;

          var nativeOfflineAudioContext = createNativeOfflineAudioContext(numberOfChannels, length, sampleRate); // #21 Safari does not support promises and therefore would fire the statechange event before the promise can be resolved.

          if (!cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__["testPromiseSupport"], function () {
            return Object(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__["testPromiseSupport"])(nativeOfflineAudioContext);
          })) {
            nativeOfflineAudioContext.addEventListener('statechange', function () {
              var i = 0;

              var delayStateChangeEvent = function delayStateChangeEvent(event) {
                if (_this27._state === 'running') {
                  if (i > 0) {
                    nativeOfflineAudioContext.removeEventListener('statechange', delayStateChangeEvent);
                    event.stopImmediatePropagation();

                    _this27._waitForThePromiseToSettle(event);
                  } else {
                    i += 1;
                  }
                }
              };

              return delayStateChangeEvent;
            }());
          }

          _this27 = _super24.call(this, nativeOfflineAudioContext, numberOfChannels);
          _this27._length = length;
          _this27._nativeOfflineAudioContext = nativeOfflineAudioContext;
          _this27._state = null;
          return _this27;
        }

        _createClass2(OfflineAudioContext, [{
          key: "startRendering",
          value: function startRendering() {
            var _this28 = this;

            /*
             * Bug #9 & #59: It is theoretically possible that startRendering() will first render a partialOfflineAudioContext. Therefore
             * the state of the nativeOfflineAudioContext might no transition to running immediately.
             */
            if (this._state === 'running') {
              return Promise.reject(createInvalidStateError());
            }

            this._state = 'running';
            return _startRendering2(this.destination, this._nativeOfflineAudioContext).then(function (audioBuffer) {
              _this28._state = null;
              /*
               * Bug #50: Deleting the AudioGraph is currently not possible anymore.
               * deleteAudioGraph(this, this._nativeOfflineAudioContext);
               */

              return audioBuffer;
            }) // @todo This could be written more elegantly when Promise.finally() becomes avalaible.
            ["catch"](function (err) {
              _this28._state = null;
              /*
               * Bug #50: Deleting the AudioGraph is currently not possible anymore.
               * deleteAudioGraph(this, this._nativeOfflineAudioContext);
               */

              throw err;
            });
          }
        }, {
          key: "_waitForThePromiseToSettle",
          value: function _waitForThePromiseToSettle(event) {
            var _this29 = this;

            if (this._state === null) {
              this._nativeOfflineAudioContext.dispatchEvent(event);
            } else {
              setTimeout(function () {
                return _this29._waitForThePromiseToSettle(event);
              });
            }
          }
        }, {
          key: "length",
          get: function get() {
            // Bug #17: Safari does not yet expose the length.
            if (this._nativeOfflineAudioContext.length === undefined) {
              return this._length;
            }

            return this._nativeOfflineAudioContext.length;
          }
        }, {
          key: "state",
          get: function get() {
            return this._state === null ? this._nativeOfflineAudioContext.state : this._state;
          }
        }]);

        return OfflineAudioContext;
      }(baseAudioContextConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/offline-audio-context-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js ***!
    \*******************************************************************************************************/

  /*! exports provided: createOscillatorNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesOscillatorNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createOscillatorNodeConstructor", function () {
      return createOscillatorNodeConstructor;
    });
    /* harmony import */


    var _helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/set-internal-state-to-active */
    "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js");
    /* harmony import */


    var _helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/set-internal-state-to-passive */
    "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js");

    var DEFAULT_OPTIONS = {
      channelCount: 2,
      channelCountMode: 'max',
      channelInterpretation: 'speakers',
      detune: 0,
      frequency: 440,
      type: 'sine'
    };

    var createOscillatorNodeConstructor = function createOscillatorNodeConstructor(audioNodeConstructor, createAudioParam, createInvalidStateError, createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, wrapEventListener) {
      return /*#__PURE__*/function (_audioNodeConstructor17) {
        _inherits(OscillatorNode, _audioNodeConstructor17);

        var _super25 = _createSuper(OscillatorNode);

        function OscillatorNode(context) {
          var _this30;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, OscillatorNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeOscillatorNode = createNativeOscillatorNode(nativeContext, mergedOptions);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var oscillatorNodeRenderer = isOffline ? createOscillatorNodeRenderer() : null;
          var nyquist = context.sampleRate / 2;
          _this30 = _super25.call(this, context, false, nativeOscillatorNode, oscillatorNodeRenderer); // Bug #81: Edge, Firefox & Safari do not export the correct values for maxValue and minValue.

          _this30._detune = createAudioParam(_assertThisInitialized(_this30), isOffline, nativeOscillatorNode.detune, 153600, -153600); // Bug #76: Edge & Safari do not export the correct values for maxValue and minValue.

          _this30._frequency = createAudioParam(_assertThisInitialized(_this30), isOffline, nativeOscillatorNode.frequency, nyquist, -nyquist);
          _this30._nativeOscillatorNode = nativeOscillatorNode;
          _this30._onended = null;
          _this30._oscillatorNodeRenderer = oscillatorNodeRenderer;

          if (_this30._oscillatorNodeRenderer !== null && mergedOptions.periodicWave !== undefined) {
            _this30._oscillatorNodeRenderer.periodicWave = mergedOptions.periodicWave;
          }

          return _this30;
        }

        _createClass2(OscillatorNode, [{
          key: "setPeriodicWave",
          value: function setPeriodicWave(periodicWave) {
            this._nativeOscillatorNode.setPeriodicWave(periodicWave);

            if (this._oscillatorNodeRenderer !== null) {
              this._oscillatorNodeRenderer.periodicWave = periodicWave;
            }
          }
        }, {
          key: "start",
          value: function start() {
            var _this31 = this;

            var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            this._nativeOscillatorNode.start(when);

            if (this._oscillatorNodeRenderer !== null) {
              this._oscillatorNodeRenderer.start = when;
            } else {
              Object(_helpers_set_internal_state_to_active__WEBPACK_IMPORTED_MODULE_0__["setInternalStateToActive"])(this);

              var resetInternalStateToPassive = function resetInternalStateToPassive() {
                _this31._nativeOscillatorNode.removeEventListener('ended', resetInternalStateToPassive); // @todo Determine a meaningful delay instead of just using one second.


                setTimeout(function () {
                  return Object(_helpers_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_1__["setInternalStateToPassive"])(_this31);
                }, 1000);
              };

              this._nativeOscillatorNode.addEventListener('ended', resetInternalStateToPassive);
            }
          }
        }, {
          key: "stop",
          value: function stop() {
            var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            this._nativeOscillatorNode.stop(when);

            if (this._oscillatorNodeRenderer !== null) {
              this._oscillatorNodeRenderer.stop = when;
            }
          }
        }, {
          key: "detune",
          get: function get() {
            return this._detune;
          }
        }, {
          key: "frequency",
          get: function get() {
            return this._frequency;
          }
        }, {
          key: "onended",
          get: function get() {
            return this._onended;
          },
          set: function set(value) {
            var wrappedListener = typeof value === 'function' ? wrapEventListener(this, value) : null;
            this._nativeOscillatorNode.onended = wrappedListener;
            var nativeOnEnded = this._nativeOscillatorNode.onended;
            this._onended = nativeOnEnded !== null && nativeOnEnded === wrappedListener ? value : nativeOnEnded;
          }
        }, {
          key: "type",
          get: function get() {
            return this._nativeOscillatorNode.type;
          },
          set: function set(value) {
            this._nativeOscillatorNode.type = value; // Bug #57: Edge will not throw an error when assigning the type to 'custom'. But it still will change the value.

            if (value === 'custom') {
              throw createInvalidStateError();
            }

            if (this._oscillatorNodeRenderer !== null) {
              this._oscillatorNodeRenderer.periodicWave = null;
            }
          }
        }]);

        return OscillatorNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/oscillator-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js ***!
    \************************************************************************************************************/

  /*! exports provided: createOscillatorNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesOscillatorNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createOscillatorNodeRendererFactory", function () {
      return createOscillatorNodeRendererFactory;
    });
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createOscillatorNodeRendererFactory = function createOscillatorNodeRendererFactory(connectAudioParam, createNativeOscillatorNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeOscillatorNodes = new WeakMap();
        var periodicWave = null;
        var start = null;
        var stop = null;

        var createOscillatorNode = /*#__PURE__*/function () {
          var _ref46 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20(proxy, nativeOfflineAudioContext, trace) {
            var nativeOscillatorNode, nativeOscillatorNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee20$(_context20) {
              while (1) {
                switch (_context20.prev = _context20.next) {
                  case 0:
                    nativeOscillatorNode = getNativeAudioNode(proxy); // If the initially used nativeOscillatorNode was not constructed on the same OfflineAudioContext it needs to be created again.

                    nativeOscillatorNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_0__["isOwnedByContext"])(nativeOscillatorNode, nativeOfflineAudioContext);

                    if (!nativeOscillatorNodeIsOwnedByContext) {
                      options = {
                        channelCount: nativeOscillatorNode.channelCount,
                        channelCountMode: nativeOscillatorNode.channelCountMode,
                        channelInterpretation: nativeOscillatorNode.channelInterpretation,
                        detune: nativeOscillatorNode.detune.value,
                        frequency: nativeOscillatorNode.frequency.value,
                        periodicWave: periodicWave === null ? undefined : periodicWave,
                        type: nativeOscillatorNode.type
                      };
                      nativeOscillatorNode = createNativeOscillatorNode(nativeOfflineAudioContext, options);

                      if (start !== null) {
                        nativeOscillatorNode.start(start);
                      }

                      if (stop !== null) {
                        nativeOscillatorNode.stop(stop);
                      }
                    }

                    renderedNativeOscillatorNodes.set(nativeOfflineAudioContext, nativeOscillatorNode);

                    if (nativeOscillatorNodeIsOwnedByContext) {
                      _context20.next = 11;
                      break;
                    }

                    _context20.next = 7;
                    return renderAutomation(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);

                  case 7:
                    _context20.next = 9;
                    return renderAutomation(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);

                  case 9:
                    _context20.next = 15;
                    break;

                  case 11:
                    _context20.next = 13;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.detune, nativeOscillatorNode.detune, trace);

                  case 13:
                    _context20.next = 15;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.frequency, nativeOscillatorNode.frequency, trace);

                  case 15:
                    _context20.next = 17;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeOscillatorNode, trace);

                  case 17:
                    return _context20.abrupt("return", nativeOscillatorNode);

                  case 18:
                  case "end":
                    return _context20.stop();
                }
              }
            }, _callee20);
          }));

          return function createOscillatorNode(_x63, _x64, _x65) {
            return _ref46.apply(this, arguments);
          };
        }();

        return {
          set periodicWave(value) {
            periodicWave = value;
          },

          set start(value) {
            start = value;
          },

          set stop(value) {
            stop = value;
          },

          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeOscillatorNode = renderedNativeOscillatorNodes.get(nativeOfflineAudioContext);

            if (renderedNativeOscillatorNode !== undefined) {
              return Promise.resolve(renderedNativeOscillatorNode);
            }

            return createOscillatorNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/oscillator-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js ***!
    \***************************************************************************************************/

  /*! exports provided: createPannerNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesPannerNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createPannerNodeConstructor", function () {
      return createPannerNodeConstructor;
    });
    /* harmony import */


    var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../constants */
    "./node_modules/standardized-audio-context/build/es2019/constants.js");

    var DEFAULT_OPTIONS = {
      channelCount: 2,
      channelCountMode: 'clamped-max',
      channelInterpretation: 'speakers',
      coneInnerAngle: 360,
      coneOuterAngle: 360,
      coneOuterGain: 0,
      distanceModel: 'inverse',
      maxDistance: 10000,
      orientationX: 1,
      orientationY: 0,
      orientationZ: 0,
      panningModel: 'equalpower',
      positionX: 0,
      positionY: 0,
      positionZ: 0,
      refDistance: 1,
      rolloffFactor: 1
    };

    var createPannerNodeConstructor = function createPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor18) {
        _inherits(PannerNode, _audioNodeConstructor18);

        var _super26 = _createSuper(PannerNode);

        function PannerNode(context) {
          var _this32;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, PannerNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativePannerNode = createNativePannerNode(nativeContext, mergedOptions);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var pannerNodeRenderer = isOffline ? createPannerNodeRenderer() : null;
          _this32 = _super26.call(this, context, false, nativePannerNode, pannerNodeRenderer);
          _this32._nativePannerNode = nativePannerNode; // Bug #74: Edge & Safari do not export the correct values for maxValue and minValue for GainNodes.

          _this32._orientationX = createAudioParam(_assertThisInitialized(_this32), isOffline, nativePannerNode.orientationX, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
          _this32._orientationY = createAudioParam(_assertThisInitialized(_this32), isOffline, nativePannerNode.orientationY, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
          _this32._orientationZ = createAudioParam(_assertThisInitialized(_this32), isOffline, nativePannerNode.orientationZ, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
          _this32._positionX = createAudioParam(_assertThisInitialized(_this32), isOffline, nativePannerNode.positionX, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
          _this32._positionY = createAudioParam(_assertThisInitialized(_this32), isOffline, nativePannerNode.positionY, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
          _this32._positionZ = createAudioParam(_assertThisInitialized(_this32), isOffline, nativePannerNode.positionZ, _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_POSITIVE_SINGLE_FLOAT"], _constants__WEBPACK_IMPORTED_MODULE_0__["MOST_NEGATIVE_SINGLE_FLOAT"]);
          return _this32;
        }

        _createClass2(PannerNode, [{
          key: "coneInnerAngle",
          get: function get() {
            return this._nativePannerNode.coneInnerAngle;
          },
          set: function set(value) {
            this._nativePannerNode.coneInnerAngle = value;
          }
        }, {
          key: "coneOuterAngle",
          get: function get() {
            return this._nativePannerNode.coneOuterAngle;
          },
          set: function set(value) {
            this._nativePannerNode.coneOuterAngle = value;
          }
        }, {
          key: "coneOuterGain",
          get: function get() {
            return this._nativePannerNode.coneOuterGain;
          },
          set: function set(value) {
            this._nativePannerNode.coneOuterGain = value;
          }
        }, {
          key: "distanceModel",
          get: function get() {
            return this._nativePannerNode.distanceModel;
          },
          set: function set(value) {
            this._nativePannerNode.distanceModel = value;
          }
        }, {
          key: "maxDistance",
          get: function get() {
            return this._nativePannerNode.maxDistance;
          },
          set: function set(value) {
            this._nativePannerNode.maxDistance = value;
          }
        }, {
          key: "orientationX",
          get: function get() {
            return this._orientationX;
          }
        }, {
          key: "orientationY",
          get: function get() {
            return this._orientationY;
          }
        }, {
          key: "orientationZ",
          get: function get() {
            return this._orientationZ;
          }
        }, {
          key: "panningModel",
          get: function get() {
            return this._nativePannerNode.panningModel;
          },
          set: function set(value) {
            this._nativePannerNode.panningModel = value;
          }
        }, {
          key: "positionX",
          get: function get() {
            return this._positionX;
          }
        }, {
          key: "positionY",
          get: function get() {
            return this._positionY;
          }
        }, {
          key: "positionZ",
          get: function get() {
            return this._positionZ;
          }
        }, {
          key: "refDistance",
          get: function get() {
            return this._nativePannerNode.refDistance;
          },
          set: function set(value) {
            this._nativePannerNode.refDistance = value;
          }
        }, {
          key: "rolloffFactor",
          get: function get() {
            return this._nativePannerNode.rolloffFactor;
          },
          set: function set(value) {
            this._nativePannerNode.rolloffFactor = value;
          }
        }]);

        return PannerNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/panner-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js ***!
    \********************************************************************************************************/

  /*! exports provided: createPannerNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesPannerNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createPannerNodeRendererFactory", function () {
      return createPannerNodeRendererFactory;
    });
    /* harmony import */


    var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/native-audio-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createPannerNodeRendererFactory = function createPannerNodeRendererFactory(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, getNativeAudioNode, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext) {
      return function () {
        var renderedNativeAudioNodes = new WeakMap();
        var renderedBufferPromise = null;

        var createAudioNode = /*#__PURE__*/function () {
          var _ref47 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee24(proxy, nativeOfflineAudioContext, trace) {
            var nativeGainNode, nativePannerNode, commonAudioNodeOptions, commonNativePannerNodeOptions, nativePannerNodeIsOwnedByContext, options, _ret3;

            return regeneratorRuntime.wrap(function _callee24$(_context24) {
              while (1) {
                switch (_context24.prev = _context24.next) {
                  case 0:
                    nativeGainNode = null;
                    nativePannerNode = getNativeAudioNode(proxy);
                    commonAudioNodeOptions = {
                      channelCount: nativePannerNode.channelCount,
                      channelCountMode: nativePannerNode.channelCountMode,
                      channelInterpretation: nativePannerNode.channelInterpretation
                    };
                    commonNativePannerNodeOptions = _objectSpread(_objectSpread({}, commonAudioNodeOptions), {}, {
                      coneInnerAngle: nativePannerNode.coneInnerAngle,
                      coneOuterAngle: nativePannerNode.coneOuterAngle,
                      coneOuterGain: nativePannerNode.coneOuterGain,
                      distanceModel: nativePannerNode.distanceModel,
                      maxDistance: nativePannerNode.maxDistance,
                      panningModel: nativePannerNode.panningModel,
                      refDistance: nativePannerNode.refDistance,
                      rolloffFactor: nativePannerNode.rolloffFactor
                    }); // If the initially used nativePannerNode was not constructed on the same OfflineAudioContext it needs to be created again.

                    nativePannerNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativePannerNode, nativeOfflineAudioContext); // Bug #124: Edge & Safari do not support modifying the orientation and the position with AudioParams.

                    if ('bufferSize' in nativePannerNode) {
                      nativeGainNode = createNativeGainNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonAudioNodeOptions), {}, {
                        gain: 1
                      }));
                    } else if (!nativePannerNodeIsOwnedByContext) {
                      options = _objectSpread(_objectSpread({}, commonNativePannerNodeOptions), {}, {
                        orientationX: nativePannerNode.orientationX.value,
                        orientationY: nativePannerNode.orientationY.value,
                        orientationZ: nativePannerNode.orientationZ.value,
                        positionX: nativePannerNode.positionX.value,
                        positionY: nativePannerNode.positionY.value,
                        positionZ: nativePannerNode.positionZ.value
                      });
                      nativePannerNode = createNativePannerNode(nativeOfflineAudioContext, options);
                    }

                    renderedNativeAudioNodes.set(nativeOfflineAudioContext, nativeGainNode === null ? nativePannerNode : nativeGainNode);

                    if (!(nativeGainNode !== null)) {
                      _context24.next = 12;
                      break;
                    }

                    return _context24.delegateYield( /*#__PURE__*/regeneratorRuntime.mark(function _callee23() {
                      var partialOfflineAudioContext, nativeChannelMergerNode, renderedBuffer, inputGainNode, channelDatas, i, lastOrientation, lastPosition, gateGainNode, partialPannerNode, _i16, orientation, positon, currentTime;

                      return regeneratorRuntime.wrap(function _callee23$(_context23) {
                        while (1) {
                          switch (_context23.prev = _context23.next) {
                            case 0:
                              if (!(renderedBufferPromise === null)) {
                                _context23.next = 7;
                                break;
                              }

                              if (!(nativeOfflineAudioContextConstructor === null)) {
                                _context23.next = 3;
                                break;
                              }

                              throw new Error('Missing the native OfflineAudioContext constructor.');

                            case 3:
                              partialOfflineAudioContext = new nativeOfflineAudioContextConstructor(6, // Bug #17: Safari does not yet expose the length.
                              proxy.context.length, nativeOfflineAudioContext.sampleRate);
                              nativeChannelMergerNode = createNativeChannelMergerNode(partialOfflineAudioContext, {
                                channelCount: 1,
                                channelCountMode: 'explicit',
                                channelInterpretation: 'speakers',
                                numberOfInputs: 6
                              });
                              nativeChannelMergerNode.connect(partialOfflineAudioContext.destination);
                              renderedBufferPromise = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee22() {
                                var nativeConstantSourceNodes, i;
                                return regeneratorRuntime.wrap(function _callee22$(_context22) {
                                  while (1) {
                                    switch (_context22.prev = _context22.next) {
                                      case 0:
                                        _context22.next = 2;
                                        return Promise.all([proxy.orientationX, proxy.orientationY, proxy.orientationZ, proxy.positionX, proxy.positionY, proxy.positionZ].map( /*#__PURE__*/function () {
                                          var _ref49 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee21(audioParam, index) {
                                            var nativeConstantSourceNode;
                                            return regeneratorRuntime.wrap(function _callee21$(_context21) {
                                              while (1) {
                                                switch (_context21.prev = _context21.next) {
                                                  case 0:
                                                    nativeConstantSourceNode = createNativeConstantSourceNode(partialOfflineAudioContext, {
                                                      channelCount: 1,
                                                      channelCountMode: 'explicit',
                                                      channelInterpretation: 'discrete',
                                                      offset: index === 0 ? 1 : 0
                                                    });
                                                    _context21.next = 3;
                                                    return renderAutomation(partialOfflineAudioContext, audioParam, nativeConstantSourceNode.offset, trace);

                                                  case 3:
                                                    return _context21.abrupt("return", nativeConstantSourceNode);

                                                  case 4:
                                                  case "end":
                                                    return _context21.stop();
                                                }
                                              }
                                            }, _callee21);
                                          }));

                                          return function (_x69, _x70) {
                                            return _ref49.apply(this, arguments);
                                          };
                                        }()));

                                      case 2:
                                        nativeConstantSourceNodes = _context22.sent;

                                        for (i = 0; i < 6; i += 1) {
                                          nativeConstantSourceNodes[i].connect(nativeChannelMergerNode, 0, i);
                                          nativeConstantSourceNodes[i].start(0);
                                        }

                                        return _context22.abrupt("return", renderNativeOfflineAudioContext(partialOfflineAudioContext));

                                      case 5:
                                      case "end":
                                        return _context22.stop();
                                    }
                                  }
                                }, _callee22);
                              }))();

                            case 7:
                              _context23.next = 9;
                              return renderedBufferPromise;

                            case 9:
                              renderedBuffer = _context23.sent;
                              inputGainNode = createNativeGainNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonAudioNodeOptions), {}, {
                                gain: 1
                              }));
                              _context23.next = 13;
                              return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, inputGainNode, trace);

                            case 13:
                              channelDatas = [];

                              for (i = 0; i < renderedBuffer.numberOfChannels; i += 1) {
                                channelDatas.push(renderedBuffer.getChannelData(i));
                              }

                              lastOrientation = [channelDatas[0][0], channelDatas[1][0], channelDatas[2][0]];
                              lastPosition = [channelDatas[3][0], channelDatas[4][0], channelDatas[5][0]];
                              gateGainNode = createNativeGainNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonAudioNodeOptions), {}, {
                                gain: 1
                              }));
                              partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonNativePannerNodeOptions), {}, {
                                orientationX: lastOrientation[0],
                                orientationY: lastOrientation[1],
                                orientationZ: lastOrientation[2],
                                positionX: lastPosition[0],
                                positionY: lastPosition[1],
                                positionZ: lastPosition[2]
                              }));
                              inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);
                              partialPannerNode.connect(nativeGainNode);

                              for (_i16 = 128; _i16 < renderedBuffer.length; _i16 += 128) {
                                orientation = [channelDatas[0][_i16], channelDatas[1][_i16], channelDatas[2][_i16]];
                                positon = [channelDatas[3][_i16], channelDatas[4][_i16], channelDatas[5][_i16]];

                                if (orientation.some(function (value, index) {
                                  return value !== lastOrientation[index];
                                }) || positon.some(function (value, index) {
                                  return value !== lastPosition[index];
                                })) {
                                  lastOrientation = orientation;
                                  lastPosition = positon;
                                  currentTime = _i16 / nativeOfflineAudioContext.sampleRate;
                                  gateGainNode.gain.setValueAtTime(0, currentTime);
                                  gateGainNode = createNativeGainNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonAudioNodeOptions), {}, {
                                    gain: 0
                                  }));
                                  partialPannerNode = createNativePannerNode(nativeOfflineAudioContext, _objectSpread(_objectSpread({}, commonNativePannerNodeOptions), {}, {
                                    orientationX: lastOrientation[0],
                                    orientationY: lastOrientation[1],
                                    orientationZ: lastOrientation[2],
                                    positionX: lastPosition[0],
                                    positionY: lastPosition[1],
                                    positionZ: lastPosition[2]
                                  }));
                                  gateGainNode.gain.setValueAtTime(1, currentTime);
                                  inputGainNode.connect(gateGainNode).connect(partialPannerNode.inputs[0]);
                                  partialPannerNode.connect(nativeGainNode);
                                }
                              }

                              return _context23.abrupt("return", {
                                v: nativeGainNode
                              });

                            case 23:
                            case "end":
                              return _context23.stop();
                          }
                        }
                      }, _callee23);
                    })(), "t0", 9);

                  case 9:
                    _ret3 = _context24.t0;

                    if (!(typeof _ret3 === "object")) {
                      _context24.next = 12;
                      break;
                    }

                    return _context24.abrupt("return", _ret3.v);

                  case 12:
                    if (nativePannerNodeIsOwnedByContext) {
                      _context24.next = 27;
                      break;
                    }

                    _context24.next = 15;
                    return renderAutomation(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);

                  case 15:
                    _context24.next = 17;
                    return renderAutomation(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);

                  case 17:
                    _context24.next = 19;
                    return renderAutomation(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);

                  case 19:
                    _context24.next = 21;
                    return renderAutomation(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);

                  case 21:
                    _context24.next = 23;
                    return renderAutomation(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);

                  case 23:
                    _context24.next = 25;
                    return renderAutomation(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);

                  case 25:
                    _context24.next = 39;
                    break;

                  case 27:
                    _context24.next = 29;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.orientationX, nativePannerNode.orientationX, trace);

                  case 29:
                    _context24.next = 31;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.orientationY, nativePannerNode.orientationY, trace);

                  case 31:
                    _context24.next = 33;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.orientationZ, nativePannerNode.orientationZ, trace);

                  case 33:
                    _context24.next = 35;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.positionX, nativePannerNode.positionX, trace);

                  case 35:
                    _context24.next = 37;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.positionY, nativePannerNode.positionY, trace);

                  case 37:
                    _context24.next = 39;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.positionZ, nativePannerNode.positionZ, trace);

                  case 39:
                    if (!Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNodeFaker"])(nativePannerNode)) {
                      _context24.next = 44;
                      break;
                    }

                    _context24.next = 42;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode.inputs[0], trace);

                  case 42:
                    _context24.next = 46;
                    break;

                  case 44:
                    _context24.next = 46;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativePannerNode, trace);

                  case 46:
                    return _context24.abrupt("return", nativePannerNode);

                  case 47:
                  case "end":
                    return _context24.stop();
                }
              }
            }, _callee24);
          }));

          return function createAudioNode(_x66, _x67, _x68) {
            return _ref47.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeGainNodeOrNativePannerNode = renderedNativeAudioNodes.get(nativeOfflineAudioContext);

            if (renderedNativeGainNodeOrNativePannerNode !== undefined) {
              return Promise.resolve(renderedNativeGainNodeOrNativePannerNode);
            }

            return createAudioNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/panner-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js ***!
    \*****************************************************************************************************/

  /*! exports provided: createPeriodicWaveConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesPeriodicWaveConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createPeriodicWaveConstructor", function () {
      return createPeriodicWaveConstructor;
    });

    var DEFAULT_OPTIONS = {
      disableNormalization: false
    };

    var createPeriodicWaveConstructor = function createPeriodicWaveConstructor(createNativePeriodicWave, getNativeContext, periodicWaveStore) {
      return /*#__PURE__*/function () {
        function PeriodicWave(context, options) {
          _classCallCheck2(this, PeriodicWave);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var periodicWave = createNativePeriodicWave(nativeContext, mergedOptions);
          periodicWaveStore.add(periodicWave); // This does violate all good pratices but it is used here to simplify the handling of periodic waves.

          return periodicWave;
        }

        _createClass2(PeriodicWave, null, [{
          key: Symbol.hasInstance,
          value: function value(instance) {
            return instance !== null && typeof instance === 'object' && Object.getPrototypeOf(instance) === PeriodicWave.prototype || periodicWaveStore.has(instance);
          }
        }]);

        return PeriodicWave;
      }();
    }; //# sourceMappingURL=/build/es2019/factories/periodic-wave-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js ***!
    \*********************************************************************************************/

  /*! exports provided: createRenderAutomation */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesRenderAutomationJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createRenderAutomation", function () {
      return createRenderAutomation;
    });

    var createRenderAutomation = function createRenderAutomation(getAudioParamRenderer, renderInputsOfAudioParam) {
      return function (nativeOfflineAudioContext, audioParam, nativeAudioParam, trace) {
        var audioParamRenderer = getAudioParamRenderer(audioParam);
        audioParamRenderer.replay(nativeAudioParam);
        return renderInputsOfAudioParam(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace);
      };
    }; //# sourceMappingURL=/build/es2019/factories/render-automation.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js ***!
    \*******************************************************************************************************/

  /*! exports provided: createRenderInputsOfAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesRenderInputsOfAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createRenderInputsOfAudioNode", function () {
      return createRenderInputsOfAudioNode;
    });

    var createRenderInputsOfAudioNode = function createRenderInputsOfAudioNode(getAudioNodeConnections, getAudioNodeRenderer, isPartOfACycle) {
      return /*#__PURE__*/function () {
        var _ref50 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee26(audioNode, nativeOfflineAudioContext, nativeAudioNode, trace) {
          var audioNodeConnections, nextTrace;
          return regeneratorRuntime.wrap(function _callee26$(_context26) {
            while (1) {
              switch (_context26.prev = _context26.next) {
                case 0:
                  audioNodeConnections = getAudioNodeConnections(audioNode);
                  nextTrace = [].concat(_toConsumableArray(trace), [audioNode]);
                  _context26.next = 4;
                  return Promise.all(audioNodeConnections.activeInputs.map(function (connections, input) {
                    return Array.from(connections).filter(function (_ref51) {
                      var _ref52 = _slicedToArray2(_ref51, 1),
                          source = _ref52[0];

                      return !nextTrace.includes(source);
                    }).map( /*#__PURE__*/function () {
                      var _ref54 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee25(_ref53) {
                        var _ref55, source, output, audioNodeRenderer, renderedNativeAudioNode, destination;

                        return regeneratorRuntime.wrap(function _callee25$(_context25) {
                          while (1) {
                            switch (_context25.prev = _context25.next) {
                              case 0:
                                _ref55 = _slicedToArray2(_ref53, 2), source = _ref55[0], output = _ref55[1];
                                audioNodeRenderer = getAudioNodeRenderer(source);
                                _context25.next = 4;
                                return audioNodeRenderer.render(source, nativeOfflineAudioContext, nextTrace);

                              case 4:
                                renderedNativeAudioNode = _context25.sent;
                                destination = audioNode.context.destination;

                                if (!isPartOfACycle(source) && (audioNode !== destination || !isPartOfACycle(audioNode))) {
                                  renderedNativeAudioNode.connect(nativeAudioNode, output, input);
                                }

                              case 7:
                              case "end":
                                return _context25.stop();
                            }
                          }
                        }, _callee25);
                      }));

                      return function (_x75) {
                        return _ref54.apply(this, arguments);
                      };
                    }());
                  }).reduce(function (allRenderingPromises, renderingPromises) {
                    return [].concat(_toConsumableArray(allRenderingPromises), _toConsumableArray(renderingPromises));
                  }, []));

                case 4:
                case "end":
                  return _context26.stop();
              }
            }
          }, _callee26);
        }));

        return function (_x71, _x72, _x73, _x74) {
          return _ref50.apply(this, arguments);
        };
      }();
    }; //# sourceMappingURL=/build/es2019/factories/render-inputs-of-audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js ***!
    \********************************************************************************************************/

  /*! exports provided: createRenderInputsOfAudioParam */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesRenderInputsOfAudioParamJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createRenderInputsOfAudioParam", function () {
      return createRenderInputsOfAudioParam;
    });

    var createRenderInputsOfAudioParam = function createRenderInputsOfAudioParam(getAudioNodeRenderer, getAudioParamConnections, isPartOfACycle) {
      return /*#__PURE__*/function () {
        var _ref56 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee28(audioParam, nativeOfflineAudioContext, nativeAudioParam, trace) {
          var audioParamConnections;
          return regeneratorRuntime.wrap(function _callee28$(_context28) {
            while (1) {
              switch (_context28.prev = _context28.next) {
                case 0:
                  audioParamConnections = getAudioParamConnections(audioParam);
                  _context28.next = 3;
                  return Promise.all(Array.from(audioParamConnections.activeInputs).map( /*#__PURE__*/function () {
                    var _ref58 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee27(_ref57) {
                      var _ref59, source, output, audioNodeRenderer, renderedNativeAudioNode;

                      return regeneratorRuntime.wrap(function _callee27$(_context27) {
                        while (1) {
                          switch (_context27.prev = _context27.next) {
                            case 0:
                              _ref59 = _slicedToArray2(_ref57, 2), source = _ref59[0], output = _ref59[1];
                              audioNodeRenderer = getAudioNodeRenderer(source);
                              _context27.next = 4;
                              return audioNodeRenderer.render(source, nativeOfflineAudioContext, trace);

                            case 4:
                              renderedNativeAudioNode = _context27.sent;

                              if (!isPartOfACycle(source)) {
                                renderedNativeAudioNode.connect(nativeAudioParam, output);
                              }

                            case 6:
                            case "end":
                              return _context27.stop();
                          }
                        }
                      }, _callee27);
                    }));

                    return function (_x80) {
                      return _ref58.apply(this, arguments);
                    };
                  }()));

                case 3:
                case "end":
                  return _context28.stop();
              }
            }
          }, _callee28);
        }));

        return function (_x76, _x77, _x78, _x79) {
          return _ref56.apply(this, arguments);
        };
      }();
    }; //# sourceMappingURL=/build/es2019/factories/render-inputs-of-audio-param.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js ***!
    \***************************************************************************************************************/

  /*! exports provided: createRenderNativeOfflineAudioContext */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesRenderNativeOfflineAudioContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createRenderNativeOfflineAudioContext", function () {
      return createRenderNativeOfflineAudioContext;
    });
    /* harmony import */


    var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/test-promise-support */
    "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");

    var createRenderNativeOfflineAudioContext = function createRenderNativeOfflineAudioContext(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, testOfflineAudioContextCurrentTimeSupport) {
      return function (nativeOfflineAudioContext) {
        // Bug #21: Safari does not support promises yet.
        if (cacheTestResult(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__["testPromiseSupport"], function () {
          return Object(_helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_0__["testPromiseSupport"])(nativeOfflineAudioContext);
        })) {
          // Bug #158: Edge does not advance currentTime if it is not accessed while rendering the audio.
          return Promise.resolve(cacheTestResult(testOfflineAudioContextCurrentTimeSupport, testOfflineAudioContextCurrentTimeSupport)).then(function (isOfflineAudioContextCurrentTimeSupported) {
            if (!isOfflineAudioContextCurrentTimeSupported) {
              var scriptProcessorNode = createNativeScriptProcessorNode(nativeOfflineAudioContext, 512, 0, 1);

              nativeOfflineAudioContext.oncomplete = function () {
                scriptProcessorNode.onaudioprocess = null; // tslint:disable-line:deprecation

                scriptProcessorNode.disconnect();
              };

              scriptProcessorNode.onaudioprocess = function () {
                return nativeOfflineAudioContext.currentTime;
              }; // tslint:disable-line:deprecation


              scriptProcessorNode.connect(nativeOfflineAudioContext.destination);
            }

            return nativeOfflineAudioContext.startRendering();
          });
        }

        return new Promise(function (resolve) {
          // Bug #48: Safari does not render an OfflineAudioContext without any connected node.
          var gainNode = createNativeGainNode(nativeOfflineAudioContext, {
            channelCount: 1,
            channelCountMode: 'explicit',
            channelInterpretation: 'discrete',
            gain: 0
          });

          nativeOfflineAudioContext.oncomplete = function (event) {
            gainNode.disconnect();
            resolve(event.renderedBuffer);
          };

          gainNode.connect(nativeOfflineAudioContext.destination);
          nativeOfflineAudioContext.startRendering();
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/render-native-offline-audio-context.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js ***!
    \*******************************************************************************************/

  /*! exports provided: createStartRendering */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesStartRenderingJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createStartRendering", function () {
      return createStartRendering;
    });
    /* harmony import */


    var _helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/wrap-audio-buffer-get-channel-data-method */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js");

    var createStartRendering = function createStartRendering(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, testAudioBufferCopyChannelMethodsOutOfBoundsSupport, wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds) {
      var trace = [];
      return function (destination, nativeOfflineAudioContext) {
        return getAudioNodeRenderer(destination).render(destination, nativeOfflineAudioContext, trace)
        /*
         * Bug #86 & #87: Invoking the renderer of an AudioWorkletNode might be necessary if it has no direct or indirect connection to the
         * destination.
         */
        .then(function () {
          return Promise.all(Array.from(getUnrenderedAudioWorkletNodes(nativeOfflineAudioContext)).map(function (audioWorkletNode) {
            return getAudioNodeRenderer(audioWorkletNode).render(audioWorkletNode, nativeOfflineAudioContext, trace);
          }));
        }).then(function () {
          return renderNativeOfflineAudioContext(nativeOfflineAudioContext);
        }).then(function (audioBuffer) {
          // Bug #5: Safari does not support copyFromChannel() and copyToChannel().
          // Bug #100: Safari does throw a wrong error when calling getChannelData() with an out-of-bounds value.
          if (typeof audioBuffer.copyFromChannel !== 'function') {
            wrapAudioBufferCopyChannelMethods(audioBuffer);
            Object(_helpers_wrap_audio_buffer_get_channel_data_method__WEBPACK_IMPORTED_MODULE_0__["wrapAudioBufferGetChannelDataMethod"])(audioBuffer); // Bug #157: Only Chrome & Opera do allow the bufferOffset to be out-of-bounds.
          } else if (!cacheTestResult(testAudioBufferCopyChannelMethodsOutOfBoundsSupport, function () {
            return testAudioBufferCopyChannelMethodsOutOfBoundsSupport(audioBuffer);
          })) {
            wrapAudioBufferCopyChannelMethodsOutOfBounds(audioBuffer);
          }

          audioBufferStore.add(audioBuffer);
          return audioBuffer;
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/start-rendering.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js ***!
    \**********************************************************************************************************/

  /*! exports provided: createStereoPannerNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesStereoPannerNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createStereoPannerNodeConstructor", function () {
      return createStereoPannerNodeConstructor;
    });

    var DEFAULT_OPTIONS = {
      channelCount: 2,

      /*
       * Bug #105: The channelCountMode should be 'clamped-max' according to the spec but is set to 'explicit' to achieve consistent
       * behavior.
       */
      channelCountMode: 'explicit',
      channelInterpretation: 'speakers',
      pan: 0
    };

    var createStereoPannerNodeConstructor = function createStereoPannerNodeConstructor(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor19) {
        _inherits(StereoPannerNode, _audioNodeConstructor19);

        var _super27 = _createSuper(StereoPannerNode);

        function StereoPannerNode(context) {
          var _this33;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, StereoPannerNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeStereoPannerNode = createNativeStereoPannerNode(nativeContext, mergedOptions);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var stereoPannerNodeRenderer = isOffline ? createStereoPannerNodeRenderer() : null;
          _this33 = _super27.call(this, context, false, nativeStereoPannerNode, stereoPannerNodeRenderer); // Bug #106: Edge does not export a maxValue and minValue property.

          _this33._pan = createAudioParam(_assertThisInitialized(_this33), isOffline, nativeStereoPannerNode.pan, 1, -1);
          return _this33;
        }

        _createClass2(StereoPannerNode, [{
          key: "pan",
          get: function get() {
            return this._pan;
          }
        }]);

        return StereoPannerNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/stereo-panner-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js ***!
    \***************************************************************************************************************/

  /*! exports provided: createStereoPannerNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesStereoPannerNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createStereoPannerNodeRendererFactory", function () {
      return createStereoPannerNodeRendererFactory;
    });
    /* harmony import */


    var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/native-audio-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createStereoPannerNodeRendererFactory = function createStereoPannerNodeRendererFactory(connectAudioParam, createNativeStereoPannerNode, getNativeAudioNode, renderAutomation, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeStereoPannerNodes = new WeakMap();

        var createStereoPannerNode = /*#__PURE__*/function () {
          var _ref60 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee29(proxy, nativeOfflineAudioContext, trace) {
            var nativeStereoPannerNode, nativeStereoPannerNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee29$(_context29) {
              while (1) {
                switch (_context29.prev = _context29.next) {
                  case 0:
                    nativeStereoPannerNode = getNativeAudioNode(proxy);
                    /*
                     * If the initially used nativeStereoPannerNode was not constructed on the same OfflineAudioContext it needs to be created
                     * again.
                     */

                    nativeStereoPannerNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeStereoPannerNode, nativeOfflineAudioContext);

                    if (!nativeStereoPannerNodeIsOwnedByContext) {
                      options = {
                        channelCount: nativeStereoPannerNode.channelCount,
                        channelCountMode: nativeStereoPannerNode.channelCountMode,
                        channelInterpretation: nativeStereoPannerNode.channelInterpretation,
                        pan: nativeStereoPannerNode.pan.value
                      };
                      nativeStereoPannerNode = createNativeStereoPannerNode(nativeOfflineAudioContext, options);
                    }

                    renderedNativeStereoPannerNodes.set(nativeOfflineAudioContext, nativeStereoPannerNode);

                    if (nativeStereoPannerNodeIsOwnedByContext) {
                      _context29.next = 9;
                      break;
                    }

                    _context29.next = 7;
                    return renderAutomation(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);

                  case 7:
                    _context29.next = 11;
                    break;

                  case 9:
                    _context29.next = 11;
                    return connectAudioParam(nativeOfflineAudioContext, proxy.pan, nativeStereoPannerNode.pan, trace);

                  case 11:
                    if (!Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNodeFaker"])(nativeStereoPannerNode)) {
                      _context29.next = 16;
                      break;
                    }

                    _context29.next = 14;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode.inputs[0], trace);

                  case 14:
                    _context29.next = 18;
                    break;

                  case 16:
                    _context29.next = 18;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeStereoPannerNode, trace);

                  case 18:
                    return _context29.abrupt("return", nativeStereoPannerNode);

                  case 19:
                  case "end":
                    return _context29.stop();
                }
              }
            }, _callee29);
          }));

          return function createStereoPannerNode(_x81, _x82, _x83) {
            return _ref60.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeStereoPannerNode = renderedNativeStereoPannerNodes.get(nativeOfflineAudioContext);

            if (renderedNativeStereoPannerNode !== undefined) {
              return Promise.resolve(renderedNativeStereoPannerNode);
            }

            return createStereoPannerNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/stereo-panner-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js ***!
    \*****************************************************************************************************************/

  /*! exports provided: createTestAudioBufferConstructorSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioBufferConstructorSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioBufferConstructorSupport", function () {
      return createTestAudioBufferConstructorSupport;
    }); // Bug #33: Edge & Safari expose an AudioBuffer but it can't be used as a constructor.


    var createTestAudioBufferConstructorSupport = function createTestAudioBufferConstructorSupport(nativeAudioBufferConstructor) {
      return function () {
        if (nativeAudioBufferConstructor === null) {
          return false;
        }

        try {
          new nativeAudioBufferConstructor({
            length: 1,
            sampleRate: 44100
          }); // tslint:disable-line:no-unused-expression
        } catch (_unused7) {
          return false;
        }

        return true;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-buffer-constructor-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js":
  /*!***********************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js ***!
    \***********************************************************************************************************************************/

  /*! exports provided: createTestAudioBufferCopyChannelMethodsSubarraySupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioBufferCopyChannelMethodsSubarraySupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioBufferCopyChannelMethodsSubarraySupport", function () {
      return createTestAudioBufferCopyChannelMethodsSubarraySupport;
    });
    /*
     * Firefox up to version 67 didn't fully support the copyFromChannel() and copyToChannel() methods. Therefore testing one of those methods
     * is enough to know if the other one is supported as well.
     */


    var createTestAudioBufferCopyChannelMethodsSubarraySupport = function createTestAudioBufferCopyChannelMethodsSubarraySupport(nativeOfflineAudioContextConstructor) {
      return function () {
        if (nativeOfflineAudioContextConstructor === null) {
          return false;
        }

        var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        var nativeAudioBuffer = nativeOfflineAudioContext.createBuffer(1, 1, 44100); // Bug #5: Safari does not support copyFromChannel() and copyToChannel().

        if (nativeAudioBuffer.copyToChannel === undefined) {
          return true;
        }

        var source = new Float32Array(2);

        try {
          nativeAudioBuffer.copyFromChannel(source, 0, 0);
        } catch (_unused8) {
          return false;
        }

        return true;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js":
  /*!************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js ***!
    \************************************************************************************************************************************************/

  /*! exports provided: createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport", function () {
      return createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport;
    });

    var createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport = function createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport(createNativeAudioNode) {
      return function (nativeContext) {
        var nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createBufferSource();
        });
        nativeAudioBufferSourceNode.start();

        try {
          nativeAudioBufferSourceNode.start();
        } catch (_unused9) {
          return true;
        }

        return false;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js":
  /*!*************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js ***!
    \*************************************************************************************************************************************************/

  /*! exports provided: createTestAudioBufferSourceNodeStartMethodDurationParameterSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioBufferSourceNodeStartMethodDurationParameterSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioBufferSourceNodeStartMethodDurationParameterSupport", function () {
      return createTestAudioBufferSourceNodeStartMethodDurationParameterSupport;
    }); // Bug #92: Edge does not respect the duration parameter yet.


    var createTestAudioBufferSourceNodeStartMethodDurationParameterSupport = function createTestAudioBufferSourceNodeStartMethodDurationParameterSupport(nativeOfflineAudioContextConstructor) {
      return function () {
        if (nativeOfflineAudioContextConstructor === null) {
          return Promise.resolve(false);
        }

        var offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        var audioBuffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);
        var audioBufferSourceNode = offlineAudioContext.createBufferSource();
        audioBuffer.getChannelData(0)[0] = 1;
        audioBufferSourceNode.buffer = audioBuffer;
        audioBufferSourceNode.start(0, 0, 0);
        audioBufferSourceNode.connect(offlineAudioContext.destination); // Bug #21: Safari does not support promises yet.

        return new Promise(function (resolve) {
          offlineAudioContext.oncomplete = function (_ref61) {
            var renderedBuffer = _ref61.renderedBuffer;
            // Bug #5: Safari does not support copyFromChannel().
            resolve(renderedBuffer.getChannelData(0)[0] === 0);
          };

          offlineAudioContext.startRendering();
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js":
  /*!**********************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js ***!
    \**********************************************************************************************************************************************/

  /*! exports provided: createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioBufferSourceNodeStartMethodOffsetClampingSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport", function () {
      return createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport;
    });

    var createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport = function createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport(createNativeAudioNode) {
      return function (nativeContext) {
        var nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createBufferSource();
        });
        var nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);
        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;

        try {
          nativeAudioBufferSourceNode.start(0, 1);
        } catch (_unused10) {
          return false;
        }

        return true;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js":
  /*!**********************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js ***!
    \**********************************************************************************************************************************************/

  /*! exports provided: createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioBufferSourceNodeStopMethodNullifiedBufferSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport", function () {
      return createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport;
    });

    var createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport = function createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport(createNativeAudioNode) {
      return function (nativeContext) {
        var nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createBufferSource();
        });
        nativeAudioBufferSourceNode.start();

        try {
          nativeAudioBufferSourceNode.stop();
        } catch (_unused11) {
          return false;
        }

        return true;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js ***!
    \*******************************************************************************************************************/

  /*! exports provided: createTestAudioContextCloseMethodSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioContextCloseMethodSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioContextCloseMethodSupport", function () {
      return createTestAudioContextCloseMethodSupport;
    });

    var createTestAudioContextCloseMethodSupport = function createTestAudioContextCloseMethodSupport(nativeAudioContextConstructor) {
      return function () {
        if (nativeAudioContextConstructor === null) {
          return false;
        } // Try to check the prototype before constructing the AudioContext.


        if (nativeAudioContextConstructor.prototype !== undefined && nativeAudioContextConstructor.prototype.close !== undefined) {
          return true;
        }

        var audioContext = new nativeAudioContextConstructor();
        var isAudioContextClosable = audioContext.close !== undefined;

        try {
          audioContext.close();
        } catch (_unused12) {// Ignore errors.
        }

        return isAudioContextClosable;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-context-close-method-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js":
  /*!******************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js ***!
    \******************************************************************************************************************************************/

  /*! exports provided: createTestAudioContextDecodeAudioDataMethodTypeErrorSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioContextDecodeAudioDataMethodTypeErrorSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioContextDecodeAudioDataMethodTypeErrorSupport", function () {
      return createTestAudioContextDecodeAudioDataMethodTypeErrorSupport;
    });
    /**
     * Edge up to version 14, Firefox up to version 52, Safari up to version 9 and maybe other browsers
     * did not refuse to decode invalid parameters with a TypeError.
     */


    var createTestAudioContextDecodeAudioDataMethodTypeErrorSupport = function createTestAudioContextDecodeAudioDataMethodTypeErrorSupport(nativeOfflineAudioContextConstructor) {
      return function () {
        if (nativeOfflineAudioContextConstructor === null) {
          return Promise.resolve(false);
        }

        var offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #21: Safari does not support promises yet.

        return new Promise(function (resolve) {
          var isPending = true;

          var resolvePromise = function resolvePromise(err) {
            if (isPending) {
              isPending = false;
              offlineAudioContext.startRendering();
              resolve(err instanceof TypeError);
            }
          };

          var promise; // Bug #26: Safari throws a synchronous error.

          try {
            promise = offlineAudioContext // Bug #1: Safari requires a successCallback.
            .decodeAudioData(null, function () {// Ignore the success callback.
            }, resolvePromise);
          } catch (err) {
            resolvePromise(err);
          } // Bug #21: Safari does not support promises yet.


          if (promise !== undefined) {
            // Bug #6 Chrome does not call the errorCallback
            promise["catch"](resolvePromise);
          }
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js ***!
    \**************************************************************************************************************/

  /*! exports provided: createTestAudioContextOptionsSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioContextOptionsSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioContextOptionsSupport", function () {
      return createTestAudioContextOptionsSupport;
    });

    var createTestAudioContextOptionsSupport = function createTestAudioContextOptionsSupport(nativeAudioContextConstructor) {
      return function () {
        if (nativeAudioContextConstructor === null) {
          return false;
        }

        var audioContext;

        try {
          audioContext = new nativeAudioContextConstructor({
            latencyHint: 'balanced'
          });
        } catch (_unused13) {
          return false;
        }

        audioContext.close();
        return true;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-context-options-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js ***!
    \******************************************************************************************************************/

  /*! exports provided: createTestAudioNodeConnectMethodSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioNodeConnectMethodSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioNodeConnectMethodSupport", function () {
      return createTestAudioNodeConnectMethodSupport;
    }); // Safari up to version 12.0 (but not v12.1) didn't return the destination in case it was an AudioNode.


    var createTestAudioNodeConnectMethodSupport = function createTestAudioNodeConnectMethodSupport(nativeOfflineAudioContextConstructor) {
      return function () {
        if (nativeOfflineAudioContextConstructor === null) {
          return false;
        }

        var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        var nativeGainNode = nativeOfflineAudioContext.createGain();
        var isSupported = nativeGainNode.connect(nativeGainNode) === nativeGainNode;
        nativeGainNode.disconnect(nativeGainNode);
        return isSupported;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-node-connect-method-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js":
  /*!*****************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js ***!
    \*****************************************************************************************************************************************************/

  /*! exports provided: createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioScheduledSourceNodeStartMethodNegativeParametersSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport", function () {
      return createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport;
    });

    var createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport = function createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport(createNativeAudioNode) {
      return function (nativeContext) {
        var nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createOscillator();
        });

        try {
          nativeAudioBufferSourceNode.start(-1);
        } catch (err) {
          return err instanceof RangeError;
        }

        return false;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js":
  /*!**************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js ***!
    \**************************************************************************************************************************************************/

  /*! exports provided: createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport", function () {
      return createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport;
    });

    var createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = function createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport(createNativeAudioNode) {
      return function (nativeContext) {
        var nativeAudioBuffer = nativeContext.createBuffer(1, 1, 44100);
        var nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createBufferSource();
        });
        nativeAudioBufferSourceNode.buffer = nativeAudioBuffer;
        nativeAudioBufferSourceNode.start();
        nativeAudioBufferSourceNode.stop();

        try {
          nativeAudioBufferSourceNode.stop();
          return true;
        } catch (_unused14) {
          return false;
        }
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js":
  /*!****************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js ***!
    \****************************************************************************************************************************************************/

  /*! exports provided: createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioScheduledSourceNodeStopMethodNegativeParametersSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport", function () {
      return createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport;
    });

    var createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport = function createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport(createNativeAudioNode) {
      return function (nativeContext) {
        var nativeAudioBufferSourceNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createOscillator();
        });

        try {
          nativeAudioBufferSourceNode.stop(-1);
        } catch (err) {
          return err instanceof RangeError;
        }

        return false;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js":
  /*!***************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js ***!
    \***************************************************************************************************************************/

  /*! exports provided: createTestAudioWorkletProcessorNoOutputsSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestAudioWorkletProcessorNoOutputsSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestAudioWorkletProcessorNoOutputsSupport", function () {
      return createTestAudioWorkletProcessorNoOutputsSupport;
    });
    /**
     * Chrome version 66 and 67 did not call the process() function of an AudioWorkletProcessor if it had no outputs. AudioWorklet support was
     * enabled by default in version 66.
     */


    var createTestAudioWorkletProcessorNoOutputsSupport = function createTestAudioWorkletProcessorNoOutputsSupport(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor) {
      return /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee30() {
        var blob, offlineAudioContext, url, isCallingProcess, gainNode, audioWorkletNode;
        return regeneratorRuntime.wrap(function _callee30$(_context30) {
          while (1) {
            switch (_context30.prev = _context30.next) {
              case 0:
                if (!(nativeAudioWorkletNodeConstructor === null)) {
                  _context30.next = 2;
                  break;
                }

                return _context30.abrupt("return", true);

              case 2:
                if (!(nativeOfflineAudioContextConstructor === null)) {
                  _context30.next = 4;
                  break;
                }

                return _context30.abrupt("return", false);

              case 4:
                blob = new Blob(['class A extends AudioWorkletProcessor{process(){this.port.postMessage(0)}}registerProcessor("a",A)'], {
                  type: 'application/javascript; charset=utf-8'
                });
                offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 128, 3200);
                url = URL.createObjectURL(blob);
                isCallingProcess = false;
                _context30.prev = 8;
                _context30.next = 11;
                return offlineAudioContext.audioWorklet.addModule(url);

              case 11:
                gainNode = offlineAudioContext.createGain();
                audioWorkletNode = new nativeAudioWorkletNodeConstructor(offlineAudioContext, 'a', {
                  numberOfOutputs: 0
                });

                audioWorkletNode.port.onmessage = function () {
                  return isCallingProcess = true;
                };

                gainNode.connect(audioWorkletNode);
                _context30.next = 17;
                return offlineAudioContext.startRendering();

              case 17:
                _context30.next = 21;
                break;

              case 19:
                _context30.prev = 19;
                _context30.t0 = _context30["catch"](8);

              case 21:
                _context30.prev = 21;
                URL.revokeObjectURL(url);
                return _context30.finish(21);

              case 24:
                return _context30.abrupt("return", isCallingProcess);

              case 25:
              case "end":
                return _context30.stop();
            }
          }
        }, _callee30, null, [[8, 19, 21, 24]]);
      }));
    }; //# sourceMappingURL=/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js":
  /*!**************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js ***!
    \**************************************************************************************************************************/

  /*! exports provided: createTestChannelMergerNodeChannelCountSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestChannelMergerNodeChannelCountSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestChannelMergerNodeChannelCountSupport", function () {
      return createTestChannelMergerNodeChannelCountSupport;
    });
    /**
     * Firefox up to version 69 did not throw an error when setting a different channelCount or channelCountMode.
     */


    var createTestChannelMergerNodeChannelCountSupport = function createTestChannelMergerNodeChannelCountSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor) {
      return function () {
        if (nativeOfflineAudioContextConstructor === null) {
          return false;
        }

        var offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        var nativeChannelMergerNode = createNativeAudioNode(offlineAudioContext, function (ntvCntxt) {
          return ntvCntxt.createChannelMerger();
        });
        /**
         * Bug #15: Safari does not return the default properties. It still needs to be patched. This test is supposed to test the support
         * in other browsers.
         */

        if (nativeChannelMergerNode.channelCountMode === 'max') {
          return true;
        }

        try {
          nativeChannelMergerNode.channelCount = 2;
        } catch (_unused16) {
          return true;
        }

        return false;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-channel-merger-node-channel-count-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js":
  /*!*********************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js ***!
    \*********************************************************************************************************************************/

  /*! exports provided: createTestConstantSourceNodeAccurateSchedulingSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestConstantSourceNodeAccurateSchedulingSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestConstantSourceNodeAccurateSchedulingSupport", function () {
      return createTestConstantSourceNodeAccurateSchedulingSupport;
    });

    var createTestConstantSourceNodeAccurateSchedulingSupport = function createTestConstantSourceNodeAccurateSchedulingSupport(createNativeAudioNode, nativeOfflineAudioContextConstructor) {
      return function () {
        if (nativeOfflineAudioContextConstructor === null) {
          return false;
        }

        var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #62: Edge & Safari do not support ConstantSourceNodes.

        if (nativeOfflineAudioContext.createConstantSource === undefined) {
          return true;
        }

        var nativeConstantSourceNode = createNativeAudioNode(nativeOfflineAudioContext, function (ntvCntxt) {
          return ntvCntxt.createConstantSource();
        });
        /*
         * @todo This is using bug #75 to detect bug #70. That works because both bugs were unique to
         * the implementation of Firefox right now, but it could probably be done in a better way.
         */

        return nativeConstantSourceNode.offset.maxValue !== Number.POSITIVE_INFINITY;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js":
  /*!******************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js ***!
    \******************************************************************************************************************************/

  /*! exports provided: createTestConvolverNodeBufferReassignabilitySupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestConvolverNodeBufferReassignabilitySupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestConvolverNodeBufferReassignabilitySupport", function () {
      return createTestConvolverNodeBufferReassignabilitySupport;
    }); // Opera up to version 57 did not allow to reassign the buffer of a ConvolverNode.


    var createTestConvolverNodeBufferReassignabilitySupport = function createTestConvolverNodeBufferReassignabilitySupport(nativeOfflineAudioContextConstructor) {
      return function () {
        if (nativeOfflineAudioContextConstructor === null) {
          return false;
        }

        var offlineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        var nativeConvolverNode = offlineAudioContext.createConvolver();
        nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);

        try {
          nativeConvolverNode.buffer = offlineAudioContext.createBuffer(1, 1, offlineAudioContext.sampleRate);
        } catch (_unused17) {
          return false;
        }

        return true;
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js ***!
    \**********************************************************************************************************/

  /*! exports provided: createTestIsSecureContextSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestIsSecureContextSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestIsSecureContextSupport", function () {
      return createTestIsSecureContextSupport;
    });

    var createTestIsSecureContextSupport = function createTestIsSecureContextSupport(window) {
      return function () {
        return window !== null && window.hasOwnProperty('isSecureContext');
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-is-secure-context-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js":
  /*!********************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js ***!
    \********************************************************************************************************************************************************/

  /*! exports provided: createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport", function () {
      return createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport;
    }); // Firefox up to version 68 did not throw an error when creating a MediaStreamAudioSourceNode with a mediaStream that had no audio track.


    var createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport = function createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport(nativeAudioContextConstructor) {
      return function () {
        if (nativeAudioContextConstructor === null) {
          return false;
        }

        var audioContext = new nativeAudioContextConstructor();

        try {
          audioContext.createMediaStreamSource(new MediaStream());
          return false;
        } catch (err) {
          return true;
        }
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js":
  /*!***************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js ***!
    \***************************************************************************************************************************/

  /*! exports provided: createTestOfflineAudioContextCurrentTimeSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestOfflineAudioContextCurrentTimeSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestOfflineAudioContextCurrentTimeSupport", function () {
      return createTestOfflineAudioContextCurrentTimeSupport;
    });

    var createTestOfflineAudioContextCurrentTimeSupport = function createTestOfflineAudioContextCurrentTimeSupport(createNativeGainNode, nativeOfflineAudioContextConstructor) {
      return function () {
        if (nativeOfflineAudioContextConstructor === null) {
          return Promise.resolve(false);
        }

        var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100); // Bug #48: Safari does not render an OfflineAudioContext without any connected node.

        var gainNode = createNativeGainNode(nativeOfflineAudioContext, {
          channelCount: 1,
          channelCountMode: 'explicit',
          channelInterpretation: 'discrete',
          gain: 0
        }); // Bug #21: Safari does not support promises yet.

        return new Promise(function (resolve) {
          nativeOfflineAudioContext.oncomplete = function () {
            gainNode.disconnect();
            resolve(nativeOfflineAudioContext.currentTime !== 0);
          };

          nativeOfflineAudioContext.startRendering();
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-offline-audio-context-current-time-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js":
  /*!*************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js ***!
    \*************************************************************************************************************************/

  /*! exports provided: createTestStereoPannerNodeDefaultValueSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesTestStereoPannerNodeDefaultValueSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createTestStereoPannerNodeDefaultValueSupport", function () {
      return createTestStereoPannerNodeDefaultValueSupport;
    });
    /**
     * Firefox up to version 62 did not kick off the processing of the StereoPannerNode if the value of pan was zero.
     */


    var createTestStereoPannerNodeDefaultValueSupport = function createTestStereoPannerNodeDefaultValueSupport(nativeOfflineAudioContextConstructor) {
      return function () {
        if (nativeOfflineAudioContextConstructor === null) {
          return Promise.resolve(false);
        }

        var nativeOfflineAudioContext = new nativeOfflineAudioContextConstructor(1, 1, 44100);
        /*
         * Bug #105: Safari does not support the StereoPannerNode. Therefore the returned value should normally be false but the faker does
         * support the tested behaviour.
         */

        if (nativeOfflineAudioContext.createStereoPanner === undefined) {
          return Promise.resolve(true);
        } // Bug #62: Edge & Safari do not support ConstantSourceNodes.


        if (nativeOfflineAudioContext.createConstantSource === undefined) {
          return Promise.resolve(true);
        }

        var constantSourceNode = nativeOfflineAudioContext.createConstantSource();
        var stereoPanner = nativeOfflineAudioContext.createStereoPanner();
        constantSourceNode.channelCount = 1;
        constantSourceNode.offset.value = 1;
        stereoPanner.channelCount = 1;
        constantSourceNode.start();
        constantSourceNode.connect(stereoPanner).connect(nativeOfflineAudioContext.destination);
        return nativeOfflineAudioContext.startRendering().then(function (buffer) {
          return buffer.getChannelData(0)[0] !== 1;
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/test-stereo-panner-node-default-value-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js":
  /*!*****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js ***!
    \*****************************************************************************************/

  /*! exports provided: createUnknownError */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesUnknownErrorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createUnknownError", function () {
      return createUnknownError;
    });

    var createUnknownError = function createUnknownError() {
      try {
        return new DOMException('', 'UnknownError');
      } catch (err) {
        // Bug #122: Edge is the only browser that does not yet allow to construct a DOMException.
        err.name = 'UnknownError';
        return err;
      }
    }; //# sourceMappingURL=/build/es2019/factories/unknown-error.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js ***!
    \********************************************************************************************************/

  /*! exports provided: createWaveShaperNodeConstructor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesWaveShaperNodeConstructorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createWaveShaperNodeConstructor", function () {
      return createWaveShaperNodeConstructor;
    });

    var DEFAULT_OPTIONS = {
      channelCount: 2,
      channelCountMode: 'max',
      channelInterpretation: 'speakers',
      curve: null,
      oversample: 'none'
    };

    var createWaveShaperNodeConstructor = function createWaveShaperNodeConstructor(audioNodeConstructor, createInvalidStateError, createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext) {
      return /*#__PURE__*/function (_audioNodeConstructor20) {
        _inherits(WaveShaperNode, _audioNodeConstructor20);

        var _super28 = _createSuper(WaveShaperNode);

        function WaveShaperNode(context) {
          var _this34;

          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_OPTIONS;

          _classCallCheck2(this, WaveShaperNode);

          var nativeContext = getNativeContext(context);

          var mergedOptions = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);

          var nativeWaveShaperNode = createNativeWaveShaperNode(nativeContext, mergedOptions);
          var isOffline = isNativeOfflineAudioContext(nativeContext);
          var waveShaperNodeRenderer = isOffline ? createWaveShaperNodeRenderer() : null; // @todo Add a mechanism to only switch a WaveShaperNode to active while it is connected.

          _this34 = _super28.call(this, context, true, nativeWaveShaperNode, waveShaperNodeRenderer);
          _this34._isCurveNullified = false;
          _this34._nativeWaveShaperNode = nativeWaveShaperNode;
          return _this34;
        }

        _createClass2(WaveShaperNode, [{
          key: "curve",
          get: function get() {
            if (this._isCurveNullified) {
              return null;
            }

            return this._nativeWaveShaperNode.curve;
          },
          set: function set(value) {
            // Bug #103: Safari does not allow to set the curve to null.
            if (value === null) {
              this._isCurveNullified = true;
              this._nativeWaveShaperNode.curve = new Float32Array([0, 0]);
            } else {
              // Bug #102: Safari does not throw an InvalidStateError when the curve has less than two samples.
              // Bug #104: Chrome will throw an InvalidAccessError when the curve has less than two samples.
              if (value.length < 2) {
                throw createInvalidStateError();
              }

              this._isCurveNullified = false;
              this._nativeWaveShaperNode.curve = value;
            }
          }
        }, {
          key: "oversample",
          get: function get() {
            return this._nativeWaveShaperNode.oversample;
          },
          set: function set(value) {
            this._nativeWaveShaperNode.oversample = value;
          }
        }]);

        return WaveShaperNode;
      }(audioNodeConstructor);
    }; //# sourceMappingURL=/build/es2019/factories/wave-shaper-node-constructor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js ***!
    \*************************************************************************************************************/

  /*! exports provided: createWaveShaperNodeRendererFactory */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesWaveShaperNodeRendererFactoryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createWaveShaperNodeRendererFactory", function () {
      return createWaveShaperNodeRendererFactory;
    });
    /* harmony import */


    var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/native-audio-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");
    /* harmony import */


    var _helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../helpers/is-owned-by-context */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js");

    var createWaveShaperNodeRendererFactory = function createWaveShaperNodeRendererFactory(createNativeWaveShaperNode, getNativeAudioNode, renderInputsOfAudioNode) {
      return function () {
        var renderedNativeWaveShaperNodes = new WeakMap();

        var createWaveShaperNode = /*#__PURE__*/function () {
          var _ref63 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee31(proxy, nativeOfflineAudioContext, trace) {
            var nativeWaveShaperNode, nativeWaveShaperNodeIsOwnedByContext, options;
            return regeneratorRuntime.wrap(function _callee31$(_context31) {
              while (1) {
                switch (_context31.prev = _context31.next) {
                  case 0:
                    nativeWaveShaperNode = getNativeAudioNode(proxy); // If the initially used nativeWaveShaperNode was not constructed on the same OfflineAudioContext it needs to be created again.

                    nativeWaveShaperNodeIsOwnedByContext = Object(_helpers_is_owned_by_context__WEBPACK_IMPORTED_MODULE_1__["isOwnedByContext"])(nativeWaveShaperNode, nativeOfflineAudioContext);

                    if (!nativeWaveShaperNodeIsOwnedByContext) {
                      options = {
                        channelCount: nativeWaveShaperNode.channelCount,
                        channelCountMode: nativeWaveShaperNode.channelCountMode,
                        channelInterpretation: nativeWaveShaperNode.channelInterpretation,
                        curve: nativeWaveShaperNode.curve,
                        oversample: nativeWaveShaperNode.oversample
                      };
                      nativeWaveShaperNode = createNativeWaveShaperNode(nativeOfflineAudioContext, options);
                    }

                    renderedNativeWaveShaperNodes.set(nativeOfflineAudioContext, nativeWaveShaperNode);

                    if (!Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNodeFaker"])(nativeWaveShaperNode)) {
                      _context31.next = 9;
                      break;
                    }

                    _context31.next = 7;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode.inputs[0], trace);

                  case 7:
                    _context31.next = 11;
                    break;

                  case 9:
                    _context31.next = 11;
                    return renderInputsOfAudioNode(proxy, nativeOfflineAudioContext, nativeWaveShaperNode, trace);

                  case 11:
                    return _context31.abrupt("return", nativeWaveShaperNode);

                  case 12:
                  case "end":
                    return _context31.stop();
                }
              }
            }, _callee31);
          }));

          return function createWaveShaperNode(_x84, _x85, _x86) {
            return _ref63.apply(this, arguments);
          };
        }();

        return {
          render: function render(proxy, nativeOfflineAudioContext, trace) {
            var renderedNativeWaveShaperNode = renderedNativeWaveShaperNodes.get(nativeOfflineAudioContext);

            if (renderedNativeWaveShaperNode !== undefined) {
              return Promise.resolve(renderedNativeWaveShaperNode);
            }

            return createWaveShaperNode(proxy, nativeOfflineAudioContext, trace);
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/wave-shaper-node-renderer-factory.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/window.js":
  /*!**********************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/window.js ***!
    \**********************************************************************************/

  /*! exports provided: createWindow */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesWindowJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createWindow", function () {
      return createWindow;
    });

    var createWindow = function createWindow() {
      return typeof window === 'undefined' ? null : window;
    }; //# sourceMappingURL=/build/es2019/factories/window.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js":
  /*!********************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js ***!
    \********************************************************************************************************************************/

  /*! exports provided: createWrapAudioBufferCopyChannelMethodsOutOfBounds */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesWrapAudioBufferCopyChannelMethodsOutOfBoundsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createWrapAudioBufferCopyChannelMethodsOutOfBounds", function () {
      return createWrapAudioBufferCopyChannelMethodsOutOfBounds;
    });

    var createWrapAudioBufferCopyChannelMethodsOutOfBounds = function createWrapAudioBufferCopyChannelMethodsOutOfBounds(convertNumberToUnsignedLong) {
      return function (audioBuffer) {
        audioBuffer.copyFromChannel = function (copyFromChannel) {
          return function (destination, channelNumberAsNumber) {
            var bufferOffsetAsNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
            var bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
            var channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);

            if (bufferOffset < audioBuffer.length) {
              return copyFromChannel.call(audioBuffer, destination, channelNumber, bufferOffset);
            }
          };
        }(audioBuffer.copyFromChannel);

        audioBuffer.copyToChannel = function (copyToChannel) {
          return function (source, channelNumberAsNumber) {
            var bufferOffsetAsNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
            var bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
            var channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);

            if (bufferOffset < audioBuffer.length) {
              return copyToChannel.call(audioBuffer, source, channelNumber, bufferOffset);
            }
          };
        }(audioBuffer.copyToChannel);
      };
    }; //# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js ***!
    \******************************************************************************************************************/

  /*! exports provided: createWrapAudioBufferCopyChannelMethods */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesWrapAudioBufferCopyChannelMethodsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createWrapAudioBufferCopyChannelMethods", function () {
      return createWrapAudioBufferCopyChannelMethods;
    });

    var createWrapAudioBufferCopyChannelMethods = function createWrapAudioBufferCopyChannelMethods(convertNumberToUnsignedLong, createIndexSizeError) {
      return function (audioBuffer) {
        audioBuffer.copyFromChannel = function (destination, channelNumberAsNumber) {
          var bufferOffsetAsNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
          var bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
          var channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);

          if (channelNumber >= audioBuffer.numberOfChannels) {
            throw createIndexSizeError();
          }

          var audioBufferLength = audioBuffer.length;
          var channelData = audioBuffer.getChannelData(channelNumber);
          var destinationLength = destination.length;

          for (var i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < destinationLength; i += 1) {
            destination[i] = channelData[i + bufferOffset];
          }
        };

        audioBuffer.copyToChannel = function (source, channelNumberAsNumber) {
          var bufferOffsetAsNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
          var bufferOffset = convertNumberToUnsignedLong(bufferOffsetAsNumber);
          var channelNumber = convertNumberToUnsignedLong(channelNumberAsNumber);

          if (channelNumber >= audioBuffer.numberOfChannels) {
            throw createIndexSizeError();
          }

          var audioBufferLength = audioBuffer.length;
          var channelData = audioBuffer.getChannelData(channelNumber);
          var sourceLength = source.length;

          for (var i = bufferOffset < 0 ? -bufferOffset : 0; i + bufferOffset < audioBufferLength && i < sourceLength; i += 1) {
            channelData[i + bufferOffset] = source[i];
          }
        };
      };
    }; //# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js":
  /*!**************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js ***!
    \**************************************************************************************************************************************/

  /*! exports provided: createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesWrapAudioBufferSourceNodeStopMethodNullifiedBufferJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer", function () {
      return createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer;
    });

    var createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer = function createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer(overwriteAccessors) {
      return function (nativeAudioBufferSourceNode, nativeContext) {
        var nullifiedBuffer = nativeContext.createBuffer(1, 1, nativeContext.sampleRate);

        if (nativeAudioBufferSourceNode.buffer === null) {
          nativeAudioBufferSourceNode.buffer = nullifiedBuffer;
        }

        overwriteAccessors(nativeAudioBufferSourceNode, 'buffer', function (get) {
          return function () {
            var value = get.call(nativeAudioBufferSourceNode);
            return value === nullifiedBuffer ? null : value;
          };
        }, function (set) {
          return function (value) {
            return set.call(nativeAudioBufferSourceNode, value === null ? nullifiedBuffer : value);
          };
        });
      };
    }; //# sourceMappingURL=/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js":
  /*!******************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js ***!
    \******************************************************************************************************************************************/

  /*! exports provided: createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesWrapAudioScheduledSourceNodeStopMethodConsecutiveCallsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls", function () {
      return createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls;
    });
    /* harmony import */


    var _helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../helpers/intercept-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js");

    var createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = function createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls(createNativeAudioNode) {
      return function (nativeAudioScheduledSourceNode, nativeContext) {
        var nativeGainNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createGain();
        });
        nativeAudioScheduledSourceNode.connect(nativeGainNode);

        var disconnectGainNode = function (disconnect) {
          return function () {
            // @todo TypeScript cannot infer the overloaded signature with 1 argument yet.
            disconnect.call(nativeAudioScheduledSourceNode, nativeGainNode);
            nativeAudioScheduledSourceNode.removeEventListener('ended', disconnectGainNode);
          };
        }(nativeAudioScheduledSourceNode.disconnect);

        nativeAudioScheduledSourceNode.addEventListener('ended', disconnectGainNode);
        Object(_helpers_intercept_connections__WEBPACK_IMPORTED_MODULE_0__["interceptConnections"])(nativeAudioScheduledSourceNode, nativeGainNode);

        nativeAudioScheduledSourceNode.stop = function (stop) {
          var isStopped = false;
          return function () {
            var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

            if (isStopped) {
              try {
                stop.call(nativeAudioScheduledSourceNode, when);
              } catch (_unused18) {
                nativeGainNode.gain.setValueAtTime(0, when);
              }
            } else {
              stop.call(nativeAudioScheduledSourceNode, when);
              isStopped = true;
            }
          };
        }(nativeAudioScheduledSourceNode.stop);
      };
    }; //# sourceMappingURL=/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js ***!
    \****************************************************************************************************/

  /*! exports provided: createWrapChannelMergerNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019FactoriesWrapChannelMergerNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createWrapChannelMergerNode", function () {
      return createWrapChannelMergerNode;
    });

    var createWrapChannelMergerNode = function createWrapChannelMergerNode(createInvalidStateError, createNativeAudioNode, monitorConnectionsFunction) {
      return function (nativeContext, channelMergerNode) {
        channelMergerNode.channelCount = 1;
        channelMergerNode.channelCountMode = 'explicit';
        Object.defineProperty(channelMergerNode, 'channelCount', {
          get: function get() {
            return 1;
          },
          set: function set() {
            throw createInvalidStateError();
          }
        });
        Object.defineProperty(channelMergerNode, 'channelCountMode', {
          get: function get() {
            return 'explicit';
          },
          set: function set() {
            throw createInvalidStateError();
          }
        }); // Bug #20: Safari requires a connection of any kind to treat the input signal correctly.

        var audioBufferSourceNode = createNativeAudioNode(nativeContext, function (ntvCntxt) {
          return ntvCntxt.createBufferSource();
        });

        var whenConnected = function whenConnected() {
          var length = channelMergerNode.numberOfInputs;

          for (var i = 0; i < length; i += 1) {
            audioBufferSourceNode.connect(channelMergerNode, 0, i);
          }
        };

        var whenDisconnected = function whenDisconnected() {
          return audioBufferSourceNode.disconnect(channelMergerNode);
        };

        monitorConnectionsFunction(channelMergerNode, whenConnected, whenDisconnected);
      };
    }; //# sourceMappingURL=/build/es2019/factories/wrap-channel-merger-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/globals.js":
  /*!*************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/globals.js ***!
    \*************************************************************************/

  /*! exports provided: ACTIVE_AUDIO_NODE_STORE, AUDIO_NODE_CONNECTIONS_STORE, AUDIO_NODE_STORE, AUDIO_PARAM_CONNECTIONS_STORE, AUDIO_PARAM_STORE, BACKUP_NATIVE_CONTEXT_STORE, CONTEXT_STORE, EVENT_LISTENERS, CYCLE_COUNTERS, NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS, NODE_TO_PROCESSOR_MAPS */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019GlobalsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ACTIVE_AUDIO_NODE_STORE", function () {
      return ACTIVE_AUDIO_NODE_STORE;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AUDIO_NODE_CONNECTIONS_STORE", function () {
      return AUDIO_NODE_CONNECTIONS_STORE;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AUDIO_NODE_STORE", function () {
      return AUDIO_NODE_STORE;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AUDIO_PARAM_CONNECTIONS_STORE", function () {
      return AUDIO_PARAM_CONNECTIONS_STORE;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AUDIO_PARAM_STORE", function () {
      return AUDIO_PARAM_STORE;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BACKUP_NATIVE_CONTEXT_STORE", function () {
      return BACKUP_NATIVE_CONTEXT_STORE;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CONTEXT_STORE", function () {
      return CONTEXT_STORE;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EVENT_LISTENERS", function () {
      return EVENT_LISTENERS;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CYCLE_COUNTERS", function () {
      return CYCLE_COUNTERS;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS", function () {
      return NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "NODE_TO_PROCESSOR_MAPS", function () {
      return NODE_TO_PROCESSOR_MAPS;
    });

    var ACTIVE_AUDIO_NODE_STORE = new WeakSet();
    var AUDIO_NODE_CONNECTIONS_STORE = new WeakMap();
    var AUDIO_NODE_STORE = new WeakMap();
    var AUDIO_PARAM_CONNECTIONS_STORE = new WeakMap();
    var AUDIO_PARAM_STORE = new WeakMap();
    var BACKUP_NATIVE_CONTEXT_STORE = new WeakMap();
    var CONTEXT_STORE = new WeakMap();
    var EVENT_LISTENERS = new WeakMap();
    var CYCLE_COUNTERS = new WeakMap(); // This clunky name is borrowed from the spec. :-)

    var NODE_NAME_TO_PROCESSOR_CONSTRUCTOR_MAPS = new WeakMap();
    var NODE_TO_PROCESSOR_MAPS = new WeakMap(); //# sourceMappingURL=/build/es2019/globals.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/guards/audio-node-output-connection.js ***!
    \*****************************************************************************************************/

  /*! exports provided: isAudioNodeOutputConnection */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019GuardsAudioNodeOutputConnectionJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAudioNodeOutputConnection", function () {
      return isAudioNodeOutputConnection;
    });
    /* harmony import */


    var _audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./audio-node */
    "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js");

    var isAudioNodeOutputConnection = function isAudioNodeOutputConnection(outputConnection) {
      return Object(_audio_node__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(outputConnection[0]);
    }; //# sourceMappingURL=/build/es2019/guards/audio-node-output-connection.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js":
  /*!***********************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/guards/audio-node.js ***!
    \***********************************************************************************/

  /*! exports provided: isAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019GuardsAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAudioNode", function () {
      return isAudioNode;
    });

    var isAudioNode = function isAudioNode(audioNodeOrAudioParam) {
      return 'context' in audioNodeOrAudioParam;
    }; //# sourceMappingURL=/build/es2019/guards/audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js ***!
    \*******************************************************************************************/

  /*! exports provided: isAudioWorkletNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019GuardsAudioWorkletNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAudioWorkletNode", function () {
      return isAudioWorkletNode;
    });

    var isAudioWorkletNode = function isAudioWorkletNode(audioNode) {
      return 'port' in audioNode;
    }; //# sourceMappingURL=/build/es2019/guards/audio-worklet-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js":
  /*!***********************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/guards/delay-node.js ***!
    \***********************************************************************************/

  /*! exports provided: isDelayNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019GuardsDelayNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isDelayNode", function () {
      return isDelayNode;
    });

    var isDelayNode = function isDelayNode(audioNode) {
      return 'delayTime' in audioNode;
    }; //# sourceMappingURL=/build/es2019/guards/delay-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js ***!
    \************************************************************************************************/

  /*! exports provided: isNativeAudioNodeFaker */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019GuardsNativeAudioNodeFakerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isNativeAudioNodeFaker", function () {
      return isNativeAudioNodeFaker;
    });

    var isNativeAudioNodeFaker = function isNativeAudioNodeFaker(nativeAudioNodeOrNativeAudioNodeFaker) {
      return 'inputs' in nativeAudioNodeOrNativeAudioNodeFaker;
    }; //# sourceMappingURL=/build/es2019/guards/native-audio-node-faker.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js ***!
    \******************************************************************************************/

  /*! exports provided: isNativeAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019GuardsNativeAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isNativeAudioNode", function () {
      return isNativeAudioNode;
    });

    var isNativeAudioNode = function isNativeAudioNode(nativeAudioNodeOrAudioParam) {
      return 'context' in nativeAudioNodeOrAudioParam;
    }; //# sourceMappingURL=/build/es2019/guards/native-audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-audio-param-value.js ***!
    \********************************************************************************************************************/

  /*! exports provided: assignNativeAudioNodeAudioParamValue */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersAssignNativeAudioNodeAudioParamValueJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "assignNativeAudioNodeAudioParamValue", function () {
      return assignNativeAudioNodeAudioParamValue;
    });

    var assignNativeAudioNodeAudioParamValue = function assignNativeAudioNodeAudioParamValue(nativeAudioNode, options, audioParam) {
      var value = options[audioParam];

      if (value !== undefined && value !== nativeAudioNode[audioParam].value) {
        nativeAudioNode[audioParam].value = value;
      }
    }; //# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-audio-param-value.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js ***!
    \*********************************************************************************************************/

  /*! exports provided: assignNativeAudioNodeOption */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersAssignNativeAudioNodeOptionJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "assignNativeAudioNodeOption", function () {
      return assignNativeAudioNodeOption;
    });

    var assignNativeAudioNodeOption = function assignNativeAudioNodeOption(nativeAudioNode, options, option) {
      var value = options[option];

      if (value !== undefined && value !== nativeAudioNode[option]) {
        nativeAudioNode[option] = value;
      }
    }; //# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-option.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-options.js ***!
    \**********************************************************************************************************/

  /*! exports provided: assignNativeAudioNodeOptions */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersAssignNativeAudioNodeOptionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "assignNativeAudioNodeOptions", function () {
      return assignNativeAudioNodeOptions;
    });
    /* harmony import */


    var _assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./assign-native-audio-node-option */
    "./node_modules/standardized-audio-context/build/es2019/helpers/assign-native-audio-node-option.js");

    var assignNativeAudioNodeOptions = function assignNativeAudioNodeOptions(nativeAudioNode, options) {
      Object(_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAudioNode, options, 'channelCount');
      Object(_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAudioNode, options, 'channelCountMode');
      Object(_assign_native_audio_node_option__WEBPACK_IMPORTED_MODULE_0__["assignNativeAudioNodeOption"])(nativeAudioNode, options, 'channelInterpretation');
    }; //# sourceMappingURL=/build/es2019/helpers/assign-native-audio-node-options.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js ***!
    \**********************************************************************************************************/

  /*! exports provided: cloneAudioWorkletNodeOptions */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersCloneAudioWorkletNodeOptionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "cloneAudioWorkletNodeOptions", function () {
      return cloneAudioWorkletNodeOptions;
    });

    var cloneAudioWorkletNodeOptions = function cloneAudioWorkletNodeOptions(audioWorkletNodeOptions) {
      return new Promise(function (resolve, reject) {
        var _MessageChannel = new MessageChannel(),
            port1 = _MessageChannel.port1,
            port2 = _MessageChannel.port2;

        port1.onmessage = function (_ref64) {
          var data = _ref64.data;
          port1.close();
          port2.close();
          resolve(data);
        };

        port1.onmessageerror = function (_ref65) {
          var data = _ref65.data;
          port1.close();
          port2.close();
          reject(data);
        }; // This will throw an error if the audioWorkletNodeOptions are not clonable.


        port2.postMessage(audioWorkletNodeOptions);
      });
    }; //# sourceMappingURL=/build/es2019/helpers/clone-audio-worklet-node-options.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/compute-buffer-size.js ***!
    \*********************************************************************************************/

  /*! exports provided: computeBufferSize */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersComputeBufferSizeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "computeBufferSize", function () {
      return computeBufferSize;
    });

    var computeBufferSize = function computeBufferSize(baseLatency, sampleRate) {
      if (baseLatency === null) {
        return 512;
      }

      return Math.max(512, Math.min(16384, Math.pow(2, Math.round(Math.log2(baseLatency * sampleRate)))));
    }; //# sourceMappingURL=/build/es2019/helpers/compute-buffer-size.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js":
  /*!************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js ***!
    \************************************************************************************************************************/

  /*! exports provided: connectNativeAudioNodeToNativeAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersConnectNativeAudioNodeToNativeAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "connectNativeAudioNodeToNativeAudioNode", function () {
      return connectNativeAudioNodeToNativeAudioNode;
    });
    /* harmony import */


    var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/native-audio-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");

    var connectNativeAudioNodeToNativeAudioNode = function connectNativeAudioNodeToNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input) {
      if (Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNodeFaker"])(nativeDestinationAudioNode)) {
        var fakeNativeDestinationAudioNode = nativeDestinationAudioNode.inputs[input];
        nativeSourceAudioNode.connect(fakeNativeDestinationAudioNode, output, 0);
        return [fakeNativeDestinationAudioNode, output, 0];
      }

      nativeSourceAudioNode.connect(nativeDestinationAudioNode, output, input);
      return [nativeDestinationAudioNode, output, input];
    }; //# sourceMappingURL=/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/copy-from-channel.js ***!
    \*******************************************************************************************/

  /*! exports provided: copyFromChannel */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersCopyFromChannelJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "copyFromChannel", function () {
      return copyFromChannel;
    });

    function copyFromChannel(audioBuffer, // @todo There is currently no way to define something like { [ key: number | string ]: Float32Array }
    parent, key, channelNumber, bufferOffset) {
      if (typeof audioBuffer.copyFromChannel === 'function') {
        // The byteLength will be 0 when the ArrayBuffer was transferred.
        if (parent[key].byteLength === 0) {
          parent[key] = new Float32Array(128);
        }

        audioBuffer.copyFromChannel(parent[key], channelNumber, bufferOffset); // Bug #5: Safari does not support copyFromChannel().
      } else {
        var channelData = audioBuffer.getChannelData(channelNumber); // The byteLength will be 0 when the ArrayBuffer was transferred.

        if (parent[key].byteLength === 0) {
          parent[key] = channelData.slice(bufferOffset, bufferOffset + 128);
        } else {
          var slicedInput = new Float32Array(channelData.buffer, bufferOffset * Float32Array.BYTES_PER_ELEMENT, 128);
          parent[key].set(slicedInput);
        }
      }
    } //# sourceMappingURL=/build/es2019/helpers/copy-from-channel.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js":
  /*!*****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/copy-to-channel.js ***!
    \*****************************************************************************************/

  /*! exports provided: copyToChannel */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersCopyToChannelJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "copyToChannel", function () {
      return copyToChannel;
    });

    var copyToChannel = function copyToChannel(audioBuffer, parent, key, channelNumber, bufferOffset) {
      if (typeof audioBuffer.copyToChannel === 'function') {
        // The byteLength will be 0 when the ArrayBuffer was transferred.
        if (parent[key].byteLength !== 0) {
          audioBuffer.copyToChannel(parent[key], channelNumber, bufferOffset);
        } // Bug #5: Safari does not support copyToChannel().

      } else {
        // The byteLength will be 0 when the ArrayBuffer was transferred.
        if (parent[key].byteLength !== 0) {
          audioBuffer.getChannelData(channelNumber).set(parent[key], bufferOffset);
        }
      }
    }; //# sourceMappingURL=/build/es2019/helpers/copy-to-channel.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js ***!
    \****************************************************************************************************************/

  /*! exports provided: createAudioWorkletProcessorPromise */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersCreateAudioWorkletProcessorPromiseJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioWorkletProcessorPromise", function () {
      return createAudioWorkletProcessorPromise;
    });
    /* harmony import */


    var _clone_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./clone-audio-worklet-node-options */
    "./node_modules/standardized-audio-context/build/es2019/helpers/clone-audio-worklet-node-options.js");

    var createAudioWorkletProcessorPromise = /*#__PURE__*/function () {
      var _ref66 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee32(processorConstructor, audioWorkletNodeOptions) {
        var clonedAudioWorkletNodeOptions;
        return regeneratorRuntime.wrap(function _callee32$(_context32) {
          while (1) {
            switch (_context32.prev = _context32.next) {
              case 0:
                _context32.next = 2;
                return Object(_clone_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_0__["cloneAudioWorkletNodeOptions"])(audioWorkletNodeOptions);

              case 2:
                clonedAudioWorkletNodeOptions = _context32.sent;
                return _context32.abrupt("return", new processorConstructor(clonedAudioWorkletNodeOptions));

              case 4:
              case "end":
                return _context32.stop();
            }
          }
        }, _callee32);
      }));

      return function createAudioWorkletProcessorPromise(_x87, _x88) {
        return _ref66.apply(this, arguments);
      };
    }(); //# sourceMappingURL=/build/es2019/helpers/create-audio-worklet-processor-promise.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor.js ***!
    \********************************************************************************************************/

  /*! exports provided: createAudioWorkletProcessor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersCreateAudioWorkletProcessorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioWorkletProcessor", function () {
      return createAudioWorkletProcessor;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _create_audio_worklet_processor_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./create-audio-worklet-processor-promise */
    "./node_modules/standardized-audio-context/build/es2019/helpers/create-audio-worklet-processor-promise.js");

    var createAudioWorkletProcessor = function createAudioWorkletProcessor(nativeContext, nativeAudioWorkletNode, processorConstructor, audioWorkletNodeOptions) {
      var nodeToProcessorMap = _globals__WEBPACK_IMPORTED_MODULE_0__["NODE_TO_PROCESSOR_MAPS"].get(nativeContext);

      if (nodeToProcessorMap === undefined) {
        nodeToProcessorMap = new WeakMap();

        _globals__WEBPACK_IMPORTED_MODULE_0__["NODE_TO_PROCESSOR_MAPS"].set(nativeContext, nodeToProcessorMap);
      }

      var audioWorkletProcessorPromise = Object(_create_audio_worklet_processor_promise__WEBPACK_IMPORTED_MODULE_1__["createAudioWorkletProcessorPromise"])(processorConstructor, audioWorkletNodeOptions);
      nodeToProcessorMap.set(nativeAudioWorkletNode, audioWorkletProcessorPromise);
      return audioWorkletProcessorPromise;
    }; //# sourceMappingURL=/build/es2019/helpers/create-audio-worklet-processor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/create-nested-arrays.js ***!
    \**********************************************************************************************/

  /*! exports provided: createNestedArrays */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersCreateNestedArraysJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createNestedArrays", function () {
      return createNestedArrays;
    });

    var createNestedArrays = function createNestedArrays(x, y) {
      var arrays = [];

      for (var i = 0; i < x; i += 1) {
        var array = [];
        var length = typeof y === 'number' ? y : y[i];

        for (var j = 0; j < length; j += 1) {
          array.push(new Float32Array(128));
        }

        arrays.push(array);
      }

      return arrays;
    }; //# sourceMappingURL=/build/es2019/helpers/create-nested-arrays.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/delete-event-listeners-of-audio-node.js ***!
    \**************************************************************************************************************/

  /*! exports provided: deleteEventListenerOfAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersDeleteEventListenersOfAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "deleteEventListenerOfAudioNode", function () {
      return deleteEventListenerOfAudioNode;
    });
    /* harmony import */


    var _get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./get-event-listeners-of-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");

    var deleteEventListenerOfAudioNode = function deleteEventListenerOfAudioNode(audioNode, eventListener) {
      var eventListeners = Object(_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_0__["getEventListenersOfAudioNode"])(audioNode);

      if (!eventListeners["delete"](eventListener)) {
        throw new Error('Missing the expected event listener.');
      }
    }; //# sourceMappingURL=/build/es2019/helpers/delete-event-listeners-of-audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/detach-array-buffer.js ***!
    \*********************************************************************************************/

  /*! exports provided: detachArrayBuffer */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersDetachArrayBufferJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "detachArrayBuffer", function () {
      return detachArrayBuffer;
    });

    var detachArrayBuffer = function detachArrayBuffer(arrayBuffer) {
      var _MessageChannel2 = new MessageChannel(),
          port1 = _MessageChannel2.port1;

      port1.postMessage(arrayBuffer, [arrayBuffer]);
    }; //# sourceMappingURL=/build/es2019/helpers/detach-array-buffer.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js":
  /*!*****************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js ***!
    \*****************************************************************************************************************************/

  /*! exports provided: disconnectNativeAudioNodeFromNativeAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersDisconnectNativeAudioNodeFromNativeAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "disconnectNativeAudioNodeFromNativeAudioNode", function () {
      return disconnectNativeAudioNodeFromNativeAudioNode;
    });
    /* harmony import */


    var _guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/native-audio-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node-faker.js");

    var disconnectNativeAudioNodeFromNativeAudioNode = function disconnectNativeAudioNodeFromNativeAudioNode(nativeSourceAudioNode, nativeDestinationAudioNode, output, input) {
      if (Object(_guards_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNodeFaker"])(nativeDestinationAudioNode)) {
        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode.inputs[input], output, 0);
      } else {
        nativeSourceAudioNode.disconnect(nativeDestinationAudioNode, output, input);
      }
    }; //# sourceMappingURL=/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js":
  /*!***************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/filter-buffer.js ***!
    \***************************************************************************************/

  /*! exports provided: filterBuffer */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersFilterBufferJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "filterBuffer", function () {
      return filterBuffer;
    }); // This implementation as shamelessly inspired by source code of
    // tslint:disable-next-line:max-line-length
    // {@link https://chromium.googlesource.com/chromium/src.git/+/master/third_party/WebKit/Source/platform/audio/IIRFilter.cpp|Chromium's IIRFilter}.


    var filterBuffer = function filterBuffer(feedback, feedbackLength, feedforward, feedforwardLength, minLength, xBuffer, yBuffer, bufferIndex, bufferLength, input, output) {
      var inputLength = input.length;
      var i = bufferIndex;

      for (var j = 0; j < inputLength; j += 1) {
        var y = feedforward[0] * input[j];

        for (var k = 1; k < minLength; k += 1) {
          var x = i - k & bufferLength - 1; // tslint:disable-line:no-bitwise

          y += feedforward[k] * xBuffer[x];
          y -= feedback[k] * yBuffer[x];
        }

        for (var _k6 = minLength; _k6 < feedforwardLength; _k6 += 1) {
          y += feedforward[_k6] * xBuffer[i - _k6 & bufferLength - 1]; // tslint:disable-line:no-bitwise
        }

        for (var _k7 = minLength; _k7 < feedbackLength; _k7 += 1) {
          y -= feedback[_k7] * yBuffer[i - _k7 & bufferLength - 1]; // tslint:disable-line:no-bitwise
        }

        xBuffer[i] = input[j];
        yBuffer[i] = y;
        i = i + 1 & bufferLength - 1; // tslint:disable-line:no-bitwise

        output[j] = y;
      }

      return i;
    }; //# sourceMappingURL=/build/es2019/helpers/filter-buffer.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js ***!
    \****************************************************************************************************/

  /*! exports provided: getAudioNodeConnections */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersGetAudioNodeConnectionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getAudioNodeConnections", function () {
      return getAudioNodeConnections;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./get-value-for-key */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");

    var getAudioNodeConnections = function getAudioNodeConnections(audioNode) {
      return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["AUDIO_NODE_CONNECTIONS_STORE"], audioNode);
    }; //# sourceMappingURL=/build/es2019/helpers/get-audio-node-connections.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js ***!
    \*****************************************************************************************************/

  /*! exports provided: getAudioParamConnections */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersGetAudioParamConnectionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getAudioParamConnections", function () {
      return getAudioParamConnections;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./get-value-for-key */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");

    var getAudioParamConnections = function getAudioParamConnections(audioParam) {
      return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["AUDIO_PARAM_CONNECTIONS_STORE"], audioParam);
    }; //# sourceMappingURL=/build/es2019/helpers/get-audio-param-connections.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-worklet-processor.js ***!
    \*****************************************************************************************************/

  /*! exports provided: getAudioWorkletProcessor */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersGetAudioWorkletProcessorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getAudioWorkletProcessor", function () {
      return getAudioWorkletProcessor;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./get-native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js");
    /* harmony import */


    var _get_value_for_key__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./get-value-for-key */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");

    var getAudioWorkletProcessor = function getAudioWorkletProcessor(nativeOfflineAudioContext, proxy) {
      var nodeToProcessorMap = Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_2__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["NODE_TO_PROCESSOR_MAPS"], nativeOfflineAudioContext);
      var nativeAudioWorkletNode = Object(_get_native_audio_node__WEBPACK_IMPORTED_MODULE_1__["getNativeAudioNode"])(proxy);
      return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_2__["getValueForKey"])(nodeToProcessorMap, nativeAudioWorkletNode);
    }; //# sourceMappingURL=/build/es2019/helpers/get-audio-worklet-processor.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js ***!
    \***********************************************************************************************************/

  /*! exports provided: getEventListenersOfAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersGetEventListenersOfAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getEventListenersOfAudioNode", function () {
      return getEventListenersOfAudioNode;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./get-value-for-key */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");

    var getEventListenersOfAudioNode = function getEventListenersOfAudioNode(audioNode) {
      return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["EVENT_LISTENERS"], audioNode);
    }; //# sourceMappingURL=/build/es2019/helpers/get-event-listeners-of-audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js ***!
    \***********************************************************************************************/

  /*! exports provided: getNativeAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersGetNativeAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getNativeAudioNode", function () {
      return getNativeAudioNode;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./get-value-for-key */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");

    var getNativeAudioNode = function getNativeAudioNode(audioNode) {
      return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["AUDIO_NODE_STORE"], audioNode);
    }; //# sourceMappingURL=/build/es2019/helpers/get-native-audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js ***!
    \************************************************************************************************/

  /*! exports provided: getNativeAudioParam */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersGetNativeAudioParamJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getNativeAudioParam", function () {
      return getNativeAudioParam;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _get_value_for_key__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./get-value-for-key */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");

    var getNativeAudioParam = function getNativeAudioParam(audioParam) {
      return Object(_get_value_for_key__WEBPACK_IMPORTED_MODULE_1__["getValueForKey"])(_globals__WEBPACK_IMPORTED_MODULE_0__["AUDIO_PARAM_STORE"], audioParam);
    }; //# sourceMappingURL=/build/es2019/helpers/get-native-audio-param.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js ***!
    \*******************************************************************************************/

  /*! exports provided: getValueForKey */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersGetValueForKeyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getValueForKey", function () {
      return getValueForKey;
    });

    var getValueForKey = function getValueForKey(map, key) {
      var value = map.get(key);

      if (value === undefined) {
        throw new Error('A value with the given key could not be found.');
      }

      return value;
    }; //# sourceMappingURL=/build/es2019/helpers/get-value-for-key.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js ***!
    \***********************************************************************************************/

  /*! exports provided: insertElementInSet */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersInsertElementInSetJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "insertElementInSet", function () {
      return insertElementInSet;
    });

    var insertElementInSet = function insertElementInSet(set, element, predicate, ignoreDuplicates) {
      var _iterator15 = _createForOfIteratorHelper(set),
          _step15;

      try {
        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
          var lmnt = _step15.value;

          if (predicate(lmnt)) {
            if (ignoreDuplicates) {
              return false;
            }

            throw Error('The set contains at least one similar element.');
          }
        }
      } catch (err) {
        _iterator15.e(err);
      } finally {
        _iterator15.f();
      }

      set.add(element);
      return true;
    }; //# sourceMappingURL=/build/es2019/helpers/insert-element-in-set.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/intercept-connections.js ***!
    \***********************************************************************************************/

  /*! exports provided: interceptConnections */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersInterceptConnectionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "interceptConnections", function () {
      return interceptConnections;
    });

    var interceptConnections = function interceptConnections(original, interceptor) {
      original.connect = interceptor.connect.bind(interceptor);
      original.disconnect = interceptor.disconnect.bind(interceptor);
      return original;
    }; //# sourceMappingURL=/build/es2019/helpers/intercept-connections.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js ***!
    \**********************************************************************************************/

  /*! exports provided: isActiveAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersIsActiveAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isActiveAudioNode", function () {
      return isActiveAudioNode;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");

    var isActiveAudioNode = function isActiveAudioNode(audioNode) {
      return _globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"].has(audioNode);
    }; //# sourceMappingURL=/build/es2019/helpers/is-active-audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-constructible.js ***!
    \******************************************************************************************/

  /*! exports provided: isConstructible */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersIsConstructibleJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isConstructible", function () {
      return isConstructible;
    });

    var handler = {
      construct: function construct() {
        return handler;
      }
    };

    var isConstructible = function isConstructible(constructible) {
      try {
        var proxy = new Proxy(constructible, handler);
        new proxy(); // tslint:disable-line:no-unused-expression
      } catch (_unused19) {
        return false;
      }

      return true;
    }; //# sourceMappingURL=/build/es2019/helpers/is-constructible.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js":
  /*!*************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js ***!
    \*************************************************************************************/

  /*! exports provided: isDCCurve */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersIsDcCurveJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isDCCurve", function () {
      return isDCCurve;
    });

    var isDCCurve = function isDCCurve(curve) {
      if (curve === null) {
        return false;
      }

      var length = curve.length;

      if (length % 2 !== 0) {
        return curve[Math.floor(length / 2)] !== 0;
      }

      return curve[length / 2 - 1] + curve[length / 2] !== 0;
    }; //# sourceMappingURL=/build/es2019/helpers/is-dc-curve.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-owned-by-context.js ***!
    \*********************************************************************************************/

  /*! exports provided: isOwnedByContext */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersIsOwnedByContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isOwnedByContext", function () {
      return isOwnedByContext;
    });

    var isOwnedByContext = function isOwnedByContext(nativeAudioNode, nativeContext) {
      return nativeAudioNode.context === nativeContext;
    }; //# sourceMappingURL=/build/es2019/helpers/is-owned-by-context.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js ***!
    \********************************************************************************************/

  /*! exports provided: isPartOfACycle */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersIsPartOfACycleJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isPartOfACycle", function () {
      return isPartOfACycle;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");

    var isPartOfACycle = function isPartOfACycle(audioNode) {
      return _globals__WEBPACK_IMPORTED_MODULE_0__["CYCLE_COUNTERS"].has(audioNode);
    }; //# sourceMappingURL=/build/es2019/helpers/is-part-of-a-cycle.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-passive-audio-node.js ***!
    \***********************************************************************************************/

  /*! exports provided: isPassiveAudioNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersIsPassiveAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isPassiveAudioNode", function () {
      return isPassiveAudioNode;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");

    var isPassiveAudioNode = function isPassiveAudioNode(audioNode) {
      return !_globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"].has(audioNode);
    }; //# sourceMappingURL=/build/es2019/helpers/is-passive-audio-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/is-valid-latency-hint.js ***!
    \***********************************************************************************************/

  /*! exports provided: isValidLatencyHint */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersIsValidLatencyHintJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isValidLatencyHint", function () {
      return isValidLatencyHint;
    });

    var isValidLatencyHint = function isValidLatencyHint(latencyHint) {
      return latencyHint === undefined || typeof latencyHint === 'number' || typeof latencyHint === 'string' && (latencyHint === 'balanced' || latencyHint === 'interactive' || latencyHint === 'playback');
    }; //# sourceMappingURL=/build/es2019/helpers/is-valid-latency-hint.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js ***!
    \*********************************************************************************************/

  /*! exports provided: overwriteAccessors */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersOverwriteAccessorsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "overwriteAccessors", function () {
      return overwriteAccessors;
    });

    var overwriteAccessors = function overwriteAccessors(object, property, createGetter, createSetter) {
      var prototype = Object.getPrototypeOf(object);

      while (!prototype.hasOwnProperty(property)) {
        prototype = Object.getPrototypeOf(prototype);
      }

      var _Object$getOwnPropert = Object.getOwnPropertyDescriptor(prototype, property),
          get = _Object$getOwnPropert.get,
          set = _Object$getOwnPropert.set;

      Object.defineProperty(object, property, {
        get: createGetter(get),
        set: createSetter(set)
      });
    }; //# sourceMappingURL=/build/es2019/helpers/overwrite-accessors.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/pick-element-from-set.js ***!
    \***********************************************************************************************/

  /*! exports provided: pickElementFromSet */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersPickElementFromSetJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "pickElementFromSet", function () {
      return pickElementFromSet;
    });

    var pickElementFromSet = function pickElementFromSet(set, predicate) {
      var matchingElements = Array.from(set).filter(predicate);

      if (matchingElements.length > 1) {
        throw Error('More than one element was found.');
      }

      if (matchingElements.length === 0) {
        throw Error('No element was found.');
      }

      var _matchingElements = _slicedToArray2(matchingElements, 1),
          matchingElement = _matchingElements[0];

      set["delete"](matchingElement);
      return matchingElement;
    }; //# sourceMappingURL=/build/es2019/helpers/pick-element-from-set.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-active.js ***!
    \******************************************************************************************************/

  /*! exports provided: setInternalStateToActive */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersSetInternalStateToActiveJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setInternalStateToActive", function () {
      return setInternalStateToActive;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./get-event-listeners-of-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");

    var setInternalStateToActive = function setInternalStateToActive(audioNode) {
      if (_globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"].has(audioNode)) {
        throw new Error('The AudioNode is already stored.');
      }

      _globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"].add(audioNode);

      Object(_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__["getEventListenersOfAudioNode"])(audioNode).forEach(function (eventListener) {
        return eventListener(true);
      });
    }; //# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-active.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js":
  /*!**********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js ***!
    \**********************************************************************************************************************/

  /*! exports provided: setInternalStateToPassiveWhenNecessary */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersSetInternalStateToPassiveWhenNecessaryJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setInternalStateToPassiveWhenNecessary", function () {
      return setInternalStateToPassiveWhenNecessary;
    });
    /* harmony import */


    var _guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/audio-worklet-node */
    "./node_modules/standardized-audio-context/build/es2019/guards/audio-worklet-node.js");
    /* harmony import */


    var _set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./set-internal-state-to-passive */
    "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js"); // Set the internalState of the audioNode to 'passive' if it is not an AudioWorkletNode and if it has no 'active' input connections.


    var setInternalStateToPassiveWhenNecessary = function setInternalStateToPassiveWhenNecessary(audioNode, activeInputs) {
      if (!Object(_guards_audio_worklet_node__WEBPACK_IMPORTED_MODULE_0__["isAudioWorkletNode"])(audioNode) && activeInputs.every(function (connections) {
        return connections.size === 0;
      })) {
        Object(_set_internal_state_to_passive__WEBPACK_IMPORTED_MODULE_1__["setInternalStateToPassive"])(audioNode);
      }
    }; //# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-passive-when-necessary.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/set-internal-state-to-passive.js ***!
    \*******************************************************************************************************/

  /*! exports provided: setInternalStateToPassive */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersSetInternalStateToPassiveJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setInternalStateToPassive", function () {
      return setInternalStateToPassive;
    });
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./get-event-listeners-of-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-event-listeners-of-audio-node.js");

    var setInternalStateToPassive = function setInternalStateToPassive(audioNode) {
      if (!_globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"].has(audioNode)) {
        throw new Error('The AudioNode is not stored.');
      }

      _globals__WEBPACK_IMPORTED_MODULE_0__["ACTIVE_AUDIO_NODE_STORE"]["delete"](audioNode);

      Object(_get_event_listeners_of_audio_node__WEBPACK_IMPORTED_MODULE_1__["getEventListenersOfAudioNode"])(audioNode).forEach(function (eventListener) {
        return eventListener(false);
      });
    }; //# sourceMappingURL=/build/es2019/helpers/set-internal-state-to-passive.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/split-import-statements.js ***!
    \*************************************************************************************************/

  /*! exports provided: splitImportStatements */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersSplitImportStatementsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "splitImportStatements", function () {
      return splitImportStatements;
    });
    /*
     * This massive regex tries to cover all the following cases.
     *
     * import './path';
     * import defaultImport from './path';
     * import { namedImport } from './path';
     * import { namedImport as renamendImport } from './path';
     * import * as namespaceImport from './path';
     * import defaultImport, { namedImport } from './path';
     * import defaultImport, { namedImport as renamendImport } from './path';
     * import defaultImport, * as namespaceImport from './path';
     */


    var IMPORT_STATEMENT_REGEX = /^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/; // tslint:disable-line:max-line-length

    var splitImportStatements = function splitImportStatements(source, url) {
      var importStatements = [];
      var sourceWithoutImportStatements = source.replace(/^[\s]+/, '');
      var result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);

      while (result !== null) {
        var unresolvedUrl = result[1].slice(1, -1);
        var importStatementWithResolvedUrl = result[0].replace(/([\s]+)?;?$/, '').replace(unresolvedUrl, new URL(unresolvedUrl, url).toString());
        importStatements.push(importStatementWithResolvedUrl);
        sourceWithoutImportStatements = sourceWithoutImportStatements.slice(result[0].length).replace(/^[\s]+/, '');
        result = sourceWithoutImportStatements.match(IMPORT_STATEMENT_REGEX);
      }

      return [importStatements.join(';'), sourceWithoutImportStatements];
    }; //# sourceMappingURL=/build/es2019/helpers/split-import-statements.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js":
  /*!**************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js ***!
    \**************************************************************************************************************************************/

  /*! exports provided: testAnalyserNodeGetFloatTimeDomainDataMethodSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersTestAnalyserNodeGetFloatTimeDomainDataMethodSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "testAnalyserNodeGetFloatTimeDomainDataMethodSupport", function () {
      return testAnalyserNodeGetFloatTimeDomainDataMethodSupport;
    });

    var testAnalyserNodeGetFloatTimeDomainDataMethodSupport = function testAnalyserNodeGetFloatTimeDomainDataMethodSupport(nativeAnalyserNode) {
      return typeof nativeAnalyserNode.getFloatTimeDomainData === 'function';
    }; //# sourceMappingURL=/build/es2019/helpers/test-analyser-node-get-float-time-domain-data-method-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js":
  /*!**************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js ***!
    \**************************************************************************************************************************************/

  /*! exports provided: testAudioBufferCopyChannelMethodsOutOfBoundsSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersTestAudioBufferCopyChannelMethodsOutOfBoundsSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "testAudioBufferCopyChannelMethodsOutOfBoundsSupport", function () {
      return testAudioBufferCopyChannelMethodsOutOfBoundsSupport;
    });

    var testAudioBufferCopyChannelMethodsOutOfBoundsSupport = function testAudioBufferCopyChannelMethodsOutOfBoundsSupport(nativeAudioBuffer) {
      try {
        nativeAudioBuffer.copyToChannel(new Float32Array(1), 0, -1);
      } catch (_unused20) {
        return false;
      }

      return true;
    }; //# sourceMappingURL=/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-node-disconnect-method-support.js ***!
    \*******************************************************************************************************************/

  /*! exports provided: testAudioNodeDisconnectMethodSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersTestAudioNodeDisconnectMethodSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "testAudioNodeDisconnectMethodSupport", function () {
      return testAudioNodeDisconnectMethodSupport;
    });

    var testAudioNodeDisconnectMethodSupport = function testAudioNodeDisconnectMethodSupport(nativeAudioContext) {
      return new Promise(function (resolve) {
        var analyzer = nativeAudioContext.createScriptProcessor(256, 1, 1);
        var dummy = nativeAudioContext.createGain(); // Bug #95: Safari does not play one sample buffers.

        var ones = nativeAudioContext.createBuffer(1, 2, 44100);
        var channelData = ones.getChannelData(0);
        channelData[0] = 1;
        channelData[1] = 1;
        var source = nativeAudioContext.createBufferSource();
        source.buffer = ones;
        source.loop = true;
        source.connect(analyzer).connect(nativeAudioContext.destination);
        source.connect(dummy);
        source.disconnect(dummy);

        analyzer.onaudioprocess = function (event) {
          var chnnlDt = event.inputBuffer.getChannelData(0);

          if (Array.prototype.some.call(chnnlDt, function (sample) {
            return sample === 1;
          })) {
            resolve(true);
          } else {
            resolve(false);
          }

          source.stop();
          analyzer.onaudioprocess = null; // tslint:disable-line:deprecation

          source.disconnect(analyzer);
          analyzer.disconnect(nativeAudioContext.destination);
        };

        source.start();
      });
    }; //# sourceMappingURL=/build/es2019/helpers/test-audio-node-disconnect-method-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js":
  /*!************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js ***!
    \************************************************************************************************************************/

  /*! exports provided: testClonabilityOfAudioWorkletNodeOptions */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersTestClonabilityOfAudioWorkletNodeOptionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "testClonabilityOfAudioWorkletNodeOptions", function () {
      return testClonabilityOfAudioWorkletNodeOptions;
    });

    var testClonabilityOfAudioWorkletNodeOptions = function testClonabilityOfAudioWorkletNodeOptions(audioWorkletNodeOptions) {
      var _MessageChannel3 = new MessageChannel(),
          port1 = _MessageChannel3.port1;

      try {
        // This will throw an error if the audioWorkletNodeOptions are not clonable.
        port1.postMessage(audioWorkletNodeOptions);
      } finally {
        port1.close();
      }
    }; //# sourceMappingURL=/build/es2019/helpers/test-clonability-of-audio-worklet-node-options.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js ***!
    \**********************************************************************************************/

  /*! exports provided: testPromiseSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersTestPromiseSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "testPromiseSupport", function () {
      return testPromiseSupport;
    });

    var testPromiseSupport = function testPromiseSupport(nativeContext) {
      // This 12 numbers represent the 48 bytes of an empty WAVE file with a single sample.
      var uint32Array = new Uint32Array([1179011410, 40, 1163280727, 544501094, 16, 131073, 44100, 176400, 1048580, 1635017060, 4, 0]);

      try {
        // Bug #1: Safari requires a successCallback.
        var promise = nativeContext.decodeAudioData(uint32Array.buffer, function () {// Ignore the success callback.
        });

        if (promise === undefined) {
          return false;
        }

        promise["catch"](function () {// Ignore rejected errors.
        });
        return true;
      } catch (_unused21) {// Ignore errors.
      }

      return false;
    }; //# sourceMappingURL=/build/es2019/helpers/test-promise-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js ***!
    \****************************************************************************************************/

  /*! exports provided: testTransferablesSupport */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersTestTransferablesSupportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "testTransferablesSupport", function () {
      return testTransferablesSupport;
    }); // Safari at version 11 did not support transferables.


    var testTransferablesSupport = function testTransferablesSupport() {
      return new Promise(function (resolve) {
        var arrayBuffer = new ArrayBuffer(0);

        var _MessageChannel4 = new MessageChannel(),
            port1 = _MessageChannel4.port1,
            port2 = _MessageChannel4.port2;

        port1.onmessage = function (_ref67) {
          var data = _ref67.data;
          return resolve(data !== null);
        };

        port2.postMessage(arrayBuffer, [arrayBuffer]);
      });
    }; //# sourceMappingURL=/build/es2019/helpers/test-transferables-support.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/visit-each-audio-node-once.js ***!
    \****************************************************************************************************/

  /*! exports provided: visitEachAudioNodeOnce */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersVisitEachAudioNodeOnceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "visitEachAudioNodeOnce", function () {
      return visitEachAudioNodeOnce;
    });

    var visitEachAudioNodeOnce = function visitEachAudioNodeOnce(cycles, visitor) {
      var counts = new Map();

      var _iterator16 = _createForOfIteratorHelper(cycles),
          _step16;

      try {
        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
          var cycle = _step16.value;

          var _iterator17 = _createForOfIteratorHelper(cycle),
              _step17;

          try {
            for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
              var audioNode = _step17.value;
              var count = counts.get(audioNode);
              counts.set(audioNode, count === undefined ? 1 : count + 1);
            }
          } catch (err) {
            _iterator17.e(err);
          } finally {
            _iterator17.f();
          }
        }
      } catch (err) {
        _iterator16.e(err);
      } finally {
        _iterator16.f();
      }

      counts.forEach(function (count, audioNode) {
        return visitor(audioNode, count);
      });
    }; //# sourceMappingURL=/build/es2019/helpers/visit-each-audio-node-once.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js":
  /*!******************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js ***!
    \******************************************************************************************************************************/

  /*! exports provided: wrapAnalyserNodeGetFloatTimeDomainDataMethod */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersWrapAnalyserNodeGetFloatTimeDomainDataMethodJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapAnalyserNodeGetFloatTimeDomainDataMethod", function () {
      return wrapAnalyserNodeGetFloatTimeDomainDataMethod;
    });

    var wrapAnalyserNodeGetFloatTimeDomainDataMethod = function wrapAnalyserNodeGetFloatTimeDomainDataMethod(nativeAnalyserNode) {
      nativeAnalyserNode.getFloatTimeDomainData = function (array) {
        var byteTimeDomainData = new Uint8Array(array.length);
        nativeAnalyserNode.getByteTimeDomainData(byteTimeDomainData);
        var length = Math.max(byteTimeDomainData.length, nativeAnalyserNode.fftSize);

        for (var i = 0; i < length; i += 1) {
          array[i] = (byteTimeDomainData[i] - 128) * 0.0078125;
        }

        return array;
      };
    }; //# sourceMappingURL=/build/es2019/helpers/wrap-analyser-node-get-float-time-domain-data-method.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js ***!
    \*******************************************************************************************************************/

  /*! exports provided: wrapAudioBufferGetChannelDataMethod */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersWrapAudioBufferGetChannelDataMethodJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapAudioBufferGetChannelDataMethod", function () {
      return wrapAudioBufferGetChannelDataMethod;
    });
    /* harmony import */


    var _factories_index_size_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../factories/index-size-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js");

    var wrapAudioBufferGetChannelDataMethod = function wrapAudioBufferGetChannelDataMethod(audioBuffer) {
      audioBuffer.getChannelData = function (getChannelData) {
        return function (channel) {
          try {
            return getChannelData.call(audioBuffer, channel);
          } catch (err) {
            if (err.code === 12) {
              throw Object(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_0__["createIndexSizeError"])();
            }

            throw err;
          }
        };
      }(audioBuffer.getChannelData);
    }; //# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-get-channel-data-method.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js":
  /*!**************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js ***!
    \**************************************************************************************************************************************/

  /*! exports provided: wrapAudioBufferSourceNodeStartMethodConsecutiveCalls */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersWrapAudioBufferSourceNodeStartMethodConsecutiveCallsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapAudioBufferSourceNodeStartMethodConsecutiveCalls", function () {
      return wrapAudioBufferSourceNodeStartMethodConsecutiveCalls;
    });
    /* harmony import */


    var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../factories/invalid-state-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");

    var wrapAudioBufferSourceNodeStartMethodConsecutiveCalls = function wrapAudioBufferSourceNodeStartMethodConsecutiveCalls(nativeAudioBufferSourceNode) {
      nativeAudioBufferSourceNode.start = function (start) {
        var isScheduled = false;
        return function () {
          var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
          var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var duration = arguments.length > 2 ? arguments[2] : undefined;

          if (isScheduled) {
            throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidStateError"])();
          }

          start.call(nativeAudioBufferSourceNode, when, offset, duration);
          isScheduled = true;
        };
      }(nativeAudioBufferSourceNode.start);
    }; //# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-consecutive-calls.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js":
  /*!***************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js ***!
    \***************************************************************************************************************************************/

  /*! exports provided: wrapAudioBufferSourceNodeStartMethodDurationParameter */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersWrapAudioBufferSourceNodeStartMethodDurationParameterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapAudioBufferSourceNodeStartMethodDurationParameter", function () {
      return wrapAudioBufferSourceNodeStartMethodDurationParameter;
    });

    var wrapAudioBufferSourceNodeStartMethodDurationParameter = function wrapAudioBufferSourceNodeStartMethodDurationParameter(nativeAudioScheduledSourceNode, nativeContext) {
      var endTime = Number.POSITIVE_INFINITY;
      var stopTime = Number.POSITIVE_INFINITY;

      nativeAudioScheduledSourceNode.start = function (start, stop) {
        return function () {
          var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
          var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.POSITIVE_INFINITY;
          start.call(nativeAudioScheduledSourceNode, when, offset);

          if (duration >= 0 && duration < Number.POSITIVE_INFINITY) {
            var actualStartTime = Math.max(when, nativeContext.currentTime); // @todo The playbackRate could of course also have been automated and is not always fixed.

            var durationInBufferTime = duration / nativeAudioScheduledSourceNode.playbackRate.value;
            endTime = actualStartTime + durationInBufferTime;
            stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));
          }
        };
      }(nativeAudioScheduledSourceNode.start, nativeAudioScheduledSourceNode.stop);

      nativeAudioScheduledSourceNode.stop = function (stop) {
        return function () {
          var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
          stopTime = Math.max(when, nativeContext.currentTime);
          stop.call(nativeAudioScheduledSourceNode, Math.min(endTime, stopTime));
        };
      }(nativeAudioScheduledSourceNode.stop);
    }; //# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-duration-parameter.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js":
  /*!************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js ***!
    \************************************************************************************************************************************/

  /*! exports provided: wrapAudioBufferSourceNodeStartMethodOffsetClamping */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersWrapAudioBufferSourceNodeStartMethodOffsetClampingJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapAudioBufferSourceNodeStartMethodOffsetClamping", function () {
      return wrapAudioBufferSourceNodeStartMethodOffsetClamping;
    });

    var wrapAudioBufferSourceNodeStartMethodOffsetClamping = function wrapAudioBufferSourceNodeStartMethodOffsetClamping(nativeAudioBufferSourceNode) {
      nativeAudioBufferSourceNode.start = function (start) {
        return function () {
          var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
          var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var duration = arguments.length > 2 ? arguments[2] : undefined;
          var buffer = nativeAudioBufferSourceNode.buffer; // Bug #154: Safari does not clamp the offset if it is equal to or greater than the duration of the buffer.

          var clampedOffset = buffer === null ? offset : Math.min(buffer.duration, offset); // Bug #155: Safari does not handle the offset correctly if it would cause the buffer to be not be played at all.

          if (buffer !== null && clampedOffset > buffer.duration - 0.5 / nativeAudioBufferSourceNode.context.sampleRate) {
            start.call(nativeAudioBufferSourceNode, when, 0, 0);
          } else {
            start.call(nativeAudioBufferSourceNode, when, clampedOffset, duration);
          }
        };
      }(nativeAudioBufferSourceNode.start);
    }; //# sourceMappingURL=/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-node-disconnect-method.js ***!
    \***********************************************************************************************************/

  /*! exports provided: wrapAudioNodeDisconnectMethod */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersWrapAudioNodeDisconnectMethodJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapAudioNodeDisconnectMethod", function () {
      return wrapAudioNodeDisconnectMethod;
    });
    /* harmony import */


    var _guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../guards/native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/guards/native-audio-node.js");

    var wrapAudioNodeDisconnectMethod = function wrapAudioNodeDisconnectMethod(nativeAudioNode) {
      var connections = new Map();

      nativeAudioNode.connect = function (connect) {
        return function (destination) {
          var output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var input = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
          var returnValue = Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNode"])(destination) ? connect(destination, output, input) : connect(destination, output); // Save the new connection only if the calls to connect above didn't throw an error.

          var connectionsToDestination = connections.get(destination);

          if (connectionsToDestination === undefined) {
            connections.set(destination, [{
              input: input,
              output: output
            }]);
          } else {
            if (connectionsToDestination.every(function (connection) {
              return connection.input !== input || connection.output !== output;
            })) {
              connectionsToDestination.push({
                input: input,
                output: output
              });
            }
          }

          return returnValue;
        };
      }(nativeAudioNode.connect.bind(nativeAudioNode));

      nativeAudioNode.disconnect = function (disconnect) {
        return function (destinationOrOutput, output, input) {
          disconnect.apply(nativeAudioNode);

          if (destinationOrOutput === undefined) {
            connections.clear();
          } else if (typeof destinationOrOutput === 'number') {
            var _iterator18 = _createForOfIteratorHelper(connections),
                _step18;

            try {
              for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
                var _step18$value = _slicedToArray2(_step18.value, 2),
                    destination = _step18$value[0],
                    connectionsToDestination = _step18$value[1];

                var filteredConnections = connectionsToDestination.filter(function (connection) {
                  return connection.output !== destinationOrOutput;
                });

                if (filteredConnections.length === 0) {
                  connections["delete"](destination);
                } else {
                  connections.set(destination, filteredConnections);
                }
              }
            } catch (err) {
              _iterator18.e(err);
            } finally {
              _iterator18.f();
            }
          } else if (connections.has(destinationOrOutput)) {
            if (output === undefined) {
              connections["delete"](destinationOrOutput);
            } else {
              var _connectionsToDestination = connections.get(destinationOrOutput);

              if (_connectionsToDestination !== undefined) {
                var _filteredConnections = _connectionsToDestination.filter(function (connection) {
                  return connection.output !== output && (connection.input !== input || input === undefined);
                });

                if (_filteredConnections.length === 0) {
                  connections["delete"](destinationOrOutput);
                } else {
                  connections.set(destinationOrOutput, _filteredConnections);
                }
              }
            }
          }

          var _iterator19 = _createForOfIteratorHelper(connections),
              _step19;

          try {
            var _loop4 = function _loop4() {
              var _step19$value = _slicedToArray2(_step19.value, 2),
                  destination = _step19$value[0],
                  connectionsToDestination = _step19$value[1];

              connectionsToDestination.forEach(function (connection) {
                if (Object(_guards_native_audio_node__WEBPACK_IMPORTED_MODULE_0__["isNativeAudioNode"])(destination)) {
                  nativeAudioNode.connect(destination, connection.output, connection.input);
                } else {
                  nativeAudioNode.connect(destination, connection.output);
                }
              });
            };

            for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
              _loop4();
            }
          } catch (err) {
            _iterator19.e(err);
          } finally {
            _iterator19.f();
          }
        };
      }(nativeAudioNode.disconnect);
    }; //# sourceMappingURL=/build/es2019/helpers/wrap-audio-node-disconnect-method.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js":
  /*!*******************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js ***!
    \*******************************************************************************************************************************************/

  /*! exports provided: wrapAudioScheduledSourceNodeStartMethodNegativeParameters */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersWrapAudioScheduledSourceNodeStartMethodNegativeParametersJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapAudioScheduledSourceNodeStartMethodNegativeParameters", function () {
      return wrapAudioScheduledSourceNodeStartMethodNegativeParameters;
    });

    var wrapAudioScheduledSourceNodeStartMethodNegativeParameters = function wrapAudioScheduledSourceNodeStartMethodNegativeParameters(nativeAudioScheduledSourceNode) {
      nativeAudioScheduledSourceNode.start = function (start) {
        return function () {
          var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
          var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var duration = arguments.length > 2 ? arguments[2] : undefined;

          if (typeof duration === 'number' && duration < 0 || offset < 0 || when < 0) {
            throw new RangeError("The parameters can't be negative.");
          } // @todo TypeScript cannot infer the overloaded signature with 3 arguments yet.


          start.call(nativeAudioScheduledSourceNode, when, offset, duration);
        };
      }(nativeAudioScheduledSourceNode.start);
    }; //# sourceMappingURL=/build/es2019/helpers/wrap-audio-scheduled-source-node-start-method-negative-parameters.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js":
  /*!******************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js ***!
    \******************************************************************************************************************************************/

  /*! exports provided: wrapAudioScheduledSourceNodeStopMethodNegativeParameters */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersWrapAudioScheduledSourceNodeStopMethodNegativeParametersJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapAudioScheduledSourceNodeStopMethodNegativeParameters", function () {
      return wrapAudioScheduledSourceNodeStopMethodNegativeParameters;
    });

    var wrapAudioScheduledSourceNodeStopMethodNegativeParameters = function wrapAudioScheduledSourceNodeStopMethodNegativeParameters(nativeAudioScheduledSourceNode) {
      nativeAudioScheduledSourceNode.stop = function (stop) {
        return function () {
          var when = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

          if (when < 0) {
            throw new RangeError("The parameter can't be negative.");
          }

          stop.call(nativeAudioScheduledSourceNode, when);
        };
      }(nativeAudioScheduledSourceNode.stop);
    }; //# sourceMappingURL=/build/es2019/helpers/wrap-audio-scheduled-source-node-stop-method-negative-parameters.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-channel-splitter-node.js ***!
    \****************************************************************************************************/

  /*! exports provided: wrapChannelSplitterNode */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersWrapChannelSplitterNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapChannelSplitterNode", function () {
      return wrapChannelSplitterNode;
    });
    /* harmony import */


    var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../factories/invalid-state-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");

    var wrapChannelSplitterNode = function wrapChannelSplitterNode(channelSplitterNode) {
      var channelCount = channelSplitterNode.numberOfOutputs; // Bug #97: Safari does not throw an error when attempting to change the channelCount to something other than its initial value.

      Object.defineProperty(channelSplitterNode, 'channelCount', {
        get: function get() {
          return channelCount;
        },
        set: function set(value) {
          if (value !== channelCount) {
            throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidStateError"])();
          }
        }
      });
      /*
       * Bug #30: Only Chrome, Firefox & Opera throw an error when attempting to change the channelCountMode to something other than
       * explicit.
       */

      Object.defineProperty(channelSplitterNode, 'channelCountMode', {
        get: function get() {
          return 'explicit';
        },
        set: function set(value) {
          if (value !== 'explicit') {
            throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidStateError"])();
          }
        }
      });
      /*
       * Bug #32: Only Chrome, Firefox & Opera throws an error when attempting to change the channelInterpretation to something other than
       * discrete.
       */

      Object.defineProperty(channelSplitterNode, 'channelInterpretation', {
        get: function get() {
          return 'discrete';
        },
        set: function set(value) {
          if (value !== 'discrete') {
            throw Object(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidStateError"])();
          }
        }
      });
    }; //# sourceMappingURL=/build/es2019/helpers/wrap-channel-splitter-node.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js ***!
    \*********************************************************************************************/

  /*! exports provided: wrapEventListener */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersWrapEventListenerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapEventListener", function () {
      return wrapEventListener;
    });

    var wrapEventListener = function wrapEventListener(target, eventListener) {
      return function (event) {
        var descriptor = {
          value: target
        };
        Object.defineProperties(event, {
          currentTarget: descriptor,
          target: descriptor
        });

        if (typeof eventListener === 'function') {
          return eventListener.call(target, event);
        }

        return eventListener.handleEvent.call(target, event);
      };
    }; //# sourceMappingURL=/build/es2019/helpers/wrap-event-listener.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js":
  /*!****************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js ***!
    \****************************************************************************************************************************/

  /*! exports provided: wrapIIRFilterNodeGetFrequencyResponseMethod */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019HelpersWrapIirFilterNodeGetFrequencyResponseMethodJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "wrapIIRFilterNodeGetFrequencyResponseMethod", function () {
      return wrapIIRFilterNodeGetFrequencyResponseMethod;
    });
    /* harmony import */


    var _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../factories/invalid-access-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js");

    var wrapIIRFilterNodeGetFrequencyResponseMethod = function wrapIIRFilterNodeGetFrequencyResponseMethod(nativeIIRFilterNode) {
      nativeIIRFilterNode.getFrequencyResponse = function (getFrequencyResponse) {
        return function (frequencyHz, magResponse, phaseResponse) {
          if (frequencyHz.length !== magResponse.length || magResponse.length !== phaseResponse.length) {
            throw Object(_factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_0__["createInvalidAccessError"])();
          }

          return getFrequencyResponse.call(nativeIIRFilterNode, frequencyHz, magResponse, phaseResponse);
        };
      }(nativeIIRFilterNode.getFrequencyResponse);
    }; //# sourceMappingURL=/build/es2019/helpers/wrap-iir-filter-node-get-frequency-response-method.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-node.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-node.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAnalyserNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/analyser-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-options.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-options.js ***!
    \*********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAnalyserOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/analyser-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-options.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-options.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioBufferOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-buffer-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node-renderer.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node-renderer.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioBufferSourceNodeRendererJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-buffer-source-node-renderer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioBufferSourceNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-buffer-source-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-options.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-options.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioBufferSourceOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-buffer-source-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js":
  /*!*****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js ***!
    \*****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioBufferJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-buffer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context-options.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context-options.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioContextOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-context-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioContextJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-destination-node.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-destination-node.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioDestinationNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-destination-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-listener.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-listener.js ***!
    \*******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioListenerJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-listener.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-options.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-options.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioNodeOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-node-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-renderer.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-renderer.js ***!
    \************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioNodeRendererJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-node-renderer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node.js":
  /*!***************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node.js ***!
    \***************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-descriptor.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-descriptor.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioParamDescriptorJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-param-descriptor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-renderer.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-renderer.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioParamRendererJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-param-renderer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js":
  /*!****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js ***!
    \****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioParamJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-param.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node-event-map.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node-event-map.js ***!
    \******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioScheduledSourceNodeEventMapJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-scheduled-source-node-event-map.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioScheduledSourceNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-scheduled-source-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-event-map.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-event-map.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioWorkletNodeEventMapJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-worklet-node-event-map.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-options.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-options.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioWorkletNodeOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-worklet-node-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioWorkletNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-worklet-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor-constructor.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor-constructor.js ***!
    \****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioWorkletProcessorConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-worklet-processor-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioWorkletProcessorJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-worklet-processor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAudioWorkletJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/audio-worklet.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/automation.js":
  /*!***************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/automation.js ***!
    \***************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesAutomationJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/automation.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/base-audio-context.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/base-audio-context.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesBaseAudioContextJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/base-audio-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesBiquadFilterNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/biquad-filter-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesBiquadFilterOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/biquad-filter-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-merger-options.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/channel-merger-options.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesChannelMergerOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/channel-merger-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-splitter-options.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/channel-splitter-options.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesChannelSplitterOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/channel-splitter-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/common-audio-context.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/common-audio-context.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesCommonAudioContextJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/common-audio-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/common-offline-audio-context.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/common-offline-audio-context.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesCommonOfflineAudioContextJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/common-offline-audio-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node-renderer.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node-renderer.js ***!
    \**********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesConstantSourceNodeRendererJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/constant-source-node-renderer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesConstantSourceNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/constant-source-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-options.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-options.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesConstantSourceOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/constant-source-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-node.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-node.js ***!
    \*******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesConvolverNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/convolver-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-options.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-options.js ***!
    \**********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesConvolverOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/convolver-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-node.js":
  /*!***************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/delay-node.js ***!
    \***************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesDelayNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/delay-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-options.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/delay-options.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesDelayOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/delay-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-node.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-node.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesDynamicsCompressorNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/dynamics-compressor-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-options.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-options.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesDynamicsCompressorOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/dynamics-compressor-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-node.js":
  /*!**************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/gain-node.js ***!
    \**************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesGainNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/gain-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-options.js":
  /*!*****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/gain-options.js ***!
    \*****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesGainOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/gain-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-node.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-node.js ***!
    \********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesIirFilterNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/iir-filter-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-options.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-options.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesIirFilterOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/iir-filter-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/index.js":
  /*!**********************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/index.js ***!
    \**********************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _analyser_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./analyser-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-node.js");
    /* harmony import */


    var _analyser_node__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_analyser_node__WEBPACK_IMPORTED_MODULE_0__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _analyser_node__WEBPACK_IMPORTED_MODULE_0__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _analyser_node__WEBPACK_IMPORTED_MODULE_0__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _analyser_options__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./analyser-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/analyser-options.js");
    /* harmony import */


    var _analyser_options__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_analyser_options__WEBPACK_IMPORTED_MODULE_1__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _analyser_options__WEBPACK_IMPORTED_MODULE_1__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _analyser_options__WEBPACK_IMPORTED_MODULE_1__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./audio-buffer */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer.js");
    /* harmony import */


    var _audio_buffer__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer__WEBPACK_IMPORTED_MODULE_2__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer__WEBPACK_IMPORTED_MODULE_2__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer__WEBPACK_IMPORTED_MODULE_2__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_options__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./audio-buffer-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-options.js");
    /* harmony import */


    var _audio_buffer_options__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_options__WEBPACK_IMPORTED_MODULE_3__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_options__WEBPACK_IMPORTED_MODULE_3__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_options__WEBPACK_IMPORTED_MODULE_3__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./audio-buffer-source-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node.js");
    /* harmony import */


    var _audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_4__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_4__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_4__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./audio-buffer-source-node-renderer */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-node-renderer.js");
    /* harmony import */


    var _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_5__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_5__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_5__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_source_options__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./audio-buffer-source-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-buffer-source-options.js");
    /* harmony import */


    var _audio_buffer_source_options__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_source_options__WEBPACK_IMPORTED_MODULE_6__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_source_options__WEBPACK_IMPORTED_MODULE_6__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_source_options__WEBPACK_IMPORTED_MODULE_6__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_context__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./audio-context */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context.js");
    /* harmony import */


    var _audio_context__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_audio_context__WEBPACK_IMPORTED_MODULE_7__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_context__WEBPACK_IMPORTED_MODULE_7__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_context__WEBPACK_IMPORTED_MODULE_7__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_context_options__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./audio-context-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-context-options.js");
    /* harmony import */


    var _audio_context_options__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_audio_context_options__WEBPACK_IMPORTED_MODULE_8__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_context_options__WEBPACK_IMPORTED_MODULE_8__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_context_options__WEBPACK_IMPORTED_MODULE_8__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_destination_node__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./audio-destination-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-destination-node.js");
    /* harmony import */


    var _audio_destination_node__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_audio_destination_node__WEBPACK_IMPORTED_MODULE_9__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_destination_node__WEBPACK_IMPORTED_MODULE_9__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_destination_node__WEBPACK_IMPORTED_MODULE_9__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_listener__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./audio-listener */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-listener.js");
    /* harmony import */


    var _audio_listener__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_audio_listener__WEBPACK_IMPORTED_MODULE_10__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_listener__WEBPACK_IMPORTED_MODULE_10__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_listener__WEBPACK_IMPORTED_MODULE_10__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_node__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./audio-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node.js");
    /* harmony import */


    var _audio_node__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_audio_node__WEBPACK_IMPORTED_MODULE_11__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_node__WEBPACK_IMPORTED_MODULE_11__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_node__WEBPACK_IMPORTED_MODULE_11__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_node_options__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./audio-node-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-options.js");
    /* harmony import */


    var _audio_node_options__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_audio_node_options__WEBPACK_IMPORTED_MODULE_12__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_node_options__WEBPACK_IMPORTED_MODULE_12__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_node_options__WEBPACK_IMPORTED_MODULE_12__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_node_renderer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./audio-node-renderer */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-node-renderer.js");
    /* harmony import */


    var _audio_node_renderer__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_audio_node_renderer__WEBPACK_IMPORTED_MODULE_13__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_node_renderer__WEBPACK_IMPORTED_MODULE_13__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_node_renderer__WEBPACK_IMPORTED_MODULE_13__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./audio-param */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param.js");
    /* harmony import */


    var _audio_param__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_audio_param__WEBPACK_IMPORTED_MODULE_14__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param__WEBPACK_IMPORTED_MODULE_14__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param__WEBPACK_IMPORTED_MODULE_14__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param_descriptor__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./audio-param-descriptor */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-descriptor.js");
    /* harmony import */


    var _audio_param_descriptor__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_audio_param_descriptor__WEBPACK_IMPORTED_MODULE_15__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param_descriptor__WEBPACK_IMPORTED_MODULE_15__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param_descriptor__WEBPACK_IMPORTED_MODULE_15__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param_renderer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./audio-param-renderer */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-param-renderer.js");
    /* harmony import */


    var _audio_param_renderer__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_audio_param_renderer__WEBPACK_IMPORTED_MODULE_16__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param_renderer__WEBPACK_IMPORTED_MODULE_16__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param_renderer__WEBPACK_IMPORTED_MODULE_16__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_scheduled_source_node__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./audio-scheduled-source-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node.js");
    /* harmony import */


    var _audio_scheduled_source_node__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_audio_scheduled_source_node__WEBPACK_IMPORTED_MODULE_17__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_scheduled_source_node__WEBPACK_IMPORTED_MODULE_17__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_scheduled_source_node__WEBPACK_IMPORTED_MODULE_17__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_scheduled_source_node_event_map__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./audio-scheduled-source-node-event-map */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-scheduled-source-node-event-map.js");
    /* harmony import */


    var _audio_scheduled_source_node_event_map__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_audio_scheduled_source_node_event_map__WEBPACK_IMPORTED_MODULE_18__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_scheduled_source_node_event_map__WEBPACK_IMPORTED_MODULE_18__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_scheduled_source_node_event_map__WEBPACK_IMPORTED_MODULE_18__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_worklet__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./audio-worklet */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet.js");
    /* harmony import */


    var _audio_worklet__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_audio_worklet__WEBPACK_IMPORTED_MODULE_19__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_worklet__WEBPACK_IMPORTED_MODULE_19__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_worklet__WEBPACK_IMPORTED_MODULE_19__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_worklet_node__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ./audio-worklet-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node.js");
    /* harmony import */


    var _audio_worklet_node__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_audio_worklet_node__WEBPACK_IMPORTED_MODULE_20__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_worklet_node__WEBPACK_IMPORTED_MODULE_20__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_worklet_node__WEBPACK_IMPORTED_MODULE_20__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_worklet_node_event_map__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./audio-worklet-node-event-map */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-event-map.js");
    /* harmony import */


    var _audio_worklet_node_event_map__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_audio_worklet_node_event_map__WEBPACK_IMPORTED_MODULE_21__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_worklet_node_event_map__WEBPACK_IMPORTED_MODULE_21__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_worklet_node_event_map__WEBPACK_IMPORTED_MODULE_21__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./audio-worklet-node-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-node-options.js");
    /* harmony import */


    var _audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_22__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_22__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_22__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_worklet_processor__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ./audio-worklet-processor */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor.js");
    /* harmony import */


    var _audio_worklet_processor__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_audio_worklet_processor__WEBPACK_IMPORTED_MODULE_23__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_worklet_processor__WEBPACK_IMPORTED_MODULE_23__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_worklet_processor__WEBPACK_IMPORTED_MODULE_23__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_worklet_processor_constructor__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ./audio-worklet-processor-constructor */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/audio-worklet-processor-constructor.js");
    /* harmony import */


    var _audio_worklet_processor_constructor__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_audio_worklet_processor_constructor__WEBPACK_IMPORTED_MODULE_24__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_worklet_processor_constructor__WEBPACK_IMPORTED_MODULE_24__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_worklet_processor_constructor__WEBPACK_IMPORTED_MODULE_24__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _automation__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./automation */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/automation.js");
    /* harmony import */


    var _automation__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_automation__WEBPACK_IMPORTED_MODULE_25__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _automation__WEBPACK_IMPORTED_MODULE_25__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _automation__WEBPACK_IMPORTED_MODULE_25__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _base_audio_context__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ./base-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/base-audio-context.js");
    /* harmony import */


    var _base_audio_context__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_base_audio_context__WEBPACK_IMPORTED_MODULE_26__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _base_audio_context__WEBPACK_IMPORTED_MODULE_26__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _base_audio_context__WEBPACK_IMPORTED_MODULE_26__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _biquad_filter_node__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ./biquad-filter-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-node.js");
    /* harmony import */


    var _biquad_filter_node__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_biquad_filter_node__WEBPACK_IMPORTED_MODULE_27__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _biquad_filter_node__WEBPACK_IMPORTED_MODULE_27__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _biquad_filter_node__WEBPACK_IMPORTED_MODULE_27__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _biquad_filter_options__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! ./biquad-filter-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/biquad-filter-options.js");
    /* harmony import */


    var _biquad_filter_options__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(_biquad_filter_options__WEBPACK_IMPORTED_MODULE_28__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _biquad_filter_options__WEBPACK_IMPORTED_MODULE_28__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _biquad_filter_options__WEBPACK_IMPORTED_MODULE_28__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_merger_options__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! ./channel-merger-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-merger-options.js");
    /* harmony import */


    var _channel_merger_options__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(_channel_merger_options__WEBPACK_IMPORTED_MODULE_29__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_merger_options__WEBPACK_IMPORTED_MODULE_29__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_merger_options__WEBPACK_IMPORTED_MODULE_29__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_splitter_options__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
    /*! ./channel-splitter-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/channel-splitter-options.js");
    /* harmony import */


    var _channel_splitter_options__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(_channel_splitter_options__WEBPACK_IMPORTED_MODULE_30__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_splitter_options__WEBPACK_IMPORTED_MODULE_30__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_splitter_options__WEBPACK_IMPORTED_MODULE_30__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _common_audio_context__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
    /*! ./common-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/common-audio-context.js");
    /* harmony import */


    var _common_audio_context__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(_common_audio_context__WEBPACK_IMPORTED_MODULE_31__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _common_audio_context__WEBPACK_IMPORTED_MODULE_31__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _common_audio_context__WEBPACK_IMPORTED_MODULE_31__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _common_offline_audio_context__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
    /*! ./common-offline-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/common-offline-audio-context.js");
    /* harmony import */


    var _common_offline_audio_context__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(_common_offline_audio_context__WEBPACK_IMPORTED_MODULE_32__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _common_offline_audio_context__WEBPACK_IMPORTED_MODULE_32__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _common_offline_audio_context__WEBPACK_IMPORTED_MODULE_32__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _constant_source_node__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
    /*! ./constant-source-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node.js");
    /* harmony import */


    var _constant_source_node__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(_constant_source_node__WEBPACK_IMPORTED_MODULE_33__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _constant_source_node__WEBPACK_IMPORTED_MODULE_33__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _constant_source_node__WEBPACK_IMPORTED_MODULE_33__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
    /*! ./constant-source-node-renderer */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-node-renderer.js");
    /* harmony import */


    var _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__webpack_require__.n(_constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_34__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_34__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_34__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _constant_source_options__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
    /*! ./constant-source-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/constant-source-options.js");
    /* harmony import */


    var _constant_source_options__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(_constant_source_options__WEBPACK_IMPORTED_MODULE_35__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _constant_source_options__WEBPACK_IMPORTED_MODULE_35__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _constant_source_options__WEBPACK_IMPORTED_MODULE_35__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _convolver_node__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
    /*! ./convolver-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-node.js");
    /* harmony import */


    var _convolver_node__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(_convolver_node__WEBPACK_IMPORTED_MODULE_36__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _convolver_node__WEBPACK_IMPORTED_MODULE_36__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _convolver_node__WEBPACK_IMPORTED_MODULE_36__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _convolver_options__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
    /*! ./convolver-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/convolver-options.js");
    /* harmony import */


    var _convolver_options__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(_convolver_options__WEBPACK_IMPORTED_MODULE_37__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _convolver_options__WEBPACK_IMPORTED_MODULE_37__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _convolver_options__WEBPACK_IMPORTED_MODULE_37__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _delay_node__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
    /*! ./delay-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-node.js");
    /* harmony import */


    var _delay_node__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(_delay_node__WEBPACK_IMPORTED_MODULE_38__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _delay_node__WEBPACK_IMPORTED_MODULE_38__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _delay_node__WEBPACK_IMPORTED_MODULE_38__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _delay_options__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
    /*! ./delay-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/delay-options.js");
    /* harmony import */


    var _delay_options__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(_delay_options__WEBPACK_IMPORTED_MODULE_39__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _delay_options__WEBPACK_IMPORTED_MODULE_39__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _delay_options__WEBPACK_IMPORTED_MODULE_39__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
    /*! ./dynamics-compressor-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-node.js");
    /* harmony import */


    var _dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(_dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_40__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_40__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_40__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _dynamics_compressor_options__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
    /*! ./dynamics-compressor-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/dynamics-compressor-options.js");
    /* harmony import */


    var _dynamics_compressor_options__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(_dynamics_compressor_options__WEBPACK_IMPORTED_MODULE_41__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _dynamics_compressor_options__WEBPACK_IMPORTED_MODULE_41__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _dynamics_compressor_options__WEBPACK_IMPORTED_MODULE_41__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _gain_node__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
    /*! ./gain-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-node.js");
    /* harmony import */


    var _gain_node__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(_gain_node__WEBPACK_IMPORTED_MODULE_42__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _gain_node__WEBPACK_IMPORTED_MODULE_42__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _gain_node__WEBPACK_IMPORTED_MODULE_42__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _gain_options__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
    /*! ./gain-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/gain-options.js");
    /* harmony import */


    var _gain_options__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(_gain_options__WEBPACK_IMPORTED_MODULE_43__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _gain_options__WEBPACK_IMPORTED_MODULE_43__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _gain_options__WEBPACK_IMPORTED_MODULE_43__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _iir_filter_node__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
    /*! ./iir-filter-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-node.js");
    /* harmony import */


    var _iir_filter_node__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(_iir_filter_node__WEBPACK_IMPORTED_MODULE_44__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _iir_filter_node__WEBPACK_IMPORTED_MODULE_44__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _iir_filter_node__WEBPACK_IMPORTED_MODULE_44__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _iir_filter_options__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
    /*! ./iir-filter-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/iir-filter-options.js");
    /* harmony import */


    var _iir_filter_options__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(_iir_filter_options__WEBPACK_IMPORTED_MODULE_45__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _iir_filter_options__WEBPACK_IMPORTED_MODULE_45__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _iir_filter_options__WEBPACK_IMPORTED_MODULE_45__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
    /*! ./media-element-audio-source-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-node.js");
    /* harmony import */


    var _media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_46__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_46__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_46__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_element_audio_source_options__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
    /*! ./media-element-audio-source-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-options.js");
    /* harmony import */


    var _media_element_audio_source_options__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(_media_element_audio_source_options__WEBPACK_IMPORTED_MODULE_47__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_element_audio_source_options__WEBPACK_IMPORTED_MODULE_47__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_element_audio_source_options__WEBPACK_IMPORTED_MODULE_47__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(
    /*! ./media-stream-audio-destination-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-destination-node.js");
    /* harmony import */


    var _media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__webpack_require__.n(_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_48__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_48__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_48__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(
    /*! ./media-stream-audio-source-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-node.js");
    /* harmony import */


    var _media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_49___default = /*#__PURE__*/__webpack_require__.n(_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_49__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_49__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_49__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_stream_audio_source_options__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(
    /*! ./media-stream-audio-source-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-options.js");
    /* harmony import */


    var _media_stream_audio_source_options__WEBPACK_IMPORTED_MODULE_50___default = /*#__PURE__*/__webpack_require__.n(_media_stream_audio_source_options__WEBPACK_IMPORTED_MODULE_50__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_stream_audio_source_options__WEBPACK_IMPORTED_MODULE_50__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_stream_audio_source_options__WEBPACK_IMPORTED_MODULE_50__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(
    /*! ./media-stream-track-audio-source-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-node.js");
    /* harmony import */


    var _media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_51___default = /*#__PURE__*/__webpack_require__.n(_media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_51__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_51__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_51__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_stream_track_audio_source_options__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(
    /*! ./media-stream-track-audio-source-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-options.js");
    /* harmony import */


    var _media_stream_track_audio_source_options__WEBPACK_IMPORTED_MODULE_52___default = /*#__PURE__*/__webpack_require__.n(_media_stream_track_audio_source_options__WEBPACK_IMPORTED_MODULE_52__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_stream_track_audio_source_options__WEBPACK_IMPORTED_MODULE_52__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_stream_track_audio_source_options__WEBPACK_IMPORTED_MODULE_52__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _minimal_audio_context__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(
    /*! ./minimal-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-audio-context.js");
    /* harmony import */


    var _minimal_audio_context__WEBPACK_IMPORTED_MODULE_53___default = /*#__PURE__*/__webpack_require__.n(_minimal_audio_context__WEBPACK_IMPORTED_MODULE_53__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _minimal_audio_context__WEBPACK_IMPORTED_MODULE_53__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _minimal_audio_context__WEBPACK_IMPORTED_MODULE_53__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _minimal_base_audio_context__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(
    /*! ./minimal-base-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context.js");
    /* harmony import */


    var _minimal_base_audio_context__WEBPACK_IMPORTED_MODULE_54___default = /*#__PURE__*/__webpack_require__.n(_minimal_base_audio_context__WEBPACK_IMPORTED_MODULE_54__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _minimal_base_audio_context__WEBPACK_IMPORTED_MODULE_54__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _minimal_base_audio_context__WEBPACK_IMPORTED_MODULE_54__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _minimal_base_audio_context_event_map__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(
    /*! ./minimal-base-audio-context-event-map */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context-event-map.js");
    /* harmony import */


    var _minimal_base_audio_context_event_map__WEBPACK_IMPORTED_MODULE_55___default = /*#__PURE__*/__webpack_require__.n(_minimal_base_audio_context_event_map__WEBPACK_IMPORTED_MODULE_55__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _minimal_base_audio_context_event_map__WEBPACK_IMPORTED_MODULE_55__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _minimal_base_audio_context_event_map__WEBPACK_IMPORTED_MODULE_55__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _minimal_offline_audio_context__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(
    /*! ./minimal-offline-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context.js");
    /* harmony import */


    var _minimal_offline_audio_context__WEBPACK_IMPORTED_MODULE_56___default = /*#__PURE__*/__webpack_require__.n(_minimal_offline_audio_context__WEBPACK_IMPORTED_MODULE_56__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _minimal_offline_audio_context__WEBPACK_IMPORTED_MODULE_56__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _minimal_offline_audio_context__WEBPACK_IMPORTED_MODULE_56__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_node_faker__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(
    /*! ./native-audio-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-node-faker.js");
    /* harmony import */


    var _native_audio_node_faker__WEBPACK_IMPORTED_MODULE_57___default = /*#__PURE__*/__webpack_require__.n(_native_audio_node_faker__WEBPACK_IMPORTED_MODULE_57__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_node_faker__WEBPACK_IMPORTED_MODULE_57__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_node_faker__WEBPACK_IMPORTED_MODULE_57__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_worklet_node_faker__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(
    /*! ./native-audio-worklet-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-worklet-node-faker.js");
    /* harmony import */


    var _native_audio_worklet_node_faker__WEBPACK_IMPORTED_MODULE_58___default = /*#__PURE__*/__webpack_require__.n(_native_audio_worklet_node_faker__WEBPACK_IMPORTED_MODULE_58__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_worklet_node_faker__WEBPACK_IMPORTED_MODULE_58__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_worklet_node_faker__WEBPACK_IMPORTED_MODULE_58__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_constant_source_node_faker__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(
    /*! ./native-constant-source-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/native-constant-source-node-faker.js");
    /* harmony import */


    var _native_constant_source_node_faker__WEBPACK_IMPORTED_MODULE_59___default = /*#__PURE__*/__webpack_require__.n(_native_constant_source_node_faker__WEBPACK_IMPORTED_MODULE_59__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_constant_source_node_faker__WEBPACK_IMPORTED_MODULE_59__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_constant_source_node_faker__WEBPACK_IMPORTED_MODULE_59__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_convolver_node_faker__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(
    /*! ./native-convolver-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/native-convolver-node-faker.js");
    /* harmony import */


    var _native_convolver_node_faker__WEBPACK_IMPORTED_MODULE_60___default = /*#__PURE__*/__webpack_require__.n(_native_convolver_node_faker__WEBPACK_IMPORTED_MODULE_60__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_convolver_node_faker__WEBPACK_IMPORTED_MODULE_60__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_convolver_node_faker__WEBPACK_IMPORTED_MODULE_60__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_iir_filter_node_faker__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(
    /*! ./native-iir-filter-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/native-iir-filter-node-faker.js");
    /* harmony import */


    var _native_iir_filter_node_faker__WEBPACK_IMPORTED_MODULE_61___default = /*#__PURE__*/__webpack_require__.n(_native_iir_filter_node_faker__WEBPACK_IMPORTED_MODULE_61__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_iir_filter_node_faker__WEBPACK_IMPORTED_MODULE_61__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_iir_filter_node_faker__WEBPACK_IMPORTED_MODULE_61__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_panner_node_faker__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(
    /*! ./native-panner-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/native-panner-node-faker.js");
    /* harmony import */


    var _native_panner_node_faker__WEBPACK_IMPORTED_MODULE_62___default = /*#__PURE__*/__webpack_require__.n(_native_panner_node_faker__WEBPACK_IMPORTED_MODULE_62__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_panner_node_faker__WEBPACK_IMPORTED_MODULE_62__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_panner_node_faker__WEBPACK_IMPORTED_MODULE_62__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_stereo_panner_node_faker__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(
    /*! ./native-stereo-panner-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/native-stereo-panner-node-faker.js");
    /* harmony import */


    var _native_stereo_panner_node_faker__WEBPACK_IMPORTED_MODULE_63___default = /*#__PURE__*/__webpack_require__.n(_native_stereo_panner_node_faker__WEBPACK_IMPORTED_MODULE_63__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_stereo_panner_node_faker__WEBPACK_IMPORTED_MODULE_63__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_stereo_panner_node_faker__WEBPACK_IMPORTED_MODULE_63__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_wave_shaper_node_faker__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(
    /*! ./native-wave-shaper-node-faker */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/native-wave-shaper-node-faker.js");
    /* harmony import */


    var _native_wave_shaper_node_faker__WEBPACK_IMPORTED_MODULE_64___default = /*#__PURE__*/__webpack_require__.n(_native_wave_shaper_node_faker__WEBPACK_IMPORTED_MODULE_64__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_wave_shaper_node_faker__WEBPACK_IMPORTED_MODULE_64__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_wave_shaper_node_faker__WEBPACK_IMPORTED_MODULE_64__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _offline_audio_completion_event__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(
    /*! ./offline-audio-completion-event */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-completion-event.js");
    /* harmony import */


    var _offline_audio_completion_event__WEBPACK_IMPORTED_MODULE_65___default = /*#__PURE__*/__webpack_require__.n(_offline_audio_completion_event__WEBPACK_IMPORTED_MODULE_65__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _offline_audio_completion_event__WEBPACK_IMPORTED_MODULE_65__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _offline_audio_completion_event__WEBPACK_IMPORTED_MODULE_65__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _offline_audio_context__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(
    /*! ./offline-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context.js");
    /* harmony import */


    var _offline_audio_context__WEBPACK_IMPORTED_MODULE_66___default = /*#__PURE__*/__webpack_require__.n(_offline_audio_context__WEBPACK_IMPORTED_MODULE_66__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _offline_audio_context__WEBPACK_IMPORTED_MODULE_66__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _offline_audio_context__WEBPACK_IMPORTED_MODULE_66__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(
    /*! ./offline-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-constructor.js");
    /* harmony import */


    var _offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_67___default = /*#__PURE__*/__webpack_require__.n(_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_67__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_67__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_67__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _offline_audio_context_options__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(
    /*! ./offline-audio-context-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-options.js");
    /* harmony import */


    var _offline_audio_context_options__WEBPACK_IMPORTED_MODULE_68___default = /*#__PURE__*/__webpack_require__.n(_offline_audio_context_options__WEBPACK_IMPORTED_MODULE_68__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _offline_audio_context_options__WEBPACK_IMPORTED_MODULE_68__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _offline_audio_context_options__WEBPACK_IMPORTED_MODULE_68__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _oscillator_node__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(
    /*! ./oscillator-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node.js");
    /* harmony import */


    var _oscillator_node__WEBPACK_IMPORTED_MODULE_69___default = /*#__PURE__*/__webpack_require__.n(_oscillator_node__WEBPACK_IMPORTED_MODULE_69__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _oscillator_node__WEBPACK_IMPORTED_MODULE_69__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _oscillator_node__WEBPACK_IMPORTED_MODULE_69__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(
    /*! ./oscillator-node-renderer */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node-renderer.js");
    /* harmony import */


    var _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_70___default = /*#__PURE__*/__webpack_require__.n(_oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_70__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_70__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_70__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _oscillator_options__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(
    /*! ./oscillator-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-options.js");
    /* harmony import */


    var _oscillator_options__WEBPACK_IMPORTED_MODULE_71___default = /*#__PURE__*/__webpack_require__.n(_oscillator_options__WEBPACK_IMPORTED_MODULE_71__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _oscillator_options__WEBPACK_IMPORTED_MODULE_71__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _oscillator_options__WEBPACK_IMPORTED_MODULE_71__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _panner_node__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(
    /*! ./panner-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-node.js");
    /* harmony import */


    var _panner_node__WEBPACK_IMPORTED_MODULE_72___default = /*#__PURE__*/__webpack_require__.n(_panner_node__WEBPACK_IMPORTED_MODULE_72__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _panner_node__WEBPACK_IMPORTED_MODULE_72__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _panner_node__WEBPACK_IMPORTED_MODULE_72__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _panner_options__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(
    /*! ./panner-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-options.js");
    /* harmony import */


    var _panner_options__WEBPACK_IMPORTED_MODULE_73___default = /*#__PURE__*/__webpack_require__.n(_panner_options__WEBPACK_IMPORTED_MODULE_73__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _panner_options__WEBPACK_IMPORTED_MODULE_73__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _panner_options__WEBPACK_IMPORTED_MODULE_73__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _periodic_wave__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(
    /*! ./periodic-wave */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave.js");
    /* harmony import */


    var _periodic_wave__WEBPACK_IMPORTED_MODULE_74___default = /*#__PURE__*/__webpack_require__.n(_periodic_wave__WEBPACK_IMPORTED_MODULE_74__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _periodic_wave__WEBPACK_IMPORTED_MODULE_74__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _periodic_wave__WEBPACK_IMPORTED_MODULE_74__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _periodic_wave_constraints__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(
    /*! ./periodic-wave-constraints */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-constraints.js");
    /* harmony import */


    var _periodic_wave_constraints__WEBPACK_IMPORTED_MODULE_75___default = /*#__PURE__*/__webpack_require__.n(_periodic_wave_constraints__WEBPACK_IMPORTED_MODULE_75__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _periodic_wave_constraints__WEBPACK_IMPORTED_MODULE_75__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _periodic_wave_constraints__WEBPACK_IMPORTED_MODULE_75__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _periodic_wave_options__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(
    /*! ./periodic-wave-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-options.js");
    /* harmony import */


    var _periodic_wave_options__WEBPACK_IMPORTED_MODULE_76___default = /*#__PURE__*/__webpack_require__.n(_periodic_wave_options__WEBPACK_IMPORTED_MODULE_76__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _periodic_wave_options__WEBPACK_IMPORTED_MODULE_76__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _periodic_wave_options__WEBPACK_IMPORTED_MODULE_76__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _read_only_map__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(
    /*! ./read-only-map */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/read-only-map.js");
    /* harmony import */


    var _read_only_map__WEBPACK_IMPORTED_MODULE_77___default = /*#__PURE__*/__webpack_require__.n(_read_only_map__WEBPACK_IMPORTED_MODULE_77__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _read_only_map__WEBPACK_IMPORTED_MODULE_77__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _read_only_map__WEBPACK_IMPORTED_MODULE_77__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _stereo_panner_node__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(
    /*! ./stereo-panner-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-node.js");
    /* harmony import */


    var _stereo_panner_node__WEBPACK_IMPORTED_MODULE_78___default = /*#__PURE__*/__webpack_require__.n(_stereo_panner_node__WEBPACK_IMPORTED_MODULE_78__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _stereo_panner_node__WEBPACK_IMPORTED_MODULE_78__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _stereo_panner_node__WEBPACK_IMPORTED_MODULE_78__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _stereo_panner_options__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(
    /*! ./stereo-panner-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-options.js");
    /* harmony import */


    var _stereo_panner_options__WEBPACK_IMPORTED_MODULE_79___default = /*#__PURE__*/__webpack_require__.n(_stereo_panner_options__WEBPACK_IMPORTED_MODULE_79__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _stereo_panner_options__WEBPACK_IMPORTED_MODULE_79__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _stereo_panner_options__WEBPACK_IMPORTED_MODULE_79__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wave_shaper_node__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(
    /*! ./wave-shaper-node */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-node.js");
    /* harmony import */


    var _wave_shaper_node__WEBPACK_IMPORTED_MODULE_80___default = /*#__PURE__*/__webpack_require__.n(_wave_shaper_node__WEBPACK_IMPORTED_MODULE_80__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wave_shaper_node__WEBPACK_IMPORTED_MODULE_80__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wave_shaper_node__WEBPACK_IMPORTED_MODULE_80__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wave_shaper_options__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(
    /*! ./wave-shaper-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-options.js");
    /* harmony import */


    var _wave_shaper_options__WEBPACK_IMPORTED_MODULE_81___default = /*#__PURE__*/__webpack_require__.n(_wave_shaper_options__WEBPACK_IMPORTED_MODULE_81__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wave_shaper_options__WEBPACK_IMPORTED_MODULE_81__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wave_shaper_options__WEBPACK_IMPORTED_MODULE_81__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _worklet_options__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(
    /*! ./worklet-options */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/worklet-options.js");
    /* harmony import */


    var _worklet_options__WEBPACK_IMPORTED_MODULE_82___default = /*#__PURE__*/__webpack_require__.n(_worklet_options__WEBPACK_IMPORTED_MODULE_82__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _worklet_options__WEBPACK_IMPORTED_MODULE_82__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _worklet_options__WEBPACK_IMPORTED_MODULE_82__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    } //# sourceMappingURL=/build/es2019/interfaces/index.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-node.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-node.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesMediaElementAudioSourceNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/media-element-audio-source-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-options.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-element-audio-source-options.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesMediaElementAudioSourceOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/media-element-audio-source-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-destination-node.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-destination-node.js ***!
    \****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesMediaStreamAudioDestinationNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/media-stream-audio-destination-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-node.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-node.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesMediaStreamAudioSourceNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/media-stream-audio-source-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-options.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-audio-source-options.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesMediaStreamAudioSourceOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/media-stream-audio-source-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-node.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-node.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesMediaStreamTrackAudioSourceNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/media-stream-track-audio-source-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-options.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/media-stream-track-audio-source-options.js ***!
    \********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesMediaStreamTrackAudioSourceOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/media-stream-track-audio-source-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-audio-context.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-audio-context.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesMinimalAudioContextJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/minimal-audio-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context-event-map.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context-event-map.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesMinimalBaseAudioContextEventMapJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/minimal-base-audio-context-event-map.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-base-audio-context.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesMinimalBaseAudioContextJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/minimal-base-audio-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/minimal-offline-audio-context.js ***!
    \**********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesMinimalOfflineAudioContextJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/minimal-offline-audio-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-node-faker.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-node-faker.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesNativeAudioNodeFakerJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/native-audio-node-faker.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-worklet-node-faker.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-audio-worklet-node-faker.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesNativeAudioWorkletNodeFakerJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/native-audio-worklet-node-faker.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/native-constant-source-node-faker.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-constant-source-node-faker.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesNativeConstantSourceNodeFakerJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/native-constant-source-node-faker.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/native-convolver-node-faker.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-convolver-node-faker.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesNativeConvolverNodeFakerJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/native-convolver-node-faker.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/native-iir-filter-node-faker.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-iir-filter-node-faker.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesNativeIirFilterNodeFakerJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/native-iir-filter-node-faker.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/native-panner-node-faker.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-panner-node-faker.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesNativePannerNodeFakerJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/native-panner-node-faker.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/native-stereo-panner-node-faker.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-stereo-panner-node-faker.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesNativeStereoPannerNodeFakerJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/native-stereo-panner-node-faker.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/native-wave-shaper-node-faker.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/native-wave-shaper-node-faker.js ***!
    \**********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesNativeWaveShaperNodeFakerJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/native-wave-shaper-node-faker.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-completion-event.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-completion-event.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesOfflineAudioCompletionEventJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/offline-audio-completion-event.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-constructor.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-constructor.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesOfflineAudioContextConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/offline-audio-context-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-options.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context-options.js ***!
    \**********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesOfflineAudioContextOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/offline-audio-context-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/offline-audio-context.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesOfflineAudioContextJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/offline-audio-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node-renderer.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node-renderer.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesOscillatorNodeRendererJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/oscillator-node-renderer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-node.js ***!
    \********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesOscillatorNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/oscillator-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-options.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/oscillator-options.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesOscillatorOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/oscillator-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-node.js":
  /*!****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/panner-node.js ***!
    \****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesPannerNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/panner-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/panner-options.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/panner-options.js ***!
    \*******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesPannerOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/panner-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-constraints.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-constraints.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesPeriodicWaveConstraintsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/periodic-wave-constraints.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-options.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave-options.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesPeriodicWaveOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/periodic-wave-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/periodic-wave.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesPeriodicWaveJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/periodic-wave.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/read-only-map.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/read-only-map.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesReadOnlyMapJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/read-only-map.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-node.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-node.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesStereoPannerNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/stereo-panner-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-options.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/stereo-panner-options.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesStereoPannerOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/stereo-panner-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-node.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-node.js ***!
    \*********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesWaveShaperNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/wave-shaper-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-options.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/wave-shaper-options.js ***!
    \************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesWaveShaperOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/interfaces/wave-shaper-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/interfaces/worklet-options.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/interfaces/worklet-options.js ***!
    \********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019InterfacesWorkletOptionsJs(module, exports) {// @todo This is currently named IWorkletOptions and not IAudioWorkletOptions because it defines the options of a generic Worklet.
    //# sourceMappingURL=/build/es2019/interfaces/worklet-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/module.js":
  /*!************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/module.js ***!
    \************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019ModuleJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AnalyserNode", function () {
      return analyserNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AudioBuffer", function () {
      return audioBufferConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AudioBufferSourceNode", function () {
      return audioBufferSourceNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "addAudioWorkletModule", function () {
      return addAudioWorkletModule;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "decodeAudioData", function () {
      return decodeAudioData;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AudioContext", function () {
      return audioContextConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AudioWorkletNode", function () {
      return audioWorkletNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BiquadFilterNode", function () {
      return biquadFilterNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ChannelMergerNode", function () {
      return channelMergerNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ChannelSplitterNode", function () {
      return channelSplitterNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ConvolverNode", function () {
      return convolverNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ConstantSourceNode", function () {
      return constantSourceNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DelayNode", function () {
      return delayNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DynamicsCompressorNode", function () {
      return dynamicsCompressorNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "GainNode", function () {
      return gainNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "IIRFilterNode", function () {
      return iIRFilterNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MediaElementAudioSourceNode", function () {
      return mediaElementAudioSourceNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MediaStreamAudioDestinationNode", function () {
      return mediaStreamAudioDestinationNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MediaStreamAudioSourceNode", function () {
      return mediaStreamAudioSourceNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MediaStreamTrackAudioSourceNode", function () {
      return mediaStreamTrackAudioSourceNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MinimalAudioContext", function () {
      return minimalAudioContextConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MinimalOfflineAudioContext", function () {
      return minimalOfflineAudioContextConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OfflineAudioContext", function () {
      return offlineAudioContextConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OscillatorNode", function () {
      return oscillatorNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PannerNode", function () {
      return pannerNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PeriodicWave", function () {
      return periodicWaveConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StereoPannerNode", function () {
      return stereoPannerNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "WaveShaperNode", function () {
      return waveShaperNodeConstructor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAnyAudioContext", function () {
      return isAnyAudioContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAnyAudioNode", function () {
      return isAnyAudioNode;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAnyAudioParam", function () {
      return isAnyAudioParam;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAnyOfflineAudioContext", function () {
      return isAnyOfflineAudioContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isSupported", function () {
      return isSupported;
    });
    /* harmony import */


    var automation_events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! automation-events */
    "./node_modules/automation-events/build/es5/bundle.js");
    /* harmony import */


    var automation_events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(automation_events__WEBPACK_IMPORTED_MODULE_0__);
    /* harmony import */


    var _factories_abort_error__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./factories/abort-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/abort-error.js");
    /* harmony import */


    var _factories_add_audio_node_connections__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./factories/add-audio-node-connections */
    "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-node-connections.js");
    /* harmony import */


    var _factories_add_audio_param_connections__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./factories/add-audio-param-connections */
    "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-param-connections.js");
    /* harmony import */


    var _factories_add_audio_worklet_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./factories/add-audio-worklet-module */
    "./node_modules/standardized-audio-context/build/es2019/factories/add-audio-worklet-module.js");
    /* harmony import */


    var _factories_add_silent_connection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./factories/add-silent-connection */
    "./node_modules/standardized-audio-context/build/es2019/factories/add-silent-connection.js");
    /* harmony import */


    var _factories_add_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./factories/add-unrendered-audio-worklet-node */
    "./node_modules/standardized-audio-context/build/es2019/factories/add-unrendered-audio-worklet-node.js");
    /* harmony import */


    var _factories_analyser_node_constructor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./factories/analyser-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-constructor.js");
    /* harmony import */


    var _factories_analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./factories/analyser-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/analyser-node-renderer-factory.js");
    /* harmony import */


    var _factories_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./factories/audio-buffer-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-constructor.js");
    /* harmony import */


    var _factories_audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./factories/audio-buffer-source-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-constructor.js");
    /* harmony import */


    var _factories_audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./factories/audio-buffer-source-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-buffer-source-node-renderer-factory.js");
    /* harmony import */


    var _factories_audio_context_constructor__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./factories/audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-context-constructor.js");
    /* harmony import */


    var _factories_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./factories/audio-destination-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-constructor.js");
    /* harmony import */


    var _factories_audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./factories/audio-destination-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-destination-node-renderer-factory.js");
    /* harmony import */


    var _factories_audio_listener_factory__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./factories/audio-listener-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-listener-factory.js");
    /* harmony import */


    var _factories_audio_node_constructor__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./factories/audio-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-node-constructor.js");
    /* harmony import */


    var _factories_audio_param_factory__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./factories/audio-param-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-factory.js");
    /* harmony import */


    var _factories_audio_param_renderer__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./factories/audio-param-renderer */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-param-renderer.js");
    /* harmony import */


    var _factories_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./factories/audio-worklet-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-constructor.js");
    /* harmony import */


    var _factories_audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ./factories/audio-worklet-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/audio-worklet-node-renderer-factory.js");
    /* harmony import */


    var _factories_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./factories/base-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/base-audio-context-constructor.js");
    /* harmony import */


    var _factories_biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./factories/biquad-filter-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-constructor.js");
    /* harmony import */


    var _factories_biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ./factories/biquad-filter-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/biquad-filter-node-renderer-factory.js");
    /* harmony import */


    var _factories_cache_test_result__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ./factories/cache-test-result */
    "./node_modules/standardized-audio-context/build/es2019/factories/cache-test-result.js");
    /* harmony import */


    var _factories_channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./factories/channel-merger-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-constructor.js");
    /* harmony import */


    var _factories_channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ./factories/channel-merger-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/channel-merger-node-renderer-factory.js");
    /* harmony import */


    var _factories_channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ./factories/channel-splitter-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-constructor.js");
    /* harmony import */


    var _factories_channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! ./factories/channel-splitter-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/channel-splitter-node-renderer-factory.js");
    /* harmony import */


    var _factories_connect_audio_param__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! ./factories/connect-audio-param */
    "./node_modules/standardized-audio-context/build/es2019/factories/connect-audio-param.js");
    /* harmony import */


    var _factories_connect_multiple_outputs__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
    /*! ./factories/connect-multiple-outputs */
    "./node_modules/standardized-audio-context/build/es2019/factories/connect-multiple-outputs.js");
    /* harmony import */


    var _factories_connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
    /*! ./factories/connected-native-audio-buffer-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/connected-native-audio-buffer-source-node-factory.js");
    /* harmony import */


    var _factories_constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
    /*! ./factories/constant-source-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-constructor.js");
    /* harmony import */


    var _factories_constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
    /*! ./factories/constant-source-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/constant-source-node-renderer-factory.js");
    /* harmony import */


    var _factories_convert_number_to_unsigned_long__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
    /*! ./factories/convert-number-to-unsigned-long */
    "./node_modules/standardized-audio-context/build/es2019/factories/convert-number-to-unsigned-long.js");
    /* harmony import */


    var _factories_convolver_node_constructor__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
    /*! ./factories/convolver-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-constructor.js");
    /* harmony import */


    var _factories_convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
    /*! ./factories/convolver-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/convolver-node-renderer-factory.js");
    /* harmony import */


    var _factories_create_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
    /*! ./factories/create-native-offline-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/factories/create-native-offline-audio-context.js");
    /* harmony import */


    var _factories_data_clone_error__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
    /*! ./factories/data-clone-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/data-clone-error.js");
    /* harmony import */


    var _factories_decode_audio_data__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
    /*! ./factories/decode-audio-data */
    "./node_modules/standardized-audio-context/build/es2019/factories/decode-audio-data.js");
    /* harmony import */


    var _factories_decrement_cycle_counter__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
    /*! ./factories/decrement-cycle-counter */
    "./node_modules/standardized-audio-context/build/es2019/factories/decrement-cycle-counter.js");
    /* harmony import */


    var _factories_delay_node_constructor__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
    /*! ./factories/delay-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-constructor.js");
    /* harmony import */


    var _factories_delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
    /*! ./factories/delay-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/delay-node-renderer-factory.js");
    /* harmony import */


    var _factories_delete_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
    /*! ./factories/delete-unrendered-audio-worklet-node */
    "./node_modules/standardized-audio-context/build/es2019/factories/delete-unrendered-audio-worklet-node.js");
    /* harmony import */


    var _factories_detect_cycles__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
    /*! ./factories/detect-cycles */
    "./node_modules/standardized-audio-context/build/es2019/factories/detect-cycles.js");
    /* harmony import */


    var _factories_disconnect_multiple_outputs__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
    /*! ./factories/disconnect-multiple-outputs */
    "./node_modules/standardized-audio-context/build/es2019/factories/disconnect-multiple-outputs.js");
    /* harmony import */


    var _factories_dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
    /*! ./factories/dynamics-compressor-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-constructor.js");
    /* harmony import */


    var _factories_dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
    /*! ./factories/dynamics-compressor-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/dynamics-compressor-node-renderer-factory.js");
    /* harmony import */


    var _factories_encoding_error__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(
    /*! ./factories/encoding-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/encoding-error.js");
    /* harmony import */


    var _factories_evaluate_source__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(
    /*! ./factories/evaluate-source */
    "./node_modules/standardized-audio-context/build/es2019/factories/evaluate-source.js");
    /* harmony import */


    var _factories_event_target_constructor__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(
    /*! ./factories/event-target-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/event-target-constructor.js");
    /* harmony import */


    var _factories_expose_current_frame_and_current_time__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(
    /*! ./factories/expose-current-frame-and-current-time */
    "./node_modules/standardized-audio-context/build/es2019/factories/expose-current-frame-and-current-time.js");
    /* harmony import */


    var _factories_fetch_source__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(
    /*! ./factories/fetch-source */
    "./node_modules/standardized-audio-context/build/es2019/factories/fetch-source.js");
    /* harmony import */


    var _factories_gain_node_constructor__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(
    /*! ./factories/gain-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-constructor.js");
    /* harmony import */


    var _factories_gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(
    /*! ./factories/gain-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/gain-node-renderer-factory.js");
    /* harmony import */


    var _factories_get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(
    /*! ./factories/get-audio-node-renderer */
    "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-node-renderer.js");
    /* harmony import */


    var _factories_get_audio_param_renderer__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(
    /*! ./factories/get-audio-param-renderer */
    "./node_modules/standardized-audio-context/build/es2019/factories/get-audio-param-renderer.js");
    /* harmony import */


    var _factories_get_backup_native_context__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(
    /*! ./factories/get-backup-native-context */
    "./node_modules/standardized-audio-context/build/es2019/factories/get-backup-native-context.js");
    /* harmony import */


    var _factories_get_native_context__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(
    /*! ./factories/get-native-context */
    "./node_modules/standardized-audio-context/build/es2019/factories/get-native-context.js");
    /* harmony import */


    var _factories_get_unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(
    /*! ./factories/get-unrendered-audio-worklet-nodes */
    "./node_modules/standardized-audio-context/build/es2019/factories/get-unrendered-audio-worklet-nodes.js");
    /* harmony import */


    var _factories_iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(
    /*! ./factories/iir-filter-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-constructor.js");
    /* harmony import */


    var _factories_iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(
    /*! ./factories/iir-filter-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/iir-filter-node-renderer-factory.js");
    /* harmony import */


    var _factories_increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(
    /*! ./factories/increment-cycle-counter-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/increment-cycle-counter-factory.js");
    /* harmony import */


    var _factories_index_size_error__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(
    /*! ./factories/index-size-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/index-size-error.js");
    /* harmony import */


    var _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(
    /*! ./factories/invalid-access-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/invalid-access-error.js");
    /* harmony import */


    var _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(
    /*! ./factories/invalid-state-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/invalid-state-error.js");
    /* harmony import */


    var _factories_is_any_audio_context__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(
    /*! ./factories/is-any-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-context.js");
    /* harmony import */


    var _factories_is_any_audio_node__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(
    /*! ./factories/is-any-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-node.js");
    /* harmony import */


    var _factories_is_any_audio_param__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(
    /*! ./factories/is-any-audio-param */
    "./node_modules/standardized-audio-context/build/es2019/factories/is-any-audio-param.js");
    /* harmony import */


    var _factories_is_any_offline_audio_context__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(
    /*! ./factories/is-any-offline-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/factories/is-any-offline-audio-context.js");
    /* harmony import */


    var _factories_is_native_audio_context__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(
    /*! ./factories/is-native-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-context.js");
    /* harmony import */


    var _factories_is_native_audio_node__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(
    /*! ./factories/is-native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-node.js");
    /* harmony import */


    var _factories_is_native_audio_param__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(
    /*! ./factories/is-native-audio-param */
    "./node_modules/standardized-audio-context/build/es2019/factories/is-native-audio-param.js");
    /* harmony import */


    var _factories_is_native_context__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(
    /*! ./factories/is-native-context */
    "./node_modules/standardized-audio-context/build/es2019/factories/is-native-context.js");
    /* harmony import */


    var _factories_is_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(
    /*! ./factories/is-native-offline-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/factories/is-native-offline-audio-context.js");
    /* harmony import */


    var _factories_is_secure_context__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(
    /*! ./factories/is-secure-context */
    "./node_modules/standardized-audio-context/build/es2019/factories/is-secure-context.js");
    /* harmony import */


    var _factories_is_supported_promise__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(
    /*! ./factories/is-supported-promise */
    "./node_modules/standardized-audio-context/build/es2019/factories/is-supported-promise.js");
    /* harmony import */


    var _factories_media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(
    /*! ./factories/media-element-audio-source-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/media-element-audio-source-node-constructor.js");
    /* harmony import */


    var _factories_media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(
    /*! ./factories/media-stream-audio-destination-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-destination-node-constructor.js");
    /* harmony import */


    var _factories_media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(
    /*! ./factories/media-stream-audio-source-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-audio-source-node-constructor.js");
    /* harmony import */


    var _factories_media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(
    /*! ./factories/media-stream-track-audio-source-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/media-stream-track-audio-source-node-constructor.js");
    /* harmony import */


    var _factories_minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(
    /*! ./factories/minimal-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/minimal-audio-context-constructor.js");
    /* harmony import */


    var _factories_minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(
    /*! ./factories/minimal-base-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/minimal-base-audio-context-constructor.js");
    /* harmony import */


    var _factories_minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(
    /*! ./factories/minimal-offline-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/minimal-offline-audio-context-constructor.js");
    /* harmony import */


    var _factories_monitor_connections__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(
    /*! ./factories/monitor-connections */
    "./node_modules/standardized-audio-context/build/es2019/factories/monitor-connections.js");
    /* harmony import */


    var _factories_native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(
    /*! ./factories/native-analyser-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-analyser-node-factory.js");
    /* harmony import */


    var _factories_native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(
    /*! ./factories/native-audio-buffer-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-constructor.js");
    /* harmony import */


    var _factories_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(
    /*! ./factories/native-audio-buffer-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-buffer-source-node-factory.js");
    /* harmony import */


    var _factories_native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(
    /*! ./factories/native-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-context-constructor.js");
    /* harmony import */


    var _factories_native_audio_destination_node__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(
    /*! ./factories/native-audio-destination-node */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-destination-node.js");
    /* harmony import */


    var _factories_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(
    /*! ./factories/native-audio-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-node-factory.js");
    /* harmony import */


    var _factories_native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(
    /*! ./factories/native-audio-worklet-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-constructor.js");
    /* harmony import */


    var _factories_native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(
    /*! ./factories/native-audio-worklet-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-factory.js");
    /* harmony import */


    var _factories_native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(
    /*! ./factories/native-audio-worklet-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-audio-worklet-node-faker-factory.js");
    /* harmony import */


    var _factories_native_biquad_filter_node_factory__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(
    /*! ./factories/native-biquad-filter-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-biquad-filter-node-factory.js");
    /* harmony import */


    var _factories_native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(
    /*! ./factories/native-channel-merger-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-merger-node-factory.js");
    /* harmony import */


    var _factories_native_channel_splitter_node_factory__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(
    /*! ./factories/native-channel-splitter-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-channel-splitter-node-factory.js");
    /* harmony import */


    var _factories_native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(
    /*! ./factories/native-constant-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-factory.js");
    /* harmony import */


    var _factories_native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(
    /*! ./factories/native-constant-source-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-constant-source-node-faker-factory.js");
    /* harmony import */


    var _factories_native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(
    /*! ./factories/native-convolver-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-factory.js");
    /* harmony import */


    var _factories_native_convolver_node_faker_factory__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(
    /*! ./factories/native-convolver-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-convolver-node-faker-factory.js");
    /* harmony import */


    var _factories_native_delay_node_factory__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(
    /*! ./factories/native-delay-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-delay-node-factory.js");
    /* harmony import */


    var _factories_native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(
    /*! ./factories/native-dynamics-compressor-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-dynamics-compressor-node-factory.js");
    /* harmony import */


    var _factories_native_gain_node_factory__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(
    /*! ./factories/native-gain-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-gain-node-factory.js");
    /* harmony import */


    var _factories_native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(
    /*! ./factories/native-iir-filter-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-factory.js");
    /* harmony import */


    var _factories_native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(
    /*! ./factories/native-iir-filter-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-iir-filter-node-faker-factory.js");
    /* harmony import */


    var _factories_native_media_element_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(
    /*! ./factories/native-media-element-audio-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-media-element-audio-source-node-factory.js");
    /* harmony import */


    var _factories_native_media_stream_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(
    /*! ./factories/native-media-stream-audio-destination-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-destination-node-factory.js");
    /* harmony import */


    var _factories_native_media_stream_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(
    /*! ./factories/native-media-stream-audio-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-audio-source-node-factory.js");
    /* harmony import */


    var _factories_native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(
    /*! ./factories/native-media-stream-track-audio-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-media-stream-track-audio-source-node-factory.js");
    /* harmony import */


    var _factories_native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(
    /*! ./factories/native-offline-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-offline-audio-context-constructor.js");
    /* harmony import */


    var _factories_native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(
    /*! ./factories/native-oscillator-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-oscillator-node-factory.js");
    /* harmony import */


    var _factories_native_panner_node_factory__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(
    /*! ./factories/native-panner-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-factory.js");
    /* harmony import */


    var _factories_native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(
    /*! ./factories/native-panner-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-panner-node-faker-factory.js");
    /* harmony import */


    var _factories_native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(
    /*! ./factories/native-periodic-wave-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-periodic-wave-factory.js");
    /* harmony import */


    var _factories_native_script_processor_node_factory__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(
    /*! ./factories/native-script-processor-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-script-processor-node-factory.js");
    /* harmony import */


    var _factories_native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(
    /*! ./factories/native-stereo-panner-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-factory.js");
    /* harmony import */


    var _factories_native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(
    /*! ./factories/native-stereo-panner-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-stereo-panner-node-faker-factory.js");
    /* harmony import */


    var _factories_native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(
    /*! ./factories/native-wave-shaper-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-factory.js");
    /* harmony import */


    var _factories_native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(
    /*! ./factories/native-wave-shaper-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/native-wave-shaper-node-faker-factory.js");
    /* harmony import */


    var _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(
    /*! ./factories/not-supported-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/not-supported-error.js");
    /* harmony import */


    var _factories_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(
    /*! ./factories/offline-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/offline-audio-context-constructor.js");
    /* harmony import */


    var _factories_oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(
    /*! ./factories/oscillator-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-constructor.js");
    /* harmony import */


    var _factories_oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(
    /*! ./factories/oscillator-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/oscillator-node-renderer-factory.js");
    /* harmony import */


    var _factories_panner_node_constructor__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(
    /*! ./factories/panner-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-constructor.js");
    /* harmony import */


    var _factories_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(
    /*! ./factories/panner-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/panner-node-renderer-factory.js");
    /* harmony import */


    var _factories_periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(
    /*! ./factories/periodic-wave-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/periodic-wave-constructor.js");
    /* harmony import */


    var _factories_render_automation__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(
    /*! ./factories/render-automation */
    "./node_modules/standardized-audio-context/build/es2019/factories/render-automation.js");
    /* harmony import */


    var _factories_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(
    /*! ./factories/render-inputs-of-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-node.js");
    /* harmony import */


    var _factories_render_inputs_of_audio_param__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(
    /*! ./factories/render-inputs-of-audio-param */
    "./node_modules/standardized-audio-context/build/es2019/factories/render-inputs-of-audio-param.js");
    /* harmony import */


    var _factories_render_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(
    /*! ./factories/render-native-offline-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/factories/render-native-offline-audio-context.js");
    /* harmony import */


    var _factories_start_rendering__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(
    /*! ./factories/start-rendering */
    "./node_modules/standardized-audio-context/build/es2019/factories/start-rendering.js");
    /* harmony import */


    var _factories_stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(
    /*! ./factories/stereo-panner-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-constructor.js");
    /* harmony import */


    var _factories_stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(
    /*! ./factories/stereo-panner-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/stereo-panner-node-renderer-factory.js");
    /* harmony import */


    var _factories_test_audio_buffer_constructor_support__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(
    /*! ./factories/test-audio-buffer-constructor-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-constructor-support.js");
    /* harmony import */


    var _factories_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(
    /*! ./factories/test-audio-buffer-copy-channel-methods-subarray-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-copy-channel-methods-subarray-support.js");
    /* harmony import */


    var _factories_test_audio_buffer_source_node_start_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(
    /*! ./factories/test-audio-buffer-source-node-start-method-consecutive-calls-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-consecutive-calls-support.js");
    /* harmony import */


    var _factories_test_audio_buffer_source_node_start_method_duration_parameter_support__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(
    /*! ./factories/test-audio-buffer-source-node-start-method-duration-parameter-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-duration-parameter-support.js");
    /* harmony import */


    var _factories_test_audio_buffer_source_node_start_method_offset_clamping_support__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(
    /*! ./factories/test-audio-buffer-source-node-start-method-offset-clamping-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-start-method-offset-clamping-support.js");
    /* harmony import */


    var _factories_test_audio_buffer_source_node_stop_method_nullified_buffer_support__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(
    /*! ./factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-buffer-source-node-stop-method-nullified-buffer-support.js");
    /* harmony import */


    var _factories_test_audio_context_close_method_support__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(
    /*! ./factories/test-audio-context-close-method-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-close-method-support.js");
    /* harmony import */


    var _factories_test_audio_context_decode_audio_data_method_type_error_support__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(
    /*! ./factories/test-audio-context-decode-audio-data-method-type-error-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-decode-audio-data-method-type-error-support.js");
    /* harmony import */


    var _factories_test_audio_context_options_support__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(
    /*! ./factories/test-audio-context-options-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-context-options-support.js");
    /* harmony import */


    var _factories_test_audio_node_connect_method_support__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(
    /*! ./factories/test-audio-node-connect-method-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-node-connect-method-support.js");
    /* harmony import */


    var _factories_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(
    /*! ./factories/test-audio-scheduled-source-node-start-method-negative-parameters-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-start-method-negative-parameters-support.js");
    /* harmony import */


    var _factories_test_audio_scheduled_source_node_stop_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(
    /*! ./factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-consecutive-calls-support.js");
    /* harmony import */


    var _factories_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(
    /*! ./factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-scheduled-source-node-stop-method-negative-parameters-support.js");
    /* harmony import */


    var _factories_test_audio_worklet_processor_no_outputs_support__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(
    /*! ./factories/test-audio-worklet-processor-no-outputs-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-audio-worklet-processor-no-outputs-support.js");
    /* harmony import */


    var _factories_test_channel_merger_node_channel_count_support__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(
    /*! ./factories/test-channel-merger-node-channel-count-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-channel-merger-node-channel-count-support.js");
    /* harmony import */


    var _factories_test_constant_source_node_accurate_scheduling_support__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(
    /*! ./factories/test-constant-source-node-accurate-scheduling-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-constant-source-node-accurate-scheduling-support.js");
    /* harmony import */


    var _factories_test_convolver_node_buffer_reassignability_support__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(
    /*! ./factories/test-convolver-node-buffer-reassignability-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-convolver-node-buffer-reassignability-support.js");
    /* harmony import */


    var _factories_test_is_secure_context_support__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(
    /*! ./factories/test-is-secure-context-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-is-secure-context-support.js");
    /* harmony import */


    var _factories_test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(
    /*! ./factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js");
    /* harmony import */


    var _factories_test_offline_audio_context_current_time_support__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(
    /*! ./factories/test-offline-audio-context-current-time-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-offline-audio-context-current-time-support.js");
    /* harmony import */


    var _factories_test_stereo_panner_node_default_value_support__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(
    /*! ./factories/test-stereo-panner-node-default-value-support */
    "./node_modules/standardized-audio-context/build/es2019/factories/test-stereo-panner-node-default-value-support.js");
    /* harmony import */


    var _factories_unknown_error__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(
    /*! ./factories/unknown-error */
    "./node_modules/standardized-audio-context/build/es2019/factories/unknown-error.js");
    /* harmony import */


    var _factories_wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(
    /*! ./factories/wave-shaper-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-constructor.js");
    /* harmony import */


    var _factories_wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(
    /*! ./factories/wave-shaper-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/factories/wave-shaper-node-renderer-factory.js");
    /* harmony import */


    var _factories_window__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(
    /*! ./factories/window */
    "./node_modules/standardized-audio-context/build/es2019/factories/window.js");
    /* harmony import */


    var _factories_wrap_audio_buffer_copy_channel_methods__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(
    /*! ./factories/wrap-audio-buffer-copy-channel-methods */
    "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods.js");
    /* harmony import */


    var _factories_wrap_audio_buffer_copy_channel_methods_out_of_bounds__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(
    /*! ./factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds */
    "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-copy-channel-methods-out-of-bounds.js");
    /* harmony import */


    var _factories_wrap_audio_buffer_source_node_stop_method_nullified_buffer__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(
    /*! ./factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer */
    "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-buffer-source-node-stop-method-nullified-buffer.js");
    /* harmony import */


    var _factories_wrap_audio_scheduled_source_node_stop_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(
    /*! ./factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls */
    "./node_modules/standardized-audio-context/build/es2019/factories/wrap-audio-scheduled-source-node-stop-method-consecutive-calls.js");
    /* harmony import */


    var _factories_wrap_channel_merger_node__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(
    /*! ./factories/wrap-channel-merger-node */
    "./node_modules/standardized-audio-context/build/es2019/factories/wrap-channel-merger-node.js");
    /* harmony import */


    var _globals__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(
    /*! ./globals */
    "./node_modules/standardized-audio-context/build/es2019/globals.js");
    /* harmony import */


    var _helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(
    /*! ./helpers/connect-native-audio-node-to-native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/connect-native-audio-node-to-native-audio-node.js");
    /* harmony import */


    var _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(
    /*! ./helpers/disconnect-native-audio-node-from-native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/disconnect-native-audio-node-from-native-audio-node.js");
    /* harmony import */


    var _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(
    /*! ./helpers/get-audio-node-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-node-connections.js");
    /* harmony import */


    var _helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(
    /*! ./helpers/get-audio-param-connections */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-audio-param-connections.js");
    /* harmony import */


    var _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(
    /*! ./helpers/get-native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-node.js");
    /* harmony import */


    var _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(
    /*! ./helpers/get-native-audio-param */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-native-audio-param.js");
    /* harmony import */


    var _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(
    /*! ./helpers/get-value-for-key */
    "./node_modules/standardized-audio-context/build/es2019/helpers/get-value-for-key.js");
    /* harmony import */


    var _helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(
    /*! ./helpers/insert-element-in-set */
    "./node_modules/standardized-audio-context/build/es2019/helpers/insert-element-in-set.js");
    /* harmony import */


    var _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(
    /*! ./helpers/is-active-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-active-audio-node.js");
    /* harmony import */


    var _helpers_is_dc_curve__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(
    /*! ./helpers/is-dc-curve */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-dc-curve.js");
    /* harmony import */


    var _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(
    /*! ./helpers/is-part-of-a-cycle */
    "./node_modules/standardized-audio-context/build/es2019/helpers/is-part-of-a-cycle.js");
    /* harmony import */


    var _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(
    /*! ./helpers/overwrite-accessors */
    "./node_modules/standardized-audio-context/build/es2019/helpers/overwrite-accessors.js");
    /* harmony import */


    var _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(
    /*! ./helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support */
    "./node_modules/standardized-audio-context/build/es2019/helpers/test-audio-buffer-copy-channel-methods-out-of-bounds-support.js");
    /* harmony import */


    var _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(
    /*! ./helpers/test-promise-support */
    "./node_modules/standardized-audio-context/build/es2019/helpers/test-promise-support.js");
    /* harmony import */


    var _helpers_test_transferables_support__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(
    /*! ./helpers/test-transferables-support */
    "./node_modules/standardized-audio-context/build/es2019/helpers/test-transferables-support.js");
    /* harmony import */


    var _helpers_wrap_audio_buffer_source_node_start_method_offset_clamping__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(
    /*! ./helpers/wrap-audio-buffer-source-node-start-method-offset-clamping */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-audio-buffer-source-node-start-method-offset-clamping.js");
    /* harmony import */


    var _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(
    /*! ./helpers/wrap-event-listener */
    "./node_modules/standardized-audio-context/build/es2019/helpers/wrap-event-listener.js");
    /* harmony import */


    var _interfaces_index__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(
    /*! ./interfaces/index */
    "./node_modules/standardized-audio-context/build/es2019/interfaces/index.js");
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _interfaces_index__WEBPACK_IMPORTED_MODULE_182__) {
      if (["AnalyserNode", "AudioBuffer", "AudioBufferSourceNode", "addAudioWorkletModule", "decodeAudioData", "AudioContext", "AudioWorkletNode", "BiquadFilterNode", "ChannelMergerNode", "ChannelSplitterNode", "ConvolverNode", "ConstantSourceNode", "DelayNode", "DynamicsCompressorNode", "GainNode", "IIRFilterNode", "MediaElementAudioSourceNode", "MediaStreamAudioDestinationNode", "MediaStreamAudioSourceNode", "MediaStreamTrackAudioSourceNode", "MinimalAudioContext", "MinimalOfflineAudioContext", "OfflineAudioContext", "OscillatorNode", "PannerNode", "PeriodicWave", "StereoPannerNode", "WaveShaperNode", "isAnyAudioContext", "isAnyAudioNode", "isAnyAudioParam", "isAnyOfflineAudioContext", "isSupported", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _interfaces_index__WEBPACK_IMPORTED_MODULE_182__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _types_index__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(
    /*! ./types/index */
    "./node_modules/standardized-audio-context/build/es2019/types/index.js");
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _types_index__WEBPACK_IMPORTED_MODULE_183__) {
      if (["AnalyserNode", "AudioBuffer", "AudioBufferSourceNode", "addAudioWorkletModule", "decodeAudioData", "AudioContext", "AudioWorkletNode", "BiquadFilterNode", "ChannelMergerNode", "ChannelSplitterNode", "ConvolverNode", "ConstantSourceNode", "DelayNode", "DynamicsCompressorNode", "GainNode", "IIRFilterNode", "MediaElementAudioSourceNode", "MediaStreamAudioDestinationNode", "MediaStreamAudioSourceNode", "MediaStreamTrackAudioSourceNode", "MinimalAudioContext", "MinimalOfflineAudioContext", "OfflineAudioContext", "OscillatorNode", "PannerNode", "PeriodicWave", "StereoPannerNode", "WaveShaperNode", "isAnyAudioContext", "isAnyAudioNode", "isAnyAudioParam", "isAnyOfflineAudioContext", "isSupported", "default"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _types_index__WEBPACK_IMPORTED_MODULE_183__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /*
     * @todo Explicitly referencing the barrel file seems to be necessary when enabling the
     * isolatedModules compiler option.
     */


    var cacheTestResult = Object(_factories_cache_test_result__WEBPACK_IMPORTED_MODULE_24__["createCacheTestResult"])(new Map(), new WeakMap());
    var window = Object(_factories_window__WEBPACK_IMPORTED_MODULE_158__["createWindow"])();
    var nativeOfflineAudioContextConstructor = Object(_factories_native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_110__["createNativeOfflineAudioContextConstructor"])(window);
    var isNativeOfflineAudioContext = Object(_factories_is_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_74__["createIsNativeOfflineAudioContext"])(nativeOfflineAudioContextConstructor);
    var nativeAudioContextConstructor = Object(_factories_native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_88__["createNativeAudioContextConstructor"])(window);
    var getBackupNativeContext = Object(_factories_get_backup_native_context__WEBPACK_IMPORTED_MODULE_57__["createGetBackupNativeContext"])(isNativeOfflineAudioContext, nativeAudioContextConstructor, nativeOfflineAudioContextConstructor);
    var createNativeAudioNode = Object(_factories_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_90__["createNativeAudioNodeFactory"])(getBackupNativeContext);
    var createNativeAnalyserNode = Object(_factories_native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_85__["createNativeAnalyserNodeFactory"])(cacheTestResult, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_63__["createIndexSizeError"], createNativeAudioNode);
    var getAudioNodeRenderer = Object(_factories_get_audio_node_renderer__WEBPACK_IMPORTED_MODULE_55__["createGetAudioNodeRenderer"])(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_167__["getAudioNodeConnections"]);
    var renderInputsOfAudioNode = Object(_factories_render_inputs_of_audio_node__WEBPACK_IMPORTED_MODULE_128__["createRenderInputsOfAudioNode"])(_helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_167__["getAudioNodeConnections"], getAudioNodeRenderer, _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_175__["isPartOfACycle"]);
    var createAnalyserNodeRenderer = Object(_factories_analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_8__["createAnalyserNodeRendererFactory"])(createNativeAnalyserNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderInputsOfAudioNode);
    var auxiliaryGainNodeStore = new WeakMap();
    var getNativeContext = Object(_factories_get_native_context__WEBPACK_IMPORTED_MODULE_58__["createGetNativeContext"])(_globals__WEBPACK_IMPORTED_MODULE_164__["CONTEXT_STORE"]);
    var audioParamAudioNodeStore = new WeakMap();
    var eventTargetConstructor = Object(_factories_event_target_constructor__WEBPACK_IMPORTED_MODULE_50__["createEventTargetConstructor"])(_helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_181__["wrapEventListener"]);
    var isNativeAudioContext = Object(_factories_is_native_audio_context__WEBPACK_IMPORTED_MODULE_70__["createIsNativeAudioContext"])(nativeAudioContextConstructor);
    var isNativeAudioNode = Object(_factories_is_native_audio_node__WEBPACK_IMPORTED_MODULE_71__["createIsNativeAudioNode"])(window);
    var isNativeAudioParam = Object(_factories_is_native_audio_param__WEBPACK_IMPORTED_MODULE_72__["createIsNativeAudioParam"])(window);
    var audioNodeConstructor = Object(_factories_audio_node_constructor__WEBPACK_IMPORTED_MODULE_16__["createAudioNodeConstructor"])(Object(_factories_add_audio_node_connections__WEBPACK_IMPORTED_MODULE_2__["createAddAudioNodeConnections"])(_globals__WEBPACK_IMPORTED_MODULE_164__["AUDIO_NODE_CONNECTIONS_STORE"]), auxiliaryGainNodeStore, cacheTestResult, Object(_factories_increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_62__["createIncrementCycleCounterFactory"])(_globals__WEBPACK_IMPORTED_MODULE_164__["CYCLE_COUNTERS"], _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_166__["disconnectNativeAudioNodeFromNativeAudioNode"], _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_167__["getAudioNodeConnections"], _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_170__["getNativeAudioParam"], _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_173__["isActiveAudioNode"]), _factories_index_size_error__WEBPACK_IMPORTED_MODULE_63__["createIndexSizeError"], _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_64__["createInvalidAccessError"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], Object(_factories_decrement_cycle_counter__WEBPACK_IMPORTED_MODULE_40__["createDecrementCycleCounter"])(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_165__["connectNativeAudioNodeToNativeAudioNode"], _globals__WEBPACK_IMPORTED_MODULE_164__["CYCLE_COUNTERS"], _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_167__["getAudioNodeConnections"], _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], _helpers_get_native_audio_param__WEBPACK_IMPORTED_MODULE_170__["getNativeAudioParam"], getNativeContext, _helpers_is_active_audio_node__WEBPACK_IMPORTED_MODULE_173__["isActiveAudioNode"], isNativeOfflineAudioContext), Object(_factories_detect_cycles__WEBPACK_IMPORTED_MODULE_44__["createDetectCycles"])(audioParamAudioNodeStore, _helpers_get_audio_node_connections__WEBPACK_IMPORTED_MODULE_167__["getAudioNodeConnections"], _helpers_get_value_for_key__WEBPACK_IMPORTED_MODULE_171__["getValueForKey"]), eventTargetConstructor, getNativeContext, isNativeAudioContext, isNativeAudioNode, isNativeAudioParam, isNativeOfflineAudioContext);
    var analyserNodeConstructor = Object(_factories_analyser_node_constructor__WEBPACK_IMPORTED_MODULE_7__["createAnalyserNodeConstructor"])(audioNodeConstructor, createAnalyserNodeRenderer, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_63__["createIndexSizeError"], createNativeAnalyserNode, getNativeContext, isNativeOfflineAudioContext);
    var audioBufferStore = new WeakSet();
    var nativeAudioBufferConstructor = Object(_factories_native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_86__["createNativeAudioBufferConstructor"])(window);
    var convertNumberToUnsignedLong = Object(_factories_convert_number_to_unsigned_long__WEBPACK_IMPORTED_MODULE_34__["createConvertNumberToUnsignedLong"])(new Uint32Array(1));
    var wrapAudioBufferCopyChannelMethods = Object(_factories_wrap_audio_buffer_copy_channel_methods__WEBPACK_IMPORTED_MODULE_159__["createWrapAudioBufferCopyChannelMethods"])(convertNumberToUnsignedLong, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_63__["createIndexSizeError"]);
    var wrapAudioBufferCopyChannelMethodsOutOfBounds = Object(_factories_wrap_audio_buffer_copy_channel_methods_out_of_bounds__WEBPACK_IMPORTED_MODULE_160__["createWrapAudioBufferCopyChannelMethodsOutOfBounds"])(convertNumberToUnsignedLong);
    var audioBufferConstructor = Object(_factories_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_9__["createAudioBufferConstructor"])(audioBufferStore, cacheTestResult, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], nativeAudioBufferConstructor, nativeOfflineAudioContextConstructor, Object(_factories_test_audio_buffer_constructor_support__WEBPACK_IMPORTED_MODULE_134__["createTestAudioBufferConstructorSupport"])(nativeAudioBufferConstructor), wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
    var createNativeGainNode = Object(_factories_native_gain_node_factory__WEBPACK_IMPORTED_MODULE_103__["createNativeGainNodeFactory"])(createNativeAudioNode);
    var addSilentConnection = Object(_factories_add_silent_connection__WEBPACK_IMPORTED_MODULE_5__["createAddSilentConnection"])(createNativeGainNode);
    var testAudioScheduledSourceNodeStartMethodNegativeParametersSupport = Object(_factories_test_audio_scheduled_source_node_start_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_144__["createTestAudioScheduledSourceNodeStartMethodNegativeParametersSupport"])(createNativeAudioNode);
    var testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport = Object(_factories_test_audio_scheduled_source_node_stop_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_145__["createTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport"])(createNativeAudioNode);
    var testAudioScheduledSourceNodeStopMethodNegativeParametersSupport = Object(_factories_test_audio_scheduled_source_node_stop_method_negative_parameters_support__WEBPACK_IMPORTED_MODULE_146__["createTestAudioScheduledSourceNodeStopMethodNegativeParametersSupport"])(createNativeAudioNode);
    var wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls = Object(_factories_wrap_audio_scheduled_source_node_stop_method_consecutive_calls__WEBPACK_IMPORTED_MODULE_162__["createWrapAudioScheduledSourceNodeStopMethodConsecutiveCalls"])(createNativeAudioNode);
    var renderInputsOfAudioParam = Object(_factories_render_inputs_of_audio_param__WEBPACK_IMPORTED_MODULE_129__["createRenderInputsOfAudioParam"])(getAudioNodeRenderer, _helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_168__["getAudioParamConnections"], _helpers_is_part_of_a_cycle__WEBPACK_IMPORTED_MODULE_175__["isPartOfACycle"]);
    var connectAudioParam = Object(_factories_connect_audio_param__WEBPACK_IMPORTED_MODULE_29__["createConnectAudioParam"])(renderInputsOfAudioParam);
    var createNativeAudioBufferSourceNode = Object(_factories_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_87__["createNativeAudioBufferSourceNodeFactory"])(addSilentConnection, cacheTestResult, createNativeAudioNode, Object(_factories_test_audio_buffer_source_node_start_method_consecutive_calls_support__WEBPACK_IMPORTED_MODULE_136__["createTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupport"])(createNativeAudioNode), Object(_factories_test_audio_buffer_source_node_start_method_duration_parameter_support__WEBPACK_IMPORTED_MODULE_137__["createTestAudioBufferSourceNodeStartMethodDurationParameterSupport"])(nativeOfflineAudioContextConstructor), Object(_factories_test_audio_buffer_source_node_start_method_offset_clamping_support__WEBPACK_IMPORTED_MODULE_138__["createTestAudioBufferSourceNodeStartMethodOffsetClampingSupport"])(createNativeAudioNode), Object(_factories_test_audio_buffer_source_node_stop_method_nullified_buffer_support__WEBPACK_IMPORTED_MODULE_139__["createTestAudioBufferSourceNodeStopMethodNullifiedBufferSupport"])(createNativeAudioNode), testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, _helpers_wrap_audio_buffer_source_node_start_method_offset_clamping__WEBPACK_IMPORTED_MODULE_180__["wrapAudioBufferSourceNodeStartMethodOffsetClamping"], Object(_factories_wrap_audio_buffer_source_node_stop_method_nullified_buffer__WEBPACK_IMPORTED_MODULE_161__["createWrapAudioBufferSourceNodeStopMethodNullifiedBuffer"])(_helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_176__["overwriteAccessors"]), wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);
    var renderAutomation = Object(_factories_render_automation__WEBPACK_IMPORTED_MODULE_127__["createRenderAutomation"])(Object(_factories_get_audio_param_renderer__WEBPACK_IMPORTED_MODULE_56__["createGetAudioParamRenderer"])(_helpers_get_audio_param_connections__WEBPACK_IMPORTED_MODULE_168__["getAudioParamConnections"]), renderInputsOfAudioParam);
    var createAudioBufferSourceNodeRenderer = Object(_factories_audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_11__["createAudioBufferSourceNodeRendererFactory"])(connectAudioParam, createNativeAudioBufferSourceNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
    var createAudioParam = Object(_factories_audio_param_factory__WEBPACK_IMPORTED_MODULE_17__["createAudioParamFactory"])(Object(_factories_add_audio_param_connections__WEBPACK_IMPORTED_MODULE_3__["createAddAudioParamConnections"])(_globals__WEBPACK_IMPORTED_MODULE_164__["AUDIO_PARAM_CONNECTIONS_STORE"]), audioParamAudioNodeStore, _globals__WEBPACK_IMPORTED_MODULE_164__["AUDIO_PARAM_STORE"], _factories_audio_param_renderer__WEBPACK_IMPORTED_MODULE_18__["createAudioParamRenderer"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createCancelAndHoldAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createCancelScheduledValuesAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createExponentialRampToValueAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createLinearRampToValueAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createSetTargetAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createSetValueAutomationEvent"], automation_events__WEBPACK_IMPORTED_MODULE_0__["createSetValueCurveAutomationEvent"], nativeAudioContextConstructor);
    var audioBufferSourceNodeConstructor = Object(_factories_audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_10__["createAudioBufferSourceNodeConstructor"])(audioNodeConstructor, createAudioBufferSourceNodeRenderer, createAudioParam, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeAudioBufferSourceNode, getNativeContext, isNativeOfflineAudioContext, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_181__["wrapEventListener"]);
    var audioDestinationNodeConstructor = Object(_factories_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_13__["createAudioDestinationNodeConstructor"])(audioNodeConstructor, _factories_audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_14__["createAudioDestinationNodeRenderer"], _factories_index_size_error__WEBPACK_IMPORTED_MODULE_63__["createIndexSizeError"], _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], Object(_factories_native_audio_destination_node__WEBPACK_IMPORTED_MODULE_89__["createNativeAudioDestinationNodeFactory"])(createNativeGainNode, _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_176__["overwriteAccessors"]), getNativeContext, isNativeOfflineAudioContext, renderInputsOfAudioNode);
    var createNativeBiquadFilterNode = Object(_factories_native_biquad_filter_node_factory__WEBPACK_IMPORTED_MODULE_94__["createNativeBiquadFilterNodeFactory"])(createNativeAudioNode);
    var createBiquadFilterNodeRenderer = Object(_factories_biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_23__["createBiquadFilterNodeRendererFactory"])(connectAudioParam, createNativeBiquadFilterNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
    var biquadFilterNodeConstructor = Object(_factories_biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_22__["createBiquadFilterNodeConstructor"])(audioNodeConstructor, createAudioParam, createBiquadFilterNodeRenderer, _factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_64__["createInvalidAccessError"], createNativeBiquadFilterNode, getNativeContext, isNativeOfflineAudioContext);
    var monitorConnections = Object(_factories_monitor_connections__WEBPACK_IMPORTED_MODULE_84__["createMonitorConnections"])(_helpers_insert_element_in_set__WEBPACK_IMPORTED_MODULE_172__["insertElementInSet"], isNativeAudioNode);
    var wrapChannelMergerNode = Object(_factories_wrap_channel_merger_node__WEBPACK_IMPORTED_MODULE_163__["createWrapChannelMergerNode"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeAudioNode, monitorConnections);
    var createNativeChannelMergerNode = Object(_factories_native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_95__["createNativeChannelMergerNodeFactory"])(createNativeAudioNode, wrapChannelMergerNode);
    var createChannelMergerNodeRenderer = Object(_factories_channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_26__["createChannelMergerNodeRendererFactory"])(createNativeChannelMergerNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderInputsOfAudioNode);
    var channelMergerNodeConstructor = Object(_factories_channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_25__["createChannelMergerNodeConstructor"])(audioNodeConstructor, createChannelMergerNodeRenderer, createNativeChannelMergerNode, getNativeContext, isNativeOfflineAudioContext);
    var createNativeChannelSplitterNode = Object(_factories_native_channel_splitter_node_factory__WEBPACK_IMPORTED_MODULE_96__["createNativeChannelSplitterNodeFactory"])(createNativeAudioNode);
    var createChannelSplitterNodeRenderer = Object(_factories_channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_28__["createChannelSplitterNodeRendererFactory"])(createNativeChannelSplitterNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderInputsOfAudioNode);
    var channelSplitterNodeConstructor = Object(_factories_channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_27__["createChannelSplitterNodeConstructor"])(audioNodeConstructor, createChannelSplitterNodeRenderer, createNativeChannelSplitterNode, getNativeContext, isNativeOfflineAudioContext);
    var createNativeConstantSourceNodeFaker = Object(_factories_native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_98__["createNativeConstantSourceNodeFakerFactory"])(addSilentConnection, createNativeAudioBufferSourceNode, createNativeGainNode, monitorConnections);
    var createNativeConstantSourceNode = Object(_factories_native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_97__["createNativeConstantSourceNodeFactory"])(addSilentConnection, cacheTestResult, createNativeAudioNode, createNativeConstantSourceNodeFaker, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport);
    var createConstantSourceNodeRenderer = Object(_factories_constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_33__["createConstantSourceNodeRendererFactory"])(connectAudioParam, createNativeConstantSourceNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
    var constantSourceNodeConstructor = Object(_factories_constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_32__["createConstantSourceNodeConstructor"])(audioNodeConstructor, createAudioParam, createConstantSourceNodeRenderer, createNativeConstantSourceNode, getNativeContext, isNativeOfflineAudioContext, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_181__["wrapEventListener"]);
    var createNativeConvolverNodeFaker = Object(_factories_native_convolver_node_faker_factory__WEBPACK_IMPORTED_MODULE_100__["createNativeConvolverNodeFakerFactory"])(createNativeAudioNode, createNativeGainNode, monitorConnections);
    var createNativeConvolverNode = Object(_factories_native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_99__["createNativeConvolverNodeFactory"])(createNativeAudioNode, createNativeConvolverNodeFaker, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_176__["overwriteAccessors"]);
    var createConvolverNodeRenderer = Object(_factories_convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_36__["createConvolverNodeRendererFactory"])(createNativeConvolverNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderInputsOfAudioNode);
    var convolverNodeConstructor = Object(_factories_convolver_node_constructor__WEBPACK_IMPORTED_MODULE_35__["createConvolverNodeConstructor"])(audioNodeConstructor, createConvolverNodeRenderer, createNativeConvolverNode, getNativeContext, isNativeOfflineAudioContext);
    var createNativeDelayNode = Object(_factories_native_delay_node_factory__WEBPACK_IMPORTED_MODULE_101__["createNativeDelayNodeFactory"])(createNativeAudioNode);
    var createDelayNodeRenderer = Object(_factories_delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_42__["createDelayNodeRendererFactory"])(connectAudioParam, createNativeDelayNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
    var delayNodeConstructor = Object(_factories_delay_node_constructor__WEBPACK_IMPORTED_MODULE_41__["createDelayNodeConstructor"])(audioNodeConstructor, createAudioParam, createDelayNodeRenderer, createNativeDelayNode, getNativeContext, isNativeOfflineAudioContext);
    var createNativeDynamicsCompressorNode = Object(_factories_native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_102__["createNativeDynamicsCompressorNodeFactory"])(createNativeAudioNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"]);
    var createDynamicsCompressorNodeRenderer = Object(_factories_dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_47__["createDynamicsCompressorNodeRendererFactory"])(connectAudioParam, createNativeDynamicsCompressorNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
    var dynamicsCompressorNodeConstructor = Object(_factories_dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_46__["createDynamicsCompressorNodeConstructor"])(audioNodeConstructor, createAudioParam, createDynamicsCompressorNodeRenderer, createNativeDynamicsCompressorNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], getNativeContext, isNativeOfflineAudioContext);
    var createGainNodeRenderer = Object(_factories_gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_54__["createGainNodeRendererFactory"])(connectAudioParam, createNativeGainNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
    var gainNodeConstructor = Object(_factories_gain_node_constructor__WEBPACK_IMPORTED_MODULE_53__["createGainNodeConstructor"])(audioNodeConstructor, createAudioParam, createGainNodeRenderer, createNativeGainNode, getNativeContext, isNativeOfflineAudioContext);
    var createNativeScriptProcessorNode = Object(_factories_native_script_processor_node_factory__WEBPACK_IMPORTED_MODULE_115__["createNativeScriptProcessorNodeFactory"])(createNativeAudioNode);
    var createNativeIIRFilterNodeFaker = Object(_factories_native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_105__["createNativeIIRFilterNodeFakerFactory"])(_factories_invalid_access_error__WEBPACK_IMPORTED_MODULE_64__["createInvalidAccessError"], _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeScriptProcessorNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"]);
    var renderNativeOfflineAudioContext = Object(_factories_render_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_130__["createRenderNativeOfflineAudioContext"])(cacheTestResult, createNativeGainNode, createNativeScriptProcessorNode, Object(_factories_test_offline_audio_context_current_time_support__WEBPACK_IMPORTED_MODULE_153__["createTestOfflineAudioContextCurrentTimeSupport"])(createNativeGainNode, nativeOfflineAudioContextConstructor));
    var createIIRFilterNodeRenderer = Object(_factories_iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_61__["createIIRFilterNodeRendererFactory"])(createNativeAudioBufferSourceNode, createNativeAudioNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], nativeOfflineAudioContextConstructor, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
    var createNativeIIRFilterNode = Object(_factories_native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_104__["createNativeIIRFilterNodeFactory"])(createNativeAudioNode, createNativeIIRFilterNodeFaker);
    var iIRFilterNodeConstructor = Object(_factories_iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_60__["createIIRFilterNodeConstructor"])(audioNodeConstructor, createNativeIIRFilterNode, createIIRFilterNodeRenderer, getNativeContext, isNativeOfflineAudioContext);
    var createAudioListener = Object(_factories_audio_listener_factory__WEBPACK_IMPORTED_MODULE_15__["createAudioListenerFactory"])(createAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeScriptProcessorNode, isNativeOfflineAudioContext);
    var unrenderedAudioWorkletNodeStore = new WeakMap();
    var minimalBaseAudioContextConstructor = Object(_factories_minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_82__["createMinimalBaseAudioContextConstructor"])(audioDestinationNodeConstructor, createAudioListener, eventTargetConstructor, isNativeOfflineAudioContext, unrenderedAudioWorkletNodeStore, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_181__["wrapEventListener"]);
    var createNativeOscillatorNode = Object(_factories_native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_111__["createNativeOscillatorNodeFactory"])(addSilentConnection, cacheTestResult, createNativeAudioNode, testAudioScheduledSourceNodeStartMethodNegativeParametersSupport, testAudioScheduledSourceNodeStopMethodConsecutiveCallsSupport, testAudioScheduledSourceNodeStopMethodNegativeParametersSupport, wrapAudioScheduledSourceNodeStopMethodConsecutiveCalls);
    var createOscillatorNodeRenderer = Object(_factories_oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_123__["createOscillatorNodeRendererFactory"])(connectAudioParam, createNativeOscillatorNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
    var oscillatorNodeConstructor = Object(_factories_oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_122__["createOscillatorNodeConstructor"])(audioNodeConstructor, createAudioParam, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeOscillatorNode, createOscillatorNodeRenderer, getNativeContext, isNativeOfflineAudioContext, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_181__["wrapEventListener"]);
    var createConnectedNativeAudioBufferSourceNode = Object(_factories_connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_31__["createConnectedNativeAudioBufferSourceNodeFactory"])(createNativeAudioBufferSourceNode);
    var createNativeWaveShaperNodeFaker = Object(_factories_native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_119__["createNativeWaveShaperNodeFakerFactory"])(createConnectedNativeAudioBufferSourceNode, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeAudioNode, createNativeGainNode, _helpers_is_dc_curve__WEBPACK_IMPORTED_MODULE_174__["isDCCurve"], monitorConnections);
    var createNativeWaveShaperNode = Object(_factories_native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_118__["createNativeWaveShaperNodeFactory"])(createConnectedNativeAudioBufferSourceNode, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeAudioNode, createNativeWaveShaperNodeFaker, _helpers_is_dc_curve__WEBPACK_IMPORTED_MODULE_174__["isDCCurve"], monitorConnections, _helpers_overwrite_accessors__WEBPACK_IMPORTED_MODULE_176__["overwriteAccessors"]);
    var createNativePannerNodeFaker = Object(_factories_native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_113__["createNativePannerNodeFakerFactory"])(_helpers_connect_native_audio_node_to_native_audio_node__WEBPACK_IMPORTED_MODULE_165__["connectNativeAudioNodeToNativeAudioNode"], _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeAudioNode, createNativeChannelMergerNode, createNativeGainNode, createNativeScriptProcessorNode, createNativeWaveShaperNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], _helpers_disconnect_native_audio_node_from_native_audio_node__WEBPACK_IMPORTED_MODULE_166__["disconnectNativeAudioNodeFromNativeAudioNode"], monitorConnections);
    var createNativePannerNode = Object(_factories_native_panner_node_factory__WEBPACK_IMPORTED_MODULE_112__["createNativePannerNodeFactory"])(createNativeAudioNode, createNativePannerNodeFaker);
    var createPannerNodeRenderer = Object(_factories_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_125__["createPannerNodeRendererFactory"])(connectAudioParam, createNativeChannelMergerNode, createNativeConstantSourceNode, createNativeGainNode, createNativePannerNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext);
    var pannerNodeConstructor = Object(_factories_panner_node_constructor__WEBPACK_IMPORTED_MODULE_124__["createPannerNodeConstructor"])(audioNodeConstructor, createAudioParam, createNativePannerNode, createPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);
    var createNativePeriodicWave = Object(_factories_native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_114__["createNativePeriodicWaveFactory"])(getBackupNativeContext);
    var periodicWaveConstructor = Object(_factories_periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_126__["createPeriodicWaveConstructor"])(createNativePeriodicWave, getNativeContext, new WeakSet());
    var nativeStereoPannerNodeFakerFactory = Object(_factories_native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_117__["createNativeStereoPannerNodeFakerFactory"])(createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeGainNode, createNativeWaveShaperNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], monitorConnections);
    var createNativeStereoPannerNode = Object(_factories_native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_116__["createNativeStereoPannerNodeFactory"])(createNativeAudioNode, nativeStereoPannerNodeFakerFactory, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"]);
    var createStereoPannerNodeRenderer = Object(_factories_stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_133__["createStereoPannerNodeRendererFactory"])(connectAudioParam, createNativeStereoPannerNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderAutomation, renderInputsOfAudioNode);
    var stereoPannerNodeConstructor = Object(_factories_stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_132__["createStereoPannerNodeConstructor"])(audioNodeConstructor, createAudioParam, createNativeStereoPannerNode, createStereoPannerNodeRenderer, getNativeContext, isNativeOfflineAudioContext);
    var createWaveShaperNodeRenderer = Object(_factories_wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_157__["createWaveShaperNodeRendererFactory"])(createNativeWaveShaperNode, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], renderInputsOfAudioNode);
    var waveShaperNodeConstructor = Object(_factories_wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_156__["createWaveShaperNodeConstructor"])(audioNodeConstructor, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeWaveShaperNode, createWaveShaperNodeRenderer, getNativeContext, isNativeOfflineAudioContext);
    var isSecureContext = Object(_factories_is_secure_context__WEBPACK_IMPORTED_MODULE_75__["createIsSecureContext"])(window);
    var exposeCurrentFrameAndCurrentTime = Object(_factories_expose_current_frame_and_current_time__WEBPACK_IMPORTED_MODULE_51__["createExposeCurrentFrameAndCurrentTime"])(window); // The addAudioWorkletModule() function is only available in a SecureContext.

    var addAudioWorkletModule = isSecureContext ? Object(_factories_add_audio_worklet_module__WEBPACK_IMPORTED_MODULE_4__["createAddAudioWorkletModule"])(_factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], Object(_factories_evaluate_source__WEBPACK_IMPORTED_MODULE_49__["createEvaluateSource"])(window), exposeCurrentFrameAndCurrentTime, Object(_factories_fetch_source__WEBPACK_IMPORTED_MODULE_52__["createFetchSource"])(_factories_abort_error__WEBPACK_IMPORTED_MODULE_1__["createAbortError"]), getBackupNativeContext, getNativeContext, new WeakMap(), new WeakMap(), // @todo window is guaranteed to be defined because isSecureContext checks that as well.
    window) : undefined;
    var isNativeContext = Object(_factories_is_native_context__WEBPACK_IMPORTED_MODULE_73__["createIsNativeContext"])(isNativeAudioContext, isNativeOfflineAudioContext);
    var decodeAudioData = Object(_factories_decode_audio_data__WEBPACK_IMPORTED_MODULE_39__["createDecodeAudioData"])(audioBufferStore, cacheTestResult, _factories_data_clone_error__WEBPACK_IMPORTED_MODULE_38__["createDataCloneError"], _factories_encoding_error__WEBPACK_IMPORTED_MODULE_48__["createEncodingError"], new WeakSet(), getNativeContext, isNativeContext, isNativeOfflineAudioContext, nativeOfflineAudioContextConstructor, _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_177__["testAudioBufferCopyChannelMethodsOutOfBoundsSupport"], _helpers_test_promise_support__WEBPACK_IMPORTED_MODULE_178__["testPromiseSupport"], wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
    var baseAudioContextConstructor = Object(_factories_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_21__["createBaseAudioContextConstructor"])(addAudioWorkletModule, analyserNodeConstructor, audioBufferConstructor, audioBufferSourceNodeConstructor, biquadFilterNodeConstructor, channelMergerNodeConstructor, channelSplitterNodeConstructor, constantSourceNodeConstructor, convolverNodeConstructor, decodeAudioData, delayNodeConstructor, dynamicsCompressorNodeConstructor, gainNodeConstructor, iIRFilterNodeConstructor, minimalBaseAudioContextConstructor, oscillatorNodeConstructor, pannerNodeConstructor, periodicWaveConstructor, stereoPannerNodeConstructor, waveShaperNodeConstructor);
    var createNativeMediaElementAudioSourceNode = Object(_factories_native_media_element_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_106__["createNativeMediaElementAudioSourceNodeFactory"])(createNativeAudioNode);
    var mediaElementAudioSourceNodeConstructor = Object(_factories_media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_77__["createMediaElementAudioSourceNodeConstructor"])(audioNodeConstructor, createNativeMediaElementAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);
    var createNativeMediaStreamAudioDestinationNode = Object(_factories_native_media_stream_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_107__["createNativeMediaStreamAudioDestinationNodeFactory"])(createNativeAudioNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"]);
    var mediaStreamAudioDestinationNodeConstructor = Object(_factories_media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_78__["createMediaStreamAudioDestinationNodeConstructor"])(audioNodeConstructor, createNativeMediaStreamAudioDestinationNode, getNativeContext, isNativeOfflineAudioContext);
    var createNativeMediaStreamAudioSourceNode = Object(_factories_native_media_stream_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_108__["createNativeMediaStreamAudioSourceNodeFactory"])(createNativeAudioNode);
    var mediaStreamAudioSourceNodeConstructor = Object(_factories_media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_79__["createMediaStreamAudioSourceNodeConstructor"])(audioNodeConstructor, createNativeMediaStreamAudioSourceNode, getNativeContext, isNativeOfflineAudioContext);
    var createNativeMediaStreamTrackAudioSourceNode = Object(_factories_native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_109__["createNativeMediaStreamTrackAudioSourceNodeFactory"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeAudioNode, isNativeOfflineAudioContext);
    var mediaStreamTrackAudioSourceNodeConstructor = Object(_factories_media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_80__["createMediaStreamTrackAudioSourceNodeConstructor"])(audioNodeConstructor, createNativeMediaStreamTrackAudioSourceNode, getNativeContext);
    var audioContextConstructor = Object(_factories_audio_context_constructor__WEBPACK_IMPORTED_MODULE_12__["createAudioContextConstructor"])(baseAudioContextConstructor, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], _factories_unknown_error__WEBPACK_IMPORTED_MODULE_155__["createUnknownError"], mediaElementAudioSourceNodeConstructor, mediaStreamAudioDestinationNodeConstructor, mediaStreamAudioSourceNodeConstructor, mediaStreamTrackAudioSourceNodeConstructor, nativeAudioContextConstructor);
    var getUnrenderedAudioWorkletNodes = Object(_factories_get_unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_59__["createGetUnrenderedAudioWorkletNodes"])(unrenderedAudioWorkletNodeStore);
    var addUnrenderedAudioWorkletNode = Object(_factories_add_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_6__["createAddUnrenderedAudioWorkletNode"])(getUnrenderedAudioWorkletNodes);
    var connectMultipleOutputs = Object(_factories_connect_multiple_outputs__WEBPACK_IMPORTED_MODULE_30__["createConnectMultipleOutputs"])(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_63__["createIndexSizeError"]);
    var deleteUnrenderedAudioWorkletNode = Object(_factories_delete_unrendered_audio_worklet_node__WEBPACK_IMPORTED_MODULE_43__["createDeleteUnrenderedAudioWorkletNode"])(getUnrenderedAudioWorkletNodes);
    var disconnectMultipleOutputs = Object(_factories_disconnect_multiple_outputs__WEBPACK_IMPORTED_MODULE_45__["createDisconnectMultipleOutputs"])(_factories_index_size_error__WEBPACK_IMPORTED_MODULE_63__["createIndexSizeError"]);
    var createNativeAudioWorkletNodeFaker = Object(_factories_native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_93__["createNativeAudioWorkletNodeFakerFactory"])(auxiliaryGainNodeStore, connectMultipleOutputs, _factories_index_size_error__WEBPACK_IMPORTED_MODULE_63__["createIndexSizeError"], _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, createNativeScriptProcessorNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, monitorConnections);
    var createNativeAudioWorkletNode = Object(_factories_native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_92__["createNativeAudioWorkletNodeFactory"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeAudioNode, createNativeAudioWorkletNodeFaker, createNativeGainNode, _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], monitorConnections);
    var nativeAudioWorkletNodeConstructor = Object(_factories_native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_91__["createNativeAudioWorkletNodeConstructor"])(window);
    var createAudioWorkletNodeRenderer = Object(_factories_audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_20__["createAudioWorkletNodeRendererFactory"])(connectAudioParam, connectMultipleOutputs, createNativeAudioBufferSourceNode, createNativeChannelMergerNode, createNativeChannelSplitterNode, createNativeConstantSourceNode, createNativeGainNode, deleteUnrenderedAudioWorkletNode, disconnectMultipleOutputs, exposeCurrentFrameAndCurrentTime, _helpers_get_native_audio_node__WEBPACK_IMPORTED_MODULE_169__["getNativeAudioNode"], nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor, renderAutomation, renderInputsOfAudioNode, renderNativeOfflineAudioContext); // The AudioWorkletNode constructor is only available in a SecureContext.

    var audioWorkletNodeConstructor = isSecureContext ? Object(_factories_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_19__["createAudioWorkletNodeConstructor"])(addUnrenderedAudioWorkletNode, audioNodeConstructor, createAudioParam, createAudioWorkletNodeRenderer, createNativeAudioWorkletNode, getNativeContext, isNativeOfflineAudioContext, nativeAudioWorkletNodeConstructor, _helpers_wrap_event_listener__WEBPACK_IMPORTED_MODULE_181__["wrapEventListener"]) : undefined;
    var minimalAudioContextConstructor = Object(_factories_minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_81__["createMinimalAudioContextConstructor"])(_factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], _factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], _factories_unknown_error__WEBPACK_IMPORTED_MODULE_155__["createUnknownError"], minimalBaseAudioContextConstructor, nativeAudioContextConstructor);
    var createNativeOfflineAudioContext = Object(_factories_create_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_37__["createCreateNativeOfflineAudioContext"])(_factories_not_supported_error__WEBPACK_IMPORTED_MODULE_120__["createNotSupportedError"], nativeOfflineAudioContextConstructor);
    var startRendering = Object(_factories_start_rendering__WEBPACK_IMPORTED_MODULE_131__["createStartRendering"])(audioBufferStore, cacheTestResult, getAudioNodeRenderer, getUnrenderedAudioWorkletNodes, renderNativeOfflineAudioContext, _helpers_test_audio_buffer_copy_channel_methods_out_of_bounds_support__WEBPACK_IMPORTED_MODULE_177__["testAudioBufferCopyChannelMethodsOutOfBoundsSupport"], wrapAudioBufferCopyChannelMethods, wrapAudioBufferCopyChannelMethodsOutOfBounds);
    var minimalOfflineAudioContextConstructor = Object(_factories_minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_83__["createMinimalOfflineAudioContextConstructor"])(cacheTestResult, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeOfflineAudioContext, minimalBaseAudioContextConstructor, startRendering);
    var offlineAudioContextConstructor = Object(_factories_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_121__["createOfflineAudioContextConstructor"])(baseAudioContextConstructor, cacheTestResult, _factories_invalid_state_error__WEBPACK_IMPORTED_MODULE_65__["createInvalidStateError"], createNativeOfflineAudioContext, startRendering);
    var isAnyAudioContext = Object(_factories_is_any_audio_context__WEBPACK_IMPORTED_MODULE_66__["createIsAnyAudioContext"])(_globals__WEBPACK_IMPORTED_MODULE_164__["CONTEXT_STORE"], isNativeAudioContext);
    var isAnyAudioNode = Object(_factories_is_any_audio_node__WEBPACK_IMPORTED_MODULE_67__["createIsAnyAudioNode"])(_globals__WEBPACK_IMPORTED_MODULE_164__["AUDIO_NODE_STORE"], isNativeAudioNode);
    var isAnyAudioParam = Object(_factories_is_any_audio_param__WEBPACK_IMPORTED_MODULE_68__["createIsAnyAudioParam"])(_globals__WEBPACK_IMPORTED_MODULE_164__["AUDIO_PARAM_STORE"], isNativeAudioParam);
    var isAnyOfflineAudioContext = Object(_factories_is_any_offline_audio_context__WEBPACK_IMPORTED_MODULE_69__["createIsAnyOfflineAudioContext"])(_globals__WEBPACK_IMPORTED_MODULE_164__["CONTEXT_STORE"], isNativeOfflineAudioContext);

    var isSupported = function isSupported() {
      return Object(_factories_is_supported_promise__WEBPACK_IMPORTED_MODULE_76__["createIsSupportedPromise"])(cacheTestResult, Object(_factories_test_audio_buffer_copy_channel_methods_subarray_support__WEBPACK_IMPORTED_MODULE_135__["createTestAudioBufferCopyChannelMethodsSubarraySupport"])(nativeOfflineAudioContextConstructor), Object(_factories_test_audio_context_close_method_support__WEBPACK_IMPORTED_MODULE_140__["createTestAudioContextCloseMethodSupport"])(nativeAudioContextConstructor), Object(_factories_test_audio_context_decode_audio_data_method_type_error_support__WEBPACK_IMPORTED_MODULE_141__["createTestAudioContextDecodeAudioDataMethodTypeErrorSupport"])(nativeOfflineAudioContextConstructor), Object(_factories_test_audio_context_options_support__WEBPACK_IMPORTED_MODULE_142__["createTestAudioContextOptionsSupport"])(nativeAudioContextConstructor), Object(_factories_test_audio_node_connect_method_support__WEBPACK_IMPORTED_MODULE_143__["createTestAudioNodeConnectMethodSupport"])(nativeOfflineAudioContextConstructor), Object(_factories_test_audio_worklet_processor_no_outputs_support__WEBPACK_IMPORTED_MODULE_147__["createTestAudioWorkletProcessorNoOutputsSupport"])(nativeAudioWorkletNodeConstructor, nativeOfflineAudioContextConstructor), Object(_factories_test_channel_merger_node_channel_count_support__WEBPACK_IMPORTED_MODULE_148__["createTestChannelMergerNodeChannelCountSupport"])(createNativeAudioNode, nativeOfflineAudioContextConstructor), Object(_factories_test_constant_source_node_accurate_scheduling_support__WEBPACK_IMPORTED_MODULE_149__["createTestConstantSourceNodeAccurateSchedulingSupport"])(createNativeAudioNode, nativeOfflineAudioContextConstructor), Object(_factories_test_convolver_node_buffer_reassignability_support__WEBPACK_IMPORTED_MODULE_150__["createTestConvolverNodeBufferReassignabilitySupport"])(nativeOfflineAudioContextConstructor), Object(_factories_test_is_secure_context_support__WEBPACK_IMPORTED_MODULE_151__["createTestIsSecureContextSupport"])(window), Object(_factories_test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_152__["createTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupport"])(nativeAudioContextConstructor), Object(_factories_test_stereo_panner_node_default_value_support__WEBPACK_IMPORTED_MODULE_154__["createTestStereoPannerNodeDefaultValueSupport"])(nativeOfflineAudioContextConstructor), _helpers_test_transferables_support__WEBPACK_IMPORTED_MODULE_179__["testTransferablesSupport"]);
    }; //# sourceMappingURL=/build/es2019/module.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/read-only-map.js":
  /*!*******************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/read-only-map.js ***!
    \*******************************************************************************/

  /*! exports provided: ReadOnlyMap */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019ReadOnlyMapJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ReadOnlyMap", function () {
      return ReadOnlyMap;
    });

    var ReadOnlyMap = /*#__PURE__*/function () {
      function ReadOnlyMap(parameters) {
        _classCallCheck2(this, ReadOnlyMap);

        this._map = new Map(parameters);
      }

      _createClass2(ReadOnlyMap, [{
        key: "entries",
        value: function entries() {
          return this._map.entries();
        }
      }, {
        key: "forEach",
        value: function forEach(callback) {
          var _this35 = this;

          var thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
          return this._map.forEach(function (value, key) {
            return callback.call(thisArg, value, key, _this35);
          });
        }
      }, {
        key: "get",
        value: function get(name) {
          return this._map.get(name);
        }
      }, {
        key: "has",
        value: function has(name) {
          return this._map.has(name);
        }
      }, {
        key: "keys",
        value: function keys() {
          return this._map.keys();
        }
      }, {
        key: "values",
        value: function values() {
          return this._map.values();
        }
      }, {
        key: "size",
        get: function get() {
          return this._map.size;
        }
      }]);

      return ReadOnlyMap;
    }(); //# sourceMappingURL=/build/es2019/read-only-map.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/abort-error-factory.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/abort-error-factory.js ***!
    \*******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAbortErrorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/abort-error-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/active-input-connection.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/active-input-connection.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesActiveInputConnectionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/active-input-connection.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-factory.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-factory.js ***!
    \**********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAddAudioNodeConnectionsFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/add-audio-node-connections-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-function.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-function.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAddAudioNodeConnectionsFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/add-audio-node-connections-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-factory.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAddAudioParamConnectionsFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/add-audio-param-connections-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-function.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-function.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAddAudioParamConnectionsFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/add-audio-param-connections-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-factory.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAddAudioWorkletModuleFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/add-audio-worklet-module-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-function.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-function.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAddAudioWorkletModuleFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/add-audio-worklet-module-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-factory.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-factory.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAddSilentConnectionFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/add-silent-connection-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-function.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-function.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAddSilentConnectionFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/add-silent-connection-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-factory.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAddUnrenderedAudioWorkletNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/add-unrendered-audio-worklet-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-function.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-function.js ***!
    \******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAddUnrenderedAudioWorkletNodeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/add-unrendered-audio-worklet-node-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor-factory.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor-factory.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAnalyserNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/analyser-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAnalyserNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/analyser-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory-factory.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory-factory.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAnalyserNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/analyser-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAnalyserNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/analyser-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/any-audio-buffer.js":
  /*!****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/any-audio-buffer.js ***!
    \****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAnyAudioBufferJs(module, exports) {//# sourceMappingURL=/build/es2019/types/any-audio-buffer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/any-context.js":
  /*!***********************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/any-context.js ***!
    \***********************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAnyContextJs(module, exports) {//# sourceMappingURL=/build/es2019/types/any-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor-factory.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioBufferConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-buffer-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor.js ***!
    \************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioBufferConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-buffer-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor-factory.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor-factory.js ***!
    \********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioBufferSourceNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-buffer-source-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioBufferSourceNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-buffer-source-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js":
  /*!*************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js ***!
    \*************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioBufferSourceNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioBufferSourceNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-buffer-source-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioBufferSourceNodeRendererJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-buffer-source-node-renderer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-store.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-store.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioBufferStoreJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-buffer-store.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor-factory.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor-factory.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioContextConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-context-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioContextConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-context-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-context-latency-category.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-latency-category.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioContextLatencyCategoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-context-latency-category.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-context-state.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-context-state.js ***!
    \*******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioContextStateJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-context-state.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor-factory.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor-factory.js ***!
    \******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioDestinationNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-destination-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor.js ***!
    \**********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioDestinationNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-destination-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioDestinationNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-destination-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory-factory.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory-factory.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioListenerFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-listener-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory.js ***!
    \**********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioListenerFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-listener-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections-store.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections-store.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioNodeConnectionsStoreJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-node-connections-store.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections.js ***!
    \**********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioNodeConnectionsJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-node-connections.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor.js ***!
    \**********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-node-output-connection.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-output-connection.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioNodeOutputConnectionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-node-output-connection.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-node-renderer.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-renderer.js ***!
    \*******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioNodeRendererJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-node-renderer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-node-store.js":
  /*!****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-node-store.js ***!
    \****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioNodeStoreJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-node-store.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-param-audio-node-store.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-audio-node-store.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioParamAudioNodeStoreJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-param-audio-node-store.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections-store.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections-store.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioParamConnectionsStoreJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-param-connections-store.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioParamConnectionsJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-param-connections.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory-factory.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory-factory.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioParamFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-param-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js ***!
    \*******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioParamFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-param-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-param-map.js":
  /*!***************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-map.js ***!
    \***************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioParamMapJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-param-map.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-param-output-connection.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-output-connection.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioParamOutputConnectionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-param-output-connection.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-param-renderer-factory.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-renderer-factory.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioParamRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-param-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-param-store.js":
  /*!*****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-param-store.js ***!
    \*****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioParamStoreJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-param-store.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor-factory.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor-factory.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioWorkletNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-worklet-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioWorkletNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-worklet-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory-factory.js ***!
    \*******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioWorkletNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-worklet-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAudioWorkletNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/audio-worklet-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/auxiliary-gain-node-store.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/auxiliary-gain-node-store.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesAuxiliaryGainNodeStoreJs(module, exports) {//# sourceMappingURL=/build/es2019/types/auxiliary-gain-node-store.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesBaseAudioContextConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/base-audio-context-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesBaseAudioContextConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/base-audio-context-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor-factory.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor-factory.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesBiquadFilterNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/biquad-filter-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesBiquadFilterNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/biquad-filter-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory-factory.js ***!
    \*******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesBiquadFilterNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/biquad-filter-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesBiquadFilterNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/biquad-filter-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-type.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-type.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesBiquadFilterTypeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/biquad-filter-type.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-factory.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-factory.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesCacheTestResultFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/cache-test-result-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-function.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-function.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesCacheTestResultFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/cache-test-result-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/channel-count-mode.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-count-mode.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesChannelCountModeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/channel-count-mode.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/channel-interpretation.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-interpretation.js ***!
    \**********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesChannelInterpretationJs(module, exports) {//# sourceMappingURL=/build/es2019/types/channel-interpretation.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesChannelMergerNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/channel-merger-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesChannelMergerNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/channel-merger-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory-factory.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory-factory.js ***!
    \********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesChannelMergerNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/channel-merger-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesChannelMergerNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/channel-merger-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor-factory.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesChannelSplitterNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/channel-splitter-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesChannelSplitterNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/channel-splitter-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory-factory.js":
  /*!**********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory-factory.js ***!
    \**********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesChannelSplitterNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/channel-splitter-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesChannelSplitterNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/channel-splitter-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-factory.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-factory.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConnectAudioParamFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/connect-audio-param-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-function.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-function.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConnectAudioParamFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/connect-audio-param-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-factory.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConnectMultipleOutputsFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/connect-multiple-outputs-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-function.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-function.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConnectMultipleOutputsFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/connect-multiple-outputs-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js":
  /*!*******************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js ***!
    \*******************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConnectNativeAudioNodeToNativeAudioNodeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js":
  /*!*********************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js ***!
    \*********************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConnectedNativeAudioBufferSourceNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory.js":
  /*!*************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory.js ***!
    \*************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConnectedNativeAudioBufferSourceNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/connected-native-audio-buffer-source-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor-factory.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor-factory.js ***!
    \****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConstantSourceNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/constant-source-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConstantSourceNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/constant-source-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory-factory.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory-factory.js ***!
    \*********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConstantSourceNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/constant-source-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory.js ***!
    \*************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConstantSourceNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/constant-source-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConstantSourceNodeRendererJs(module, exports) {//# sourceMappingURL=/build/es2019/types/constant-source-node-renderer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/constructor.js":
  /*!***********************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/constructor.js ***!
    \***********************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/context-store.js":
  /*!*************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/context-store.js ***!
    \*************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesContextStoreJs(module, exports) {//# sourceMappingURL=/build/es2019/types/context-store.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/context.js":
  /*!*******************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/context.js ***!
    \*******************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesContextJs(module, exports) {//# sourceMappingURL=/build/es2019/types/context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConvertNumberToUnsignedLongFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/convert-number-to-unsigned-long-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-function.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-function.js ***!
    \****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConvertNumberToUnsignedLongFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/convert-number-to-unsigned-long-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor-factory.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor-factory.js ***!
    \**********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConvolverNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/convolver-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConvolverNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/convolver-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConvolverNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/convolver-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesConvolverNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/convolver-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-factory.js ***!
    \*******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesCreateNativeOfflineAudioContextFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/create-native-offline-audio-context-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-function.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-function.js ***!
    \********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesCreateNativeOfflineAudioContextFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/create-native-offline-audio-context-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/cycle-counters.js":
  /*!**************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/cycle-counters.js ***!
    \**************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesCycleCountersJs(module, exports) {//# sourceMappingURL=/build/es2019/types/cycle-counters.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/data-clone-error-factory.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/data-clone-error-factory.js ***!
    \************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDataCloneErrorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/data-clone-error-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDecodeAudioDataFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/decode-audio-data-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-function.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-function.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDecodeAudioDataFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/decode-audio-data-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/decode-error-callback.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-error-callback.js ***!
    \*********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDecodeErrorCallbackJs(module, exports) {//# sourceMappingURL=/build/es2019/types/decode-error-callback.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/decode-success-callback.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/decode-success-callback.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDecodeSuccessCallbackJs(module, exports) {//# sourceMappingURL=/build/es2019/types/decode-success-callback.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-factory.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-factory.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDecrementCycleCounterFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/decrement-cycle-counter-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-function.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-function.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDecrementCycleCounterFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/decrement-cycle-counter-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor-factory.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor-factory.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDelayNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/delay-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor.js ***!
    \**********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDelayNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/delay-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory-factory.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDelayNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/delay-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDelayNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/delay-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js ***!
    \********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDeleteUnrenderedAudioWorkletNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-function.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-function.js ***!
    \*********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDeleteUnrenderedAudioWorkletNodeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/delete-unrendered-audio-worklet-node-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-factory.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-factory.js ***!
    \*********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDetectCyclesFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/detect-cycles-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-function.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-function.js ***!
    \**********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDetectCyclesFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/detect-cycles-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-factory.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDisconnectMultipleOutputsFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/disconnect-multiple-outputs-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDisconnectMultipleOutputsFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/disconnect-multiple-outputs-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js":
  /*!************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js ***!
    \************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDisconnectNativeAudioNodeFromNativeAudioNodeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/distance-model-type.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/distance-model-type.js ***!
    \*******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDistanceModelTypeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/distance-model-type.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js ***!
    \********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDynamicsCompressorNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/dynamics-compressor-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDynamicsCompressorNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/dynamics-compressor-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js":
  /*!*************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js ***!
    \*************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDynamicsCompressorNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesDynamicsCompressorNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/dynamics-compressor-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/encoding-error-factory.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/encoding-error-factory.js ***!
    \**********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesEncodingErrorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/encoding-error-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/error-event-handler.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/error-event-handler.js ***!
    \*******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesErrorEventHandlerJs(module, exports) {//# sourceMappingURL=/build/es2019/types/error-event-handler.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/evaluate-audio-worklet-global-scope-function.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/evaluate-audio-worklet-global-scope-function.js ***!
    \********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesEvaluateAudioWorkletGlobalScopeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/evaluate-audio-worklet-global-scope-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-factory.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-factory.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesEvaluateSourceFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/evaluate-source-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-function.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-function.js ***!
    \************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesEvaluateSourceFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/evaluate-source-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/event-handler.js":
  /*!*************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/event-handler.js ***!
    \*************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesEventHandlerJs(module, exports) {//# sourceMappingURL=/build/es2019/types/event-handler.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor-factory.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesEventTargetConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/event-target-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor.js ***!
    \************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesEventTargetConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/event-target-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-factory.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-factory.js ***!
    \*********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesExposeCurrentFrameAndCurrentTimeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/expose-current-frame-and-current-time-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function.js":
  /*!**********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function.js ***!
    \**********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesExposeCurrentFrameAndCurrentTimeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/expose-current-frame-and-current-time-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-factory.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/fetch-source-factory.js ***!
    \********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesFetchSourceFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/fetch-source-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-function.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/fetch-source-function.js ***!
    \*********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesFetchSourceFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/fetch-source-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor-factory.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor-factory.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGainNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/gain-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor.js ***!
    \*********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGainNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/gain-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory-factory.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory-factory.js ***!
    \**********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGainNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/gain-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGainNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/gain-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-connections-function.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-connections-function.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetAudioNodeConnectionsFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-audio-node-connections-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-factory.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-factory.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetAudioNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-audio-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-function.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-function.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetAudioNodeRendererFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-audio-node-renderer-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-connections-function.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-connections-function.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetAudioParamConnectionsFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-audio-param-connections-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-factory.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetAudioParamRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-audio-param-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-function.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-function.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetAudioParamRendererFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-audio-param-renderer-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-backup-native-context-factory.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-backup-native-context-factory.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetBackupNativeContextFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-backup-native-context-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-backup-native-context-function.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-backup-native-context-function.js ***!
    \**********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetBackupNativeContextFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-backup-native-context-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-node-function.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-node-function.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetNativeAudioNodeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-native-audio-node-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-param-function.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-param-function.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetNativeAudioParamFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-native-audio-param-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-factory.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-context-factory.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetNativeContextFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-native-context-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-function.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-native-context-function.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetNativeContextFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-native-context-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js ***!
    \******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetUnrenderedAudioWorkletNodesFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js ***!
    \*******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetUnrenderedAudioWorkletNodesFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/get-value-for-key-function.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/get-value-for-key-function.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesGetValueForKeyFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/get-value-for-key-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor-factory.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIirFilterNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/iir-filter-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIirFilterNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/iir-filter-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory-factory.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory-factory.js ***!
    \****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIirFilterNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/iir-filter-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIirFilterNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/iir-filter-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIncrementCycleCounterFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/increment-cycle-counter-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIncrementCycleCounterFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/increment-cycle-counter-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-function.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-function.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIncrementCycleCounterFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/increment-cycle-counter-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/index-size-error-factory.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/index-size-error-factory.js ***!
    \************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIndexSizeErrorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/index-size-error-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/index.js":
  /*!*****************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/index.js ***!
    \*****************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _abort_error_factory__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./abort-error-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/abort-error-factory.js");
    /* harmony import */


    var _abort_error_factory__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_abort_error_factory__WEBPACK_IMPORTED_MODULE_0__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _abort_error_factory__WEBPACK_IMPORTED_MODULE_0__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _abort_error_factory__WEBPACK_IMPORTED_MODULE_0__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _active_input_connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./active-input-connection */
    "./node_modules/standardized-audio-context/build/es2019/types/active-input-connection.js");
    /* harmony import */


    var _active_input_connection__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_active_input_connection__WEBPACK_IMPORTED_MODULE_1__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _active_input_connection__WEBPACK_IMPORTED_MODULE_1__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _active_input_connection__WEBPACK_IMPORTED_MODULE_1__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _add_audio_node_connections_factory__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./add-audio-node-connections-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-factory.js");
    /* harmony import */


    var _add_audio_node_connections_factory__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_add_audio_node_connections_factory__WEBPACK_IMPORTED_MODULE_2__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _add_audio_node_connections_factory__WEBPACK_IMPORTED_MODULE_2__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _add_audio_node_connections_factory__WEBPACK_IMPORTED_MODULE_2__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _add_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./add-audio-node-connections-function */
    "./node_modules/standardized-audio-context/build/es2019/types/add-audio-node-connections-function.js");
    /* harmony import */


    var _add_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_add_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_3__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _add_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_3__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _add_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_3__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _add_audio_param_connections_factory__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./add-audio-param-connections-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-factory.js");
    /* harmony import */


    var _add_audio_param_connections_factory__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_add_audio_param_connections_factory__WEBPACK_IMPORTED_MODULE_4__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _add_audio_param_connections_factory__WEBPACK_IMPORTED_MODULE_4__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _add_audio_param_connections_factory__WEBPACK_IMPORTED_MODULE_4__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _add_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./add-audio-param-connections-function */
    "./node_modules/standardized-audio-context/build/es2019/types/add-audio-param-connections-function.js");
    /* harmony import */


    var _add_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_add_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_5__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _add_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_5__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _add_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_5__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _add_audio_worklet_module_factory__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./add-audio-worklet-module-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-factory.js");
    /* harmony import */


    var _add_audio_worklet_module_factory__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_add_audio_worklet_module_factory__WEBPACK_IMPORTED_MODULE_6__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _add_audio_worklet_module_factory__WEBPACK_IMPORTED_MODULE_6__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _add_audio_worklet_module_factory__WEBPACK_IMPORTED_MODULE_6__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _add_audio_worklet_module_function__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./add-audio-worklet-module-function */
    "./node_modules/standardized-audio-context/build/es2019/types/add-audio-worklet-module-function.js");
    /* harmony import */


    var _add_audio_worklet_module_function__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_add_audio_worklet_module_function__WEBPACK_IMPORTED_MODULE_7__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _add_audio_worklet_module_function__WEBPACK_IMPORTED_MODULE_7__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _add_audio_worklet_module_function__WEBPACK_IMPORTED_MODULE_7__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _add_silent_connection_factory__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./add-silent-connection-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-factory.js");
    /* harmony import */


    var _add_silent_connection_factory__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_add_silent_connection_factory__WEBPACK_IMPORTED_MODULE_8__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _add_silent_connection_factory__WEBPACK_IMPORTED_MODULE_8__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _add_silent_connection_factory__WEBPACK_IMPORTED_MODULE_8__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _add_silent_connection_function__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./add-silent-connection-function */
    "./node_modules/standardized-audio-context/build/es2019/types/add-silent-connection-function.js");
    /* harmony import */


    var _add_silent_connection_function__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_add_silent_connection_function__WEBPACK_IMPORTED_MODULE_9__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _add_silent_connection_function__WEBPACK_IMPORTED_MODULE_9__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _add_silent_connection_function__WEBPACK_IMPORTED_MODULE_9__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _add_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./add-unrendered-audio-worklet-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-factory.js");
    /* harmony import */


    var _add_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_add_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_10__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _add_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_10__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _add_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_10__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _add_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./add-unrendered-audio-worklet-node-function */
    "./node_modules/standardized-audio-context/build/es2019/types/add-unrendered-audio-worklet-node-function.js");
    /* harmony import */


    var _add_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_add_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_11__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _add_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_11__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _add_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_11__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _analyser_node_constructor__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./analyser-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor.js");
    /* harmony import */


    var _analyser_node_constructor__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_analyser_node_constructor__WEBPACK_IMPORTED_MODULE_12__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _analyser_node_constructor__WEBPACK_IMPORTED_MODULE_12__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _analyser_node_constructor__WEBPACK_IMPORTED_MODULE_12__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _analyser_node_constructor_factory__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./analyser-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-constructor-factory.js");
    /* harmony import */


    var _analyser_node_constructor_factory__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_analyser_node_constructor_factory__WEBPACK_IMPORTED_MODULE_13__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _analyser_node_constructor_factory__WEBPACK_IMPORTED_MODULE_13__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _analyser_node_constructor_factory__WEBPACK_IMPORTED_MODULE_13__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./analyser-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory.js");
    /* harmony import */


    var _analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_14__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_14__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _analyser_node_renderer_factory__WEBPACK_IMPORTED_MODULE_14__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _analyser_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./analyser-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/analyser-node-renderer-factory-factory.js");
    /* harmony import */


    var _analyser_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_analyser_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_15__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _analyser_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_15__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _analyser_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_15__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _any_audio_buffer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./any-audio-buffer */
    "./node_modules/standardized-audio-context/build/es2019/types/any-audio-buffer.js");
    /* harmony import */


    var _any_audio_buffer__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_any_audio_buffer__WEBPACK_IMPORTED_MODULE_16__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _any_audio_buffer__WEBPACK_IMPORTED_MODULE_16__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _any_audio_buffer__WEBPACK_IMPORTED_MODULE_16__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _any_context__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./any-context */
    "./node_modules/standardized-audio-context/build/es2019/types/any-context.js");
    /* harmony import */


    var _any_context__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_any_context__WEBPACK_IMPORTED_MODULE_17__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _any_context__WEBPACK_IMPORTED_MODULE_17__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _any_context__WEBPACK_IMPORTED_MODULE_17__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./audio-buffer-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor.js");
    /* harmony import */


    var _audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_18__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_18__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_18__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./audio-buffer-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-constructor-factory.js");
    /* harmony import */


    var _audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_19__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_19__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_19__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ./audio-buffer-source-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor.js");
    /* harmony import */


    var _audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_20__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_20__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_source_node_constructor__WEBPACK_IMPORTED_MODULE_20__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./audio-buffer-source-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-constructor-factory.js");
    /* harmony import */


    var _audio_buffer_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_21__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_21__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_21__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./audio-buffer-source-node-renderer */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer.js");
    /* harmony import */


    var _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_22__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_22__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_source_node_renderer__WEBPACK_IMPORTED_MODULE_22__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ./audio-buffer-source-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory.js");
    /* harmony import */


    var _audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_23__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_23__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_23__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ./audio-buffer-source-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-source-node-renderer-factory-factory.js");
    /* harmony import */


    var _audio_buffer_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_24__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_24__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_24__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_buffer_store__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./audio-buffer-store */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-buffer-store.js");
    /* harmony import */


    var _audio_buffer_store__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(_audio_buffer_store__WEBPACK_IMPORTED_MODULE_25__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_buffer_store__WEBPACK_IMPORTED_MODULE_25__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_buffer_store__WEBPACK_IMPORTED_MODULE_25__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_context_constructor__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ./audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor.js");
    /* harmony import */


    var _audio_context_constructor__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_audio_context_constructor__WEBPACK_IMPORTED_MODULE_26__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_context_constructor__WEBPACK_IMPORTED_MODULE_26__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_context_constructor__WEBPACK_IMPORTED_MODULE_26__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ./audio-context-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-context-constructor-factory.js");
    /* harmony import */


    var _audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_27___default = /*#__PURE__*/__webpack_require__.n(_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_27__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_27__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_27__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_context_latency_category__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! ./audio-context-latency-category */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-context-latency-category.js");
    /* harmony import */


    var _audio_context_latency_category__WEBPACK_IMPORTED_MODULE_28___default = /*#__PURE__*/__webpack_require__.n(_audio_context_latency_category__WEBPACK_IMPORTED_MODULE_28__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_context_latency_category__WEBPACK_IMPORTED_MODULE_28__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_context_latency_category__WEBPACK_IMPORTED_MODULE_28__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_context_state__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! ./audio-context-state */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-context-state.js");
    /* harmony import */


    var _audio_context_state__WEBPACK_IMPORTED_MODULE_29___default = /*#__PURE__*/__webpack_require__.n(_audio_context_state__WEBPACK_IMPORTED_MODULE_29__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_context_state__WEBPACK_IMPORTED_MODULE_29__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_context_state__WEBPACK_IMPORTED_MODULE_29__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
    /*! ./audio-destination-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor.js");
    /* harmony import */


    var _audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_30___default = /*#__PURE__*/__webpack_require__.n(_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_30__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_30__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_30__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
    /*! ./audio-destination-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-constructor-factory.js");
    /* harmony import */


    var _audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(_audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_31__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_31__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_31__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
    /*! ./audio-destination-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-destination-node-renderer-factory.js");
    /* harmony import */


    var _audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(_audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_32__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_32__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_destination_node_renderer_factory__WEBPACK_IMPORTED_MODULE_32__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_listener_factory__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
    /*! ./audio-listener-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory.js");
    /* harmony import */


    var _audio_listener_factory__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(_audio_listener_factory__WEBPACK_IMPORTED_MODULE_33__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_listener_factory__WEBPACK_IMPORTED_MODULE_33__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_listener_factory__WEBPACK_IMPORTED_MODULE_33__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_listener_factory_factory__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
    /*! ./audio-listener-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-listener-factory-factory.js");
    /* harmony import */


    var _audio_listener_factory_factory__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__webpack_require__.n(_audio_listener_factory_factory__WEBPACK_IMPORTED_MODULE_34__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_listener_factory_factory__WEBPACK_IMPORTED_MODULE_34__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_listener_factory_factory__WEBPACK_IMPORTED_MODULE_34__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_node_connections__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
    /*! ./audio-node-connections */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections.js");
    /* harmony import */


    var _audio_node_connections__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(_audio_node_connections__WEBPACK_IMPORTED_MODULE_35__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_node_connections__WEBPACK_IMPORTED_MODULE_35__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_node_connections__WEBPACK_IMPORTED_MODULE_35__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_node_connections_store__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
    /*! ./audio-node-connections-store */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-node-connections-store.js");
    /* harmony import */


    var _audio_node_connections_store__WEBPACK_IMPORTED_MODULE_36___default = /*#__PURE__*/__webpack_require__.n(_audio_node_connections_store__WEBPACK_IMPORTED_MODULE_36__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_node_connections_store__WEBPACK_IMPORTED_MODULE_36__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_node_connections_store__WEBPACK_IMPORTED_MODULE_36__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_node_constructor__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
    /*! ./audio-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor.js");
    /* harmony import */


    var _audio_node_constructor__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(_audio_node_constructor__WEBPACK_IMPORTED_MODULE_37__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_node_constructor__WEBPACK_IMPORTED_MODULE_37__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_node_constructor__WEBPACK_IMPORTED_MODULE_37__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_node_constructor_factory__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
    /*! ./audio-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-node-constructor-factory.js");
    /* harmony import */


    var _audio_node_constructor_factory__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(_audio_node_constructor_factory__WEBPACK_IMPORTED_MODULE_38__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_node_constructor_factory__WEBPACK_IMPORTED_MODULE_38__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_node_constructor_factory__WEBPACK_IMPORTED_MODULE_38__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_node_output_connection__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
    /*! ./audio-node-output-connection */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-node-output-connection.js");
    /* harmony import */


    var _audio_node_output_connection__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(_audio_node_output_connection__WEBPACK_IMPORTED_MODULE_39__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_node_output_connection__WEBPACK_IMPORTED_MODULE_39__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_node_output_connection__WEBPACK_IMPORTED_MODULE_39__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_node_renderer__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
    /*! ./audio-node-renderer */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-node-renderer.js");
    /* harmony import */


    var _audio_node_renderer__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(_audio_node_renderer__WEBPACK_IMPORTED_MODULE_40__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_node_renderer__WEBPACK_IMPORTED_MODULE_40__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_node_renderer__WEBPACK_IMPORTED_MODULE_40__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_node_store__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
    /*! ./audio-node-store */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-node-store.js");
    /* harmony import */


    var _audio_node_store__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(_audio_node_store__WEBPACK_IMPORTED_MODULE_41__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_node_store__WEBPACK_IMPORTED_MODULE_41__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_node_store__WEBPACK_IMPORTED_MODULE_41__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param_audio_node_store__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
    /*! ./audio-param-audio-node-store */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-param-audio-node-store.js");
    /* harmony import */


    var _audio_param_audio_node_store__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(_audio_param_audio_node_store__WEBPACK_IMPORTED_MODULE_42__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param_audio_node_store__WEBPACK_IMPORTED_MODULE_42__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param_audio_node_store__WEBPACK_IMPORTED_MODULE_42__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param_connections__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
    /*! ./audio-param-connections */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections.js");
    /* harmony import */


    var _audio_param_connections__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(_audio_param_connections__WEBPACK_IMPORTED_MODULE_43__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param_connections__WEBPACK_IMPORTED_MODULE_43__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param_connections__WEBPACK_IMPORTED_MODULE_43__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param_connections_store__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
    /*! ./audio-param-connections-store */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-param-connections-store.js");
    /* harmony import */


    var _audio_param_connections_store__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(_audio_param_connections_store__WEBPACK_IMPORTED_MODULE_44__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param_connections_store__WEBPACK_IMPORTED_MODULE_44__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param_connections_store__WEBPACK_IMPORTED_MODULE_44__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param_factory__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
    /*! ./audio-param-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory.js");
    /* harmony import */


    var _audio_param_factory__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(_audio_param_factory__WEBPACK_IMPORTED_MODULE_45__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param_factory__WEBPACK_IMPORTED_MODULE_45__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param_factory__WEBPACK_IMPORTED_MODULE_45__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param_factory_factory__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
    /*! ./audio-param-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-param-factory-factory.js");
    /* harmony import */


    var _audio_param_factory_factory__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(_audio_param_factory_factory__WEBPACK_IMPORTED_MODULE_46__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param_factory_factory__WEBPACK_IMPORTED_MODULE_46__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param_factory_factory__WEBPACK_IMPORTED_MODULE_46__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param_map__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
    /*! ./audio-param-map */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-param-map.js");
    /* harmony import */


    var _audio_param_map__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(_audio_param_map__WEBPACK_IMPORTED_MODULE_47__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param_map__WEBPACK_IMPORTED_MODULE_47__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param_map__WEBPACK_IMPORTED_MODULE_47__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param_output_connection__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(
    /*! ./audio-param-output-connection */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-param-output-connection.js");
    /* harmony import */


    var _audio_param_output_connection__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__webpack_require__.n(_audio_param_output_connection__WEBPACK_IMPORTED_MODULE_48__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param_output_connection__WEBPACK_IMPORTED_MODULE_48__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param_output_connection__WEBPACK_IMPORTED_MODULE_48__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(
    /*! ./audio-param-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-param-renderer-factory.js");
    /* harmony import */


    var _audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_49___default = /*#__PURE__*/__webpack_require__.n(_audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_49__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_49__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_49__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_param_store__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(
    /*! ./audio-param-store */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-param-store.js");
    /* harmony import */


    var _audio_param_store__WEBPACK_IMPORTED_MODULE_50___default = /*#__PURE__*/__webpack_require__.n(_audio_param_store__WEBPACK_IMPORTED_MODULE_50__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_param_store__WEBPACK_IMPORTED_MODULE_50__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_param_store__WEBPACK_IMPORTED_MODULE_50__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(
    /*! ./audio-worklet-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor.js");
    /* harmony import */


    var _audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_51___default = /*#__PURE__*/__webpack_require__.n(_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_51__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_51__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_51__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(
    /*! ./audio-worklet-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-constructor-factory.js");
    /* harmony import */


    var _audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_52___default = /*#__PURE__*/__webpack_require__.n(_audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_52__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_52__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_52__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(
    /*! ./audio-worklet-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory.js");
    /* harmony import */


    var _audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_53___default = /*#__PURE__*/__webpack_require__.n(_audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_53__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_53__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_worklet_node_renderer_factory__WEBPACK_IMPORTED_MODULE_53__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _audio_worklet_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(
    /*! ./audio-worklet-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/audio-worklet-node-renderer-factory-factory.js");
    /* harmony import */


    var _audio_worklet_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_54___default = /*#__PURE__*/__webpack_require__.n(_audio_worklet_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_54__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _audio_worklet_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_54__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _audio_worklet_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_54__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _auxiliary_gain_node_store__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(
    /*! ./auxiliary-gain-node-store */
    "./node_modules/standardized-audio-context/build/es2019/types/auxiliary-gain-node-store.js");
    /* harmony import */


    var _auxiliary_gain_node_store__WEBPACK_IMPORTED_MODULE_55___default = /*#__PURE__*/__webpack_require__.n(_auxiliary_gain_node_store__WEBPACK_IMPORTED_MODULE_55__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _auxiliary_gain_node_store__WEBPACK_IMPORTED_MODULE_55__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _auxiliary_gain_node_store__WEBPACK_IMPORTED_MODULE_55__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(
    /*! ./base-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor.js");
    /* harmony import */


    var _base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_56___default = /*#__PURE__*/__webpack_require__.n(_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_56__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_56__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_56__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(
    /*! ./base-audio-context-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/base-audio-context-constructor-factory.js");
    /* harmony import */


    var _base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_57___default = /*#__PURE__*/__webpack_require__.n(_base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_57__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_57__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_57__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(
    /*! ./biquad-filter-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor.js");
    /* harmony import */


    var _biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_58___default = /*#__PURE__*/__webpack_require__.n(_biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_58__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_58__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _biquad_filter_node_constructor__WEBPACK_IMPORTED_MODULE_58__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _biquad_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(
    /*! ./biquad-filter-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-constructor-factory.js");
    /* harmony import */


    var _biquad_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_59___default = /*#__PURE__*/__webpack_require__.n(_biquad_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_59__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _biquad_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_59__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _biquad_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_59__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(
    /*! ./biquad-filter-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory.js");
    /* harmony import */


    var _biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_60___default = /*#__PURE__*/__webpack_require__.n(_biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_60__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_60__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _biquad_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_60__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _biquad_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(
    /*! ./biquad-filter-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-node-renderer-factory-factory.js");
    /* harmony import */


    var _biquad_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_61___default = /*#__PURE__*/__webpack_require__.n(_biquad_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_61__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _biquad_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_61__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _biquad_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_61__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _biquad_filter_type__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(
    /*! ./biquad-filter-type */
    "./node_modules/standardized-audio-context/build/es2019/types/biquad-filter-type.js");
    /* harmony import */


    var _biquad_filter_type__WEBPACK_IMPORTED_MODULE_62___default = /*#__PURE__*/__webpack_require__.n(_biquad_filter_type__WEBPACK_IMPORTED_MODULE_62__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _biquad_filter_type__WEBPACK_IMPORTED_MODULE_62__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _biquad_filter_type__WEBPACK_IMPORTED_MODULE_62__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_count_mode__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(
    /*! ./channel-count-mode */
    "./node_modules/standardized-audio-context/build/es2019/types/channel-count-mode.js");
    /* harmony import */


    var _channel_count_mode__WEBPACK_IMPORTED_MODULE_63___default = /*#__PURE__*/__webpack_require__.n(_channel_count_mode__WEBPACK_IMPORTED_MODULE_63__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_count_mode__WEBPACK_IMPORTED_MODULE_63__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_count_mode__WEBPACK_IMPORTED_MODULE_63__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_interpretation__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(
    /*! ./channel-interpretation */
    "./node_modules/standardized-audio-context/build/es2019/types/channel-interpretation.js");
    /* harmony import */


    var _channel_interpretation__WEBPACK_IMPORTED_MODULE_64___default = /*#__PURE__*/__webpack_require__.n(_channel_interpretation__WEBPACK_IMPORTED_MODULE_64__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_interpretation__WEBPACK_IMPORTED_MODULE_64__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_interpretation__WEBPACK_IMPORTED_MODULE_64__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(
    /*! ./channel-merger-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor.js");
    /* harmony import */


    var _channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_65___default = /*#__PURE__*/__webpack_require__.n(_channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_65__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_65__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_merger_node_constructor__WEBPACK_IMPORTED_MODULE_65__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_merger_node_constructor_factory__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(
    /*! ./channel-merger-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-constructor-factory.js");
    /* harmony import */


    var _channel_merger_node_constructor_factory__WEBPACK_IMPORTED_MODULE_66___default = /*#__PURE__*/__webpack_require__.n(_channel_merger_node_constructor_factory__WEBPACK_IMPORTED_MODULE_66__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_merger_node_constructor_factory__WEBPACK_IMPORTED_MODULE_66__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_merger_node_constructor_factory__WEBPACK_IMPORTED_MODULE_66__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(
    /*! ./channel-merger-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory.js");
    /* harmony import */


    var _channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_67___default = /*#__PURE__*/__webpack_require__.n(_channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_67__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_67__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_merger_node_renderer_factory__WEBPACK_IMPORTED_MODULE_67__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_merger_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(
    /*! ./channel-merger-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/channel-merger-node-renderer-factory-factory.js");
    /* harmony import */


    var _channel_merger_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_68___default = /*#__PURE__*/__webpack_require__.n(_channel_merger_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_68__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_merger_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_68__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_merger_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_68__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(
    /*! ./channel-splitter-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor.js");
    /* harmony import */


    var _channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_69___default = /*#__PURE__*/__webpack_require__.n(_channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_69__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_69__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_splitter_node_constructor__WEBPACK_IMPORTED_MODULE_69__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_splitter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(
    /*! ./channel-splitter-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-constructor-factory.js");
    /* harmony import */


    var _channel_splitter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_70___default = /*#__PURE__*/__webpack_require__.n(_channel_splitter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_70__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_splitter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_70__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_splitter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_70__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(
    /*! ./channel-splitter-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory.js");
    /* harmony import */


    var _channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_71___default = /*#__PURE__*/__webpack_require__.n(_channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_71__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_71__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_splitter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_71__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _channel_splitter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(
    /*! ./channel-splitter-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/channel-splitter-node-renderer-factory-factory.js");
    /* harmony import */


    var _channel_splitter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_72___default = /*#__PURE__*/__webpack_require__.n(_channel_splitter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_72__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _channel_splitter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_72__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _channel_splitter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_72__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _cache_test_result_factory__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(
    /*! ./cache-test-result-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-factory.js");
    /* harmony import */


    var _cache_test_result_factory__WEBPACK_IMPORTED_MODULE_73___default = /*#__PURE__*/__webpack_require__.n(_cache_test_result_factory__WEBPACK_IMPORTED_MODULE_73__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _cache_test_result_factory__WEBPACK_IMPORTED_MODULE_73__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _cache_test_result_factory__WEBPACK_IMPORTED_MODULE_73__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _cache_test_result_function__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(
    /*! ./cache-test-result-function */
    "./node_modules/standardized-audio-context/build/es2019/types/cache-test-result-function.js");
    /* harmony import */


    var _cache_test_result_function__WEBPACK_IMPORTED_MODULE_74___default = /*#__PURE__*/__webpack_require__.n(_cache_test_result_function__WEBPACK_IMPORTED_MODULE_74__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _cache_test_result_function__WEBPACK_IMPORTED_MODULE_74__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _cache_test_result_function__WEBPACK_IMPORTED_MODULE_74__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _connect_audio_param_factory__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(
    /*! ./connect-audio-param-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-factory.js");
    /* harmony import */


    var _connect_audio_param_factory__WEBPACK_IMPORTED_MODULE_75___default = /*#__PURE__*/__webpack_require__.n(_connect_audio_param_factory__WEBPACK_IMPORTED_MODULE_75__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _connect_audio_param_factory__WEBPACK_IMPORTED_MODULE_75__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _connect_audio_param_factory__WEBPACK_IMPORTED_MODULE_75__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _connect_audio_param_function__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(
    /*! ./connect-audio-param-function */
    "./node_modules/standardized-audio-context/build/es2019/types/connect-audio-param-function.js");
    /* harmony import */


    var _connect_audio_param_function__WEBPACK_IMPORTED_MODULE_76___default = /*#__PURE__*/__webpack_require__.n(_connect_audio_param_function__WEBPACK_IMPORTED_MODULE_76__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _connect_audio_param_function__WEBPACK_IMPORTED_MODULE_76__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _connect_audio_param_function__WEBPACK_IMPORTED_MODULE_76__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _connect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(
    /*! ./connect-multiple-outputs-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-factory.js");
    /* harmony import */


    var _connect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_77___default = /*#__PURE__*/__webpack_require__.n(_connect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_77__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _connect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_77__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _connect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_77__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _connect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(
    /*! ./connect-multiple-outputs-function */
    "./node_modules/standardized-audio-context/build/es2019/types/connect-multiple-outputs-function.js");
    /* harmony import */


    var _connect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_78___default = /*#__PURE__*/__webpack_require__.n(_connect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_78__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _connect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_78__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _connect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_78__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _connect_native_audio_node_to_native_audio_node_function__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(
    /*! ./connect-native-audio-node-to-native-audio-node-function */
    "./node_modules/standardized-audio-context/build/es2019/types/connect-native-audio-node-to-native-audio-node-function.js");
    /* harmony import */


    var _connect_native_audio_node_to_native_audio_node_function__WEBPACK_IMPORTED_MODULE_79___default = /*#__PURE__*/__webpack_require__.n(_connect_native_audio_node_to_native_audio_node_function__WEBPACK_IMPORTED_MODULE_79__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _connect_native_audio_node_to_native_audio_node_function__WEBPACK_IMPORTED_MODULE_79__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _connect_native_audio_node_to_native_audio_node_function__WEBPACK_IMPORTED_MODULE_79__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(
    /*! ./connected-native-audio-buffer-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory.js");
    /* harmony import */


    var _connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_80___default = /*#__PURE__*/__webpack_require__.n(_connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_80__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_80__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _connected_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_80__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _connected_native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(
    /*! ./connected-native-audio-buffer-source-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/connected-native-audio-buffer-source-node-factory-factory.js");
    /* harmony import */


    var _connected_native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_81___default = /*#__PURE__*/__webpack_require__.n(_connected_native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_81__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _connected_native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_81__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _connected_native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_81__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(
    /*! ./constant-source-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor.js");
    /* harmony import */


    var _constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_82___default = /*#__PURE__*/__webpack_require__.n(_constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_82__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_82__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _constant_source_node_constructor__WEBPACK_IMPORTED_MODULE_82__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _constant_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(
    /*! ./constant-source-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-constructor-factory.js");
    /* harmony import */


    var _constant_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_83___default = /*#__PURE__*/__webpack_require__.n(_constant_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_83__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _constant_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_83__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _constant_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_83__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(
    /*! ./constant-source-node-renderer */
    "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer.js");
    /* harmony import */


    var _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_84___default = /*#__PURE__*/__webpack_require__.n(_constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_84__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_84__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _constant_source_node_renderer__WEBPACK_IMPORTED_MODULE_84__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(
    /*! ./constant-source-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory.js");
    /* harmony import */


    var _constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_85___default = /*#__PURE__*/__webpack_require__.n(_constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_85__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_85__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _constant_source_node_renderer_factory__WEBPACK_IMPORTED_MODULE_85__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _constant_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(
    /*! ./constant-source-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/constant-source-node-renderer-factory-factory.js");
    /* harmony import */


    var _constant_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_86___default = /*#__PURE__*/__webpack_require__.n(_constant_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_86__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _constant_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_86__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _constant_source_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_86__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _constructor__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(
    /*! ./constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/constructor.js");
    /* harmony import */


    var _constructor__WEBPACK_IMPORTED_MODULE_87___default = /*#__PURE__*/__webpack_require__.n(_constructor__WEBPACK_IMPORTED_MODULE_87__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _constructor__WEBPACK_IMPORTED_MODULE_87__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _constructor__WEBPACK_IMPORTED_MODULE_87__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _context__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(
    /*! ./context */
    "./node_modules/standardized-audio-context/build/es2019/types/context.js");
    /* harmony import */


    var _context__WEBPACK_IMPORTED_MODULE_88___default = /*#__PURE__*/__webpack_require__.n(_context__WEBPACK_IMPORTED_MODULE_88__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _context__WEBPACK_IMPORTED_MODULE_88__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _context__WEBPACK_IMPORTED_MODULE_88__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _context_store__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(
    /*! ./context-store */
    "./node_modules/standardized-audio-context/build/es2019/types/context-store.js");
    /* harmony import */


    var _context_store__WEBPACK_IMPORTED_MODULE_89___default = /*#__PURE__*/__webpack_require__.n(_context_store__WEBPACK_IMPORTED_MODULE_89__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _context_store__WEBPACK_IMPORTED_MODULE_89__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _context_store__WEBPACK_IMPORTED_MODULE_89__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _convert_number_to_unsigned_long_factory__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(
    /*! ./convert-number-to-unsigned-long-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-factory.js");
    /* harmony import */


    var _convert_number_to_unsigned_long_factory__WEBPACK_IMPORTED_MODULE_90___default = /*#__PURE__*/__webpack_require__.n(_convert_number_to_unsigned_long_factory__WEBPACK_IMPORTED_MODULE_90__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _convert_number_to_unsigned_long_factory__WEBPACK_IMPORTED_MODULE_90__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _convert_number_to_unsigned_long_factory__WEBPACK_IMPORTED_MODULE_90__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _convert_number_to_unsigned_long_function__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(
    /*! ./convert-number-to-unsigned-long-function */
    "./node_modules/standardized-audio-context/build/es2019/types/convert-number-to-unsigned-long-function.js");
    /* harmony import */


    var _convert_number_to_unsigned_long_function__WEBPACK_IMPORTED_MODULE_91___default = /*#__PURE__*/__webpack_require__.n(_convert_number_to_unsigned_long_function__WEBPACK_IMPORTED_MODULE_91__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _convert_number_to_unsigned_long_function__WEBPACK_IMPORTED_MODULE_91__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _convert_number_to_unsigned_long_function__WEBPACK_IMPORTED_MODULE_91__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _convolver_node_constructor__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(
    /*! ./convolver-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor.js");
    /* harmony import */


    var _convolver_node_constructor__WEBPACK_IMPORTED_MODULE_92___default = /*#__PURE__*/__webpack_require__.n(_convolver_node_constructor__WEBPACK_IMPORTED_MODULE_92__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _convolver_node_constructor__WEBPACK_IMPORTED_MODULE_92__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _convolver_node_constructor__WEBPACK_IMPORTED_MODULE_92__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _convolver_node_constructor_factory__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(
    /*! ./convolver-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-constructor-factory.js");
    /* harmony import */


    var _convolver_node_constructor_factory__WEBPACK_IMPORTED_MODULE_93___default = /*#__PURE__*/__webpack_require__.n(_convolver_node_constructor_factory__WEBPACK_IMPORTED_MODULE_93__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _convolver_node_constructor_factory__WEBPACK_IMPORTED_MODULE_93__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _convolver_node_constructor_factory__WEBPACK_IMPORTED_MODULE_93__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(
    /*! ./convolver-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory.js");
    /* harmony import */


    var _convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_94___default = /*#__PURE__*/__webpack_require__.n(_convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_94__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_94__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _convolver_node_renderer_factory__WEBPACK_IMPORTED_MODULE_94__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _convolver_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_95__ = __webpack_require__(
    /*! ./convolver-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/convolver-node-renderer-factory-factory.js");
    /* harmony import */


    var _convolver_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_95___default = /*#__PURE__*/__webpack_require__.n(_convolver_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_95__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _convolver_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_95__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _convolver_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_95__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _create_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_96__ = __webpack_require__(
    /*! ./create-native-offline-audio-context-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-factory.js");
    /* harmony import */


    var _create_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_96___default = /*#__PURE__*/__webpack_require__.n(_create_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_96__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _create_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_96__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _create_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_96__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _create_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_97__ = __webpack_require__(
    /*! ./create-native-offline-audio-context-function */
    "./node_modules/standardized-audio-context/build/es2019/types/create-native-offline-audio-context-function.js");
    /* harmony import */


    var _create_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_97___default = /*#__PURE__*/__webpack_require__.n(_create_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_97__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _create_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_97__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _create_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_97__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _cycle_counters__WEBPACK_IMPORTED_MODULE_98__ = __webpack_require__(
    /*! ./cycle-counters */
    "./node_modules/standardized-audio-context/build/es2019/types/cycle-counters.js");
    /* harmony import */


    var _cycle_counters__WEBPACK_IMPORTED_MODULE_98___default = /*#__PURE__*/__webpack_require__.n(_cycle_counters__WEBPACK_IMPORTED_MODULE_98__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _cycle_counters__WEBPACK_IMPORTED_MODULE_98__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _cycle_counters__WEBPACK_IMPORTED_MODULE_98__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _data_clone_error_factory__WEBPACK_IMPORTED_MODULE_99__ = __webpack_require__(
    /*! ./data-clone-error-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/data-clone-error-factory.js");
    /* harmony import */


    var _data_clone_error_factory__WEBPACK_IMPORTED_MODULE_99___default = /*#__PURE__*/__webpack_require__.n(_data_clone_error_factory__WEBPACK_IMPORTED_MODULE_99__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _data_clone_error_factory__WEBPACK_IMPORTED_MODULE_99__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _data_clone_error_factory__WEBPACK_IMPORTED_MODULE_99__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _decode_audio_data_factory__WEBPACK_IMPORTED_MODULE_100__ = __webpack_require__(
    /*! ./decode-audio-data-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-factory.js");
    /* harmony import */


    var _decode_audio_data_factory__WEBPACK_IMPORTED_MODULE_100___default = /*#__PURE__*/__webpack_require__.n(_decode_audio_data_factory__WEBPACK_IMPORTED_MODULE_100__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _decode_audio_data_factory__WEBPACK_IMPORTED_MODULE_100__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _decode_audio_data_factory__WEBPACK_IMPORTED_MODULE_100__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _decode_audio_data_function__WEBPACK_IMPORTED_MODULE_101__ = __webpack_require__(
    /*! ./decode-audio-data-function */
    "./node_modules/standardized-audio-context/build/es2019/types/decode-audio-data-function.js");
    /* harmony import */


    var _decode_audio_data_function__WEBPACK_IMPORTED_MODULE_101___default = /*#__PURE__*/__webpack_require__.n(_decode_audio_data_function__WEBPACK_IMPORTED_MODULE_101__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _decode_audio_data_function__WEBPACK_IMPORTED_MODULE_101__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _decode_audio_data_function__WEBPACK_IMPORTED_MODULE_101__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _decode_error_callback__WEBPACK_IMPORTED_MODULE_102__ = __webpack_require__(
    /*! ./decode-error-callback */
    "./node_modules/standardized-audio-context/build/es2019/types/decode-error-callback.js");
    /* harmony import */


    var _decode_error_callback__WEBPACK_IMPORTED_MODULE_102___default = /*#__PURE__*/__webpack_require__.n(_decode_error_callback__WEBPACK_IMPORTED_MODULE_102__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _decode_error_callback__WEBPACK_IMPORTED_MODULE_102__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _decode_error_callback__WEBPACK_IMPORTED_MODULE_102__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _decode_success_callback__WEBPACK_IMPORTED_MODULE_103__ = __webpack_require__(
    /*! ./decode-success-callback */
    "./node_modules/standardized-audio-context/build/es2019/types/decode-success-callback.js");
    /* harmony import */


    var _decode_success_callback__WEBPACK_IMPORTED_MODULE_103___default = /*#__PURE__*/__webpack_require__.n(_decode_success_callback__WEBPACK_IMPORTED_MODULE_103__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _decode_success_callback__WEBPACK_IMPORTED_MODULE_103__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _decode_success_callback__WEBPACK_IMPORTED_MODULE_103__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _decrement_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_104__ = __webpack_require__(
    /*! ./decrement-cycle-counter-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-factory.js");
    /* harmony import */


    var _decrement_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_104___default = /*#__PURE__*/__webpack_require__.n(_decrement_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_104__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _decrement_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_104__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _decrement_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_104__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _decrement_cycle_counter_function__WEBPACK_IMPORTED_MODULE_105__ = __webpack_require__(
    /*! ./decrement-cycle-counter-function */
    "./node_modules/standardized-audio-context/build/es2019/types/decrement-cycle-counter-function.js");
    /* harmony import */


    var _decrement_cycle_counter_function__WEBPACK_IMPORTED_MODULE_105___default = /*#__PURE__*/__webpack_require__.n(_decrement_cycle_counter_function__WEBPACK_IMPORTED_MODULE_105__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _decrement_cycle_counter_function__WEBPACK_IMPORTED_MODULE_105__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _decrement_cycle_counter_function__WEBPACK_IMPORTED_MODULE_105__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _delay_node_constructor__WEBPACK_IMPORTED_MODULE_106__ = __webpack_require__(
    /*! ./delay-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor.js");
    /* harmony import */


    var _delay_node_constructor__WEBPACK_IMPORTED_MODULE_106___default = /*#__PURE__*/__webpack_require__.n(_delay_node_constructor__WEBPACK_IMPORTED_MODULE_106__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _delay_node_constructor__WEBPACK_IMPORTED_MODULE_106__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _delay_node_constructor__WEBPACK_IMPORTED_MODULE_106__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _delay_node_constructor_factory__WEBPACK_IMPORTED_MODULE_107__ = __webpack_require__(
    /*! ./delay-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/delay-node-constructor-factory.js");
    /* harmony import */


    var _delay_node_constructor_factory__WEBPACK_IMPORTED_MODULE_107___default = /*#__PURE__*/__webpack_require__.n(_delay_node_constructor_factory__WEBPACK_IMPORTED_MODULE_107__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _delay_node_constructor_factory__WEBPACK_IMPORTED_MODULE_107__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _delay_node_constructor_factory__WEBPACK_IMPORTED_MODULE_107__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_108__ = __webpack_require__(
    /*! ./delay-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory.js");
    /* harmony import */


    var _delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_108___default = /*#__PURE__*/__webpack_require__.n(_delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_108__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_108__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _delay_node_renderer_factory__WEBPACK_IMPORTED_MODULE_108__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _delay_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_109__ = __webpack_require__(
    /*! ./delay-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/delay-node-renderer-factory-factory.js");
    /* harmony import */


    var _delay_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_109___default = /*#__PURE__*/__webpack_require__.n(_delay_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_109__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _delay_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_109__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _delay_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_109__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _delete_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_110__ = __webpack_require__(
    /*! ./delete-unrendered-audio-worklet-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-factory.js");
    /* harmony import */


    var _delete_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_110___default = /*#__PURE__*/__webpack_require__.n(_delete_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_110__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _delete_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_110__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _delete_unrendered_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_110__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _delete_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_111__ = __webpack_require__(
    /*! ./delete-unrendered-audio-worklet-node-function */
    "./node_modules/standardized-audio-context/build/es2019/types/delete-unrendered-audio-worklet-node-function.js");
    /* harmony import */


    var _delete_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_111___default = /*#__PURE__*/__webpack_require__.n(_delete_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_111__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _delete_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_111__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _delete_unrendered_audio_worklet_node_function__WEBPACK_IMPORTED_MODULE_111__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _detect_cycles_factory__WEBPACK_IMPORTED_MODULE_112__ = __webpack_require__(
    /*! ./detect-cycles-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-factory.js");
    /* harmony import */


    var _detect_cycles_factory__WEBPACK_IMPORTED_MODULE_112___default = /*#__PURE__*/__webpack_require__.n(_detect_cycles_factory__WEBPACK_IMPORTED_MODULE_112__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _detect_cycles_factory__WEBPACK_IMPORTED_MODULE_112__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _detect_cycles_factory__WEBPACK_IMPORTED_MODULE_112__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _detect_cycles_function__WEBPACK_IMPORTED_MODULE_113__ = __webpack_require__(
    /*! ./detect-cycles-function */
    "./node_modules/standardized-audio-context/build/es2019/types/detect-cycles-function.js");
    /* harmony import */


    var _detect_cycles_function__WEBPACK_IMPORTED_MODULE_113___default = /*#__PURE__*/__webpack_require__.n(_detect_cycles_function__WEBPACK_IMPORTED_MODULE_113__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _detect_cycles_function__WEBPACK_IMPORTED_MODULE_113__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _detect_cycles_function__WEBPACK_IMPORTED_MODULE_113__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _disconnect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_114__ = __webpack_require__(
    /*! ./disconnect-multiple-outputs-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-factory.js");
    /* harmony import */


    var _disconnect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_114___default = /*#__PURE__*/__webpack_require__.n(_disconnect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_114__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _disconnect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_114__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _disconnect_multiple_outputs_factory__WEBPACK_IMPORTED_MODULE_114__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _disconnect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_115__ = __webpack_require__(
    /*! ./disconnect-multiple-outputs-function */
    "./node_modules/standardized-audio-context/build/es2019/types/disconnect-multiple-outputs-function.js");
    /* harmony import */


    var _disconnect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_115___default = /*#__PURE__*/__webpack_require__.n(_disconnect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_115__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _disconnect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_115__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _disconnect_multiple_outputs_function__WEBPACK_IMPORTED_MODULE_115__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _disconnect_native_audio_node_from_native_audio_node_function__WEBPACK_IMPORTED_MODULE_116__ = __webpack_require__(
    /*! ./disconnect-native-audio-node-from-native-audio-node-function */
    "./node_modules/standardized-audio-context/build/es2019/types/disconnect-native-audio-node-from-native-audio-node-function.js");
    /* harmony import */


    var _disconnect_native_audio_node_from_native_audio_node_function__WEBPACK_IMPORTED_MODULE_116___default = /*#__PURE__*/__webpack_require__.n(_disconnect_native_audio_node_from_native_audio_node_function__WEBPACK_IMPORTED_MODULE_116__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _disconnect_native_audio_node_from_native_audio_node_function__WEBPACK_IMPORTED_MODULE_116__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _disconnect_native_audio_node_from_native_audio_node_function__WEBPACK_IMPORTED_MODULE_116__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _distance_model_type__WEBPACK_IMPORTED_MODULE_117__ = __webpack_require__(
    /*! ./distance-model-type */
    "./node_modules/standardized-audio-context/build/es2019/types/distance-model-type.js");
    /* harmony import */


    var _distance_model_type__WEBPACK_IMPORTED_MODULE_117___default = /*#__PURE__*/__webpack_require__.n(_distance_model_type__WEBPACK_IMPORTED_MODULE_117__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _distance_model_type__WEBPACK_IMPORTED_MODULE_117__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _distance_model_type__WEBPACK_IMPORTED_MODULE_117__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_118__ = __webpack_require__(
    /*! ./dynamics-compressor-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor.js");
    /* harmony import */


    var _dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_118___default = /*#__PURE__*/__webpack_require__.n(_dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_118__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_118__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _dynamics_compressor_node_constructor__WEBPACK_IMPORTED_MODULE_118__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _dynamics_compressor_node_constructor_factory__WEBPACK_IMPORTED_MODULE_119__ = __webpack_require__(
    /*! ./dynamics-compressor-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-constructor-factory.js");
    /* harmony import */


    var _dynamics_compressor_node_constructor_factory__WEBPACK_IMPORTED_MODULE_119___default = /*#__PURE__*/__webpack_require__.n(_dynamics_compressor_node_constructor_factory__WEBPACK_IMPORTED_MODULE_119__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _dynamics_compressor_node_constructor_factory__WEBPACK_IMPORTED_MODULE_119__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _dynamics_compressor_node_constructor_factory__WEBPACK_IMPORTED_MODULE_119__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_120__ = __webpack_require__(
    /*! ./dynamics-compressor-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory.js");
    /* harmony import */


    var _dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_120___default = /*#__PURE__*/__webpack_require__.n(_dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_120__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_120__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _dynamics_compressor_node_renderer_factory__WEBPACK_IMPORTED_MODULE_120__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _dynamics_compressor_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_121__ = __webpack_require__(
    /*! ./dynamics-compressor-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/dynamics-compressor-node-renderer-factory-factory.js");
    /* harmony import */


    var _dynamics_compressor_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_121___default = /*#__PURE__*/__webpack_require__.n(_dynamics_compressor_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_121__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _dynamics_compressor_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_121__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _dynamics_compressor_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_121__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _encoding_error_factory__WEBPACK_IMPORTED_MODULE_122__ = __webpack_require__(
    /*! ./encoding-error-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/encoding-error-factory.js");
    /* harmony import */


    var _encoding_error_factory__WEBPACK_IMPORTED_MODULE_122___default = /*#__PURE__*/__webpack_require__.n(_encoding_error_factory__WEBPACK_IMPORTED_MODULE_122__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _encoding_error_factory__WEBPACK_IMPORTED_MODULE_122__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _encoding_error_factory__WEBPACK_IMPORTED_MODULE_122__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _error_event_handler__WEBPACK_IMPORTED_MODULE_123__ = __webpack_require__(
    /*! ./error-event-handler */
    "./node_modules/standardized-audio-context/build/es2019/types/error-event-handler.js");
    /* harmony import */


    var _error_event_handler__WEBPACK_IMPORTED_MODULE_123___default = /*#__PURE__*/__webpack_require__.n(_error_event_handler__WEBPACK_IMPORTED_MODULE_123__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _error_event_handler__WEBPACK_IMPORTED_MODULE_123__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _error_event_handler__WEBPACK_IMPORTED_MODULE_123__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _evaluate_audio_worklet_global_scope_function__WEBPACK_IMPORTED_MODULE_124__ = __webpack_require__(
    /*! ./evaluate-audio-worklet-global-scope-function */
    "./node_modules/standardized-audio-context/build/es2019/types/evaluate-audio-worklet-global-scope-function.js");
    /* harmony import */


    var _evaluate_audio_worklet_global_scope_function__WEBPACK_IMPORTED_MODULE_124___default = /*#__PURE__*/__webpack_require__.n(_evaluate_audio_worklet_global_scope_function__WEBPACK_IMPORTED_MODULE_124__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _evaluate_audio_worklet_global_scope_function__WEBPACK_IMPORTED_MODULE_124__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _evaluate_audio_worklet_global_scope_function__WEBPACK_IMPORTED_MODULE_124__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _evaluate_source_factory__WEBPACK_IMPORTED_MODULE_125__ = __webpack_require__(
    /*! ./evaluate-source-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-factory.js");
    /* harmony import */


    var _evaluate_source_factory__WEBPACK_IMPORTED_MODULE_125___default = /*#__PURE__*/__webpack_require__.n(_evaluate_source_factory__WEBPACK_IMPORTED_MODULE_125__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _evaluate_source_factory__WEBPACK_IMPORTED_MODULE_125__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _evaluate_source_factory__WEBPACK_IMPORTED_MODULE_125__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _evaluate_source_function__WEBPACK_IMPORTED_MODULE_126__ = __webpack_require__(
    /*! ./evaluate-source-function */
    "./node_modules/standardized-audio-context/build/es2019/types/evaluate-source-function.js");
    /* harmony import */


    var _evaluate_source_function__WEBPACK_IMPORTED_MODULE_126___default = /*#__PURE__*/__webpack_require__.n(_evaluate_source_function__WEBPACK_IMPORTED_MODULE_126__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _evaluate_source_function__WEBPACK_IMPORTED_MODULE_126__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _evaluate_source_function__WEBPACK_IMPORTED_MODULE_126__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _event_handler__WEBPACK_IMPORTED_MODULE_127__ = __webpack_require__(
    /*! ./event-handler */
    "./node_modules/standardized-audio-context/build/es2019/types/event-handler.js");
    /* harmony import */


    var _event_handler__WEBPACK_IMPORTED_MODULE_127___default = /*#__PURE__*/__webpack_require__.n(_event_handler__WEBPACK_IMPORTED_MODULE_127__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _event_handler__WEBPACK_IMPORTED_MODULE_127__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _event_handler__WEBPACK_IMPORTED_MODULE_127__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _event_target_constructor__WEBPACK_IMPORTED_MODULE_128__ = __webpack_require__(
    /*! ./event-target-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor.js");
    /* harmony import */


    var _event_target_constructor__WEBPACK_IMPORTED_MODULE_128___default = /*#__PURE__*/__webpack_require__.n(_event_target_constructor__WEBPACK_IMPORTED_MODULE_128__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _event_target_constructor__WEBPACK_IMPORTED_MODULE_128__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _event_target_constructor__WEBPACK_IMPORTED_MODULE_128__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _event_target_constructor_factory__WEBPACK_IMPORTED_MODULE_129__ = __webpack_require__(
    /*! ./event-target-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/event-target-constructor-factory.js");
    /* harmony import */


    var _event_target_constructor_factory__WEBPACK_IMPORTED_MODULE_129___default = /*#__PURE__*/__webpack_require__.n(_event_target_constructor_factory__WEBPACK_IMPORTED_MODULE_129__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _event_target_constructor_factory__WEBPACK_IMPORTED_MODULE_129__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _event_target_constructor_factory__WEBPACK_IMPORTED_MODULE_129__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _expose_current_frame_and_current_time_factory__WEBPACK_IMPORTED_MODULE_130__ = __webpack_require__(
    /*! ./expose-current-frame-and-current-time-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-factory.js");
    /* harmony import */


    var _expose_current_frame_and_current_time_factory__WEBPACK_IMPORTED_MODULE_130___default = /*#__PURE__*/__webpack_require__.n(_expose_current_frame_and_current_time_factory__WEBPACK_IMPORTED_MODULE_130__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _expose_current_frame_and_current_time_factory__WEBPACK_IMPORTED_MODULE_130__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _expose_current_frame_and_current_time_factory__WEBPACK_IMPORTED_MODULE_130__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _expose_current_frame_and_current_time_function__WEBPACK_IMPORTED_MODULE_131__ = __webpack_require__(
    /*! ./expose-current-frame-and-current-time-function */
    "./node_modules/standardized-audio-context/build/es2019/types/expose-current-frame-and-current-time-function.js");
    /* harmony import */


    var _expose_current_frame_and_current_time_function__WEBPACK_IMPORTED_MODULE_131___default = /*#__PURE__*/__webpack_require__.n(_expose_current_frame_and_current_time_function__WEBPACK_IMPORTED_MODULE_131__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _expose_current_frame_and_current_time_function__WEBPACK_IMPORTED_MODULE_131__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _expose_current_frame_and_current_time_function__WEBPACK_IMPORTED_MODULE_131__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _fetch_source_factory__WEBPACK_IMPORTED_MODULE_132__ = __webpack_require__(
    /*! ./fetch-source-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-factory.js");
    /* harmony import */


    var _fetch_source_factory__WEBPACK_IMPORTED_MODULE_132___default = /*#__PURE__*/__webpack_require__.n(_fetch_source_factory__WEBPACK_IMPORTED_MODULE_132__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _fetch_source_factory__WEBPACK_IMPORTED_MODULE_132__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _fetch_source_factory__WEBPACK_IMPORTED_MODULE_132__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _fetch_source_function__WEBPACK_IMPORTED_MODULE_133__ = __webpack_require__(
    /*! ./fetch-source-function */
    "./node_modules/standardized-audio-context/build/es2019/types/fetch-source-function.js");
    /* harmony import */


    var _fetch_source_function__WEBPACK_IMPORTED_MODULE_133___default = /*#__PURE__*/__webpack_require__.n(_fetch_source_function__WEBPACK_IMPORTED_MODULE_133__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _fetch_source_function__WEBPACK_IMPORTED_MODULE_133__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _fetch_source_function__WEBPACK_IMPORTED_MODULE_133__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _gain_node_constructor__WEBPACK_IMPORTED_MODULE_134__ = __webpack_require__(
    /*! ./gain-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor.js");
    /* harmony import */


    var _gain_node_constructor__WEBPACK_IMPORTED_MODULE_134___default = /*#__PURE__*/__webpack_require__.n(_gain_node_constructor__WEBPACK_IMPORTED_MODULE_134__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _gain_node_constructor__WEBPACK_IMPORTED_MODULE_134__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _gain_node_constructor__WEBPACK_IMPORTED_MODULE_134__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _gain_node_constructor_factory__WEBPACK_IMPORTED_MODULE_135__ = __webpack_require__(
    /*! ./gain-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/gain-node-constructor-factory.js");
    /* harmony import */


    var _gain_node_constructor_factory__WEBPACK_IMPORTED_MODULE_135___default = /*#__PURE__*/__webpack_require__.n(_gain_node_constructor_factory__WEBPACK_IMPORTED_MODULE_135__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _gain_node_constructor_factory__WEBPACK_IMPORTED_MODULE_135__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _gain_node_constructor_factory__WEBPACK_IMPORTED_MODULE_135__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_136__ = __webpack_require__(
    /*! ./gain-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory.js");
    /* harmony import */


    var _gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_136___default = /*#__PURE__*/__webpack_require__.n(_gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_136__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_136__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _gain_node_renderer_factory__WEBPACK_IMPORTED_MODULE_136__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _gain_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_137__ = __webpack_require__(
    /*! ./gain-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/gain-node-renderer-factory-factory.js");
    /* harmony import */


    var _gain_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_137___default = /*#__PURE__*/__webpack_require__.n(_gain_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_137__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _gain_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_137__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _gain_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_137__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_138__ = __webpack_require__(
    /*! ./get-audio-node-connections-function */
    "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-connections-function.js");
    /* harmony import */


    var _get_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_138___default = /*#__PURE__*/__webpack_require__.n(_get_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_138__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_138__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_audio_node_connections_function__WEBPACK_IMPORTED_MODULE_138__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_audio_node_renderer_factory__WEBPACK_IMPORTED_MODULE_139__ = __webpack_require__(
    /*! ./get-audio-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-factory.js");
    /* harmony import */


    var _get_audio_node_renderer_factory__WEBPACK_IMPORTED_MODULE_139___default = /*#__PURE__*/__webpack_require__.n(_get_audio_node_renderer_factory__WEBPACK_IMPORTED_MODULE_139__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_audio_node_renderer_factory__WEBPACK_IMPORTED_MODULE_139__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_audio_node_renderer_factory__WEBPACK_IMPORTED_MODULE_139__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_audio_node_renderer_function__WEBPACK_IMPORTED_MODULE_140__ = __webpack_require__(
    /*! ./get-audio-node-renderer-function */
    "./node_modules/standardized-audio-context/build/es2019/types/get-audio-node-renderer-function.js");
    /* harmony import */


    var _get_audio_node_renderer_function__WEBPACK_IMPORTED_MODULE_140___default = /*#__PURE__*/__webpack_require__.n(_get_audio_node_renderer_function__WEBPACK_IMPORTED_MODULE_140__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_audio_node_renderer_function__WEBPACK_IMPORTED_MODULE_140__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_audio_node_renderer_function__WEBPACK_IMPORTED_MODULE_140__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_141__ = __webpack_require__(
    /*! ./get-audio-param-connections-function */
    "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-connections-function.js");
    /* harmony import */


    var _get_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_141___default = /*#__PURE__*/__webpack_require__.n(_get_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_141__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_141__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_audio_param_connections_function__WEBPACK_IMPORTED_MODULE_141__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_142__ = __webpack_require__(
    /*! ./get-audio-param-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-factory.js");
    /* harmony import */


    var _get_audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_142___default = /*#__PURE__*/__webpack_require__.n(_get_audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_142__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_142__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_audio_param_renderer_factory__WEBPACK_IMPORTED_MODULE_142__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_audio_param_renderer_function__WEBPACK_IMPORTED_MODULE_143__ = __webpack_require__(
    /*! ./get-audio-param-renderer-function */
    "./node_modules/standardized-audio-context/build/es2019/types/get-audio-param-renderer-function.js");
    /* harmony import */


    var _get_audio_param_renderer_function__WEBPACK_IMPORTED_MODULE_143___default = /*#__PURE__*/__webpack_require__.n(_get_audio_param_renderer_function__WEBPACK_IMPORTED_MODULE_143__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_audio_param_renderer_function__WEBPACK_IMPORTED_MODULE_143__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_audio_param_renderer_function__WEBPACK_IMPORTED_MODULE_143__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_backup_native_context_factory__WEBPACK_IMPORTED_MODULE_144__ = __webpack_require__(
    /*! ./get-backup-native-context-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/get-backup-native-context-factory.js");
    /* harmony import */


    var _get_backup_native_context_factory__WEBPACK_IMPORTED_MODULE_144___default = /*#__PURE__*/__webpack_require__.n(_get_backup_native_context_factory__WEBPACK_IMPORTED_MODULE_144__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_backup_native_context_factory__WEBPACK_IMPORTED_MODULE_144__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_backup_native_context_factory__WEBPACK_IMPORTED_MODULE_144__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_backup_native_context_function__WEBPACK_IMPORTED_MODULE_145__ = __webpack_require__(
    /*! ./get-backup-native-context-function */
    "./node_modules/standardized-audio-context/build/es2019/types/get-backup-native-context-function.js");
    /* harmony import */


    var _get_backup_native_context_function__WEBPACK_IMPORTED_MODULE_145___default = /*#__PURE__*/__webpack_require__.n(_get_backup_native_context_function__WEBPACK_IMPORTED_MODULE_145__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_backup_native_context_function__WEBPACK_IMPORTED_MODULE_145__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_backup_native_context_function__WEBPACK_IMPORTED_MODULE_145__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_native_audio_node_function__WEBPACK_IMPORTED_MODULE_146__ = __webpack_require__(
    /*! ./get-native-audio-node-function */
    "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-node-function.js");
    /* harmony import */


    var _get_native_audio_node_function__WEBPACK_IMPORTED_MODULE_146___default = /*#__PURE__*/__webpack_require__.n(_get_native_audio_node_function__WEBPACK_IMPORTED_MODULE_146__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_native_audio_node_function__WEBPACK_IMPORTED_MODULE_146__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_native_audio_node_function__WEBPACK_IMPORTED_MODULE_146__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_native_audio_param_function__WEBPACK_IMPORTED_MODULE_147__ = __webpack_require__(
    /*! ./get-native-audio-param-function */
    "./node_modules/standardized-audio-context/build/es2019/types/get-native-audio-param-function.js");
    /* harmony import */


    var _get_native_audio_param_function__WEBPACK_IMPORTED_MODULE_147___default = /*#__PURE__*/__webpack_require__.n(_get_native_audio_param_function__WEBPACK_IMPORTED_MODULE_147__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_native_audio_param_function__WEBPACK_IMPORTED_MODULE_147__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_native_audio_param_function__WEBPACK_IMPORTED_MODULE_147__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_native_context_function__WEBPACK_IMPORTED_MODULE_148__ = __webpack_require__(
    /*! ./get-native-context-function */
    "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-function.js");
    /* harmony import */


    var _get_native_context_function__WEBPACK_IMPORTED_MODULE_148___default = /*#__PURE__*/__webpack_require__.n(_get_native_context_function__WEBPACK_IMPORTED_MODULE_148__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_native_context_function__WEBPACK_IMPORTED_MODULE_148__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_native_context_function__WEBPACK_IMPORTED_MODULE_148__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_native_context_factory__WEBPACK_IMPORTED_MODULE_149__ = __webpack_require__(
    /*! ./get-native-context-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/get-native-context-factory.js");
    /* harmony import */


    var _get_native_context_factory__WEBPACK_IMPORTED_MODULE_149___default = /*#__PURE__*/__webpack_require__.n(_get_native_context_factory__WEBPACK_IMPORTED_MODULE_149__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_native_context_factory__WEBPACK_IMPORTED_MODULE_149__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_native_context_factory__WEBPACK_IMPORTED_MODULE_149__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_unrendered_audio_worklet_nodes_factory__WEBPACK_IMPORTED_MODULE_150__ = __webpack_require__(
    /*! ./get-unrendered-audio-worklet-nodes-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-factory.js");
    /* harmony import */


    var _get_unrendered_audio_worklet_nodes_factory__WEBPACK_IMPORTED_MODULE_150___default = /*#__PURE__*/__webpack_require__.n(_get_unrendered_audio_worklet_nodes_factory__WEBPACK_IMPORTED_MODULE_150__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_unrendered_audio_worklet_nodes_factory__WEBPACK_IMPORTED_MODULE_150__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_unrendered_audio_worklet_nodes_factory__WEBPACK_IMPORTED_MODULE_150__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_unrendered_audio_worklet_nodes_function__WEBPACK_IMPORTED_MODULE_151__ = __webpack_require__(
    /*! ./get-unrendered-audio-worklet-nodes-function */
    "./node_modules/standardized-audio-context/build/es2019/types/get-unrendered-audio-worklet-nodes-function.js");
    /* harmony import */


    var _get_unrendered_audio_worklet_nodes_function__WEBPACK_IMPORTED_MODULE_151___default = /*#__PURE__*/__webpack_require__.n(_get_unrendered_audio_worklet_nodes_function__WEBPACK_IMPORTED_MODULE_151__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_unrendered_audio_worklet_nodes_function__WEBPACK_IMPORTED_MODULE_151__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_unrendered_audio_worklet_nodes_function__WEBPACK_IMPORTED_MODULE_151__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _get_value_for_key_function__WEBPACK_IMPORTED_MODULE_152__ = __webpack_require__(
    /*! ./get-value-for-key-function */
    "./node_modules/standardized-audio-context/build/es2019/types/get-value-for-key-function.js");
    /* harmony import */


    var _get_value_for_key_function__WEBPACK_IMPORTED_MODULE_152___default = /*#__PURE__*/__webpack_require__.n(_get_value_for_key_function__WEBPACK_IMPORTED_MODULE_152__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _get_value_for_key_function__WEBPACK_IMPORTED_MODULE_152__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _get_value_for_key_function__WEBPACK_IMPORTED_MODULE_152__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_153__ = __webpack_require__(
    /*! ./iir-filter-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor.js");
    /* harmony import */


    var _iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_153___default = /*#__PURE__*/__webpack_require__.n(_iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_153__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_153__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _iir_filter_node_constructor__WEBPACK_IMPORTED_MODULE_153__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _iir_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_154__ = __webpack_require__(
    /*! ./iir-filter-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-constructor-factory.js");
    /* harmony import */


    var _iir_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_154___default = /*#__PURE__*/__webpack_require__.n(_iir_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_154__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _iir_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_154__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _iir_filter_node_constructor_factory__WEBPACK_IMPORTED_MODULE_154__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_155__ = __webpack_require__(
    /*! ./iir-filter-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory.js");
    /* harmony import */


    var _iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_155___default = /*#__PURE__*/__webpack_require__.n(_iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_155__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_155__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _iir_filter_node_renderer_factory__WEBPACK_IMPORTED_MODULE_155__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _iir_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_156__ = __webpack_require__(
    /*! ./iir-filter-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/iir-filter-node-renderer-factory-factory.js");
    /* harmony import */


    var _iir_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_156___default = /*#__PURE__*/__webpack_require__.n(_iir_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_156__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _iir_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_156__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _iir_filter_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_156__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_157__ = __webpack_require__(
    /*! ./increment-cycle-counter-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory.js");
    /* harmony import */


    var _increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_157___default = /*#__PURE__*/__webpack_require__.n(_increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_157__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_157__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _increment_cycle_counter_factory__WEBPACK_IMPORTED_MODULE_157__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _increment_cycle_counter_factory_factory__WEBPACK_IMPORTED_MODULE_158__ = __webpack_require__(
    /*! ./increment-cycle-counter-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-factory-factory.js");
    /* harmony import */


    var _increment_cycle_counter_factory_factory__WEBPACK_IMPORTED_MODULE_158___default = /*#__PURE__*/__webpack_require__.n(_increment_cycle_counter_factory_factory__WEBPACK_IMPORTED_MODULE_158__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _increment_cycle_counter_factory_factory__WEBPACK_IMPORTED_MODULE_158__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _increment_cycle_counter_factory_factory__WEBPACK_IMPORTED_MODULE_158__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _increment_cycle_counter_function__WEBPACK_IMPORTED_MODULE_159__ = __webpack_require__(
    /*! ./increment-cycle-counter-function */
    "./node_modules/standardized-audio-context/build/es2019/types/increment-cycle-counter-function.js");
    /* harmony import */


    var _increment_cycle_counter_function__WEBPACK_IMPORTED_MODULE_159___default = /*#__PURE__*/__webpack_require__.n(_increment_cycle_counter_function__WEBPACK_IMPORTED_MODULE_159__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _increment_cycle_counter_function__WEBPACK_IMPORTED_MODULE_159__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _increment_cycle_counter_function__WEBPACK_IMPORTED_MODULE_159__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _index_size_error_factory__WEBPACK_IMPORTED_MODULE_160__ = __webpack_require__(
    /*! ./index-size-error-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/index-size-error-factory.js");
    /* harmony import */


    var _index_size_error_factory__WEBPACK_IMPORTED_MODULE_160___default = /*#__PURE__*/__webpack_require__.n(_index_size_error_factory__WEBPACK_IMPORTED_MODULE_160__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _index_size_error_factory__WEBPACK_IMPORTED_MODULE_160__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _index_size_error_factory__WEBPACK_IMPORTED_MODULE_160__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _insert_element_in_set_function__WEBPACK_IMPORTED_MODULE_161__ = __webpack_require__(
    /*! ./insert-element-in-set-function */
    "./node_modules/standardized-audio-context/build/es2019/types/insert-element-in-set-function.js");
    /* harmony import */


    var _insert_element_in_set_function__WEBPACK_IMPORTED_MODULE_161___default = /*#__PURE__*/__webpack_require__.n(_insert_element_in_set_function__WEBPACK_IMPORTED_MODULE_161__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _insert_element_in_set_function__WEBPACK_IMPORTED_MODULE_161__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _insert_element_in_set_function__WEBPACK_IMPORTED_MODULE_161__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _internal_state_event_listener__WEBPACK_IMPORTED_MODULE_162__ = __webpack_require__(
    /*! ./internal-state-event-listener */
    "./node_modules/standardized-audio-context/build/es2019/types/internal-state-event-listener.js");
    /* harmony import */


    var _internal_state_event_listener__WEBPACK_IMPORTED_MODULE_162___default = /*#__PURE__*/__webpack_require__.n(_internal_state_event_listener__WEBPACK_IMPORTED_MODULE_162__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _internal_state_event_listener__WEBPACK_IMPORTED_MODULE_162__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _internal_state_event_listener__WEBPACK_IMPORTED_MODULE_162__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _invalid_access_error_factory__WEBPACK_IMPORTED_MODULE_163__ = __webpack_require__(
    /*! ./invalid-access-error-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/invalid-access-error-factory.js");
    /* harmony import */


    var _invalid_access_error_factory__WEBPACK_IMPORTED_MODULE_163___default = /*#__PURE__*/__webpack_require__.n(_invalid_access_error_factory__WEBPACK_IMPORTED_MODULE_163__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _invalid_access_error_factory__WEBPACK_IMPORTED_MODULE_163__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _invalid_access_error_factory__WEBPACK_IMPORTED_MODULE_163__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _invalid_state_error_factory__WEBPACK_IMPORTED_MODULE_164__ = __webpack_require__(
    /*! ./invalid-state-error-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/invalid-state-error-factory.js");
    /* harmony import */


    var _invalid_state_error_factory__WEBPACK_IMPORTED_MODULE_164___default = /*#__PURE__*/__webpack_require__.n(_invalid_state_error_factory__WEBPACK_IMPORTED_MODULE_164__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _invalid_state_error_factory__WEBPACK_IMPORTED_MODULE_164__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _invalid_state_error_factory__WEBPACK_IMPORTED_MODULE_164__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_active_audio_node_function__WEBPACK_IMPORTED_MODULE_165__ = __webpack_require__(
    /*! ./is-active-audio-node-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-active-audio-node-function.js");
    /* harmony import */


    var _is_active_audio_node_function__WEBPACK_IMPORTED_MODULE_165___default = /*#__PURE__*/__webpack_require__.n(_is_active_audio_node_function__WEBPACK_IMPORTED_MODULE_165__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_active_audio_node_function__WEBPACK_IMPORTED_MODULE_165__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_active_audio_node_function__WEBPACK_IMPORTED_MODULE_165__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_any_audio_context_factory__WEBPACK_IMPORTED_MODULE_166__ = __webpack_require__(
    /*! ./is-any-audio-context-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-factory.js");
    /* harmony import */


    var _is_any_audio_context_factory__WEBPACK_IMPORTED_MODULE_166___default = /*#__PURE__*/__webpack_require__.n(_is_any_audio_context_factory__WEBPACK_IMPORTED_MODULE_166__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_any_audio_context_factory__WEBPACK_IMPORTED_MODULE_166__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_any_audio_context_factory__WEBPACK_IMPORTED_MODULE_166__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_any_audio_context_function__WEBPACK_IMPORTED_MODULE_167__ = __webpack_require__(
    /*! ./is-any-audio-context-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-function.js");
    /* harmony import */


    var _is_any_audio_context_function__WEBPACK_IMPORTED_MODULE_167___default = /*#__PURE__*/__webpack_require__.n(_is_any_audio_context_function__WEBPACK_IMPORTED_MODULE_167__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_any_audio_context_function__WEBPACK_IMPORTED_MODULE_167__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_any_audio_context_function__WEBPACK_IMPORTED_MODULE_167__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_any_audio_node_factory__WEBPACK_IMPORTED_MODULE_168__ = __webpack_require__(
    /*! ./is-any-audio-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-factory.js");
    /* harmony import */


    var _is_any_audio_node_factory__WEBPACK_IMPORTED_MODULE_168___default = /*#__PURE__*/__webpack_require__.n(_is_any_audio_node_factory__WEBPACK_IMPORTED_MODULE_168__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_any_audio_node_factory__WEBPACK_IMPORTED_MODULE_168__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_any_audio_node_factory__WEBPACK_IMPORTED_MODULE_168__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_any_audio_node_function__WEBPACK_IMPORTED_MODULE_169__ = __webpack_require__(
    /*! ./is-any-audio-node-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-function.js");
    /* harmony import */


    var _is_any_audio_node_function__WEBPACK_IMPORTED_MODULE_169___default = /*#__PURE__*/__webpack_require__.n(_is_any_audio_node_function__WEBPACK_IMPORTED_MODULE_169__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_any_audio_node_function__WEBPACK_IMPORTED_MODULE_169__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_any_audio_node_function__WEBPACK_IMPORTED_MODULE_169__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_any_audio_param_factory__WEBPACK_IMPORTED_MODULE_170__ = __webpack_require__(
    /*! ./is-any-audio-param-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-factory.js");
    /* harmony import */


    var _is_any_audio_param_factory__WEBPACK_IMPORTED_MODULE_170___default = /*#__PURE__*/__webpack_require__.n(_is_any_audio_param_factory__WEBPACK_IMPORTED_MODULE_170__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_any_audio_param_factory__WEBPACK_IMPORTED_MODULE_170__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_any_audio_param_factory__WEBPACK_IMPORTED_MODULE_170__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_any_audio_param_function__WEBPACK_IMPORTED_MODULE_171__ = __webpack_require__(
    /*! ./is-any-audio-param-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-function.js");
    /* harmony import */


    var _is_any_audio_param_function__WEBPACK_IMPORTED_MODULE_171___default = /*#__PURE__*/__webpack_require__.n(_is_any_audio_param_function__WEBPACK_IMPORTED_MODULE_171__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_any_audio_param_function__WEBPACK_IMPORTED_MODULE_171__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_any_audio_param_function__WEBPACK_IMPORTED_MODULE_171__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_any_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_172__ = __webpack_require__(
    /*! ./is-any-offline-audio-context-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-factory.js");
    /* harmony import */


    var _is_any_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_172___default = /*#__PURE__*/__webpack_require__.n(_is_any_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_172__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_any_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_172__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_any_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_172__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_any_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_173__ = __webpack_require__(
    /*! ./is-any-offline-audio-context-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-function.js");
    /* harmony import */


    var _is_any_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_173___default = /*#__PURE__*/__webpack_require__.n(_is_any_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_173__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_any_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_173__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_any_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_173__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_dc_curve_function__WEBPACK_IMPORTED_MODULE_174__ = __webpack_require__(
    /*! ./is-dc-curve-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-dc-curve-function.js");
    /* harmony import */


    var _is_dc_curve_function__WEBPACK_IMPORTED_MODULE_174___default = /*#__PURE__*/__webpack_require__.n(_is_dc_curve_function__WEBPACK_IMPORTED_MODULE_174__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_dc_curve_function__WEBPACK_IMPORTED_MODULE_174__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_dc_curve_function__WEBPACK_IMPORTED_MODULE_174__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_native_audio_context_factory__WEBPACK_IMPORTED_MODULE_175__ = __webpack_require__(
    /*! ./is-native-audio-context-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-factory.js");
    /* harmony import */


    var _is_native_audio_context_factory__WEBPACK_IMPORTED_MODULE_175___default = /*#__PURE__*/__webpack_require__.n(_is_native_audio_context_factory__WEBPACK_IMPORTED_MODULE_175__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_native_audio_context_factory__WEBPACK_IMPORTED_MODULE_175__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_native_audio_context_factory__WEBPACK_IMPORTED_MODULE_175__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_native_audio_context_function__WEBPACK_IMPORTED_MODULE_176__ = __webpack_require__(
    /*! ./is-native-audio-context-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-function.js");
    /* harmony import */


    var _is_native_audio_context_function__WEBPACK_IMPORTED_MODULE_176___default = /*#__PURE__*/__webpack_require__.n(_is_native_audio_context_function__WEBPACK_IMPORTED_MODULE_176__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_native_audio_context_function__WEBPACK_IMPORTED_MODULE_176__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_native_audio_context_function__WEBPACK_IMPORTED_MODULE_176__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_177__ = __webpack_require__(
    /*! ./is-native-audio-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-factory.js");
    /* harmony import */


    var _is_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_177___default = /*#__PURE__*/__webpack_require__.n(_is_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_177__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_177__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_177__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_native_audio_node_function__WEBPACK_IMPORTED_MODULE_178__ = __webpack_require__(
    /*! ./is-native-audio-node-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-function.js");
    /* harmony import */


    var _is_native_audio_node_function__WEBPACK_IMPORTED_MODULE_178___default = /*#__PURE__*/__webpack_require__.n(_is_native_audio_node_function__WEBPACK_IMPORTED_MODULE_178__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_native_audio_node_function__WEBPACK_IMPORTED_MODULE_178__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_native_audio_node_function__WEBPACK_IMPORTED_MODULE_178__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_native_audio_param_factory__WEBPACK_IMPORTED_MODULE_179__ = __webpack_require__(
    /*! ./is-native-audio-param-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-factory.js");
    /* harmony import */


    var _is_native_audio_param_factory__WEBPACK_IMPORTED_MODULE_179___default = /*#__PURE__*/__webpack_require__.n(_is_native_audio_param_factory__WEBPACK_IMPORTED_MODULE_179__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_native_audio_param_factory__WEBPACK_IMPORTED_MODULE_179__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_native_audio_param_factory__WEBPACK_IMPORTED_MODULE_179__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_native_audio_param_function__WEBPACK_IMPORTED_MODULE_180__ = __webpack_require__(
    /*! ./is-native-audio-param-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-function.js");
    /* harmony import */


    var _is_native_audio_param_function__WEBPACK_IMPORTED_MODULE_180___default = /*#__PURE__*/__webpack_require__.n(_is_native_audio_param_function__WEBPACK_IMPORTED_MODULE_180__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_native_audio_param_function__WEBPACK_IMPORTED_MODULE_180__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_native_audio_param_function__WEBPACK_IMPORTED_MODULE_180__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_native_context_factory__WEBPACK_IMPORTED_MODULE_181__ = __webpack_require__(
    /*! ./is-native-context-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-factory.js");
    /* harmony import */


    var _is_native_context_factory__WEBPACK_IMPORTED_MODULE_181___default = /*#__PURE__*/__webpack_require__.n(_is_native_context_factory__WEBPACK_IMPORTED_MODULE_181__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_native_context_factory__WEBPACK_IMPORTED_MODULE_181__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_native_context_factory__WEBPACK_IMPORTED_MODULE_181__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_native_context_function__WEBPACK_IMPORTED_MODULE_182__ = __webpack_require__(
    /*! ./is-native-context-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-function.js");
    /* harmony import */


    var _is_native_context_function__WEBPACK_IMPORTED_MODULE_182___default = /*#__PURE__*/__webpack_require__.n(_is_native_context_function__WEBPACK_IMPORTED_MODULE_182__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_native_context_function__WEBPACK_IMPORTED_MODULE_182__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_native_context_function__WEBPACK_IMPORTED_MODULE_182__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_183__ = __webpack_require__(
    /*! ./is-native-offline-audio-context-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-factory.js");
    /* harmony import */


    var _is_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_183___default = /*#__PURE__*/__webpack_require__.n(_is_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_183__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_183__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_183__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_184__ = __webpack_require__(
    /*! ./is-native-offline-audio-context-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function.js");
    /* harmony import */


    var _is_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_184___default = /*#__PURE__*/__webpack_require__.n(_is_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_184__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_184__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_184__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_part_of_a_cycle_function__WEBPACK_IMPORTED_MODULE_185__ = __webpack_require__(
    /*! ./is-part-of-a-cycle-function */
    "./node_modules/standardized-audio-context/build/es2019/types/is-part-of-a-cycle-function.js");
    /* harmony import */


    var _is_part_of_a_cycle_function__WEBPACK_IMPORTED_MODULE_185___default = /*#__PURE__*/__webpack_require__.n(_is_part_of_a_cycle_function__WEBPACK_IMPORTED_MODULE_185__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_part_of_a_cycle_function__WEBPACK_IMPORTED_MODULE_185__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_part_of_a_cycle_function__WEBPACK_IMPORTED_MODULE_185__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_secure_context_factory__WEBPACK_IMPORTED_MODULE_186__ = __webpack_require__(
    /*! ./is-secure-context-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/is-secure-context-factory.js");
    /* harmony import */


    var _is_secure_context_factory__WEBPACK_IMPORTED_MODULE_186___default = /*#__PURE__*/__webpack_require__.n(_is_secure_context_factory__WEBPACK_IMPORTED_MODULE_186__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_secure_context_factory__WEBPACK_IMPORTED_MODULE_186__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_secure_context_factory__WEBPACK_IMPORTED_MODULE_186__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _is_supported_promise_factory__WEBPACK_IMPORTED_MODULE_187__ = __webpack_require__(
    /*! ./is-supported-promise-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js");
    /* harmony import */


    var _is_supported_promise_factory__WEBPACK_IMPORTED_MODULE_187___default = /*#__PURE__*/__webpack_require__.n(_is_supported_promise_factory__WEBPACK_IMPORTED_MODULE_187__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _is_supported_promise_factory__WEBPACK_IMPORTED_MODULE_187__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _is_supported_promise_factory__WEBPACK_IMPORTED_MODULE_187__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_188__ = __webpack_require__(
    /*! ./media-element-audio-source-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor.js");
    /* harmony import */


    var _media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_188___default = /*#__PURE__*/__webpack_require__.n(_media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_188__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_188__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_element_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_188__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_element_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_189__ = __webpack_require__(
    /*! ./media-element-audio-source-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor-factory.js");
    /* harmony import */


    var _media_element_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_189___default = /*#__PURE__*/__webpack_require__.n(_media_element_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_189__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_element_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_189__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_element_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_189__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_190__ = __webpack_require__(
    /*! ./media-stream-audio-destination-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor.js");
    /* harmony import */


    var _media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_190___default = /*#__PURE__*/__webpack_require__.n(_media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_190__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_190__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_stream_audio_destination_node_constructor__WEBPACK_IMPORTED_MODULE_190__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_stream_audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_191__ = __webpack_require__(
    /*! ./media-stream-audio-destination-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js");
    /* harmony import */


    var _media_stream_audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_191___default = /*#__PURE__*/__webpack_require__.n(_media_stream_audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_191__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_stream_audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_191__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_stream_audio_destination_node_constructor_factory__WEBPACK_IMPORTED_MODULE_191__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_192__ = __webpack_require__(
    /*! ./media-stream-audio-source-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor.js");
    /* harmony import */


    var _media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_192___default = /*#__PURE__*/__webpack_require__.n(_media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_192__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_192__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_stream_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_192__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_stream_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_193__ = __webpack_require__(
    /*! ./media-stream-audio-source-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor-factory.js");
    /* harmony import */


    var _media_stream_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_193___default = /*#__PURE__*/__webpack_require__.n(_media_stream_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_193__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_stream_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_193__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_stream_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_193__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_194__ = __webpack_require__(
    /*! ./media-stream-track-audio-source-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor.js");
    /* harmony import */


    var _media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_194___default = /*#__PURE__*/__webpack_require__.n(_media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_194__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_194__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_stream_track_audio_source_node_constructor__WEBPACK_IMPORTED_MODULE_194__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _media_stream_track_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_195__ = __webpack_require__(
    /*! ./media-stream-track-audio-source-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js");
    /* harmony import */


    var _media_stream_track_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_195___default = /*#__PURE__*/__webpack_require__.n(_media_stream_track_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_195__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _media_stream_track_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_195__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _media_stream_track_audio_source_node_constructor_factory__WEBPACK_IMPORTED_MODULE_195__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_196__ = __webpack_require__(
    /*! ./minimal-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor.js");
    /* harmony import */


    var _minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_196___default = /*#__PURE__*/__webpack_require__.n(_minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_196__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_196__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _minimal_audio_context_constructor__WEBPACK_IMPORTED_MODULE_196__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _minimal_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_197__ = __webpack_require__(
    /*! ./minimal-audio-context-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor-factory.js");
    /* harmony import */


    var _minimal_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_197___default = /*#__PURE__*/__webpack_require__.n(_minimal_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_197__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _minimal_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_197__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _minimal_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_197__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_198__ = __webpack_require__(
    /*! ./minimal-base-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor.js");
    /* harmony import */


    var _minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_198___default = /*#__PURE__*/__webpack_require__.n(_minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_198__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_198__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _minimal_base_audio_context_constructor__WEBPACK_IMPORTED_MODULE_198__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _minimal_base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_199__ = __webpack_require__(
    /*! ./minimal-base-audio-context-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor-factory.js");
    /* harmony import */


    var _minimal_base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_199___default = /*#__PURE__*/__webpack_require__.n(_minimal_base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_199__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _minimal_base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_199__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _minimal_base_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_199__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_200__ = __webpack_require__(
    /*! ./minimal-offline-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor.js");
    /* harmony import */


    var _minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_200___default = /*#__PURE__*/__webpack_require__.n(_minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_200__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_200__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _minimal_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_200__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _minimal_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_201__ = __webpack_require__(
    /*! ./minimal-offline-audio-context-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor-factory.js");
    /* harmony import */


    var _minimal_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_201___default = /*#__PURE__*/__webpack_require__.n(_minimal_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_201__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _minimal_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_201__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _minimal_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_201__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _monitor_connections_factory__WEBPACK_IMPORTED_MODULE_202__ = __webpack_require__(
    /*! ./monitor-connections-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-factory.js");
    /* harmony import */


    var _monitor_connections_factory__WEBPACK_IMPORTED_MODULE_202___default = /*#__PURE__*/__webpack_require__.n(_monitor_connections_factory__WEBPACK_IMPORTED_MODULE_202__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _monitor_connections_factory__WEBPACK_IMPORTED_MODULE_202__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _monitor_connections_factory__WEBPACK_IMPORTED_MODULE_202__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _monitor_connections_function__WEBPACK_IMPORTED_MODULE_203__ = __webpack_require__(
    /*! ./monitor-connections-function */
    "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-function.js");
    /* harmony import */


    var _monitor_connections_function__WEBPACK_IMPORTED_MODULE_203___default = /*#__PURE__*/__webpack_require__.n(_monitor_connections_function__WEBPACK_IMPORTED_MODULE_203__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _monitor_connections_function__WEBPACK_IMPORTED_MODULE_203__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _monitor_connections_function__WEBPACK_IMPORTED_MODULE_203__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_analyser_node__WEBPACK_IMPORTED_MODULE_204__ = __webpack_require__(
    /*! ./native-analyser-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node.js");
    /* harmony import */


    var _native_analyser_node__WEBPACK_IMPORTED_MODULE_204___default = /*#__PURE__*/__webpack_require__.n(_native_analyser_node__WEBPACK_IMPORTED_MODULE_204__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_analyser_node__WEBPACK_IMPORTED_MODULE_204__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_analyser_node__WEBPACK_IMPORTED_MODULE_204__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_205__ = __webpack_require__(
    /*! ./native-analyser-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory.js");
    /* harmony import */


    var _native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_205___default = /*#__PURE__*/__webpack_require__.n(_native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_205__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_205__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_analyser_node_factory__WEBPACK_IMPORTED_MODULE_205__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_analyser_node_factory_factory__WEBPACK_IMPORTED_MODULE_206__ = __webpack_require__(
    /*! ./native-analyser-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory-factory.js");
    /* harmony import */


    var _native_analyser_node_factory_factory__WEBPACK_IMPORTED_MODULE_206___default = /*#__PURE__*/__webpack_require__.n(_native_analyser_node_factory_factory__WEBPACK_IMPORTED_MODULE_206__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_analyser_node_factory_factory__WEBPACK_IMPORTED_MODULE_206__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_analyser_node_factory_factory__WEBPACK_IMPORTED_MODULE_206__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_buffer__WEBPACK_IMPORTED_MODULE_207__ = __webpack_require__(
    /*! ./native-audio-buffer */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer.js");
    /* harmony import */


    var _native_audio_buffer__WEBPACK_IMPORTED_MODULE_207___default = /*#__PURE__*/__webpack_require__.n(_native_audio_buffer__WEBPACK_IMPORTED_MODULE_207__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_buffer__WEBPACK_IMPORTED_MODULE_207__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_buffer__WEBPACK_IMPORTED_MODULE_207__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_208__ = __webpack_require__(
    /*! ./native-audio-buffer-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor.js");
    /* harmony import */


    var _native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_208___default = /*#__PURE__*/__webpack_require__.n(_native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_208__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_208__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_buffer_constructor__WEBPACK_IMPORTED_MODULE_208__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_209__ = __webpack_require__(
    /*! ./native-audio-buffer-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor-factory.js");
    /* harmony import */


    var _native_audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_209___default = /*#__PURE__*/__webpack_require__.n(_native_audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_209__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_209__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_buffer_constructor_factory__WEBPACK_IMPORTED_MODULE_209__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_210__ = __webpack_require__(
    /*! ./native-audio-buffer-source-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node.js");
    /* harmony import */


    var _native_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_210___default = /*#__PURE__*/__webpack_require__.n(_native_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_210__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_210__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_buffer_source_node__WEBPACK_IMPORTED_MODULE_210__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_211__ = __webpack_require__(
    /*! ./native-audio-buffer-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory.js");
    /* harmony import */


    var _native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_211___default = /*#__PURE__*/__webpack_require__.n(_native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_211__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_211__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_buffer_source_node_factory__WEBPACK_IMPORTED_MODULE_211__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_212__ = __webpack_require__(
    /*! ./native-audio-buffer-source-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory-factory.js");
    /* harmony import */


    var _native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_212___default = /*#__PURE__*/__webpack_require__.n(_native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_212__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_212__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_buffer_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_212__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_context__WEBPACK_IMPORTED_MODULE_213__ = __webpack_require__(
    /*! ./native-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context.js");
    /* harmony import */


    var _native_audio_context__WEBPACK_IMPORTED_MODULE_213___default = /*#__PURE__*/__webpack_require__.n(_native_audio_context__WEBPACK_IMPORTED_MODULE_213__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_context__WEBPACK_IMPORTED_MODULE_213__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_context__WEBPACK_IMPORTED_MODULE_213__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_214__ = __webpack_require__(
    /*! ./native-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor.js");
    /* harmony import */


    var _native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_214___default = /*#__PURE__*/__webpack_require__.n(_native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_214__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_214__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_context_constructor__WEBPACK_IMPORTED_MODULE_214__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_215__ = __webpack_require__(
    /*! ./native-audio-context-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor-factory.js");
    /* harmony import */


    var _native_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_215___default = /*#__PURE__*/__webpack_require__.n(_native_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_215__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_215__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_215__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_destination_node__WEBPACK_IMPORTED_MODULE_216__ = __webpack_require__(
    /*! ./native-audio-destination-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node.js");
    /* harmony import */


    var _native_audio_destination_node__WEBPACK_IMPORTED_MODULE_216___default = /*#__PURE__*/__webpack_require__.n(_native_audio_destination_node__WEBPACK_IMPORTED_MODULE_216__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_destination_node__WEBPACK_IMPORTED_MODULE_216__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_destination_node__WEBPACK_IMPORTED_MODULE_216__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_217__ = __webpack_require__(
    /*! ./native-audio-destination-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory.js");
    /* harmony import */


    var _native_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_217___default = /*#__PURE__*/__webpack_require__.n(_native_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_217__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_217__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_217__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_218__ = __webpack_require__(
    /*! ./native-audio-destination-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory-factory.js");
    /* harmony import */


    var _native_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_218___default = /*#__PURE__*/__webpack_require__.n(_native_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_218__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_218__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_218__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_listener__WEBPACK_IMPORTED_MODULE_219__ = __webpack_require__(
    /*! ./native-audio-listener */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-listener.js");
    /* harmony import */


    var _native_audio_listener__WEBPACK_IMPORTED_MODULE_219___default = /*#__PURE__*/__webpack_require__.n(_native_audio_listener__WEBPACK_IMPORTED_MODULE_219__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_listener__WEBPACK_IMPORTED_MODULE_219__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_listener__WEBPACK_IMPORTED_MODULE_219__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_node__WEBPACK_IMPORTED_MODULE_220__ = __webpack_require__(
    /*! ./native-audio-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-node.js");
    /* harmony import */


    var _native_audio_node__WEBPACK_IMPORTED_MODULE_220___default = /*#__PURE__*/__webpack_require__.n(_native_audio_node__WEBPACK_IMPORTED_MODULE_220__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_node__WEBPACK_IMPORTED_MODULE_220__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_node__WEBPACK_IMPORTED_MODULE_220__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_node_factory__WEBPACK_IMPORTED_MODULE_221__ = __webpack_require__(
    /*! ./native-audio-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-node-factory.js");
    /* harmony import */


    var _native_audio_node_factory__WEBPACK_IMPORTED_MODULE_221___default = /*#__PURE__*/__webpack_require__.n(_native_audio_node_factory__WEBPACK_IMPORTED_MODULE_221__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_node_factory__WEBPACK_IMPORTED_MODULE_221__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_node_factory__WEBPACK_IMPORTED_MODULE_221__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_node_factory_factory__WEBPACK_IMPORTED_MODULE_222__ = __webpack_require__(
    /*! ./native-audio-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-node-factory-factory.js");
    /* harmony import */


    var _native_audio_node_factory_factory__WEBPACK_IMPORTED_MODULE_222___default = /*#__PURE__*/__webpack_require__.n(_native_audio_node_factory_factory__WEBPACK_IMPORTED_MODULE_222__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_node_factory_factory__WEBPACK_IMPORTED_MODULE_222__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_node_factory_factory__WEBPACK_IMPORTED_MODULE_222__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_param__WEBPACK_IMPORTED_MODULE_223__ = __webpack_require__(
    /*! ./native-audio-param */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param.js");
    /* harmony import */


    var _native_audio_param__WEBPACK_IMPORTED_MODULE_223___default = /*#__PURE__*/__webpack_require__.n(_native_audio_param__WEBPACK_IMPORTED_MODULE_223__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_param__WEBPACK_IMPORTED_MODULE_223__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_param__WEBPACK_IMPORTED_MODULE_223__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_param_map__WEBPACK_IMPORTED_MODULE_224__ = __webpack_require__(
    /*! ./native-audio-param-map */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param-map.js");
    /* harmony import */


    var _native_audio_param_map__WEBPACK_IMPORTED_MODULE_224___default = /*#__PURE__*/__webpack_require__.n(_native_audio_param_map__WEBPACK_IMPORTED_MODULE_224__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_param_map__WEBPACK_IMPORTED_MODULE_224__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_param_map__WEBPACK_IMPORTED_MODULE_224__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_worklet__WEBPACK_IMPORTED_MODULE_225__ = __webpack_require__(
    /*! ./native-audio-worklet */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet.js");
    /* harmony import */


    var _native_audio_worklet__WEBPACK_IMPORTED_MODULE_225___default = /*#__PURE__*/__webpack_require__.n(_native_audio_worklet__WEBPACK_IMPORTED_MODULE_225__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_worklet__WEBPACK_IMPORTED_MODULE_225__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_worklet__WEBPACK_IMPORTED_MODULE_225__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_worklet_node__WEBPACK_IMPORTED_MODULE_226__ = __webpack_require__(
    /*! ./native-audio-worklet-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node.js");
    /* harmony import */


    var _native_audio_worklet_node__WEBPACK_IMPORTED_MODULE_226___default = /*#__PURE__*/__webpack_require__.n(_native_audio_worklet_node__WEBPACK_IMPORTED_MODULE_226__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_worklet_node__WEBPACK_IMPORTED_MODULE_226__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_worklet_node__WEBPACK_IMPORTED_MODULE_226__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_227__ = __webpack_require__(
    /*! ./native-audio-worklet-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor.js");
    /* harmony import */


    var _native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_227___default = /*#__PURE__*/__webpack_require__.n(_native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_227__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_227__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_worklet_node_constructor__WEBPACK_IMPORTED_MODULE_227__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_228__ = __webpack_require__(
    /*! ./native-audio-worklet-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor-factory.js");
    /* harmony import */


    var _native_audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_228___default = /*#__PURE__*/__webpack_require__.n(_native_audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_228__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_228__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_worklet_node_constructor_factory__WEBPACK_IMPORTED_MODULE_228__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_229__ = __webpack_require__(
    /*! ./native-audio-worklet-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory.js");
    /* harmony import */


    var _native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_229___default = /*#__PURE__*/__webpack_require__.n(_native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_229__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_229__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_worklet_node_factory__WEBPACK_IMPORTED_MODULE_229__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_worklet_node_factory_factory__WEBPACK_IMPORTED_MODULE_230__ = __webpack_require__(
    /*! ./native-audio-worklet-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory-factory.js");
    /* harmony import */


    var _native_audio_worklet_node_factory_factory__WEBPACK_IMPORTED_MODULE_230___default = /*#__PURE__*/__webpack_require__.n(_native_audio_worklet_node_factory_factory__WEBPACK_IMPORTED_MODULE_230__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_worklet_node_factory_factory__WEBPACK_IMPORTED_MODULE_230__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_worklet_node_factory_factory__WEBPACK_IMPORTED_MODULE_230__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_231__ = __webpack_require__(
    /*! ./native-audio-worklet-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory.js");
    /* harmony import */


    var _native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_231___default = /*#__PURE__*/__webpack_require__.n(_native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_231__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_231__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_worklet_node_faker_factory__WEBPACK_IMPORTED_MODULE_231__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_worklet_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_232__ = __webpack_require__(
    /*! ./native-audio-worklet-node-faker-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js");
    /* harmony import */


    var _native_audio_worklet_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_232___default = /*#__PURE__*/__webpack_require__.n(_native_audio_worklet_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_232__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_worklet_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_232__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_worklet_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_232__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_233__ = __webpack_require__(
    /*! ./native-audio-worklet-node-options */
    "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-options.js");
    /* harmony import */


    var _native_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_233___default = /*#__PURE__*/__webpack_require__.n(_native_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_233__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_233__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_audio_worklet_node_options__WEBPACK_IMPORTED_MODULE_233__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_234__ = __webpack_require__(
    /*! ./native-biquad-filter-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node.js");
    /* harmony import */


    var _native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_234___default = /*#__PURE__*/__webpack_require__.n(_native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_234__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_234__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_biquad_filter_node__WEBPACK_IMPORTED_MODULE_234__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_biquad_filter_node_factory__WEBPACK_IMPORTED_MODULE_235__ = __webpack_require__(
    /*! ./native-biquad-filter-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory.js");
    /* harmony import */


    var _native_biquad_filter_node_factory__WEBPACK_IMPORTED_MODULE_235___default = /*#__PURE__*/__webpack_require__.n(_native_biquad_filter_node_factory__WEBPACK_IMPORTED_MODULE_235__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_biquad_filter_node_factory__WEBPACK_IMPORTED_MODULE_235__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_biquad_filter_node_factory__WEBPACK_IMPORTED_MODULE_235__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_biquad_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_236__ = __webpack_require__(
    /*! ./native-biquad-filter-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory-factory.js");
    /* harmony import */


    var _native_biquad_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_236___default = /*#__PURE__*/__webpack_require__.n(_native_biquad_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_236__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_biquad_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_236__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_biquad_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_236__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_channel_merger_node__WEBPACK_IMPORTED_MODULE_237__ = __webpack_require__(
    /*! ./native-channel-merger-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node.js");
    /* harmony import */


    var _native_channel_merger_node__WEBPACK_IMPORTED_MODULE_237___default = /*#__PURE__*/__webpack_require__.n(_native_channel_merger_node__WEBPACK_IMPORTED_MODULE_237__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_channel_merger_node__WEBPACK_IMPORTED_MODULE_237__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_channel_merger_node__WEBPACK_IMPORTED_MODULE_237__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_238__ = __webpack_require__(
    /*! ./native-channel-merger-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory.js");
    /* harmony import */


    var _native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_238___default = /*#__PURE__*/__webpack_require__.n(_native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_238__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_238__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_238__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_channel_merger_node_factory_factory__WEBPACK_IMPORTED_MODULE_239__ = __webpack_require__(
    /*! ./native-channel-merger-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory-factory.js");
    /* harmony import */


    var _native_channel_merger_node_factory_factory__WEBPACK_IMPORTED_MODULE_239___default = /*#__PURE__*/__webpack_require__.n(_native_channel_merger_node_factory_factory__WEBPACK_IMPORTED_MODULE_239__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_channel_merger_node_factory_factory__WEBPACK_IMPORTED_MODULE_239__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_channel_merger_node_factory_factory__WEBPACK_IMPORTED_MODULE_239__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_240__ = __webpack_require__(
    /*! ./native-channel-splitter-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node.js");
    /* harmony import */


    var _native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_240___default = /*#__PURE__*/__webpack_require__.n(_native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_240__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_240__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_channel_splitter_node__WEBPACK_IMPORTED_MODULE_240__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_channel_splitter_node_factory__WEBPACK_IMPORTED_MODULE_241__ = __webpack_require__(
    /*! ./native-channel-splitter-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory.js");
    /* harmony import */


    var _native_channel_splitter_node_factory__WEBPACK_IMPORTED_MODULE_241___default = /*#__PURE__*/__webpack_require__.n(_native_channel_splitter_node_factory__WEBPACK_IMPORTED_MODULE_241__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_channel_splitter_node_factory__WEBPACK_IMPORTED_MODULE_241__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_channel_splitter_node_factory__WEBPACK_IMPORTED_MODULE_241__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_channel_splitter_node_factory_factory__WEBPACK_IMPORTED_MODULE_242__ = __webpack_require__(
    /*! ./native-channel-splitter-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory-factory.js");
    /* harmony import */


    var _native_channel_splitter_node_factory_factory__WEBPACK_IMPORTED_MODULE_242___default = /*#__PURE__*/__webpack_require__.n(_native_channel_splitter_node_factory_factory__WEBPACK_IMPORTED_MODULE_242__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_channel_splitter_node_factory_factory__WEBPACK_IMPORTED_MODULE_242__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_channel_splitter_node_factory_factory__WEBPACK_IMPORTED_MODULE_242__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_constant_source_node__WEBPACK_IMPORTED_MODULE_243__ = __webpack_require__(
    /*! ./native-constant-source-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node.js");
    /* harmony import */


    var _native_constant_source_node__WEBPACK_IMPORTED_MODULE_243___default = /*#__PURE__*/__webpack_require__.n(_native_constant_source_node__WEBPACK_IMPORTED_MODULE_243__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_constant_source_node__WEBPACK_IMPORTED_MODULE_243__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_constant_source_node__WEBPACK_IMPORTED_MODULE_243__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_244__ = __webpack_require__(
    /*! ./native-constant-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory.js");
    /* harmony import */


    var _native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_244___default = /*#__PURE__*/__webpack_require__.n(_native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_244__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_244__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_constant_source_node_factory__WEBPACK_IMPORTED_MODULE_244__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_constant_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_245__ = __webpack_require__(
    /*! ./native-constant-source-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory-factory.js");
    /* harmony import */


    var _native_constant_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_245___default = /*#__PURE__*/__webpack_require__.n(_native_constant_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_245__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_constant_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_245__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_constant_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_245__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_246__ = __webpack_require__(
    /*! ./native-constant-source-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory.js");
    /* harmony import */


    var _native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_246___default = /*#__PURE__*/__webpack_require__.n(_native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_246__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_246__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_constant_source_node_faker_factory__WEBPACK_IMPORTED_MODULE_246__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_constant_source_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_247__ = __webpack_require__(
    /*! ./native-constant-source-node-faker-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory-factory.js");
    /* harmony import */


    var _native_constant_source_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_247___default = /*#__PURE__*/__webpack_require__.n(_native_constant_source_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_247__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_constant_source_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_247__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_constant_source_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_247__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_context__WEBPACK_IMPORTED_MODULE_248__ = __webpack_require__(
    /*! ./native-context */
    "./node_modules/standardized-audio-context/build/es2019/types/native-context.js");
    /* harmony import */


    var _native_context__WEBPACK_IMPORTED_MODULE_248___default = /*#__PURE__*/__webpack_require__.n(_native_context__WEBPACK_IMPORTED_MODULE_248__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_context__WEBPACK_IMPORTED_MODULE_248__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_context__WEBPACK_IMPORTED_MODULE_248__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_convolver_node__WEBPACK_IMPORTED_MODULE_249__ = __webpack_require__(
    /*! ./native-convolver-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node.js");
    /* harmony import */


    var _native_convolver_node__WEBPACK_IMPORTED_MODULE_249___default = /*#__PURE__*/__webpack_require__.n(_native_convolver_node__WEBPACK_IMPORTED_MODULE_249__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_convolver_node__WEBPACK_IMPORTED_MODULE_249__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_convolver_node__WEBPACK_IMPORTED_MODULE_249__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_250__ = __webpack_require__(
    /*! ./native-convolver-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory.js");
    /* harmony import */


    var _native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_250___default = /*#__PURE__*/__webpack_require__.n(_native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_250__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_250__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_convolver_node_factory__WEBPACK_IMPORTED_MODULE_250__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_convolver_node_factory_factory__WEBPACK_IMPORTED_MODULE_251__ = __webpack_require__(
    /*! ./native-convolver-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory-factory.js");
    /* harmony import */


    var _native_convolver_node_factory_factory__WEBPACK_IMPORTED_MODULE_251___default = /*#__PURE__*/__webpack_require__.n(_native_convolver_node_factory_factory__WEBPACK_IMPORTED_MODULE_251__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_convolver_node_factory_factory__WEBPACK_IMPORTED_MODULE_251__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_convolver_node_factory_factory__WEBPACK_IMPORTED_MODULE_251__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_convolver_node_faker_factory__WEBPACK_IMPORTED_MODULE_252__ = __webpack_require__(
    /*! ./native-convolver-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-faker-factory.js");
    /* harmony import */


    var _native_convolver_node_faker_factory__WEBPACK_IMPORTED_MODULE_252___default = /*#__PURE__*/__webpack_require__.n(_native_convolver_node_faker_factory__WEBPACK_IMPORTED_MODULE_252__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_convolver_node_faker_factory__WEBPACK_IMPORTED_MODULE_252__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_convolver_node_faker_factory__WEBPACK_IMPORTED_MODULE_252__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_convolver_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_253__ = __webpack_require__(
    /*! ./native-convolver-node-faker-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-faker-factory-factory.js");
    /* harmony import */


    var _native_convolver_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_253___default = /*#__PURE__*/__webpack_require__.n(_native_convolver_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_253__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_convolver_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_253__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_convolver_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_253__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_delay_node_factory__WEBPACK_IMPORTED_MODULE_254__ = __webpack_require__(
    /*! ./native-delay-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory.js");
    /* harmony import */


    var _native_delay_node_factory__WEBPACK_IMPORTED_MODULE_254___default = /*#__PURE__*/__webpack_require__.n(_native_delay_node_factory__WEBPACK_IMPORTED_MODULE_254__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_delay_node_factory__WEBPACK_IMPORTED_MODULE_254__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_delay_node_factory__WEBPACK_IMPORTED_MODULE_254__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_delay_node_factory_factory__WEBPACK_IMPORTED_MODULE_255__ = __webpack_require__(
    /*! ./native-delay-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory-factory.js");
    /* harmony import */


    var _native_delay_node_factory_factory__WEBPACK_IMPORTED_MODULE_255___default = /*#__PURE__*/__webpack_require__.n(_native_delay_node_factory_factory__WEBPACK_IMPORTED_MODULE_255__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_delay_node_factory_factory__WEBPACK_IMPORTED_MODULE_255__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_delay_node_factory_factory__WEBPACK_IMPORTED_MODULE_255__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_delay_node__WEBPACK_IMPORTED_MODULE_256__ = __webpack_require__(
    /*! ./native-delay-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node.js");
    /* harmony import */


    var _native_delay_node__WEBPACK_IMPORTED_MODULE_256___default = /*#__PURE__*/__webpack_require__.n(_native_delay_node__WEBPACK_IMPORTED_MODULE_256__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_delay_node__WEBPACK_IMPORTED_MODULE_256__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_delay_node__WEBPACK_IMPORTED_MODULE_256__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_257__ = __webpack_require__(
    /*! ./native-dynamics-compressor-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node.js");
    /* harmony import */


    var _native_dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_257___default = /*#__PURE__*/__webpack_require__.n(_native_dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_257__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_257__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_dynamics_compressor_node__WEBPACK_IMPORTED_MODULE_257__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_258__ = __webpack_require__(
    /*! ./native-dynamics-compressor-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory.js");
    /* harmony import */


    var _native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_258___default = /*#__PURE__*/__webpack_require__.n(_native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_258__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_258__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_dynamics_compressor_node_factory__WEBPACK_IMPORTED_MODULE_258__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_dynamics_compressor_node_factory_factory__WEBPACK_IMPORTED_MODULE_259__ = __webpack_require__(
    /*! ./native-dynamics-compressor-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory-factory.js");
    /* harmony import */


    var _native_dynamics_compressor_node_factory_factory__WEBPACK_IMPORTED_MODULE_259___default = /*#__PURE__*/__webpack_require__.n(_native_dynamics_compressor_node_factory_factory__WEBPACK_IMPORTED_MODULE_259__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_dynamics_compressor_node_factory_factory__WEBPACK_IMPORTED_MODULE_259__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_dynamics_compressor_node_factory_factory__WEBPACK_IMPORTED_MODULE_259__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_event_target__WEBPACK_IMPORTED_MODULE_260__ = __webpack_require__(
    /*! ./native-event-target */
    "./node_modules/standardized-audio-context/build/es2019/types/native-event-target.js");
    /* harmony import */


    var _native_event_target__WEBPACK_IMPORTED_MODULE_260___default = /*#__PURE__*/__webpack_require__.n(_native_event_target__WEBPACK_IMPORTED_MODULE_260__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_event_target__WEBPACK_IMPORTED_MODULE_260__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_event_target__WEBPACK_IMPORTED_MODULE_260__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_gain_node__WEBPACK_IMPORTED_MODULE_261__ = __webpack_require__(
    /*! ./native-gain-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node.js");
    /* harmony import */


    var _native_gain_node__WEBPACK_IMPORTED_MODULE_261___default = /*#__PURE__*/__webpack_require__.n(_native_gain_node__WEBPACK_IMPORTED_MODULE_261__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_gain_node__WEBPACK_IMPORTED_MODULE_261__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_gain_node__WEBPACK_IMPORTED_MODULE_261__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_gain_node_factory__WEBPACK_IMPORTED_MODULE_262__ = __webpack_require__(
    /*! ./native-gain-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory.js");
    /* harmony import */


    var _native_gain_node_factory__WEBPACK_IMPORTED_MODULE_262___default = /*#__PURE__*/__webpack_require__.n(_native_gain_node_factory__WEBPACK_IMPORTED_MODULE_262__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_gain_node_factory__WEBPACK_IMPORTED_MODULE_262__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_gain_node_factory__WEBPACK_IMPORTED_MODULE_262__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_gain_node_factory_factory__WEBPACK_IMPORTED_MODULE_263__ = __webpack_require__(
    /*! ./native-gain-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory-factory.js");
    /* harmony import */


    var _native_gain_node_factory_factory__WEBPACK_IMPORTED_MODULE_263___default = /*#__PURE__*/__webpack_require__.n(_native_gain_node_factory_factory__WEBPACK_IMPORTED_MODULE_263__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_gain_node_factory_factory__WEBPACK_IMPORTED_MODULE_263__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_gain_node_factory_factory__WEBPACK_IMPORTED_MODULE_263__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_iir_filter_node__WEBPACK_IMPORTED_MODULE_264__ = __webpack_require__(
    /*! ./native-iir-filter-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node.js");
    /* harmony import */


    var _native_iir_filter_node__WEBPACK_IMPORTED_MODULE_264___default = /*#__PURE__*/__webpack_require__.n(_native_iir_filter_node__WEBPACK_IMPORTED_MODULE_264__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_iir_filter_node__WEBPACK_IMPORTED_MODULE_264__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_iir_filter_node__WEBPACK_IMPORTED_MODULE_264__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_265__ = __webpack_require__(
    /*! ./native-iir-filter-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory.js");
    /* harmony import */


    var _native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_265___default = /*#__PURE__*/__webpack_require__.n(_native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_265__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_265__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_iir_filter_node_factory__WEBPACK_IMPORTED_MODULE_265__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_iir_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_266__ = __webpack_require__(
    /*! ./native-iir-filter-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory-factory.js");
    /* harmony import */


    var _native_iir_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_266___default = /*#__PURE__*/__webpack_require__.n(_native_iir_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_266__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_iir_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_266__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_iir_filter_node_factory_factory__WEBPACK_IMPORTED_MODULE_266__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_267__ = __webpack_require__(
    /*! ./native-iir-filter-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory.js");
    /* harmony import */


    var _native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_267___default = /*#__PURE__*/__webpack_require__.n(_native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_267__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_267__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_iir_filter_node_faker_factory__WEBPACK_IMPORTED_MODULE_267__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_iir_filter_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_268__ = __webpack_require__(
    /*! ./native-iir-filter-node-faker-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory-factory.js");
    /* harmony import */


    var _native_iir_filter_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_268___default = /*#__PURE__*/__webpack_require__.n(_native_iir_filter_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_268__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_iir_filter_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_268__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_iir_filter_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_268__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_269__ = __webpack_require__(
    /*! ./native-media-element-audio-source-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node.js");
    /* harmony import */


    var _native_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_269___default = /*#__PURE__*/__webpack_require__.n(_native_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_269__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_269__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_element_audio_source_node__WEBPACK_IMPORTED_MODULE_269__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_element_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_270__ = __webpack_require__(
    /*! ./native-media-element-audio-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory.js");
    /* harmony import */


    var _native_media_element_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_270___default = /*#__PURE__*/__webpack_require__.n(_native_media_element_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_270__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_element_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_270__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_element_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_270__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_element_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_271__ = __webpack_require__(
    /*! ./native-media-element-audio-source-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory-factory.js");
    /* harmony import */


    var _native_media_element_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_271___default = /*#__PURE__*/__webpack_require__.n(_native_media_element_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_271__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_element_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_271__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_element_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_271__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_272__ = __webpack_require__(
    /*! ./native-media-stream-audio-destination-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node.js");
    /* harmony import */


    var _native_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_272___default = /*#__PURE__*/__webpack_require__.n(_native_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_272__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_272__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_stream_audio_destination_node__WEBPACK_IMPORTED_MODULE_272__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_stream_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_273__ = __webpack_require__(
    /*! ./native-media-stream-audio-destination-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory.js");
    /* harmony import */


    var _native_media_stream_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_273___default = /*#__PURE__*/__webpack_require__.n(_native_media_stream_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_273__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_stream_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_273__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_stream_audio_destination_node_factory__WEBPACK_IMPORTED_MODULE_273__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_stream_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_274__ = __webpack_require__(
    /*! ./native-media-stream-audio-destination-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory-factory.js");
    /* harmony import */


    var _native_media_stream_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_274___default = /*#__PURE__*/__webpack_require__.n(_native_media_stream_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_274__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_stream_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_274__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_stream_audio_destination_node_factory_factory__WEBPACK_IMPORTED_MODULE_274__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_275__ = __webpack_require__(
    /*! ./native-media-stream-audio-source-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node.js");
    /* harmony import */


    var _native_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_275___default = /*#__PURE__*/__webpack_require__.n(_native_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_275__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_275__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_stream_audio_source_node__WEBPACK_IMPORTED_MODULE_275__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_stream_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_276__ = __webpack_require__(
    /*! ./native-media-stream-audio-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory.js");
    /* harmony import */


    var _native_media_stream_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_276___default = /*#__PURE__*/__webpack_require__.n(_native_media_stream_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_276__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_stream_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_276__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_stream_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_276__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_stream_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_277__ = __webpack_require__(
    /*! ./native-media-stream-audio-source-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory-factory.js");
    /* harmony import */


    var _native_media_stream_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_277___default = /*#__PURE__*/__webpack_require__.n(_native_media_stream_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_277__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_stream_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_277__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_stream_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_277__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_278__ = __webpack_require__(
    /*! ./native-media-stream-track-audio-source-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node.js");
    /* harmony import */


    var _native_media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_278___default = /*#__PURE__*/__webpack_require__.n(_native_media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_278__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_278__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_stream_track_audio_source_node__WEBPACK_IMPORTED_MODULE_278__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_279__ = __webpack_require__(
    /*! ./native-media-stream-track-audio-source-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory.js");
    /* harmony import */


    var _native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_279___default = /*#__PURE__*/__webpack_require__.n(_native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_279__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_279__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_stream_track_audio_source_node_factory__WEBPACK_IMPORTED_MODULE_279__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_media_stream_track_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_280__ = __webpack_require__(
    /*! ./native-media-stream-track-audio-source-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js");
    /* harmony import */


    var _native_media_stream_track_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_280___default = /*#__PURE__*/__webpack_require__.n(_native_media_stream_track_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_280__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_media_stream_track_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_280__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_media_stream_track_audio_source_node_factory_factory__WEBPACK_IMPORTED_MODULE_280__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_offline_audio_context__WEBPACK_IMPORTED_MODULE_281__ = __webpack_require__(
    /*! ./native-offline-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context.js");
    /* harmony import */


    var _native_offline_audio_context__WEBPACK_IMPORTED_MODULE_281___default = /*#__PURE__*/__webpack_require__.n(_native_offline_audio_context__WEBPACK_IMPORTED_MODULE_281__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_offline_audio_context__WEBPACK_IMPORTED_MODULE_281__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_offline_audio_context__WEBPACK_IMPORTED_MODULE_281__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_282__ = __webpack_require__(
    /*! ./native-offline-audio-context-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor.js");
    /* harmony import */


    var _native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_282___default = /*#__PURE__*/__webpack_require__.n(_native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_282__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_282__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_offline_audio_context_constructor__WEBPACK_IMPORTED_MODULE_282__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_283__ = __webpack_require__(
    /*! ./native-offline-audio-context-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor-factory.js");
    /* harmony import */


    var _native_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_283___default = /*#__PURE__*/__webpack_require__.n(_native_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_283__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_283__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_283__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_oscillator_node__WEBPACK_IMPORTED_MODULE_284__ = __webpack_require__(
    /*! ./native-oscillator-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node.js");
    /* harmony import */


    var _native_oscillator_node__WEBPACK_IMPORTED_MODULE_284___default = /*#__PURE__*/__webpack_require__.n(_native_oscillator_node__WEBPACK_IMPORTED_MODULE_284__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_oscillator_node__WEBPACK_IMPORTED_MODULE_284__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_oscillator_node__WEBPACK_IMPORTED_MODULE_284__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_285__ = __webpack_require__(
    /*! ./native-oscillator-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory.js");
    /* harmony import */


    var _native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_285___default = /*#__PURE__*/__webpack_require__.n(_native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_285__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_285__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_oscillator_node_factory__WEBPACK_IMPORTED_MODULE_285__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_oscillator_node_factory_factory__WEBPACK_IMPORTED_MODULE_286__ = __webpack_require__(
    /*! ./native-oscillator-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory-factory.js");
    /* harmony import */


    var _native_oscillator_node_factory_factory__WEBPACK_IMPORTED_MODULE_286___default = /*#__PURE__*/__webpack_require__.n(_native_oscillator_node_factory_factory__WEBPACK_IMPORTED_MODULE_286__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_oscillator_node_factory_factory__WEBPACK_IMPORTED_MODULE_286__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_oscillator_node_factory_factory__WEBPACK_IMPORTED_MODULE_286__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_panner_node__WEBPACK_IMPORTED_MODULE_287__ = __webpack_require__(
    /*! ./native-panner-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node.js");
    /* harmony import */


    var _native_panner_node__WEBPACK_IMPORTED_MODULE_287___default = /*#__PURE__*/__webpack_require__.n(_native_panner_node__WEBPACK_IMPORTED_MODULE_287__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_panner_node__WEBPACK_IMPORTED_MODULE_287__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_panner_node__WEBPACK_IMPORTED_MODULE_287__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_panner_node_factory__WEBPACK_IMPORTED_MODULE_288__ = __webpack_require__(
    /*! ./native-panner-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory.js");
    /* harmony import */


    var _native_panner_node_factory__WEBPACK_IMPORTED_MODULE_288___default = /*#__PURE__*/__webpack_require__.n(_native_panner_node_factory__WEBPACK_IMPORTED_MODULE_288__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_panner_node_factory__WEBPACK_IMPORTED_MODULE_288__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_panner_node_factory__WEBPACK_IMPORTED_MODULE_288__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_289__ = __webpack_require__(
    /*! ./native-panner-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory-factory.js");
    /* harmony import */


    var _native_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_289___default = /*#__PURE__*/__webpack_require__.n(_native_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_289__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_289__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_289__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_290__ = __webpack_require__(
    /*! ./native-panner-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory.js");
    /* harmony import */


    var _native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_290___default = /*#__PURE__*/__webpack_require__.n(_native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_290__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_290__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_290__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_291__ = __webpack_require__(
    /*! ./native-panner-node-faker-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory-factory.js");
    /* harmony import */


    var _native_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_291___default = /*#__PURE__*/__webpack_require__.n(_native_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_291__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_291__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_291__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_periodic_wave__WEBPACK_IMPORTED_MODULE_292__ = __webpack_require__(
    /*! ./native-periodic-wave */
    "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave.js");
    /* harmony import */


    var _native_periodic_wave__WEBPACK_IMPORTED_MODULE_292___default = /*#__PURE__*/__webpack_require__.n(_native_periodic_wave__WEBPACK_IMPORTED_MODULE_292__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_periodic_wave__WEBPACK_IMPORTED_MODULE_292__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_periodic_wave__WEBPACK_IMPORTED_MODULE_292__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_293__ = __webpack_require__(
    /*! ./native-periodic-wave-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory.js");
    /* harmony import */


    var _native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_293___default = /*#__PURE__*/__webpack_require__.n(_native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_293__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_293__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_periodic_wave_factory__WEBPACK_IMPORTED_MODULE_293__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_periodic_wave_factory_factory__WEBPACK_IMPORTED_MODULE_294__ = __webpack_require__(
    /*! ./native-periodic-wave-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory-factory.js");
    /* harmony import */


    var _native_periodic_wave_factory_factory__WEBPACK_IMPORTED_MODULE_294___default = /*#__PURE__*/__webpack_require__.n(_native_periodic_wave_factory_factory__WEBPACK_IMPORTED_MODULE_294__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_periodic_wave_factory_factory__WEBPACK_IMPORTED_MODULE_294__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_periodic_wave_factory_factory__WEBPACK_IMPORTED_MODULE_294__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_script_processor_node__WEBPACK_IMPORTED_MODULE_295__ = __webpack_require__(
    /*! ./native-script-processor-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node.js");
    /* harmony import */


    var _native_script_processor_node__WEBPACK_IMPORTED_MODULE_295___default = /*#__PURE__*/__webpack_require__.n(_native_script_processor_node__WEBPACK_IMPORTED_MODULE_295__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_script_processor_node__WEBPACK_IMPORTED_MODULE_295__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_script_processor_node__WEBPACK_IMPORTED_MODULE_295__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_script_processor_node_factory__WEBPACK_IMPORTED_MODULE_296__ = __webpack_require__(
    /*! ./native-script-processor-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory.js");
    /* harmony import */


    var _native_script_processor_node_factory__WEBPACK_IMPORTED_MODULE_296___default = /*#__PURE__*/__webpack_require__.n(_native_script_processor_node_factory__WEBPACK_IMPORTED_MODULE_296__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_script_processor_node_factory__WEBPACK_IMPORTED_MODULE_296__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_script_processor_node_factory__WEBPACK_IMPORTED_MODULE_296__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_script_processor_node_factory_factory__WEBPACK_IMPORTED_MODULE_297__ = __webpack_require__(
    /*! ./native-script-processor-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory-factory.js");
    /* harmony import */


    var _native_script_processor_node_factory_factory__WEBPACK_IMPORTED_MODULE_297___default = /*#__PURE__*/__webpack_require__.n(_native_script_processor_node_factory_factory__WEBPACK_IMPORTED_MODULE_297__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_script_processor_node_factory_factory__WEBPACK_IMPORTED_MODULE_297__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_script_processor_node_factory_factory__WEBPACK_IMPORTED_MODULE_297__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_stereo_panner_node__WEBPACK_IMPORTED_MODULE_298__ = __webpack_require__(
    /*! ./native-stereo-panner-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node.js");
    /* harmony import */


    var _native_stereo_panner_node__WEBPACK_IMPORTED_MODULE_298___default = /*#__PURE__*/__webpack_require__.n(_native_stereo_panner_node__WEBPACK_IMPORTED_MODULE_298__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_stereo_panner_node__WEBPACK_IMPORTED_MODULE_298__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_stereo_panner_node__WEBPACK_IMPORTED_MODULE_298__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_299__ = __webpack_require__(
    /*! ./native-stereo-panner-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory.js");
    /* harmony import */


    var _native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_299___default = /*#__PURE__*/__webpack_require__.n(_native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_299__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_299__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_stereo_panner_node_factory__WEBPACK_IMPORTED_MODULE_299__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_stereo_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_300__ = __webpack_require__(
    /*! ./native-stereo-panner-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory-factory.js");
    /* harmony import */


    var _native_stereo_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_300___default = /*#__PURE__*/__webpack_require__.n(_native_stereo_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_300__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_stereo_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_300__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_stereo_panner_node_factory_factory__WEBPACK_IMPORTED_MODULE_300__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_301__ = __webpack_require__(
    /*! ./native-stereo-panner-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory.js");
    /* harmony import */


    var _native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_301___default = /*#__PURE__*/__webpack_require__.n(_native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_301__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_301__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_stereo_panner_node_faker_factory__WEBPACK_IMPORTED_MODULE_301__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_stereo_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_302__ = __webpack_require__(
    /*! ./native-stereo-panner-node-faker-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js");
    /* harmony import */


    var _native_stereo_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_302___default = /*#__PURE__*/__webpack_require__.n(_native_stereo_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_302__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_stereo_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_302__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_stereo_panner_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_302__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_wave_shaper_node__WEBPACK_IMPORTED_MODULE_303__ = __webpack_require__(
    /*! ./native-wave-shaper-node */
    "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node.js");
    /* harmony import */


    var _native_wave_shaper_node__WEBPACK_IMPORTED_MODULE_303___default = /*#__PURE__*/__webpack_require__.n(_native_wave_shaper_node__WEBPACK_IMPORTED_MODULE_303__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_wave_shaper_node__WEBPACK_IMPORTED_MODULE_303__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_wave_shaper_node__WEBPACK_IMPORTED_MODULE_303__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_304__ = __webpack_require__(
    /*! ./native-wave-shaper-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory.js");
    /* harmony import */


    var _native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_304___default = /*#__PURE__*/__webpack_require__.n(_native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_304__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_304__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_wave_shaper_node_factory__WEBPACK_IMPORTED_MODULE_304__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_wave_shaper_node_factory_factory__WEBPACK_IMPORTED_MODULE_305__ = __webpack_require__(
    /*! ./native-wave-shaper-node-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory-factory.js");
    /* harmony import */


    var _native_wave_shaper_node_factory_factory__WEBPACK_IMPORTED_MODULE_305___default = /*#__PURE__*/__webpack_require__.n(_native_wave_shaper_node_factory_factory__WEBPACK_IMPORTED_MODULE_305__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_wave_shaper_node_factory_factory__WEBPACK_IMPORTED_MODULE_305__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_wave_shaper_node_factory_factory__WEBPACK_IMPORTED_MODULE_305__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_306__ = __webpack_require__(
    /*! ./native-wave-shaper-node-faker-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory.js");
    /* harmony import */


    var _native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_306___default = /*#__PURE__*/__webpack_require__.n(_native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_306__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_306__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_wave_shaper_node_faker_factory__WEBPACK_IMPORTED_MODULE_306__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _native_wave_shaper_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_307__ = __webpack_require__(
    /*! ./native-wave-shaper-node-faker-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js");
    /* harmony import */


    var _native_wave_shaper_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_307___default = /*#__PURE__*/__webpack_require__.n(_native_wave_shaper_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_307__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _native_wave_shaper_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_307__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _native_wave_shaper_node_faker_factory_factory__WEBPACK_IMPORTED_MODULE_307__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _not_supported_error_factory__WEBPACK_IMPORTED_MODULE_308__ = __webpack_require__(
    /*! ./not-supported-error-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/not-supported-error-factory.js");
    /* harmony import */


    var _not_supported_error_factory__WEBPACK_IMPORTED_MODULE_308___default = /*#__PURE__*/__webpack_require__.n(_not_supported_error_factory__WEBPACK_IMPORTED_MODULE_308__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _not_supported_error_factory__WEBPACK_IMPORTED_MODULE_308__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _not_supported_error_factory__WEBPACK_IMPORTED_MODULE_308__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_309__ = __webpack_require__(
    /*! ./offline-audio-context-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/offline-audio-context-constructor-factory.js");
    /* harmony import */


    var _offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_309___default = /*#__PURE__*/__webpack_require__.n(_offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_309__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_309__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _offline_audio_context_constructor_factory__WEBPACK_IMPORTED_MODULE_309__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_310__ = __webpack_require__(
    /*! ./oscillator-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor.js");
    /* harmony import */


    var _oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_310___default = /*#__PURE__*/__webpack_require__.n(_oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_310__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_310__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _oscillator_node_constructor__WEBPACK_IMPORTED_MODULE_310__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _oscillator_node_constructor_factory__WEBPACK_IMPORTED_MODULE_311__ = __webpack_require__(
    /*! ./oscillator-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor-factory.js");
    /* harmony import */


    var _oscillator_node_constructor_factory__WEBPACK_IMPORTED_MODULE_311___default = /*#__PURE__*/__webpack_require__.n(_oscillator_node_constructor_factory__WEBPACK_IMPORTED_MODULE_311__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _oscillator_node_constructor_factory__WEBPACK_IMPORTED_MODULE_311__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _oscillator_node_constructor_factory__WEBPACK_IMPORTED_MODULE_311__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_312__ = __webpack_require__(
    /*! ./oscillator-node-renderer */
    "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer.js");
    /* harmony import */


    var _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_312___default = /*#__PURE__*/__webpack_require__.n(_oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_312__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_312__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _oscillator_node_renderer__WEBPACK_IMPORTED_MODULE_312__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_313__ = __webpack_require__(
    /*! ./oscillator-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory.js");
    /* harmony import */


    var _oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_313___default = /*#__PURE__*/__webpack_require__.n(_oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_313__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_313__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _oscillator_node_renderer_factory__WEBPACK_IMPORTED_MODULE_313__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _oscillator_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_314__ = __webpack_require__(
    /*! ./oscillator-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory-factory.js");
    /* harmony import */


    var _oscillator_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_314___default = /*#__PURE__*/__webpack_require__.n(_oscillator_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_314__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _oscillator_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_314__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _oscillator_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_314__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _oscillator_type__WEBPACK_IMPORTED_MODULE_315__ = __webpack_require__(
    /*! ./oscillator-type */
    "./node_modules/standardized-audio-context/build/es2019/types/oscillator-type.js");
    /* harmony import */


    var _oscillator_type__WEBPACK_IMPORTED_MODULE_315___default = /*#__PURE__*/__webpack_require__.n(_oscillator_type__WEBPACK_IMPORTED_MODULE_315__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _oscillator_type__WEBPACK_IMPORTED_MODULE_315__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _oscillator_type__WEBPACK_IMPORTED_MODULE_315__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _output_connection__WEBPACK_IMPORTED_MODULE_316__ = __webpack_require__(
    /*! ./output-connection */
    "./node_modules/standardized-audio-context/build/es2019/types/output-connection.js");
    /* harmony import */


    var _output_connection__WEBPACK_IMPORTED_MODULE_316___default = /*#__PURE__*/__webpack_require__.n(_output_connection__WEBPACK_IMPORTED_MODULE_316__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _output_connection__WEBPACK_IMPORTED_MODULE_316__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _output_connection__WEBPACK_IMPORTED_MODULE_316__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _over_sample_type__WEBPACK_IMPORTED_MODULE_317__ = __webpack_require__(
    /*! ./over-sample-type */
    "./node_modules/standardized-audio-context/build/es2019/types/over-sample-type.js");
    /* harmony import */


    var _over_sample_type__WEBPACK_IMPORTED_MODULE_317___default = /*#__PURE__*/__webpack_require__.n(_over_sample_type__WEBPACK_IMPORTED_MODULE_317__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _over_sample_type__WEBPACK_IMPORTED_MODULE_317__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _over_sample_type__WEBPACK_IMPORTED_MODULE_317__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _overwrite_accessors_function__WEBPACK_IMPORTED_MODULE_318__ = __webpack_require__(
    /*! ./overwrite-accessors-function */
    "./node_modules/standardized-audio-context/build/es2019/types/overwrite-accessors-function.js");
    /* harmony import */


    var _overwrite_accessors_function__WEBPACK_IMPORTED_MODULE_318___default = /*#__PURE__*/__webpack_require__.n(_overwrite_accessors_function__WEBPACK_IMPORTED_MODULE_318__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _overwrite_accessors_function__WEBPACK_IMPORTED_MODULE_318__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _overwrite_accessors_function__WEBPACK_IMPORTED_MODULE_318__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _panner_node_constructor__WEBPACK_IMPORTED_MODULE_319__ = __webpack_require__(
    /*! ./panner-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor.js");
    /* harmony import */


    var _panner_node_constructor__WEBPACK_IMPORTED_MODULE_319___default = /*#__PURE__*/__webpack_require__.n(_panner_node_constructor__WEBPACK_IMPORTED_MODULE_319__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _panner_node_constructor__WEBPACK_IMPORTED_MODULE_319__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _panner_node_constructor__WEBPACK_IMPORTED_MODULE_319__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_320__ = __webpack_require__(
    /*! ./panner-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor-factory.js");
    /* harmony import */


    var _panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_320___default = /*#__PURE__*/__webpack_require__.n(_panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_320__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_320__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_320__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_321__ = __webpack_require__(
    /*! ./panner-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory.js");
    /* harmony import */


    var _panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_321___default = /*#__PURE__*/__webpack_require__.n(_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_321__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_321__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_321__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_322__ = __webpack_require__(
    /*! ./panner-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory-factory.js");
    /* harmony import */


    var _panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_322___default = /*#__PURE__*/__webpack_require__.n(_panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_322__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_322__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_322__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _panning_model_type__WEBPACK_IMPORTED_MODULE_323__ = __webpack_require__(
    /*! ./panning-model-type */
    "./node_modules/standardized-audio-context/build/es2019/types/panning-model-type.js");
    /* harmony import */


    var _panning_model_type__WEBPACK_IMPORTED_MODULE_323___default = /*#__PURE__*/__webpack_require__.n(_panning_model_type__WEBPACK_IMPORTED_MODULE_323__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _panning_model_type__WEBPACK_IMPORTED_MODULE_323__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _panning_model_type__WEBPACK_IMPORTED_MODULE_323__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _passive_audio_node_input_connection__WEBPACK_IMPORTED_MODULE_324__ = __webpack_require__(
    /*! ./passive-audio-node-input-connection */
    "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-node-input-connection.js");
    /* harmony import */


    var _passive_audio_node_input_connection__WEBPACK_IMPORTED_MODULE_324___default = /*#__PURE__*/__webpack_require__.n(_passive_audio_node_input_connection__WEBPACK_IMPORTED_MODULE_324__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _passive_audio_node_input_connection__WEBPACK_IMPORTED_MODULE_324__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _passive_audio_node_input_connection__WEBPACK_IMPORTED_MODULE_324__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _passive_audio_param_input_connection__WEBPACK_IMPORTED_MODULE_325__ = __webpack_require__(
    /*! ./passive-audio-param-input-connection */
    "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-param-input-connection.js");
    /* harmony import */


    var _passive_audio_param_input_connection__WEBPACK_IMPORTED_MODULE_325___default = /*#__PURE__*/__webpack_require__.n(_passive_audio_param_input_connection__WEBPACK_IMPORTED_MODULE_325__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _passive_audio_param_input_connection__WEBPACK_IMPORTED_MODULE_325__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _passive_audio_param_input_connection__WEBPACK_IMPORTED_MODULE_325__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_326__ = __webpack_require__(
    /*! ./periodic-wave-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor.js");
    /* harmony import */


    var _periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_326___default = /*#__PURE__*/__webpack_require__.n(_periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_326__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_326__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _periodic_wave_constructor__WEBPACK_IMPORTED_MODULE_326__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _periodic_wave_constructor_factory__WEBPACK_IMPORTED_MODULE_327__ = __webpack_require__(
    /*! ./periodic-wave-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor-factory.js");
    /* harmony import */


    var _periodic_wave_constructor_factory__WEBPACK_IMPORTED_MODULE_327___default = /*#__PURE__*/__webpack_require__.n(_periodic_wave_constructor_factory__WEBPACK_IMPORTED_MODULE_327__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _periodic_wave_constructor_factory__WEBPACK_IMPORTED_MODULE_327__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _periodic_wave_constructor_factory__WEBPACK_IMPORTED_MODULE_327__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _render_automation_factory__WEBPACK_IMPORTED_MODULE_328__ = __webpack_require__(
    /*! ./render-automation-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/render-automation-factory.js");
    /* harmony import */


    var _render_automation_factory__WEBPACK_IMPORTED_MODULE_328___default = /*#__PURE__*/__webpack_require__.n(_render_automation_factory__WEBPACK_IMPORTED_MODULE_328__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _render_automation_factory__WEBPACK_IMPORTED_MODULE_328__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _render_automation_factory__WEBPACK_IMPORTED_MODULE_328__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _render_automation_function__WEBPACK_IMPORTED_MODULE_329__ = __webpack_require__(
    /*! ./render-automation-function */
    "./node_modules/standardized-audio-context/build/es2019/types/render-automation-function.js");
    /* harmony import */


    var _render_automation_function__WEBPACK_IMPORTED_MODULE_329___default = /*#__PURE__*/__webpack_require__.n(_render_automation_function__WEBPACK_IMPORTED_MODULE_329__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _render_automation_function__WEBPACK_IMPORTED_MODULE_329__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _render_automation_function__WEBPACK_IMPORTED_MODULE_329__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _render_inputs_of_audio_node_factory__WEBPACK_IMPORTED_MODULE_330__ = __webpack_require__(
    /*! ./render-inputs-of-audio-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-factory.js");
    /* harmony import */


    var _render_inputs_of_audio_node_factory__WEBPACK_IMPORTED_MODULE_330___default = /*#__PURE__*/__webpack_require__.n(_render_inputs_of_audio_node_factory__WEBPACK_IMPORTED_MODULE_330__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _render_inputs_of_audio_node_factory__WEBPACK_IMPORTED_MODULE_330__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _render_inputs_of_audio_node_factory__WEBPACK_IMPORTED_MODULE_330__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _render_inputs_of_audio_node_function__WEBPACK_IMPORTED_MODULE_331__ = __webpack_require__(
    /*! ./render-inputs-of-audio-node-function */
    "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function.js");
    /* harmony import */


    var _render_inputs_of_audio_node_function__WEBPACK_IMPORTED_MODULE_331___default = /*#__PURE__*/__webpack_require__.n(_render_inputs_of_audio_node_function__WEBPACK_IMPORTED_MODULE_331__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _render_inputs_of_audio_node_function__WEBPACK_IMPORTED_MODULE_331__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _render_inputs_of_audio_node_function__WEBPACK_IMPORTED_MODULE_331__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _render_inputs_of_audio_param_factory__WEBPACK_IMPORTED_MODULE_332__ = __webpack_require__(
    /*! ./render-inputs-of-audio-param-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-factory.js");
    /* harmony import */


    var _render_inputs_of_audio_param_factory__WEBPACK_IMPORTED_MODULE_332___default = /*#__PURE__*/__webpack_require__.n(_render_inputs_of_audio_param_factory__WEBPACK_IMPORTED_MODULE_332__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _render_inputs_of_audio_param_factory__WEBPACK_IMPORTED_MODULE_332__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _render_inputs_of_audio_param_factory__WEBPACK_IMPORTED_MODULE_332__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _render_inputs_of_audio_param_function__WEBPACK_IMPORTED_MODULE_333__ = __webpack_require__(
    /*! ./render-inputs-of-audio-param-function */
    "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-function.js");
    /* harmony import */


    var _render_inputs_of_audio_param_function__WEBPACK_IMPORTED_MODULE_333___default = /*#__PURE__*/__webpack_require__.n(_render_inputs_of_audio_param_function__WEBPACK_IMPORTED_MODULE_333__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _render_inputs_of_audio_param_function__WEBPACK_IMPORTED_MODULE_333__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _render_inputs_of_audio_param_function__WEBPACK_IMPORTED_MODULE_333__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _render_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_334__ = __webpack_require__(
    /*! ./render-native-offline-audio-context-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-factory.js");
    /* harmony import */


    var _render_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_334___default = /*#__PURE__*/__webpack_require__.n(_render_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_334__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _render_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_334__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _render_native_offline_audio_context_factory__WEBPACK_IMPORTED_MODULE_334__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _render_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_335__ = __webpack_require__(
    /*! ./render-native-offline-audio-context-function */
    "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-function.js");
    /* harmony import */


    var _render_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_335___default = /*#__PURE__*/__webpack_require__.n(_render_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_335__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _render_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_335__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _render_native_offline_audio_context_function__WEBPACK_IMPORTED_MODULE_335__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _start_rendering_factory__WEBPACK_IMPORTED_MODULE_336__ = __webpack_require__(
    /*! ./start-rendering-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js");
    /* harmony import */


    var _start_rendering_factory__WEBPACK_IMPORTED_MODULE_336___default = /*#__PURE__*/__webpack_require__.n(_start_rendering_factory__WEBPACK_IMPORTED_MODULE_336__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _start_rendering_factory__WEBPACK_IMPORTED_MODULE_336__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _start_rendering_factory__WEBPACK_IMPORTED_MODULE_336__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _start_rendering_function__WEBPACK_IMPORTED_MODULE_337__ = __webpack_require__(
    /*! ./start-rendering-function */
    "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-function.js");
    /* harmony import */


    var _start_rendering_function__WEBPACK_IMPORTED_MODULE_337___default = /*#__PURE__*/__webpack_require__.n(_start_rendering_function__WEBPACK_IMPORTED_MODULE_337__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _start_rendering_function__WEBPACK_IMPORTED_MODULE_337__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _start_rendering_function__WEBPACK_IMPORTED_MODULE_337__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_338__ = __webpack_require__(
    /*! ./stereo-panner-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor.js");
    /* harmony import */


    var _stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_338___default = /*#__PURE__*/__webpack_require__.n(_stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_338__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_338__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _stereo_panner_node_constructor__WEBPACK_IMPORTED_MODULE_338__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _stereo_panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_339__ = __webpack_require__(
    /*! ./stereo-panner-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor-factory.js");
    /* harmony import */


    var _stereo_panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_339___default = /*#__PURE__*/__webpack_require__.n(_stereo_panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_339__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _stereo_panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_339__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _stereo_panner_node_constructor_factory__WEBPACK_IMPORTED_MODULE_339__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _stereo_panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_340__ = __webpack_require__(
    /*! ./stereo-panner-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory-factory.js");
    /* harmony import */


    var _stereo_panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_340___default = /*#__PURE__*/__webpack_require__.n(_stereo_panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_340__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _stereo_panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_340__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _stereo_panner_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_340__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_341__ = __webpack_require__(
    /*! ./stereo-panner-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory.js");
    /* harmony import */


    var _stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_341___default = /*#__PURE__*/__webpack_require__.n(_stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_341__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_341__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _stereo_panner_node_renderer_factory__WEBPACK_IMPORTED_MODULE_341__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_buffer_copy_channel_methods_subarray_support_factory__WEBPACK_IMPORTED_MODULE_342__ = __webpack_require__(
    /*! ./test-audio-buffer-copy-channel-methods-subarray-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js");
    /* harmony import */


    var _test_audio_buffer_copy_channel_methods_subarray_support_factory__WEBPACK_IMPORTED_MODULE_342___default = /*#__PURE__*/__webpack_require__.n(_test_audio_buffer_copy_channel_methods_subarray_support_factory__WEBPACK_IMPORTED_MODULE_342__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_buffer_copy_channel_methods_subarray_support_factory__WEBPACK_IMPORTED_MODULE_342__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_buffer_copy_channel_methods_subarray_support_factory__WEBPACK_IMPORTED_MODULE_342__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_buffer_constructor_support_factory__WEBPACK_IMPORTED_MODULE_343__ = __webpack_require__(
    /*! ./test-audio-buffer-constructor-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-constructor-support-factory.js");
    /* harmony import */


    var _test_audio_buffer_constructor_support_factory__WEBPACK_IMPORTED_MODULE_343___default = /*#__PURE__*/__webpack_require__.n(_test_audio_buffer_constructor_support_factory__WEBPACK_IMPORTED_MODULE_343__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_buffer_constructor_support_factory__WEBPACK_IMPORTED_MODULE_343__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_buffer_constructor_support_factory__WEBPACK_IMPORTED_MODULE_343__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_buffer_source_node_start_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_344__ = __webpack_require__(
    /*! ./test-audio-buffer-source-node-start-method-consecutive-calls-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-consecutive-calls-support-factory.js");
    /* harmony import */


    var _test_audio_buffer_source_node_start_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_344___default = /*#__PURE__*/__webpack_require__.n(_test_audio_buffer_source_node_start_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_344__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_buffer_source_node_start_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_344__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_buffer_source_node_start_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_344__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_buffer_source_node_start_method_duration_parameter_support_factory__WEBPACK_IMPORTED_MODULE_345__ = __webpack_require__(
    /*! ./test-audio-buffer-source-node-start-method-duration-parameter-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-duration-parameter-support-factory.js");
    /* harmony import */


    var _test_audio_buffer_source_node_start_method_duration_parameter_support_factory__WEBPACK_IMPORTED_MODULE_345___default = /*#__PURE__*/__webpack_require__.n(_test_audio_buffer_source_node_start_method_duration_parameter_support_factory__WEBPACK_IMPORTED_MODULE_345__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_buffer_source_node_start_method_duration_parameter_support_factory__WEBPACK_IMPORTED_MODULE_345__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_buffer_source_node_start_method_duration_parameter_support_factory__WEBPACK_IMPORTED_MODULE_345__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_buffer_source_node_start_method_offset_clamping_support_factory__WEBPACK_IMPORTED_MODULE_346__ = __webpack_require__(
    /*! ./test-audio-buffer-source-node-start-method-offset-clamping-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-offset-clamping-support-factory.js");
    /* harmony import */


    var _test_audio_buffer_source_node_start_method_offset_clamping_support_factory__WEBPACK_IMPORTED_MODULE_346___default = /*#__PURE__*/__webpack_require__.n(_test_audio_buffer_source_node_start_method_offset_clamping_support_factory__WEBPACK_IMPORTED_MODULE_346__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_buffer_source_node_start_method_offset_clamping_support_factory__WEBPACK_IMPORTED_MODULE_346__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_buffer_source_node_start_method_offset_clamping_support_factory__WEBPACK_IMPORTED_MODULE_346__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_buffer_source_node_stop_method_nullified_buffer_support_factory__WEBPACK_IMPORTED_MODULE_347__ = __webpack_require__(
    /*! ./test-audio-buffer-source-node-stop-method-nullified-buffer-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-stop-method-nullified-buffer-support-factory.js");
    /* harmony import */


    var _test_audio_buffer_source_node_stop_method_nullified_buffer_support_factory__WEBPACK_IMPORTED_MODULE_347___default = /*#__PURE__*/__webpack_require__.n(_test_audio_buffer_source_node_stop_method_nullified_buffer_support_factory__WEBPACK_IMPORTED_MODULE_347__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_buffer_source_node_stop_method_nullified_buffer_support_factory__WEBPACK_IMPORTED_MODULE_347__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_buffer_source_node_stop_method_nullified_buffer_support_factory__WEBPACK_IMPORTED_MODULE_347__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_context_close_method_support_factory__WEBPACK_IMPORTED_MODULE_348__ = __webpack_require__(
    /*! ./test-audio-context-close-method-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-close-method-support-factory.js");
    /* harmony import */


    var _test_audio_context_close_method_support_factory__WEBPACK_IMPORTED_MODULE_348___default = /*#__PURE__*/__webpack_require__.n(_test_audio_context_close_method_support_factory__WEBPACK_IMPORTED_MODULE_348__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_context_close_method_support_factory__WEBPACK_IMPORTED_MODULE_348__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_context_close_method_support_factory__WEBPACK_IMPORTED_MODULE_348__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_context_decode_audio_data_method_type_error_support_factory__WEBPACK_IMPORTED_MODULE_349__ = __webpack_require__(
    /*! ./test-audio-context-decode-audio-data-method-type-error-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js");
    /* harmony import */


    var _test_audio_context_decode_audio_data_method_type_error_support_factory__WEBPACK_IMPORTED_MODULE_349___default = /*#__PURE__*/__webpack_require__.n(_test_audio_context_decode_audio_data_method_type_error_support_factory__WEBPACK_IMPORTED_MODULE_349__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_context_decode_audio_data_method_type_error_support_factory__WEBPACK_IMPORTED_MODULE_349__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_context_decode_audio_data_method_type_error_support_factory__WEBPACK_IMPORTED_MODULE_349__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_context_options_support_factory__WEBPACK_IMPORTED_MODULE_350__ = __webpack_require__(
    /*! ./test-audio-context-options-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-options-support-factory.js");
    /* harmony import */


    var _test_audio_context_options_support_factory__WEBPACK_IMPORTED_MODULE_350___default = /*#__PURE__*/__webpack_require__.n(_test_audio_context_options_support_factory__WEBPACK_IMPORTED_MODULE_350__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_context_options_support_factory__WEBPACK_IMPORTED_MODULE_350__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_context_options_support_factory__WEBPACK_IMPORTED_MODULE_350__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_node_connect_method_support_factory__WEBPACK_IMPORTED_MODULE_351__ = __webpack_require__(
    /*! ./test-audio-node-connect-method-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-node-connect-method-support-factory.js");
    /* harmony import */


    var _test_audio_node_connect_method_support_factory__WEBPACK_IMPORTED_MODULE_351___default = /*#__PURE__*/__webpack_require__.n(_test_audio_node_connect_method_support_factory__WEBPACK_IMPORTED_MODULE_351__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_node_connect_method_support_factory__WEBPACK_IMPORTED_MODULE_351__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_node_connect_method_support_factory__WEBPACK_IMPORTED_MODULE_351__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_scheduled_source_node_start_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_352__ = __webpack_require__(
    /*! ./test-audio-scheduled-source-node-start-method-consecutive-calls-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-start-method-consecutive-calls-support-factory.js");
    /* harmony import */


    var _test_audio_scheduled_source_node_start_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_352___default = /*#__PURE__*/__webpack_require__.n(_test_audio_scheduled_source_node_start_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_352__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_scheduled_source_node_start_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_352__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_scheduled_source_node_start_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_352__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_scheduled_source_node_stop_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_353__ = __webpack_require__(
    /*! ./test-audio-scheduled-source-node-stop-method-consecutive-calls-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-stop-method-consecutive-calls-support-factory.js");
    /* harmony import */


    var _test_audio_scheduled_source_node_stop_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_353___default = /*#__PURE__*/__webpack_require__.n(_test_audio_scheduled_source_node_stop_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_353__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_scheduled_source_node_stop_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_353__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_scheduled_source_node_stop_method_consecutive_calls_support_factory__WEBPACK_IMPORTED_MODULE_353__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_scheduled_source_node_stop_method_negative_parameters_support_factory__WEBPACK_IMPORTED_MODULE_354__ = __webpack_require__(
    /*! ./test-audio-scheduled-source-node-stop-method-negative-parameters-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-stop-method-negative-parameters-support-factory.js");
    /* harmony import */


    var _test_audio_scheduled_source_node_stop_method_negative_parameters_support_factory__WEBPACK_IMPORTED_MODULE_354___default = /*#__PURE__*/__webpack_require__.n(_test_audio_scheduled_source_node_stop_method_negative_parameters_support_factory__WEBPACK_IMPORTED_MODULE_354__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_scheduled_source_node_stop_method_negative_parameters_support_factory__WEBPACK_IMPORTED_MODULE_354__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_scheduled_source_node_stop_method_negative_parameters_support_factory__WEBPACK_IMPORTED_MODULE_354__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_audio_worklet_processor_no_outputs_support_factory__WEBPACK_IMPORTED_MODULE_355__ = __webpack_require__(
    /*! ./test-audio-worklet-processor-no-outputs-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js");
    /* harmony import */


    var _test_audio_worklet_processor_no_outputs_support_factory__WEBPACK_IMPORTED_MODULE_355___default = /*#__PURE__*/__webpack_require__.n(_test_audio_worklet_processor_no_outputs_support_factory__WEBPACK_IMPORTED_MODULE_355__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_audio_worklet_processor_no_outputs_support_factory__WEBPACK_IMPORTED_MODULE_355__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_audio_worklet_processor_no_outputs_support_factory__WEBPACK_IMPORTED_MODULE_355__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_channel_merger_node_channel_count_support_factory__WEBPACK_IMPORTED_MODULE_356__ = __webpack_require__(
    /*! ./test-channel-merger-node-channel-count-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js");
    /* harmony import */


    var _test_channel_merger_node_channel_count_support_factory__WEBPACK_IMPORTED_MODULE_356___default = /*#__PURE__*/__webpack_require__.n(_test_channel_merger_node_channel_count_support_factory__WEBPACK_IMPORTED_MODULE_356__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_channel_merger_node_channel_count_support_factory__WEBPACK_IMPORTED_MODULE_356__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_channel_merger_node_channel_count_support_factory__WEBPACK_IMPORTED_MODULE_356__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_constant_source_node_accurate_scheduling_support_factory__WEBPACK_IMPORTED_MODULE_357__ = __webpack_require__(
    /*! ./test-constant-source-node-accurate-scheduling-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js");
    /* harmony import */


    var _test_constant_source_node_accurate_scheduling_support_factory__WEBPACK_IMPORTED_MODULE_357___default = /*#__PURE__*/__webpack_require__.n(_test_constant_source_node_accurate_scheduling_support_factory__WEBPACK_IMPORTED_MODULE_357__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_constant_source_node_accurate_scheduling_support_factory__WEBPACK_IMPORTED_MODULE_357__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_constant_source_node_accurate_scheduling_support_factory__WEBPACK_IMPORTED_MODULE_357__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_convolver_node_buffer_reassignability_support_factory__WEBPACK_IMPORTED_MODULE_358__ = __webpack_require__(
    /*! ./test-convolver-node-buffer-reassignability-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js");
    /* harmony import */


    var _test_convolver_node_buffer_reassignability_support_factory__WEBPACK_IMPORTED_MODULE_358___default = /*#__PURE__*/__webpack_require__.n(_test_convolver_node_buffer_reassignability_support_factory__WEBPACK_IMPORTED_MODULE_358__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_convolver_node_buffer_reassignability_support_factory__WEBPACK_IMPORTED_MODULE_358__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_convolver_node_buffer_reassignability_support_factory__WEBPACK_IMPORTED_MODULE_358__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_is_secure_context_support_factory__WEBPACK_IMPORTED_MODULE_359__ = __webpack_require__(
    /*! ./test-is-secure-context-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-is-secure-context-support-factory.js");
    /* harmony import */


    var _test_is_secure_context_support_factory__WEBPACK_IMPORTED_MODULE_359___default = /*#__PURE__*/__webpack_require__.n(_test_is_secure_context_support_factory__WEBPACK_IMPORTED_MODULE_359__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_is_secure_context_support_factory__WEBPACK_IMPORTED_MODULE_359__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_is_secure_context_support_factory__WEBPACK_IMPORTED_MODULE_359__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_360__ = __webpack_require__(
    /*! ./test-media-stream-audio-source-node-media-stream-without-audio-track-support */
    "./node_modules/standardized-audio-context/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js");
    /* harmony import */


    var _test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_360___default = /*#__PURE__*/__webpack_require__.n(_test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_360__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_360__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_media_stream_audio_source_node_media_stream_without_audio_track_support__WEBPACK_IMPORTED_MODULE_360__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_offline_audio_context_current_time_support_factory__WEBPACK_IMPORTED_MODULE_361__ = __webpack_require__(
    /*! ./test-offline-audio-context-current-time-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-offline-audio-context-current-time-support-factory.js");
    /* harmony import */


    var _test_offline_audio_context_current_time_support_factory__WEBPACK_IMPORTED_MODULE_361___default = /*#__PURE__*/__webpack_require__.n(_test_offline_audio_context_current_time_support_factory__WEBPACK_IMPORTED_MODULE_361__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_offline_audio_context_current_time_support_factory__WEBPACK_IMPORTED_MODULE_361__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_offline_audio_context_current_time_support_factory__WEBPACK_IMPORTED_MODULE_361__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _test_stereo_panner_node_default_value_support_factory__WEBPACK_IMPORTED_MODULE_362__ = __webpack_require__(
    /*! ./test-stereo-panner-node-default-value-support-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js");
    /* harmony import */


    var _test_stereo_panner_node_default_value_support_factory__WEBPACK_IMPORTED_MODULE_362___default = /*#__PURE__*/__webpack_require__.n(_test_stereo_panner_node_default_value_support_factory__WEBPACK_IMPORTED_MODULE_362__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _test_stereo_panner_node_default_value_support_factory__WEBPACK_IMPORTED_MODULE_362__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _test_stereo_panner_node_default_value_support_factory__WEBPACK_IMPORTED_MODULE_362__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _typed_array__WEBPACK_IMPORTED_MODULE_363__ = __webpack_require__(
    /*! ./typed-array */
    "./node_modules/standardized-audio-context/build/es2019/types/typed-array.js");
    /* harmony import */


    var _typed_array__WEBPACK_IMPORTED_MODULE_363___default = /*#__PURE__*/__webpack_require__.n(_typed_array__WEBPACK_IMPORTED_MODULE_363__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _typed_array__WEBPACK_IMPORTED_MODULE_363__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _typed_array__WEBPACK_IMPORTED_MODULE_363__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _unknown_error_factory__WEBPACK_IMPORTED_MODULE_364__ = __webpack_require__(
    /*! ./unknown-error-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/unknown-error-factory.js");
    /* harmony import */


    var _unknown_error_factory__WEBPACK_IMPORTED_MODULE_364___default = /*#__PURE__*/__webpack_require__.n(_unknown_error_factory__WEBPACK_IMPORTED_MODULE_364__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _unknown_error_factory__WEBPACK_IMPORTED_MODULE_364__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _unknown_error_factory__WEBPACK_IMPORTED_MODULE_364__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _unrendered_audio_worklet_node_store__WEBPACK_IMPORTED_MODULE_365__ = __webpack_require__(
    /*! ./unrendered-audio-worklet-node-store */
    "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-node-store.js");
    /* harmony import */


    var _unrendered_audio_worklet_node_store__WEBPACK_IMPORTED_MODULE_365___default = /*#__PURE__*/__webpack_require__.n(_unrendered_audio_worklet_node_store__WEBPACK_IMPORTED_MODULE_365__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _unrendered_audio_worklet_node_store__WEBPACK_IMPORTED_MODULE_365__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _unrendered_audio_worklet_node_store__WEBPACK_IMPORTED_MODULE_365__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_366__ = __webpack_require__(
    /*! ./unrendered-audio-worklet-nodes */
    "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-nodes.js");
    /* harmony import */


    var _unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_366___default = /*#__PURE__*/__webpack_require__.n(_unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_366__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_366__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _unrendered_audio_worklet_nodes__WEBPACK_IMPORTED_MODULE_366__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_367__ = __webpack_require__(
    /*! ./wave-shaper-node-constructor */
    "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor.js");
    /* harmony import */


    var _wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_367___default = /*#__PURE__*/__webpack_require__.n(_wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_367__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_367__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wave_shaper_node_constructor__WEBPACK_IMPORTED_MODULE_367__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wave_shaper_node_constructor_factory__WEBPACK_IMPORTED_MODULE_368__ = __webpack_require__(
    /*! ./wave-shaper-node-constructor-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor-factory.js");
    /* harmony import */


    var _wave_shaper_node_constructor_factory__WEBPACK_IMPORTED_MODULE_368___default = /*#__PURE__*/__webpack_require__.n(_wave_shaper_node_constructor_factory__WEBPACK_IMPORTED_MODULE_368__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wave_shaper_node_constructor_factory__WEBPACK_IMPORTED_MODULE_368__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wave_shaper_node_constructor_factory__WEBPACK_IMPORTED_MODULE_368__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wave_shaper_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_369__ = __webpack_require__(
    /*! ./wave-shaper-node-renderer-factory-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory-factory.js");
    /* harmony import */


    var _wave_shaper_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_369___default = /*#__PURE__*/__webpack_require__.n(_wave_shaper_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_369__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wave_shaper_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_369__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wave_shaper_node_renderer_factory_factory__WEBPACK_IMPORTED_MODULE_369__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_370__ = __webpack_require__(
    /*! ./wave-shaper-node-renderer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory.js");
    /* harmony import */


    var _wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_370___default = /*#__PURE__*/__webpack_require__.n(_wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_370__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_370__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wave_shaper_node_renderer_factory__WEBPACK_IMPORTED_MODULE_370__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _window_factory__WEBPACK_IMPORTED_MODULE_371__ = __webpack_require__(
    /*! ./window-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/window-factory.js");
    /* harmony import */


    var _window_factory__WEBPACK_IMPORTED_MODULE_371___default = /*#__PURE__*/__webpack_require__.n(_window_factory__WEBPACK_IMPORTED_MODULE_371__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _window_factory__WEBPACK_IMPORTED_MODULE_371__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _window_factory__WEBPACK_IMPORTED_MODULE_371__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_audio_buffer_copy_channel_methods_factory__WEBPACK_IMPORTED_MODULE_372__ = __webpack_require__(
    /*! ./wrap-audio-buffer-copy-channel-methods-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js");
    /* harmony import */


    var _wrap_audio_buffer_copy_channel_methods_factory__WEBPACK_IMPORTED_MODULE_372___default = /*#__PURE__*/__webpack_require__.n(_wrap_audio_buffer_copy_channel_methods_factory__WEBPACK_IMPORTED_MODULE_372__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_audio_buffer_copy_channel_methods_factory__WEBPACK_IMPORTED_MODULE_372__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_audio_buffer_copy_channel_methods_factory__WEBPACK_IMPORTED_MODULE_372__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_audio_buffer_copy_channel_methods_function__WEBPACK_IMPORTED_MODULE_373__ = __webpack_require__(
    /*! ./wrap-audio-buffer-copy-channel-methods-function */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js");
    /* harmony import */


    var _wrap_audio_buffer_copy_channel_methods_function__WEBPACK_IMPORTED_MODULE_373___default = /*#__PURE__*/__webpack_require__.n(_wrap_audio_buffer_copy_channel_methods_function__WEBPACK_IMPORTED_MODULE_373__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_audio_buffer_copy_channel_methods_function__WEBPACK_IMPORTED_MODULE_373__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_audio_buffer_copy_channel_methods_function__WEBPACK_IMPORTED_MODULE_373__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_audio_buffer_copy_channel_methods_out_of_bounds_factory__WEBPACK_IMPORTED_MODULE_374__ = __webpack_require__(
    /*! ./wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js");
    /* harmony import */


    var _wrap_audio_buffer_copy_channel_methods_out_of_bounds_factory__WEBPACK_IMPORTED_MODULE_374___default = /*#__PURE__*/__webpack_require__.n(_wrap_audio_buffer_copy_channel_methods_out_of_bounds_factory__WEBPACK_IMPORTED_MODULE_374__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_audio_buffer_copy_channel_methods_out_of_bounds_factory__WEBPACK_IMPORTED_MODULE_374__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_audio_buffer_copy_channel_methods_out_of_bounds_factory__WEBPACK_IMPORTED_MODULE_374__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_audio_buffer_copy_channel_methods_out_of_bounds_function__WEBPACK_IMPORTED_MODULE_375__ = __webpack_require__(
    /*! ./wrap-audio-buffer-copy-channel-methods-out-of-bounds-function */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js");
    /* harmony import */


    var _wrap_audio_buffer_copy_channel_methods_out_of_bounds_function__WEBPACK_IMPORTED_MODULE_375___default = /*#__PURE__*/__webpack_require__.n(_wrap_audio_buffer_copy_channel_methods_out_of_bounds_function__WEBPACK_IMPORTED_MODULE_375__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_audio_buffer_copy_channel_methods_out_of_bounds_function__WEBPACK_IMPORTED_MODULE_375__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_audio_buffer_copy_channel_methods_out_of_bounds_function__WEBPACK_IMPORTED_MODULE_375__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_audio_buffer_source_node_start_method_offset_clamping_function__WEBPACK_IMPORTED_MODULE_376__ = __webpack_require__(
    /*! ./wrap-audio-buffer-source-node-start-method-offset-clamping-function */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js");
    /* harmony import */


    var _wrap_audio_buffer_source_node_start_method_offset_clamping_function__WEBPACK_IMPORTED_MODULE_376___default = /*#__PURE__*/__webpack_require__.n(_wrap_audio_buffer_source_node_start_method_offset_clamping_function__WEBPACK_IMPORTED_MODULE_376__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_audio_buffer_source_node_start_method_offset_clamping_function__WEBPACK_IMPORTED_MODULE_376__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_audio_buffer_source_node_start_method_offset_clamping_function__WEBPACK_IMPORTED_MODULE_376__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_audio_buffer_source_node_stop_method_nullified_buffer_factory__WEBPACK_IMPORTED_MODULE_377__ = __webpack_require__(
    /*! ./wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js");
    /* harmony import */


    var _wrap_audio_buffer_source_node_stop_method_nullified_buffer_factory__WEBPACK_IMPORTED_MODULE_377___default = /*#__PURE__*/__webpack_require__.n(_wrap_audio_buffer_source_node_stop_method_nullified_buffer_factory__WEBPACK_IMPORTED_MODULE_377__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_audio_buffer_source_node_stop_method_nullified_buffer_factory__WEBPACK_IMPORTED_MODULE_377__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_audio_buffer_source_node_stop_method_nullified_buffer_factory__WEBPACK_IMPORTED_MODULE_377__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_audio_buffer_source_node_stop_method_nullified_buffer_function__WEBPACK_IMPORTED_MODULE_378__ = __webpack_require__(
    /*! ./wrap-audio-buffer-source-node-stop-method-nullified-buffer-function */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js");
    /* harmony import */


    var _wrap_audio_buffer_source_node_stop_method_nullified_buffer_function__WEBPACK_IMPORTED_MODULE_378___default = /*#__PURE__*/__webpack_require__.n(_wrap_audio_buffer_source_node_stop_method_nullified_buffer_function__WEBPACK_IMPORTED_MODULE_378__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_audio_buffer_source_node_stop_method_nullified_buffer_function__WEBPACK_IMPORTED_MODULE_378__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_audio_buffer_source_node_stop_method_nullified_buffer_function__WEBPACK_IMPORTED_MODULE_378__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_audio_scheduled_source_node_stop_method_consecutive_calls_factory__WEBPACK_IMPORTED_MODULE_379__ = __webpack_require__(
    /*! ./wrap-audio-scheduled-source-node-stop-method-consecutive-calls-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-factory.js");
    /* harmony import */


    var _wrap_audio_scheduled_source_node_stop_method_consecutive_calls_factory__WEBPACK_IMPORTED_MODULE_379___default = /*#__PURE__*/__webpack_require__.n(_wrap_audio_scheduled_source_node_stop_method_consecutive_calls_factory__WEBPACK_IMPORTED_MODULE_379__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_audio_scheduled_source_node_stop_method_consecutive_calls_factory__WEBPACK_IMPORTED_MODULE_379__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_audio_scheduled_source_node_stop_method_consecutive_calls_factory__WEBPACK_IMPORTED_MODULE_379__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_audio_scheduled_source_node_stop_method_consecutive_calls_function__WEBPACK_IMPORTED_MODULE_380__ = __webpack_require__(
    /*! ./wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js");
    /* harmony import */


    var _wrap_audio_scheduled_source_node_stop_method_consecutive_calls_function__WEBPACK_IMPORTED_MODULE_380___default = /*#__PURE__*/__webpack_require__.n(_wrap_audio_scheduled_source_node_stop_method_consecutive_calls_function__WEBPACK_IMPORTED_MODULE_380__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_audio_scheduled_source_node_stop_method_consecutive_calls_function__WEBPACK_IMPORTED_MODULE_380__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_audio_scheduled_source_node_stop_method_consecutive_calls_function__WEBPACK_IMPORTED_MODULE_380__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_381__ = __webpack_require__(
    /*! ./wrap-channel-merger-node-factory */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-factory.js");
    /* harmony import */


    var _wrap_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_381___default = /*#__PURE__*/__webpack_require__.n(_wrap_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_381__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_381__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_channel_merger_node_factory__WEBPACK_IMPORTED_MODULE_381__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_channel_merger_node_function__WEBPACK_IMPORTED_MODULE_382__ = __webpack_require__(
    /*! ./wrap-channel-merger-node-function */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-function.js");
    /* harmony import */


    var _wrap_channel_merger_node_function__WEBPACK_IMPORTED_MODULE_382___default = /*#__PURE__*/__webpack_require__.n(_wrap_channel_merger_node_function__WEBPACK_IMPORTED_MODULE_382__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_channel_merger_node_function__WEBPACK_IMPORTED_MODULE_382__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_channel_merger_node_function__WEBPACK_IMPORTED_MODULE_382__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    }
    /* harmony import */


    var _wrap_event_listener_function__WEBPACK_IMPORTED_MODULE_383__ = __webpack_require__(
    /*! ./wrap-event-listener-function */
    "./node_modules/standardized-audio-context/build/es2019/types/wrap-event-listener-function.js");
    /* harmony import */


    var _wrap_event_listener_function__WEBPACK_IMPORTED_MODULE_383___default = /*#__PURE__*/__webpack_require__.n(_wrap_event_listener_function__WEBPACK_IMPORTED_MODULE_383__);
    /* harmony reexport (unknown) */


    for (var __WEBPACK_IMPORT_KEY__ in _wrap_event_listener_function__WEBPACK_IMPORTED_MODULE_383__) {
      if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
        __webpack_require__.d(__webpack_exports__, key, function () {
          return _wrap_event_listener_function__WEBPACK_IMPORTED_MODULE_383__[key];
        });
      })(__WEBPACK_IMPORT_KEY__);
    } //# sourceMappingURL=/build/es2019/types/index.js.map

    /***/

  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/insert-element-in-set-function.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/insert-element-in-set-function.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesInsertElementInSetFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/insert-element-in-set-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/internal-state-event-listener.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/internal-state-event-listener.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesInternalStateEventListenerJs(module, exports) {//# sourceMappingURL=/build/es2019/types/internal-state-event-listener.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/invalid-access-error-factory.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/invalid-access-error-factory.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesInvalidAccessErrorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/invalid-access-error-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/invalid-state-error-factory.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/invalid-state-error-factory.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesInvalidStateErrorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/invalid-state-error-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-active-audio-node-function.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-active-audio-node-function.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsActiveAudioNodeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-active-audio-node-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-factory.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-factory.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsAnyAudioContextFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-any-audio-context-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-function.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-context-function.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsAnyAudioContextFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-any-audio-context-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-factory.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-factory.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsAnyAudioNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-any-audio-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-function.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-node-function.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsAnyAudioNodeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-any-audio-node-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-factory.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-factory.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsAnyAudioParamFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-any-audio-param-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-function.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-audio-param-function.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsAnyAudioParamFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-any-audio-param-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-factory.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsAnyOfflineAudioContextFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-any-offline-audio-context-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-function.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-any-offline-audio-context-function.js ***!
    \*************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsAnyOfflineAudioContextFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-any-offline-audio-context-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-dc-curve-function.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-dc-curve-function.js ***!
    \********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsDcCurveFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-dc-curve-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-factory.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-factory.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsNativeAudioContextFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-native-audio-context-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-function.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-context-function.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsNativeAudioContextFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-native-audio-context-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-factory.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-factory.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsNativeAudioNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-native-audio-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-function.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-node-function.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsNativeAudioNodeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-native-audio-node-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-factory.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-factory.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsNativeAudioParamFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-native-audio-param-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-function.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-audio-param-function.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsNativeAudioParamFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-native-audio-param-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-factory.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-context-factory.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsNativeContextFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-native-context-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-native-context-function.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-context-function.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsNativeContextFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-native-context-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsNativeOfflineAudioContextFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-native-offline-audio-context-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-native-offline-audio-context-function.js ***!
    \****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsNativeOfflineAudioContextFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-native-offline-audio-context-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-part-of-a-cycle-function.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-part-of-a-cycle-function.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsPartOfACycleFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-part-of-a-cycle-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-secure-context-factory.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-secure-context-factory.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsSecureContextFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-secure-context-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/is-supported-promise-factory.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesIsSupportedPromiseFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/is-supported-promise-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor-factory.js":
  /*!***************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor-factory.js ***!
    \***************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMediaElementAudioSourceNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/media-element-audio-source-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/media-element-audio-source-node-constructor.js ***!
    \*******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMediaElementAudioSourceNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/media-element-audio-source-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js":
  /*!*******************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js ***!
    \*******************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMediaStreamAudioDestinationNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/media-stream-audio-destination-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor.js":
  /*!***********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-destination-node-constructor.js ***!
    \***********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMediaStreamAudioDestinationNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/media-stream-audio-destination-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor-factory.js":
  /*!**************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor-factory.js ***!
    \**************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMediaStreamAudioSourceNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/media-stream-audio-source-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-audio-source-node-constructor.js ***!
    \******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMediaStreamAudioSourceNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/media-stream-audio-source-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js":
  /*!********************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js ***!
    \********************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMediaStreamTrackAudioSourceNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/media-stream-track-audio-source-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor.js":
  /*!************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/media-stream-track-audio-source-node-constructor.js ***!
    \************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMediaStreamTrackAudioSourceNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/media-stream-track-audio-source-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor-factory.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMinimalAudioContextConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/minimal-audio-context-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-audio-context-constructor.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMinimalAudioContextConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/minimal-audio-context-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor-factory.js":
  /*!**********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor-factory.js ***!
    \**********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMinimalBaseAudioContextConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/minimal-base-audio-context-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-base-audio-context-constructor.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMinimalBaseAudioContextConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/minimal-base-audio-context-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor-factory.js":
  /*!*************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor-factory.js ***!
    \*************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMinimalOfflineAudioContextConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/minimal-offline-audio-context-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/minimal-offline-audio-context-constructor.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMinimalOfflineAudioContextConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/minimal-offline-audio-context-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-factory.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-factory.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMonitorConnectionsFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/monitor-connections-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-function.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/monitor-connections-function.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesMonitorConnectionsFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/monitor-connections-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory-factory.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAnalyserNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-analyser-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node-factory.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAnalyserNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-analyser-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-analyser-node.js ***!
    \********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAnalyserNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-analyser-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioBufferConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-buffer-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-constructor.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioBufferConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-buffer-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory-factory.js":
  /*!***********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory-factory.js ***!
    \***********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioBufferSourceNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-buffer-source-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioBufferSourceNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-buffer-source-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer-source-node.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioBufferSourceNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-buffer-source-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-buffer.js ***!
    \*******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioBufferJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-buffer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor-factory.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor-factory.js ***!
    \****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioContextConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-context-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-context-constructor.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioContextConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-context-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-context.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-context.js ***!
    \********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioContextJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory-factory.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory-factory.js ***!
    \*********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioDestinationNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-destination-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node-factory.js ***!
    \*************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioDestinationNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-destination-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-destination-node.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioDestinationNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-destination-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-listener.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-listener.js ***!
    \*********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioListenerJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-listener.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-node-factory-factory.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-node-factory-factory.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-node-factory.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-node-factory.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-node.js":
  /*!*****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-node.js ***!
    \*****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param-map.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-param-map.js ***!
    \**********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioParamMapJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-param-map.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-param.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-param.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioParamJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-param.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor-factory.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor-factory.js ***!
    \*********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioWorkletNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-constructor.js ***!
    \*************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioWorkletNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory-factory.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioWorkletNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-factory.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioWorkletNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js":
  /*!***********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js ***!
    \***********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioWorkletNodeFakerFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-faker-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-faker-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioWorkletNodeFakerFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-faker-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-options.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node-options.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioWorkletNodeOptionsJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node-options.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet-node.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioWorkletNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-worklet-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-audio-worklet.js ***!
    \********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeAudioWorkletJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-audio-worklet.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory-factory.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeBiquadFilterNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-biquad-filter-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node-factory.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeBiquadFilterNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-biquad-filter-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-biquad-filter-node.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeBiquadFilterNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-biquad-filter-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory-factory.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory-factory.js ***!
    \******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeChannelMergerNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-channel-merger-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node-factory.js ***!
    \**********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeChannelMergerNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-channel-merger-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-merger-node.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeChannelMergerNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-channel-merger-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory-factory.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory-factory.js ***!
    \********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeChannelSplitterNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-channel-splitter-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node-factory.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeChannelSplitterNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-channel-splitter-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-channel-splitter-node.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeChannelSplitterNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-channel-splitter-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory-factory.js ***!
    \*******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeConstantSourceNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-constant-source-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-factory.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeConstantSourceNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-constant-source-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory-factory.js":
  /*!*************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory-factory.js ***!
    \*************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeConstantSourceNodeFakerFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-constant-source-node-faker-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node-faker-factory.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeConstantSourceNodeFakerFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-constant-source-node-faker-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-constant-source-node.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeConstantSourceNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-constant-source-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-context.js":
  /*!**************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-context.js ***!
    \**************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeContextJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory-factory.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory-factory.js ***!
    \*************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeConvolverNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-convolver-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-factory.js ***!
    \*****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeConvolverNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-convolver-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-faker-factory-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-faker-factory-factory.js ***!
    \*******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeConvolverNodeFakerFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-convolver-node-faker-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-faker-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node-faker-factory.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeConvolverNodeFakerFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-convolver-node-faker-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-convolver-node.js ***!
    \*********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeConvolverNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-convolver-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory-factory.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory-factory.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeDelayNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-delay-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-delay-node-factory.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeDelayNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-delay-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-delay-node.js":
  /*!*****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-delay-node.js ***!
    \*****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeDelayNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-delay-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory-factory.js":
  /*!***********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory-factory.js ***!
    \***********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeDynamicsCompressorNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-dynamics-compressor-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeDynamicsCompressorNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-dynamics-compressor-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-dynamics-compressor-node.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeDynamicsCompressorNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-dynamics-compressor-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-event-target.js":
  /*!*******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-event-target.js ***!
    \*******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeEventTargetJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-event-target.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory-factory.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeGainNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-gain-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-gain-node-factory.js ***!
    \************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeGainNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-gain-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-gain-node.js":
  /*!****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-gain-node.js ***!
    \****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeGainNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-gain-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory-factory.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory-factory.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeIirFilterNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-iir-filter-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-factory.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeIirFilterNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-iir-filter-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory-factory.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory-factory.js ***!
    \********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeIirFilterNodeFakerFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-iir-filter-node-faker-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node-faker-factory.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeIirFilterNodeFakerFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-iir-filter-node-faker-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-iir-filter-node.js ***!
    \**********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeIirFilterNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-iir-filter-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory-factory.js":
  /*!******************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory-factory.js ***!
    \******************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaElementAudioSourceNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-element-audio-source-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory.js":
  /*!**********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node-factory.js ***!
    \**********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaElementAudioSourceNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-element-audio-source-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-element-audio-source-node.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaElementAudioSourceNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-element-audio-source-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory-factory.js":
  /*!**********************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory-factory.js ***!
    \**********************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaStreamAudioDestinationNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-destination-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory.js":
  /*!**************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node-factory.js ***!
    \**************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaStreamAudioDestinationNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-destination-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-destination-node.js ***!
    \******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaStreamAudioDestinationNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-destination-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory-factory.js":
  /*!*****************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory-factory.js ***!
    \*****************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaStreamAudioSourceNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-source-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node-factory.js ***!
    \*********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaStreamAudioSourceNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-source-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-audio-source-node.js ***!
    \*************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaStreamAudioSourceNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-stream-audio-source-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js":
  /*!***********************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js ***!
    \***********************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaStreamTrackAudioSourceNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-stream-track-audio-source-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory.js":
  /*!***************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node-factory.js ***!
    \***************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaStreamTrackAudioSourceNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-stream-track-audio-source-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-media-stream-track-audio-source-node.js ***!
    \*******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeMediaStreamTrackAudioSourceNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-media-stream-track-audio-source-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor-factory.js":
  /*!************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor-factory.js ***!
    \************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeOfflineAudioContextConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-offline-audio-context-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context-constructor.js ***!
    \****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeOfflineAudioContextConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-offline-audio-context-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-offline-audio-context.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeOfflineAudioContextJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-offline-audio-context.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory-factory.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory-factory.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeOscillatorNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-oscillator-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node-factory.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeOscillatorNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-oscillator-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-oscillator-node.js ***!
    \**********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeOscillatorNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-oscillator-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory-factory.js":
  /*!**********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory-factory.js ***!
    \**********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativePannerNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-panner-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-factory.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativePannerNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-panner-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory-factory.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory-factory.js ***!
    \****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativePannerNodeFakerFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-panner-node-faker-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node-faker-factory.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativePannerNodeFakerFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-panner-node-faker-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-panner-node.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-panner-node.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativePannerNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-panner-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory-factory.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativePeriodicWaveFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-periodic-wave-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave-factory.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativePeriodicWaveFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-periodic-wave-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave.js":
  /*!********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-periodic-wave.js ***!
    \********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativePeriodicWaveJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-periodic-wave.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory-factory.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory-factory.js ***!
    \********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeScriptProcessorNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-script-processor-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node-factory.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeScriptProcessorNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-script-processor-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-script-processor-node.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeScriptProcessorNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-script-processor-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory-factory.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeStereoPannerNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-stereo-panner-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-factory.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeStereoPannerNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-stereo-panner-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js":
  /*!***********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js ***!
    \***********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeStereoPannerNodeFakerFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-stereo-panner-node-faker-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node-faker-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeStereoPannerNodeFakerFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-stereo-panner-node-faker-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-stereo-panner-node.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeStereoPannerNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-stereo-panner-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory-factory.js":
  /*!***************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory-factory.js ***!
    \***************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeWaveShaperNodeFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-wave-shaper-node-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-factory.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeWaveShaperNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-wave-shaper-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js ***!
    \*********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeWaveShaperNodeFakerFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-wave-shaper-node-faker-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node-faker-factory.js ***!
    \*************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeWaveShaperNodeFakerFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-wave-shaper-node-faker-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/native-wave-shaper-node.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNativeWaveShaperNodeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/native-wave-shaper-node.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/not-supported-error-factory.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/not-supported-error-factory.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesNotSupportedErrorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/not-supported-error-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/offline-audio-context-constructor-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/offline-audio-context-constructor-factory.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesOfflineAudioContextConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/offline-audio-context-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor-factory.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesOscillatorNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/oscillator-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor.js":
  /*!***************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-constructor.js ***!
    \***************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesOscillatorNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/oscillator-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory-factory.js":
  /*!****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory-factory.js ***!
    \****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesOscillatorNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/oscillator-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer-factory.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesOscillatorNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/oscillator-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-node-renderer.js ***!
    \************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesOscillatorNodeRendererJs(module, exports) {//# sourceMappingURL=/build/es2019/types/oscillator-node-renderer.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/oscillator-type.js":
  /*!***************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/oscillator-type.js ***!
    \***************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesOscillatorTypeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/oscillator-type.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/output-connection.js":
  /*!*****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/output-connection.js ***!
    \*****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesOutputConnectionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/output-connection.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/over-sample-type.js":
  /*!****************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/over-sample-type.js ***!
    \****************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesOverSampleTypeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/over-sample-type.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/overwrite-accessors-function.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/overwrite-accessors-function.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesOverwriteAccessorsFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/overwrite-accessors-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor-factory.js":
  /*!*******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor-factory.js ***!
    \*******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesPannerNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/panner-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-constructor.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesPannerNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/panner-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory-factory.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesPannerNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/panner-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/panner-node-renderer-factory.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesPannerNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/panner-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/panning-model-type.js":
  /*!******************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/panning-model-type.js ***!
    \******************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesPanningModelTypeJs(module, exports) {//# sourceMappingURL=/build/es2019/types/panning-model-type.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-node-input-connection.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/passive-audio-node-input-connection.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesPassiveAudioNodeInputConnectionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/passive-audio-node-input-connection.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/passive-audio-param-input-connection.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/passive-audio-param-input-connection.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesPassiveAudioParamInputConnectionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/passive-audio-param-input-connection.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor-factory.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor-factory.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesPeriodicWaveConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/periodic-wave-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/periodic-wave-constructor.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesPeriodicWaveConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/periodic-wave-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/render-automation-factory.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/render-automation-factory.js ***!
    \*************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesRenderAutomationFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/render-automation-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/render-automation-function.js":
  /*!**************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/render-automation-function.js ***!
    \**************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesRenderAutomationFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/render-automation-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-factory.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesRenderInputsOfAudioNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/render-inputs-of-audio-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-node-function.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesRenderInputsOfAudioNodeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/render-inputs-of-audio-node-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-factory.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesRenderInputsOfAudioParamFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/render-inputs-of-audio-param-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-function.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/render-inputs-of-audio-param-function.js ***!
    \*************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesRenderInputsOfAudioParamFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/render-inputs-of-audio-param-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-factory.js ***!
    \*******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesRenderNativeOfflineAudioContextFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/render-native-offline-audio-context-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-function.js":
  /*!********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/render-native-offline-audio-context-function.js ***!
    \********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesRenderNativeOfflineAudioContextFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/render-native-offline-audio-context-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js":
  /*!***********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/start-rendering-factory.js ***!
    \***********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesStartRenderingFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/start-rendering-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/start-rendering-function.js":
  /*!************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/start-rendering-function.js ***!
    \************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesStartRenderingFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/start-rendering-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor-factory.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor-factory.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesStereoPannerNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/stereo-panner-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-constructor.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesStereoPannerNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/stereo-panner-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory-factory.js":
  /*!*******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory-factory.js ***!
    \*******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesStereoPannerNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/stereo-panner-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/stereo-panner-node-renderer-factory.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesStereoPannerNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/stereo-panner-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-constructor-support-factory.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-constructor-support-factory.js ***!
    \*********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioBufferConstructorSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-buffer-constructor-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js":
  /*!***************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js ***!
    \***************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioBufferCopyChannelMethodsSubarraySupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-buffer-copy-channel-methods-subarray-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-consecutive-calls-support-factory.js":
  /*!****************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-consecutive-calls-support-factory.js ***!
    \****************************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioBufferSourceNodeStartMethodConsecutiveCallsSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-buffer-source-node-start-method-consecutive-calls-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-duration-parameter-support-factory.js":
  /*!*****************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-duration-parameter-support-factory.js ***!
    \*****************************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioBufferSourceNodeStartMethodDurationParameterSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-buffer-source-node-start-method-duration-parameter-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-offset-clamping-support-factory.js":
  /*!**************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-start-method-offset-clamping-support-factory.js ***!
    \**************************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioBufferSourceNodeStartMethodOffsetClampingSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-buffer-source-node-start-method-offset-clamping-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-stop-method-nullified-buffer-support-factory.js":
  /*!**************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-buffer-source-node-stop-method-nullified-buffer-support-factory.js ***!
    \**************************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioBufferSourceNodeStopMethodNullifiedBufferSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-buffer-source-node-stop-method-nullified-buffer-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-close-method-support-factory.js":
  /*!***********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-close-method-support-factory.js ***!
    \***********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioContextCloseMethodSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-context-close-method-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js":
  /*!**********************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js ***!
    \**********************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioContextDecodeAudioDataMethodTypeErrorSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-context-decode-audio-data-method-type-error-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-options-support-factory.js":
  /*!******************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-context-options-support-factory.js ***!
    \******************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioContextOptionsSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-context-options-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-node-connect-method-support-factory.js":
  /*!**********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-node-connect-method-support-factory.js ***!
    \**********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioNodeConnectMethodSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-node-connect-method-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-start-method-consecutive-calls-support-factory.js":
  /*!*******************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-start-method-consecutive-calls-support-factory.js ***!
    \*******************************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioScheduledSourceNodeStartMethodConsecutiveCallsSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-scheduled-source-node-start-method-consecutive-calls-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-stop-method-consecutive-calls-support-factory.js":
  /*!******************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-stop-method-consecutive-calls-support-factory.js ***!
    \******************************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioScheduledSourceNodeStopMethodConsecutiveCallsSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-scheduled-source-node-stop-method-consecutive-calls-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-stop-method-negative-parameters-support-factory.js":
  /*!********************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-scheduled-source-node-stop-method-negative-parameters-support-factory.js ***!
    \********************************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioScheduledSourceNodeStopMethodNegativeParametersSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-scheduled-source-node-stop-method-negative-parameters-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js":
  /*!*******************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js ***!
    \*******************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestAudioWorkletProcessorNoOutputsSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-audio-worklet-processor-no-outputs-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js":
  /*!******************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js ***!
    \******************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestChannelMergerNodeChannelCountSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-channel-merger-node-channel-count-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js":
  /*!*************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js ***!
    \*************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestConstantSourceNodeAccurateSchedulingSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-constant-source-node-accurate-scheduling-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js":
  /*!**********************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js ***!
    \**********************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestConvolverNodeBufferReassignabilitySupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-convolver-node-buffer-reassignability-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-is-secure-context-support-factory.js":
  /*!**************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-is-secure-context-support-factory.js ***!
    \**************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestIsSecureContextSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-is-secure-context-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js":
  /*!****************************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js ***!
    \****************************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestMediaStreamAudioSourceNodeMediaStreamWithoutAudioTrackSupportJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-media-stream-audio-source-node-media-stream-without-audio-track-support.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-offline-audio-context-current-time-support-factory.js":
  /*!*******************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-offline-audio-context-current-time-support-factory.js ***!
    \*******************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestOfflineAudioContextCurrentTimeSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-offline-audio-context-current-time-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js":
  /*!*****************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js ***!
    \*****************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTestStereoPannerNodeDefaultValueSupportFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/test-stereo-panner-node-default-value-support-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/typed-array.js":
  /*!***********************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/typed-array.js ***!
    \***********************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesTypedArrayJs(module, exports) {//# sourceMappingURL=/build/es2019/types/typed-array.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/unknown-error-factory.js":
  /*!*********************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/unknown-error-factory.js ***!
    \*********************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesUnknownErrorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/unknown-error-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-node-store.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-node-store.js ***!
    \***********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesUnrenderedAudioWorkletNodeStoreJs(module, exports) {//# sourceMappingURL=/build/es2019/types/unrendered-audio-worklet-node-store.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-nodes.js":
  /*!******************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/unrendered-audio-worklet-nodes.js ***!
    \******************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesUnrenderedAudioWorkletNodesJs(module, exports) {//# sourceMappingURL=/build/es2019/types/unrendered-audio-worklet-nodes.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor-factory.js":
  /*!************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor-factory.js ***!
    \************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWaveShaperNodeConstructorFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wave-shaper-node-constructor-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-constructor.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWaveShaperNodeConstructorJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wave-shaper-node-constructor.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory-factory.js":
  /*!*****************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory-factory.js ***!
    \*****************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWaveShaperNodeRendererFactoryFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wave-shaper-node-renderer-factory-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wave-shaper-node-renderer-factory.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWaveShaperNodeRendererFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wave-shaper-node-renderer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/window-factory.js":
  /*!**************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/window-factory.js ***!
    \**************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWindowFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/window-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js":
  /*!**********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js ***!
    \**********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapAudioBufferCopyChannelMethodsFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-copy-channel-methods-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js":
  /*!***********************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js ***!
    \***********************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapAudioBufferCopyChannelMethodsFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-copy-channel-methods-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js":
  /*!************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js ***!
    \************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapAudioBufferCopyChannelMethodsOutOfBoundsFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js":
  /*!*************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js ***!
    \*************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapAudioBufferCopyChannelMethodsOutOfBoundsFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-copy-channel-methods-out-of-bounds-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js":
  /*!*******************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js ***!
    \*******************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapAudioBufferSourceNodeStartMethodOffsetClampingFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-source-node-start-method-offset-clamping-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js":
  /*!******************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js ***!
    \******************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapAudioBufferSourceNodeStopMethodNullifiedBufferFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js":
  /*!*******************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js ***!
    \*******************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapAudioBufferSourceNodeStopMethodNullifiedBufferFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-audio-buffer-source-node-stop-method-nullified-buffer-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-factory.js":
  /*!**********************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-factory.js ***!
    \**********************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js":
  /*!***********************************************************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js ***!
    \***********************************************************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapAudioScheduledSourceNodeStopMethodConsecutiveCallsFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-audio-scheduled-source-node-stop-method-consecutive-calls-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-factory.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-factory.js ***!
    \********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapChannelMergerNodeFactoryJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-channel-merger-node-factory.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-function.js":
  /*!*********************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-channel-merger-node-function.js ***!
    \*********************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapChannelMergerNodeFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-channel-merger-node-function.js.map

    /***/
  },

  /***/
  "./node_modules/standardized-audio-context/build/es2019/types/wrap-event-listener-function.js":
  /*!****************************************************************************************************!*\
    !*** ./node_modules/standardized-audio-context/build/es2019/types/wrap-event-listener-function.js ***!
    \****************************************************************************************************/

  /*! no static exports found */

  /***/
  function node_modulesStandardizedAudioContextBuildEs2019TypesWrapEventListenerFunctionJs(module, exports) {//# sourceMappingURL=/build/es2019/types/wrap-event-listener-function.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/classes.js":
  /*!************************************************!*\
    !*** ./node_modules/tone/build/esm/classes.js ***!
    \************************************************/

  /*! exports provided: Clock, Transport, Context, BaseContext, Delay, Destination, Gain, Offline, OfflineContext, Param, ToneAudioBuffer, ToneAudioBuffers, ToneAudioNode, connectSeries, connect, disconnect, FrequencyClass, Frequency, MidiClass, Midi, TimeClass, Time, TicksClass, Ticks, TransportTimeClass, TransportTime, Draw, Emitter, IntervalTimeline, StateTimeline, Timeline, isUndef, isDefined, isFunction, isNumber, isObject, isBoolean, isArray, isString, isNote, dbToGain, gainToDb, intervalToFrequencyRatio, ftom, mtof, optionsFromArguments, defaultArg, Unit, debug, Noise, UserMedia, Oscillator, AMOscillator, FMOscillator, PulseOscillator, FatOscillator, PWMOscillator, OmniOscillator, ToneOscillatorNode, LFO, ToneBufferSource, Player, Players, GrainPlayer, Add, Abs, AudioToGain, GainToAudio, GreaterThan, GreaterThanZero, Multiply, Negate, Pow, Signal, connectSignal, Scale, ScaleExp, Subtract, SyncedSignal, WaveShaper, Zero, AMSynth, DuoSynth, FMSynth, MetalSynth, MembraneSynth, MonoSynth, NoiseSynth, PluckSynth, PolySynth, Sampler, Synth, Loop, Part, Pattern, Sequence, ToneEvent, AutoFilter, AutoPanner, AutoWah, BitCrusher, Chebyshev, Chorus, Distortion, FeedbackDelay, FrequencyShifter, Freeverb, JCReverb, PingPongDelay, PitchShift, Phaser, Reverb, StereoWidener, Tremolo, Vibrato, Analyser, Meter, FFT, DCMeter, Waveform, Follower, Channel, CrossFade, Merge, MidSideMerge, MidSideSplit, MultibandSplit, Panner, Panner3D, PanVol, Recorder, Solo, Split, Volume, Compressor, Gate, Limiter, MidSideCompressor, MultibandCompressor, AmplitudeEnvelope, Envelope, FrequencyEnvelope, EQ3, Filter, OnePoleFilter, FeedbackCombFilter, LowpassCombFilter, Convolver */

  /***/
  function node_modulesToneBuildEsmClassesJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _core_index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./core/index */
    "./node_modules/tone/build/esm/core/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Clock", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Clock"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Transport", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Transport"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Context", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Context"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BaseContext", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["BaseContext"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Delay", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Delay"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Destination", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Destination"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Gain", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Gain"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Offline", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Offline"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "OfflineContext", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["OfflineContext"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Param", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Param"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioBuffer", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["ToneAudioBuffer"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioBuffers", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["ToneAudioBuffers"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioNode", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "connectSeries", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["connectSeries"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "connect", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["connect"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "disconnect", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["disconnect"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FrequencyClass", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["FrequencyClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Frequency", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Frequency"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidiClass", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["MidiClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Midi", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Midi"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TimeClass", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["TimeClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Time", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Time"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TicksClass", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["TicksClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Ticks", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Ticks"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TransportTimeClass", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["TransportTimeClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TransportTime", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["TransportTime"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Draw", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Draw"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Emitter", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Emitter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "IntervalTimeline", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["IntervalTimeline"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StateTimeline", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["StateTimeline"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Timeline", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Timeline"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isUndef", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["isUndef"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isDefined", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["isDefined"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isFunction", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["isFunction"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isNumber", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["isNumber"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isObject", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["isObject"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isBoolean", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["isBoolean"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isArray", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["isArray"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isString", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["isString"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isNote", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["isNote"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "dbToGain", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["dbToGain"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "gainToDb", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["gainToDb"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "intervalToFrequencyRatio", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["intervalToFrequencyRatio"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ftom", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["ftom"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "mtof", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["mtof"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "optionsFromArguments", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "defaultArg", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["defaultArg"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Unit", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["Unit"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "debug", function () {
      return _core_index__WEBPACK_IMPORTED_MODULE_0__["debug"];
    });
    /* harmony import */


    var _source_index__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./source/index */
    "./node_modules/tone/build/esm/source/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Noise", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["Noise"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "UserMedia", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["UserMedia"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Oscillator", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["Oscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AMOscillator", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["AMOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FMOscillator", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["FMOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PulseOscillator", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["PulseOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FatOscillator", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["FatOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PWMOscillator", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["PWMOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "OmniOscillator", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["OmniOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneOscillatorNode", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["ToneOscillatorNode"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "LFO", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["LFO"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneBufferSource", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["ToneBufferSource"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Player", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["Player"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Players", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["Players"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GrainPlayer", function () {
      return _source_index__WEBPACK_IMPORTED_MODULE_1__["GrainPlayer"];
    });
    /* harmony import */


    var _signal_index__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./signal/index */
    "./node_modules/tone/build/esm/signal/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Add", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Add"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Abs", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Abs"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AudioToGain", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["AudioToGain"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GainToAudio", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["GainToAudio"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GreaterThan", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["GreaterThan"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GreaterThanZero", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["GreaterThanZero"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Multiply", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Multiply"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Negate", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Negate"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Pow", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Pow"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Signal", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Signal"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "connectSignal", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["connectSignal"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Scale", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Scale"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ScaleExp", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["ScaleExp"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Subtract", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Subtract"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "SyncedSignal", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["SyncedSignal"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "WaveShaper", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["WaveShaper"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Zero", function () {
      return _signal_index__WEBPACK_IMPORTED_MODULE_2__["Zero"];
    });
    /* harmony import */


    var _instrument_index__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./instrument/index */
    "./node_modules/tone/build/esm/instrument/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AMSynth", function () {
      return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["AMSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DuoSynth", function () {
      return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["DuoSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FMSynth", function () {
      return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["FMSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MetalSynth", function () {
      return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["MetalSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MembraneSynth", function () {
      return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["MembraneSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MonoSynth", function () {
      return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["MonoSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "NoiseSynth", function () {
      return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["NoiseSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PluckSynth", function () {
      return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["PluckSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PolySynth", function () {
      return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["PolySynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Sampler", function () {
      return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["Sampler"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Synth", function () {
      return _instrument_index__WEBPACK_IMPORTED_MODULE_3__["Synth"];
    });
    /* harmony import */


    var _event_index__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./event/index */
    "./node_modules/tone/build/esm/event/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Loop", function () {
      return _event_index__WEBPACK_IMPORTED_MODULE_4__["Loop"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Part", function () {
      return _event_index__WEBPACK_IMPORTED_MODULE_4__["Part"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Pattern", function () {
      return _event_index__WEBPACK_IMPORTED_MODULE_4__["Pattern"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Sequence", function () {
      return _event_index__WEBPACK_IMPORTED_MODULE_4__["Sequence"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneEvent", function () {
      return _event_index__WEBPACK_IMPORTED_MODULE_4__["ToneEvent"];
    });
    /* harmony import */


    var _effect_index__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./effect/index */
    "./node_modules/tone/build/esm/effect/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AutoFilter", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["AutoFilter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AutoPanner", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["AutoPanner"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AutoWah", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["AutoWah"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BitCrusher", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["BitCrusher"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Chebyshev", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Chebyshev"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Chorus", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Chorus"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Distortion", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Distortion"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FeedbackDelay", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["FeedbackDelay"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FrequencyShifter", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["FrequencyShifter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Freeverb", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Freeverb"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "JCReverb", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["JCReverb"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PingPongDelay", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["PingPongDelay"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PitchShift", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["PitchShift"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Phaser", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Phaser"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Reverb", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Reverb"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StereoWidener", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["StereoWidener"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Tremolo", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Tremolo"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Vibrato", function () {
      return _effect_index__WEBPACK_IMPORTED_MODULE_5__["Vibrato"];
    });
    /* harmony import */


    var _component_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./component/index */
    "./node_modules/tone/build/esm/component/index.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Analyser", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Analyser"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Meter", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Meter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FFT", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["FFT"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DCMeter", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["DCMeter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Waveform", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Waveform"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Follower", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Follower"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Channel", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Channel"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "CrossFade", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["CrossFade"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Merge", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Merge"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidSideMerge", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["MidSideMerge"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidSideSplit", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["MidSideSplit"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MultibandSplit", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["MultibandSplit"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Panner", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Panner"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Panner3D", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Panner3D"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PanVol", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["PanVol"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Recorder", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Recorder"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Solo", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Solo"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Split", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Split"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Volume", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Volume"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Compressor", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Compressor"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Gate", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Gate"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Limiter", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Limiter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidSideCompressor", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["MidSideCompressor"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MultibandCompressor", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["MultibandCompressor"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AmplitudeEnvelope", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["AmplitudeEnvelope"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Envelope", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Envelope"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FrequencyEnvelope", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["FrequencyEnvelope"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "EQ3", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["EQ3"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Filter", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Filter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "OnePoleFilter", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["OnePoleFilter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FeedbackCombFilter", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["FeedbackCombFilter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "LowpassCombFilter", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["LowpassCombFilter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Convolver", function () {
      return _component_index__WEBPACK_IMPORTED_MODULE_6__["Convolver"];
    }); //# sourceMappingURL=classes.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/analysis/Analyser.js":
  /*!********************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/analysis/Analyser.js ***!
    \********************************************************************/

  /*! exports provided: Analyser */

  /***/
  function node_modulesToneBuildEsmComponentAnalysisAnalyserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Analyser", function () {
      return Analyser;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _channel_Split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../channel/Split */
    "./node_modules/tone/build/esm/component/channel/Split.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * Wrapper around the native Web Audio's [AnalyserNode](http://webaudio.github.io/web-audio-api/#idl-def-AnalyserNode).
     * Extracts FFT or Waveform data from the incoming signal.
     * @category Component
     */


    var Analyser = /*#__PURE__*/function (_core_context_ToneAud) {
      _inherits(Analyser, _core_context_ToneAud);

      var _super29 = _createSuper(Analyser);

      function Analyser() {
        var _this36;

        _classCallCheck2(this, Analyser);

        _this36 = _super29.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Analyser.getDefaults(), arguments, ["type", "size"]));
        _this36.name = "Analyser";
        /**
         * The analyser node.
         */

        _this36._analysers = [];
        /**
         * The buffer that the FFT data is written to
         */

        _this36._buffers = [];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Analyser.getDefaults(), arguments, ["type", "size"]);
        _this36.input = _this36.output = _this36._gain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__["Gain"]({
          context: _this36.context
        });
        _this36._split = new _channel_Split__WEBPACK_IMPORTED_MODULE_2__["Split"]({
          context: _this36.context,
          channels: options.channels
        });

        _this36.input.connect(_this36._split);

        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assertRange"])(options.channels, 1); // create the analysers

        for (var channel = 0; channel < options.channels; channel++) {
          _this36._analysers[channel] = _this36.context.createAnalyser();

          _this36._split.connect(_this36._analysers[channel], channel, 0);
        } // set the values initially


        _this36.size = options.size;
        _this36.type = options.type;
        return _this36;
      }

      _createClass2(Analyser, [{
        key: "getValue",

        /**
         * Run the analysis given the current settings. If [[channels]] = 1,
         * it will return a Float32Array. If [[channels]] > 1, it will
         * return an array of Float32Arrays where each index in the array
         * represents the analysis done on a channel.
         */
        value: function getValue() {
          var _this37 = this;

          this._analysers.forEach(function (analyser, index) {
            var buffer = _this37._buffers[index];

            if (_this37._type === "fft") {
              analyser.getFloatFrequencyData(buffer);
            } else if (_this37._type === "waveform") {
              analyser.getFloatTimeDomainData(buffer);
            }
          });

          if (this.channels === 1) {
            return this._buffers[0];
          } else {
            return this._buffers;
          }
        }
        /**
         * The size of analysis. This must be a power of two in the range 16 to 16384.
         */

      }, {
        key: "dispose",

        /**
         * Clean up.
         */
        value: function dispose() {
          _get(_getPrototypeOf(Analyser.prototype), "dispose", this).call(this);

          this._analysers.forEach(function (a) {
            return a.disconnect();
          });

          this._split.dispose();

          this._gain.dispose();

          return this;
        }
      }, {
        key: "size",
        get: function get() {
          return this._analysers[0].frequencyBinCount;
        },
        set: function set(size) {
          var _this38 = this;

          this._analysers.forEach(function (analyser, index) {
            analyser.fftSize = size * 2;
            _this38._buffers[index] = new Float32Array(size);
          });
        }
        /**
         * The number of channels the analyser does the analysis on. Channel
         * separation is done using [[Split]]
         */

      }, {
        key: "channels",
        get: function get() {
          return this._analysers.length;
        }
        /**
         * The analysis function returned by analyser.getValue(), either "fft" or "waveform".
         */

      }, {
        key: "type",
        get: function get() {
          return this._type;
        },
        set: function set(type) {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(type === "waveform" || type === "fft", "Analyser: invalid type: ".concat(type));
          this._type = type;
        }
        /**
         * 0 represents no time averaging with the last analysis frame.
         */

      }, {
        key: "smoothing",
        get: function get() {
          return this._analysers[0].smoothingTimeConstant;
        },
        set: function set(val) {
          this._analysers.forEach(function (a) {
            return a.smoothingTimeConstant = val;
          });
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            size: 1024,
            smoothing: 0.8,
            type: "fft",
            channels: 1
          });
        }
      }]);

      return Analyser;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=Analyser.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/analysis/DCMeter.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/analysis/DCMeter.js ***!
    \*******************************************************************/

  /*! exports provided: DCMeter */

  /***/
  function node_modulesToneBuildEsmComponentAnalysisDCMeterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DCMeter", function () {
      return DCMeter;
    });
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _MeterBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./MeterBase */
    "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
    /**
     * DCMeter gets the raw value of the input signal at the current time.
     *
     * @example
     * const meter = new Tone.DCMeter();
     * const mic = new Tone.UserMedia();
     * mic.open();
     * // connect mic to the meter
     * mic.connect(meter);
     * // the current level of the mic
     * const level = meter.getValue();
     * @category Component
     */


    var DCMeter = /*#__PURE__*/function (_MeterBase__WEBPACK_I) {
      _inherits(DCMeter, _MeterBase__WEBPACK_I);

      var _super30 = _createSuper(DCMeter);

      function DCMeter() {
        var _this39;

        _classCallCheck2(this, DCMeter);

        _this39 = _super30.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(DCMeter.getDefaults(), arguments));
        _this39.name = "DCMeter";
        _this39._analyser.type = "waveform";
        _this39._analyser.size = 256;
        return _this39;
      }
      /**
       * Get the signal value of the incoming signal
       */


      _createClass2(DCMeter, [{
        key: "getValue",
        value: function getValue() {
          var value = this._analyser.getValue();

          return value[0];
        }
      }]);

      return DCMeter;
    }(_MeterBase__WEBPACK_IMPORTED_MODULE_1__["MeterBase"]); //# sourceMappingURL=DCMeter.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/analysis/FFT.js":
  /*!***************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/analysis/FFT.js ***!
    \***************************************************************/

  /*! exports provided: FFT */

  /***/
  function node_modulesToneBuildEsmComponentAnalysisFFTJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FFT", function () {
      return FFT;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/type/Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _MeterBase__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./MeterBase */
    "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
    /**
     * Get the current frequency data of the connected audio source using a fast Fourier transform.
     * @category Component
     */


    var FFT = /*#__PURE__*/function (_MeterBase__WEBPACK_I2) {
      _inherits(FFT, _MeterBase__WEBPACK_I2);

      var _super31 = _createSuper(FFT);

      function FFT() {
        var _this40;

        _classCallCheck2(this, FFT);

        _this40 = _super31.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(FFT.getDefaults(), arguments, ["size"]));
        _this40.name = "FFT";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(FFT.getDefaults(), arguments, ["size"]);
        _this40.normalRange = options.normalRange;
        _this40._analyser.type = "fft";
        _this40.size = options.size;
        return _this40;
      }

      _createClass2(FFT, [{
        key: "getValue",

        /**
         * Gets the current frequency data from the connected audio source.
         * Returns the frequency data of length [[size]] as a Float32Array of decibel values.
         */
        value: function getValue() {
          var _this41 = this;

          var values = this._analyser.getValue();

          return values.map(function (v) {
            return _this41.normalRange ? Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_1__["dbToGain"])(v) : v;
          });
        }
        /**
         * The size of analysis. This must be a power of two in the range 16 to 16384.
         * Determines the size of the array returned by [[getValue]] (i.e. the number of
         * frequency bins). Large FFT sizes may be costly to compute.
         */

      }, {
        key: "size",
        get: function get() {
          return this._analyser.size;
        },
        set: function set(size) {
          this._analyser.size = size;
        }
        /**
         * 0 represents no time averaging with the last analysis frame.
         */

      }, {
        key: "smoothing",
        get: function get() {
          return this._analyser.smoothing;
        },
        set: function set(val) {
          this._analyser.smoothing = val;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            normalRange: false,
            size: 1024,
            smoothing: 0.8
          });
        }
      }]);

      return FFT;
    }(_MeterBase__WEBPACK_IMPORTED_MODULE_3__["MeterBase"]); //# sourceMappingURL=FFT.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/analysis/Follower.js":
  /*!********************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/analysis/Follower.js ***!
    \********************************************************************/

  /*! exports provided: Follower */

  /***/
  function node_modulesToneBuildEsmComponentAnalysisFollowerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Follower", function () {
      return Follower;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../filter/OnePoleFilter */
    "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js");
    /* harmony import */


    var _signal_Abs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../signal/Abs */
    "./node_modules/tone/build/esm/signal/Abs.js");
    /**
     * Follower is a simple envelope follower.
     * It's implemented by applying a lowpass filter to the absolute value of the incoming signal.
     * ```
     *          +-----+    +---------------+
     * Input +--> Abs +----> OnePoleFilter +--> Output
     *          +-----+    +---------------+
     * ```
     * @category Component
     */


    var Follower = /*#__PURE__*/function (_core_context_ToneAud2) {
      _inherits(Follower, _core_context_ToneAud2);

      var _super32 = _createSuper(Follower);

      function Follower() {
        var _this42;

        _classCallCheck2(this, Follower);

        _this42 = _super32.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Follower.getDefaults(), arguments, ["smoothing"]));
        _this42.name = "Follower";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Follower.getDefaults(), arguments, ["smoothing"]);
        _this42._abs = _this42.input = new _signal_Abs__WEBPACK_IMPORTED_MODULE_3__["Abs"]({
          context: _this42.context
        });
        _this42._lowpass = _this42.output = new _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_2__["OnePoleFilter"]({
          context: _this42.context,
          frequency: 1 / _this42.toSeconds(options.smoothing),
          type: "lowpass"
        });

        _this42._abs.connect(_this42._lowpass);

        _this42._smoothing = options.smoothing;
        return _this42;
      }

      _createClass2(Follower, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Follower.prototype), "dispose", this).call(this);

          this._abs.dispose();

          this._lowpass.dispose();

          return this;
        }
      }, {
        key: "smoothing",

        /**
         * The amount of time it takes a value change to arrive at the updated value.
         */
        get: function get() {
          return this._smoothing;
        },
        set: function set(smoothing) {
          this._smoothing = smoothing;
          this._lowpass.frequency = 1 / this.toSeconds(this.smoothing);
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            smoothing: 0.05
          });
        }
      }]);

      return Follower;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=Follower.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/analysis/Meter.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/analysis/Meter.js ***!
    \*****************************************************************/

  /*! exports provided: Meter */

  /***/
  function node_modulesToneBuildEsmComponentAnalysisMeterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Meter", function () {
      return Meter;
    });
    /* harmony import */


    var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/type/Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _MeterBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./MeterBase */
    "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _Analyser__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./Analyser */
    "./node_modules/tone/build/esm/component/analysis/Analyser.js");
    /**
     * Meter gets the [RMS](https://en.wikipedia.org/wiki/Root_mean_square)
     * of an input signal. It can also get the raw value of the input signal.
     *
     * @example
     * const meter = new Tone.Meter();
     * const mic = new Tone.UserMedia();
     * mic.open();
     * // connect mic to the meter
     * mic.connect(meter);
     * // the current level of the mic
     * const level = meter.getValue();
     * @category Component
     */


    var Meter = /*#__PURE__*/function (_MeterBase__WEBPACK_I3) {
      _inherits(Meter, _MeterBase__WEBPACK_I3);

      var _super33 = _createSuper(Meter);

      function Meter() {
        var _this43;

        _classCallCheck2(this, Meter);

        _this43 = _super33.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Meter.getDefaults(), arguments, ["smoothing"]));
        _this43.name = "Meter";
        /**
         * The previous frame's value
         */

        _this43._rms = 0;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Meter.getDefaults(), arguments, ["smoothing"]);
        _this43.input = _this43.output = _this43._analyser = new _Analyser__WEBPACK_IMPORTED_MODULE_4__["Analyser"]({
          context: _this43.context,
          size: 256,
          type: "waveform",
          channels: options.channels
        });
        _this43.smoothing = options.smoothing, _this43.normalRange = options.normalRange;
        return _this43;
      }

      _createClass2(Meter, [{
        key: "getLevel",

        /**
         * Use [[getValue]] instead. For the previous getValue behavior, use DCMeter.
         * @deprecated
         */
        value: function getLevel() {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["warn"])("'getLevel' has been changed to 'getValue'");
          return this.getValue();
        }
        /**
         * Get the current value of the incoming signal.
         * Output is in decibels when [[normalRange]] is `false`.
         * If [[channels]] = 1, then the output is a single number
         * representing the value of the input signal. When [[channels]] > 1,
         * then each channel is returned as a value in a number array.
         */

      }, {
        key: "getValue",
        value: function getValue() {
          var _this44 = this;

          var aValues = this._analyser.getValue();

          var channelValues = this.channels === 1 ? [aValues] : aValues;
          var vals = channelValues.map(function (values) {
            var totalSquared = values.reduce(function (total, current) {
              return total + current * current;
            }, 0);
            var rms = Math.sqrt(totalSquared / values.length); // the rms can only fall at the rate of the smoothing
            // but can jump up instantly

            _this44._rms = Math.max(rms, _this44._rms * _this44.smoothing);
            return _this44.normalRange ? _this44._rms : Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_0__["gainToDb"])(_this44._rms);
          });

          if (this.channels === 1) {
            return vals[0];
          } else {
            return vals;
          }
        }
        /**
         * The number of channels of analysis.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Meter.prototype), "dispose", this).call(this);

          this._analyser.dispose();

          return this;
        }
      }, {
        key: "channels",
        get: function get() {
          return this._analyser.channels;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_MeterBase__WEBPACK_IMPORTED_MODULE_2__["MeterBase"].getDefaults(), {
            smoothing: 0.8,
            normalRange: false,
            channels: 1
          });
        }
      }]);

      return Meter;
    }(_MeterBase__WEBPACK_IMPORTED_MODULE_2__["MeterBase"]); //# sourceMappingURL=Meter.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/analysis/MeterBase.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/analysis/MeterBase.js ***!
    \*********************************************************************/

  /*! exports provided: MeterBase */

  /***/
  function node_modulesToneBuildEsmComponentAnalysisMeterBaseJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MeterBase", function () {
      return MeterBase;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Analyser__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Analyser */
    "./node_modules/tone/build/esm/component/analysis/Analyser.js");
    /**
     * The base class for Metering classes.
     */


    var MeterBase = /*#__PURE__*/function (_core_context_ToneAud3) {
      _inherits(MeterBase, _core_context_ToneAud3);

      var _super34 = _createSuper(MeterBase);

      function MeterBase() {
        var _this45;

        _classCallCheck2(this, MeterBase);

        _this45 = _super34.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(MeterBase.getDefaults(), arguments));
        _this45.name = "MeterBase";
        _this45.input = _this45.output = _this45._analyser = new _Analyser__WEBPACK_IMPORTED_MODULE_2__["Analyser"]({
          context: _this45.context,
          size: 256,
          type: "waveform"
        });
        return _this45;
      }

      _createClass2(MeterBase, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(MeterBase.prototype), "dispose", this).call(this);

          this._analyser.dispose();

          return this;
        }
      }]);

      return MeterBase;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=MeterBase.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/analysis/Waveform.js":
  /*!********************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/analysis/Waveform.js ***!
    \********************************************************************/

  /*! exports provided: Waveform */

  /***/
  function node_modulesToneBuildEsmComponentAnalysisWaveformJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Waveform", function () {
      return Waveform;
    });
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _MeterBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./MeterBase */
    "./node_modules/tone/build/esm/component/analysis/MeterBase.js");
    /**
     * Get the current waveform data of the connected audio source.
     * @category Component
     */


    var Waveform = /*#__PURE__*/function (_MeterBase__WEBPACK_I4) {
      _inherits(Waveform, _MeterBase__WEBPACK_I4);

      var _super35 = _createSuper(Waveform);

      function Waveform() {
        var _this46;

        _classCallCheck2(this, Waveform);

        _this46 = _super35.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Waveform.getDefaults(), arguments, ["size"]));
        _this46.name = "Waveform";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Waveform.getDefaults(), arguments, ["size"]);
        _this46._analyser.type = "waveform";
        _this46.size = options.size;
        return _this46;
      }

      _createClass2(Waveform, [{
        key: "getValue",

        /**
         * Return the waveform for the current time as a Float32Array where each value in the array
         * represents a sample in the waveform.
         */
        value: function getValue() {
          return this._analyser.getValue();
        }
        /**
         * The size of analysis. This must be a power of two in the range 16 to 16384.
         * Determines the size of the array returned by [[getValue]].
         */

      }, {
        key: "size",
        get: function get() {
          return this._analyser.size;
        },
        set: function set(size) {
          this._analyser.size = size;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_MeterBase__WEBPACK_IMPORTED_MODULE_1__["MeterBase"].getDefaults(), {
            size: 1024
          });
        }
      }]);

      return Waveform;
    }(_MeterBase__WEBPACK_IMPORTED_MODULE_1__["MeterBase"]); //# sourceMappingURL=Waveform.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/channel/Channel.js":
  /*!******************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/Channel.js ***!
    \******************************************************************/

  /*! exports provided: Channel */

  /***/
  function node_modulesToneBuildEsmComponentChannelChannelJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Channel", function () {
      return Channel;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Solo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Solo */
    "./node_modules/tone/build/esm/component/channel/Solo.js");
    /* harmony import */


    var _PanVol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./PanVol */
    "./node_modules/tone/build/esm/component/channel/PanVol.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /**
     * Channel provides a channel strip interface with volume, pan, solo and mute controls.
     * See [[PanVol]] and [[Solo]]
     * @example
     * // pan the incoming signal left and drop the volume 12db
     * const channel = new Tone.Channel(-0.25, -12);
     * @category Component
     */


    var Channel = /*#__PURE__*/function (_core_context_ToneAud4) {
      _inherits(Channel, _core_context_ToneAud4);

      var _super36 = _createSuper(Channel);

      function Channel() {
        var _this47;

        _classCallCheck2(this, Channel);

        _this47 = _super36.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Channel.getDefaults(), arguments, ["volume", "pan"]));
        _this47.name = "Channel";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Channel.getDefaults(), arguments, ["volume", "pan"]);
        _this47._solo = _this47.input = new _Solo__WEBPACK_IMPORTED_MODULE_2__["Solo"]({
          solo: options.solo,
          context: _this47.context
        });
        _this47._panVol = _this47.output = new _PanVol__WEBPACK_IMPORTED_MODULE_3__["PanVol"]({
          context: _this47.context,
          pan: options.pan,
          volume: options.volume,
          mute: options.mute
        });
        _this47.pan = _this47._panVol.pan;
        _this47.volume = _this47._panVol.volume;

        _this47._solo.connect(_this47._panVol);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this47), ["pan", "volume"]);
        return _this47;
      }

      _createClass2(Channel, [{
        key: "_getBus",

        /**
         * Get the gain node belonging to the bus name. Create it if
         * it doesn't exist
         * @param name The bus name
         */
        value: function _getBus(name) {
          if (!Channel.buses.has(name)) {
            Channel.buses.set(name, new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
              context: this.context
            }));
          }

          return Channel.buses.get(name);
        }
        /**
         * Send audio to another channel using a string. `send` is a lot like
         * [[connect]], except it uses a string instead of an object. This can
         * be useful in large applications to decouple sections since [[send]]
         * and [[receive]] can be invoked separately in order to connect an object
         * @param name The channel name to send the audio
         * @param volume The amount of the signal to send.
         * 	Defaults to 0db, i.e. send the entire signal
         * @returns Returns the gain node of this connection.
         */

      }, {
        key: "send",
        value: function send(name) {
          var volume = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

          var bus = this._getBus(name);

          var sendKnob = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
            context: this.context,
            units: "decibels",
            gain: volume
          });
          this.connect(sendKnob);
          sendKnob.connect(bus);
          return sendKnob;
        }
        /**
         * Receive audio from a channel which was connected with [[send]].
         * @param name The channel name to receive audio from.
         */

      }, {
        key: "receive",
        value: function receive(name) {
          var bus = this._getBus(name);

          bus.connect(this);
          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Channel.prototype), "dispose", this).call(this);

          this._panVol.dispose();

          this.pan.dispose();
          this.volume.dispose();

          this._solo.dispose();

          return this;
        }
      }, {
        key: "solo",

        /**
         * Solo/unsolo the channel. Soloing is only relative to other [[Channels]] and [[Solo]] instances
         */
        get: function get() {
          return this._solo.solo;
        },
        set: function set(solo) {
          this._solo.solo = solo;
        }
        /**
         * If the current instance is muted, i.e. another instance is soloed,
         * or the channel is muted
         */

      }, {
        key: "muted",
        get: function get() {
          return this._solo.muted || this.mute;
        }
        /**
         * Mute/unmute the volume
         */

      }, {
        key: "mute",
        get: function get() {
          return this._panVol.mute;
        },
        set: function set(mute) {
          this._panVol.mute = mute;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            pan: 0,
            volume: 0,
            mute: false,
            solo: false
          });
        }
      }]);

      return Channel;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]);
    /**
     * Store the send/receive channels by name.
     */


    Channel.buses = new Map(); //# sourceMappingURL=Channel.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/component/channel/CrossFade.js":
  /*!********************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/CrossFade.js ***!
    \********************************************************************/

  /*! exports provided: CrossFade */

  /***/
  function node_modulesToneBuildEsmComponentChannelCrossFadeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "CrossFade", function () {
      return CrossFade;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _signal_GainToAudio__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../signal/GainToAudio */
    "./node_modules/tone/build/esm/signal/GainToAudio.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /**
     * Tone.Crossfade provides equal power fading between two inputs.
     * More on crossfading technique [here](https://en.wikipedia.org/wiki/Fade_(audio_engineering)#Crossfading).
     * ```
     *                                             +---------+
     *                                            +> input a +>--+
     * +-----------+   +---------------------+     |         |   |
     * | 1s signal +>--> stereoPannerNode  L +>----> gain    |   |
     * +-----------+   |                     |     +---------+   |
     *               +-> pan               R +>-+                |   +--------+
     *               | +---------------------+  |                +---> output +>
     *  +------+     |                          |  +---------+   |   +--------+
     *  | fade +>----+                          | +> input b +>--+
     *  +------+                                |  |         |
     *                                          +--> gain    |
     *                                             +---------+
     * ```
     * @example
     * const crossFade = new Tone.CrossFade().toDestination();
     * // connect two inputs Tone.to a/b
     * const inputA = new Tone.Oscillator(440, "square").connect(crossFade.a).start();
     * const inputB = new Tone.Oscillator(440, "sine").connect(crossFade.b).start();
     * // use the fade to control the mix between the two
     * crossFade.fade.value = 0.5;
     * @category Component
     */


    var CrossFade = /*#__PURE__*/function (_core_context_ToneAud5) {
      _inherits(CrossFade, _core_context_ToneAud5);

      var _super37 = _createSuper(CrossFade);

      function CrossFade() {
        var _this48;

        _classCallCheck2(this, CrossFade);

        _this48 = _super37.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(CrossFade.getDefaults(), arguments, ["fade"])));
        _this48.name = "CrossFade";
        /**
         * The crossfading is done by a StereoPannerNode
         */

        _this48._panner = _this48.context.createStereoPanner();
        /**
         * Split the output of the panner node into two values used to control the gains.
         */

        _this48._split = _this48.context.createChannelSplitter(2);
        /**
         * Convert the fade value into an audio range value so it can be connected
         * to the panner.pan AudioParam
         */

        _this48._g2a = new _signal_GainToAudio__WEBPACK_IMPORTED_MODULE_4__["GainToAudio"]({
          context: _this48.context
        });
        /**
         * The input which is at full level when fade = 0
         */

        _this48.a = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this48.context,
          gain: 0
        });
        /**
         * The input which is at full level when fade = 1
         */

        _this48.b = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this48.context,
          gain: 0
        });
        /**
         * The output is a mix between `a` and `b` at the ratio of `fade`
         */

        _this48.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this48.context
        });
        _this48._internalChannels = [_this48.a, _this48.b];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(CrossFade.getDefaults(), arguments, ["fade"]);
        _this48.fade = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
          context: _this48.context,
          units: "normalRange",
          value: options.fade
        });
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this48), "fade");

        _this48.context.getConstant(1).connect(_this48._panner);

        _this48._panner.connect(_this48._split); // this is necessary for standardized-audio-context
        // doesn't make any difference for the native AudioContext
        // https://github.com/chrisguttandin/standardized-audio-context/issues/647


        _this48._panner.channelCount = 1;
        _this48._panner.channelCountMode = "explicit";
        Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connect"])(_this48._split, _this48.a.gain, 0);
        Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connect"])(_this48._split, _this48.b.gain, 1);

        _this48.fade.chain(_this48._g2a, _this48._panner.pan);

        _this48.a.connect(_this48.output);

        _this48.b.connect(_this48.output);

        return _this48;
      }

      _createClass2(CrossFade, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(CrossFade.prototype), "dispose", this).call(this);

          this.a.dispose();
          this.b.dispose();
          this.output.dispose();
          this.fade.dispose();

          this._g2a.dispose();

          this._panner.disconnect();

          this._split.disconnect();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            fade: 0.5
          });
        }
      }]);

      return CrossFade;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=CrossFade.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/channel/Merge.js":
  /*!****************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/Merge.js ***!
    \****************************************************************/

  /*! exports provided: Merge */

  /***/
  function node_modulesToneBuildEsmComponentChannelMergeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Merge", function () {
      return Merge;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /**
     * Merge brings multiple mono input channels into a single multichannel output channel.
     *
     * @example
     * const merge = new Tone.Merge().toDestination();
     * // routing a sine tone in the left channel
     * const osc = new Tone.Oscillator().connect(merge, 0, 0).start();
     * // and noise in the right channel
     * const noise = new Tone.Noise().connect(merge, 0, 1).start();;
     * @category Component
     */


    var Merge = /*#__PURE__*/function (_core_context_ToneAud6) {
      _inherits(Merge, _core_context_ToneAud6);

      var _super38 = _createSuper(Merge);

      function Merge() {
        var _this49;

        _classCallCheck2(this, Merge);

        _this49 = _super38.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Merge.getDefaults(), arguments, ["channels"]));
        _this49.name = "Merge";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Merge.getDefaults(), arguments, ["channels"]);
        _this49._merger = _this49.output = _this49.input = _this49.context.createChannelMerger(options.channels);
        return _this49;
      }

      _createClass2(Merge, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Merge.prototype), "dispose", this).call(this);

          this._merger.disconnect();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            channels: 2
          });
        }
      }]);

      return Merge;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=Merge.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/channel/MidSideMerge.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/MidSideMerge.js ***!
    \***********************************************************************/

  /*! exports provided: MidSideMerge */

  /***/
  function node_modulesToneBuildEsmComponentChannelMidSideMergeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MidSideMerge", function () {
      return MidSideMerge;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _Merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Merge */
    "./node_modules/tone/build/esm/component/channel/Merge.js");
    /* harmony import */


    var _signal_Add__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../signal/Add */
    "./node_modules/tone/build/esm/signal/Add.js");
    /* harmony import */


    var _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../signal/Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../signal/Subtract */
    "./node_modules/tone/build/esm/signal/Subtract.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /**
     * MidSideMerge merges the mid and side signal after they've been separated by [[MidSideMerge]]
     * ```
     * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right
     * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and righ
     * ```
     */


    var MidSideMerge = /*#__PURE__*/function (_core_context_ToneAud7) {
      _inherits(MidSideMerge, _core_context_ToneAud7);

      var _super39 = _createSuper(MidSideMerge);

      function MidSideMerge() {
        var _this50;

        _classCallCheck2(this, MidSideMerge);

        _this50 = _super39.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_6__["optionsFromArguments"])(MidSideMerge.getDefaults(), arguments));
        _this50.name = "MidSideMerge";
        _this50.mid = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
          context: _this50.context
        });
        _this50.side = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
          context: _this50.context
        });
        _this50._left = new _signal_Add__WEBPACK_IMPORTED_MODULE_2__["Add"]({
          context: _this50.context
        });
        _this50._leftMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__["Multiply"]({
          context: _this50.context,
          value: Math.SQRT1_2
        });
        _this50._right = new _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__["Subtract"]({
          context: _this50.context
        });
        _this50._rightMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__["Multiply"]({
          context: _this50.context,
          value: Math.SQRT1_2
        });
        _this50._merge = _this50.output = new _Merge__WEBPACK_IMPORTED_MODULE_1__["Merge"]({
          context: _this50.context
        });

        _this50.mid.fan(_this50._left);

        _this50.side.connect(_this50._left.addend);

        _this50.mid.connect(_this50._right);

        _this50.side.connect(_this50._right.subtrahend);

        _this50._left.connect(_this50._leftMult);

        _this50._right.connect(_this50._rightMult);

        _this50._leftMult.connect(_this50._merge, 0, 0);

        _this50._rightMult.connect(_this50._merge, 0, 1);

        return _this50;
      }

      _createClass2(MidSideMerge, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(MidSideMerge.prototype), "dispose", this).call(this);

          this.mid.dispose();
          this.side.dispose();

          this._leftMult.dispose();

          this._rightMult.dispose();

          this._left.dispose();

          this._right.dispose();

          return this;
        }
      }]);

      return MidSideMerge;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=MidSideMerge.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/channel/MidSideSplit.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/MidSideSplit.js ***!
    \***********************************************************************/

  /*! exports provided: MidSideSplit */

  /***/
  function node_modulesToneBuildEsmComponentChannelMidSideSplitJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MidSideSplit", function () {
      return MidSideSplit;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _Split__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Split */
    "./node_modules/tone/build/esm/component/channel/Split.js");
    /* harmony import */


    var _signal_Add__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../signal/Add */
    "./node_modules/tone/build/esm/signal/Add.js");
    /* harmony import */


    var _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../signal/Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../signal/Subtract */
    "./node_modules/tone/build/esm/signal/Subtract.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /**
     * Mid/Side processing separates the the 'mid' signal (which comes out of both the left and the right channel)
     * and the 'side' (which only comes out of the the side channels).
     * ```
     * Mid = (Left+Right)/sqrt(2);   // obtain mid-signal from left and right
     * Side = (Left-Right)/sqrt(2);   // obtain side-signal from left and right
     * ```
     */


    var MidSideSplit = /*#__PURE__*/function (_core_context_ToneAud8) {
      _inherits(MidSideSplit, _core_context_ToneAud8);

      var _super40 = _createSuper(MidSideSplit);

      function MidSideSplit() {
        var _this51;

        _classCallCheck2(this, MidSideSplit);

        _this51 = _super40.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_5__["optionsFromArguments"])(MidSideSplit.getDefaults(), arguments));
        _this51.name = "MidSideSplit";
        _this51._split = _this51.input = new _Split__WEBPACK_IMPORTED_MODULE_1__["Split"]({
          channels: 2,
          context: _this51.context
        });
        _this51._midAdd = new _signal_Add__WEBPACK_IMPORTED_MODULE_2__["Add"]({
          context: _this51.context
        });
        _this51.mid = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__["Multiply"]({
          context: _this51.context,
          value: Math.SQRT1_2
        });
        _this51._sideSubtract = new _signal_Subtract__WEBPACK_IMPORTED_MODULE_4__["Subtract"]({
          context: _this51.context
        });
        _this51.side = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__["Multiply"]({
          context: _this51.context,
          value: Math.SQRT1_2
        });

        _this51._split.connect(_this51._midAdd, 0);

        _this51._split.connect(_this51._midAdd.addend, 1);

        _this51._split.connect(_this51._sideSubtract, 0);

        _this51._split.connect(_this51._sideSubtract.subtrahend, 1);

        _this51._midAdd.connect(_this51.mid);

        _this51._sideSubtract.connect(_this51.side);

        return _this51;
      }

      _createClass2(MidSideSplit, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(MidSideSplit.prototype), "dispose", this).call(this);

          this.mid.dispose();
          this.side.dispose();

          this._midAdd.dispose();

          this._sideSubtract.dispose();

          this._split.dispose();

          return this;
        }
      }]);

      return MidSideSplit;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=MidSideSplit.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/channel/MultibandSplit.js":
  /*!*************************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/MultibandSplit.js ***!
    \*************************************************************************/

  /*! exports provided: MultibandSplit */

  /***/
  function node_modulesToneBuildEsmComponentChannelMultibandSplitJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MultibandSplit", function () {
      return MultibandSplit;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _filter_Filter__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../filter/Filter */
    "./node_modules/tone/build/esm/component/filter/Filter.js");
    /**
     * Split the incoming signal into three bands (low, mid, high)
     * with two crossover frequency controls.
     * ```
     *            +----------------------+
     *          +-> input < lowFrequency +------------------> low
     *          | +----------------------+
     *          |
     *          | +--------------------------------------+
     * input ---+-> lowFrequency < input < highFrequency +--> mid
     *          | +--------------------------------------+
     *          |
     *          | +-----------------------+
     *          +-> highFrequency < input +-----------------> high
     *            +-----------------------+
     * ```
     * @category Component
     */


    var MultibandSplit = /*#__PURE__*/function (_core_context_ToneAud9) {
      _inherits(MultibandSplit, _core_context_ToneAud9);

      var _super41 = _createSuper(MultibandSplit);

      function MultibandSplit() {
        var _this52;

        _classCallCheck2(this, MultibandSplit);

        _this52 = _super41.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MultibandSplit.getDefaults(), arguments, ["lowFrequency", "highFrequency"]));
        _this52.name = "MultibandSplit";
        /**
         * the input
         */

        _this52.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this52.context
        });
        /**
         * no output node, use either low, mid or high outputs
         */

        _this52.output = undefined;
        /**
         * The low band.
         */

        _this52.low = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__["Filter"]({
          context: _this52.context,
          frequency: 0,
          type: "lowpass"
        });
        /**
         * the lower filter of the mid band
         */

        _this52._lowMidFilter = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__["Filter"]({
          context: _this52.context,
          frequency: 0,
          type: "highpass"
        });
        /**
         * The mid band output.
         */

        _this52.mid = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__["Filter"]({
          context: _this52.context,
          frequency: 0,
          type: "lowpass"
        });
        /**
         * The high band output.
         */

        _this52.high = new _filter_Filter__WEBPACK_IMPORTED_MODULE_5__["Filter"]({
          context: _this52.context,
          frequency: 0,
          type: "highpass"
        });
        _this52._internalChannels = [_this52.low, _this52.mid, _this52.high];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MultibandSplit.getDefaults(), arguments, ["lowFrequency", "highFrequency"]);
        _this52.lowFrequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
          context: _this52.context,
          units: "frequency",
          value: options.lowFrequency
        });
        _this52.highFrequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
          context: _this52.context,
          units: "frequency",
          value: options.highFrequency
        });
        _this52.Q = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
          context: _this52.context,
          units: "positive",
          value: options.Q
        });

        _this52.input.fan(_this52.low, _this52.high);

        _this52.input.chain(_this52._lowMidFilter, _this52.mid); // the frequency control signal


        _this52.lowFrequency.fan(_this52.low.frequency, _this52._lowMidFilter.frequency);

        _this52.highFrequency.fan(_this52.mid.frequency, _this52.high.frequency); // the Q value


        _this52.Q.connect(_this52.low.Q);

        _this52.Q.connect(_this52._lowMidFilter.Q);

        _this52.Q.connect(_this52.mid.Q);

        _this52.Q.connect(_this52.high.Q);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this52), ["high", "mid", "low", "highFrequency", "lowFrequency"]);
        return _this52;
      }

      _createClass2(MultibandSplit, [{
        key: "dispose",

        /**
         * Clean up.
         */
        value: function dispose() {
          _get(_getPrototypeOf(MultibandSplit.prototype), "dispose", this).call(this);

          Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["writable"])(this, ["high", "mid", "low", "highFrequency", "lowFrequency"]);
          this.low.dispose();

          this._lowMidFilter.dispose();

          this.mid.dispose();
          this.high.dispose();
          this.lowFrequency.dispose();
          this.highFrequency.dispose();
          this.Q.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            Q: 1,
            highFrequency: 2500,
            lowFrequency: 400
          });
        }
      }]);

      return MultibandSplit;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=MultibandSplit.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/channel/PanVol.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/PanVol.js ***!
    \*****************************************************************/

  /*! exports provided: PanVol */

  /***/
  function node_modulesToneBuildEsmComponentChannelPanVolJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PanVol", function () {
      return PanVol;
    });
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Panner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./Panner */
    "./node_modules/tone/build/esm/component/channel/Panner.js");
    /* harmony import */


    var _Volume__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./Volume */
    "./node_modules/tone/build/esm/component/channel/Volume.js");
    /**
     * PanVol is a Tone.Panner and Tone.Volume in one.
     * @example
     * // pan the incoming signal left and drop the volume
     * const panVol = new Tone.PanVol(-0.25, -12).toDestination();
     * const osc = new Tone.Oscillator().connect(panVol).start();
     * @category Component
     */


    var PanVol = /*#__PURE__*/function (_core_context_ToneAud10) {
      _inherits(PanVol, _core_context_ToneAud10);

      var _super42 = _createSuper(PanVol);

      function PanVol() {
        var _this53;

        _classCallCheck2(this, PanVol);

        _this53 = _super42.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(PanVol.getDefaults(), arguments, ["pan", "volume"]));
        _this53.name = "PanVol";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(PanVol.getDefaults(), arguments, ["pan", "volume"]);
        _this53._panner = _this53.input = new _Panner__WEBPACK_IMPORTED_MODULE_3__["Panner"]({
          context: _this53.context,
          pan: options.pan,
          channelCount: options.channelCount
        });
        _this53.pan = _this53._panner.pan;
        _this53._volume = _this53.output = new _Volume__WEBPACK_IMPORTED_MODULE_4__["Volume"]({
          context: _this53.context,
          volume: options.volume
        });
        _this53.volume = _this53._volume.volume; // connections

        _this53._panner.connect(_this53._volume);

        _this53.mute = options.mute;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_0__["readOnly"])(_assertThisInitialized(_this53), ["pan", "volume"]);
        return _this53;
      }

      _createClass2(PanVol, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(PanVol.prototype), "dispose", this).call(this);

          this._panner.dispose();

          this.pan.dispose();

          this._volume.dispose();

          this.volume.dispose();
          return this;
        }
      }, {
        key: "mute",

        /**
         * Mute/unmute the volume
         */
        get: function get() {
          return this._volume.mute;
        },
        set: function set(mute) {
          this._volume.mute = mute;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            mute: false,
            pan: 0,
            volume: 0,
            channelCount: 1
          });
        }
      }]);

      return PanVol;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=PanVol.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/channel/Panner.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/Panner.js ***!
    \*****************************************************************/

  /*! exports provided: Panner */

  /***/
  function node_modulesToneBuildEsmComponentChannelPannerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Panner", function () {
      return Panner;
    });
    /* harmony import */


    var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Panner is an equal power Left/Right Panner. It is a wrapper around the StereoPannerNode.
     * @offline 0.5 2
     * @example
     * // move the input signal from right to left
     * const panner = new Tone.Panner(1).toDestination();
     * panner.pan.rampTo(-1, 0.5);
     * const osc = new Tone.Oscillator(100).connect(panner).start();
     * @category Component
     */


    var Panner = /*#__PURE__*/function (_core_context_ToneAud11) {
      _inherits(Panner, _core_context_ToneAud11);

      var _super43 = _createSuper(Panner);

      function Panner() {
        var _this54;

        _classCallCheck2(this, Panner);

        _this54 = _super43.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Panner.getDefaults(), arguments, ["pan"])));
        _this54.name = "Panner";
        /**
         * the panner node
         */

        _this54._panner = _this54.context.createStereoPanner();
        _this54.input = _this54._panner;
        _this54.output = _this54._panner;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Panner.getDefaults(), arguments, ["pan"]);
        _this54.pan = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          context: _this54.context,
          param: _this54._panner.pan,
          value: options.pan,
          minValue: -1,
          maxValue: 1
        }); // this is necessary for standardized-audio-context
        // doesn't make any difference for the native AudioContext
        // https://github.com/chrisguttandin/standardized-audio-context/issues/647

        _this54._panner.channelCount = options.channelCount;
        _this54._panner.channelCountMode = "explicit"; // initial value

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this54), "pan");
        return _this54;
      }

      _createClass2(Panner, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Panner.prototype), "dispose", this).call(this);

          this._panner.disconnect();

          this.pan.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            pan: 0,
            channelCount: 1
          });
        }
      }]);

      return Panner;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=Panner.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/channel/Panner3D.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/Panner3D.js ***!
    \*******************************************************************/

  /*! exports provided: Panner3D */

  /***/
  function node_modulesToneBuildEsmComponentChannelPanner3DJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Panner3D", function () {
      return Panner3D;
    });
    /* harmony import */


    var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_context_Listener__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/context/Listener */
    "./node_modules/tone/build/esm/core/context/Listener.js");
    /**
     * A spatialized panner node which supports equalpower or HRTF panning.
     * @category Component
     */


    var Panner3D = /*#__PURE__*/function (_core_context_ToneAud12) {
      _inherits(Panner3D, _core_context_ToneAud12);

      var _super44 = _createSuper(Panner3D);

      function Panner3D() {
        var _this55;

        _classCallCheck2(this, Panner3D);

        _this55 = _super44.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Panner3D.getDefaults(), arguments, ["positionX", "positionY", "positionZ"]));
        _this55.name = "Panner3D";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Panner3D.getDefaults(), arguments, ["positionX", "positionY", "positionZ"]);
        _this55._panner = _this55.input = _this55.output = _this55.context.createPanner(); // set some values

        _this55.panningModel = options.panningModel;
        _this55.maxDistance = options.maxDistance;
        _this55.distanceModel = options.distanceModel;
        _this55.coneOuterGain = options.coneOuterGain;
        _this55.coneOuterAngle = options.coneOuterAngle;
        _this55.coneInnerAngle = options.coneInnerAngle;
        _this55.refDistance = options.refDistance;
        _this55.rolloffFactor = options.rolloffFactor;
        _this55.positionX = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          context: _this55.context,
          param: _this55._panner.positionX,
          value: options.positionX
        });
        _this55.positionY = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          context: _this55.context,
          param: _this55._panner.positionY,
          value: options.positionY
        });
        _this55.positionZ = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          context: _this55.context,
          param: _this55._panner.positionZ,
          value: options.positionZ
        });
        _this55.orientationX = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          context: _this55.context,
          param: _this55._panner.orientationX,
          value: options.orientationX
        });
        _this55.orientationY = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          context: _this55.context,
          param: _this55._panner.orientationY,
          value: options.orientationY
        });
        _this55.orientationZ = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          context: _this55.context,
          param: _this55._panner.orientationZ,
          value: options.orientationZ
        });
        return _this55;
      }

      _createClass2(Panner3D, [{
        key: "setPosition",

        /**
         * Sets the position of the source in 3d space.
         */
        value: function setPosition(x, y, z) {
          this.positionX.value = x;
          this.positionY.value = y;
          this.positionZ.value = z;
          return this;
        }
        /**
         * Sets the orientation of the source in 3d space.
         */

      }, {
        key: "setOrientation",
        value: function setOrientation(x, y, z) {
          this.orientationX.value = x;
          this.orientationY.value = y;
          this.orientationZ.value = z;
          return this;
        }
        /**
         * The panning model. Either "equalpower" or "HRTF".
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Panner3D.prototype), "dispose", this).call(this);

          this._panner.disconnect();

          this.orientationX.dispose();
          this.orientationY.dispose();
          this.orientationZ.dispose();
          this.positionX.dispose();
          this.positionY.dispose();
          this.positionZ.dispose();
          return this;
        }
      }, {
        key: "panningModel",
        get: function get() {
          return this._panner.panningModel;
        },
        set: function set(val) {
          this._panner.panningModel = val;
        }
        /**
         * A reference distance for reducing volume as source move further from the listener
         */

      }, {
        key: "refDistance",
        get: function get() {
          return this._panner.refDistance;
        },
        set: function set(val) {
          this._panner.refDistance = val;
        }
        /**
         * Describes how quickly the volume is reduced as source moves away from listener.
         */

      }, {
        key: "rolloffFactor",
        get: function get() {
          return this._panner.rolloffFactor;
        },
        set: function set(val) {
          this._panner.rolloffFactor = val;
        }
        /**
         * The distance model used by,  "linear", "inverse", or "exponential".
         */

      }, {
        key: "distanceModel",
        get: function get() {
          return this._panner.distanceModel;
        },
        set: function set(val) {
          this._panner.distanceModel = val;
        }
        /**
         * The angle, in degrees, inside of which there will be no volume reduction
         */

      }, {
        key: "coneInnerAngle",
        get: function get() {
          return this._panner.coneInnerAngle;
        },
        set: function set(val) {
          this._panner.coneInnerAngle = val;
        }
        /**
         * The angle, in degrees, outside of which the volume will be reduced
         * to a constant value of coneOuterGain
         */

      }, {
        key: "coneOuterAngle",
        get: function get() {
          return this._panner.coneOuterAngle;
        },
        set: function set(val) {
          this._panner.coneOuterAngle = val;
        }
        /**
         * The gain outside of the coneOuterAngle
         */

      }, {
        key: "coneOuterGain",
        get: function get() {
          return this._panner.coneOuterGain;
        },
        set: function set(val) {
          this._panner.coneOuterGain = val;
        }
        /**
         * The maximum distance between source and listener,
         * after which the volume will not be reduced any further.
         */

      }, {
        key: "maxDistance",
        get: function get() {
          return this._panner.maxDistance;
        },
        set: function set(val) {
          this._panner.maxDistance = val;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            coneInnerAngle: 360,
            coneOuterAngle: 360,
            coneOuterGain: 0,
            distanceModel: "inverse",
            maxDistance: 10000,
            orientationX: 0,
            orientationY: 0,
            orientationZ: 0,
            panningModel: "equalpower",
            positionX: 0,
            positionY: 0,
            positionZ: 0,
            refDistance: 1,
            rolloffFactor: 1
          });
        }
      }]);

      return Panner3D;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=Panner3D.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/channel/Recorder.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/Recorder.js ***!
    \*******************************************************************/

  /*! exports provided: Recorder */

  /***/
  function node_modulesToneBuildEsmComponentChannelRecorderJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Recorder", function () {
      return Recorder;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/context/AudioContext */
    "./node_modules/tone/build/esm/core/context/AudioContext.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /**
     * This is only natively supported in Chrome and Firefox.
     * For a cross-browser shim, install (audio-recorder-polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].
     * @example
     * const recorder = new Tone.Recorder();
     * const synth = new Tone.Synth().connect(recorder);
     * // start recording
     * recorder.start();
     * // generate a few notes
     * synth.triggerAttackRelease("C3", 0.5);
     * synth.triggerAttackRelease("C4", 0.5, "+1");
     * synth.triggerAttackRelease("C5", 0.5, "+2");
     * // wait for the notes to end and stop the recording
     * setTimeout(async () => {
     * 	// the recorded audio is returned as a blob
     * 	const recording = await recorder.stop();
     * 	// download the recording by creating an anchor element and blob url
     * 	const url = URL.createObjectURL(recording);
     * 	const anchor = document.createElement("a");
     * 	anchor.download = "recording.webm";
     * 	anchor.href = url;
     * 	anchor.click();
     * }, 4000);
     */


    var Recorder = /*#__PURE__*/function (_core_context_ToneAud13) {
      _inherits(Recorder, _core_context_ToneAud13);

      var _super45 = _createSuper(Recorder);

      function Recorder() {
        var _this56;

        _classCallCheck2(this, Recorder);

        _this56 = _super45.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_5__["optionsFromArguments"])(Recorder.getDefaults(), arguments, ["gain", "units"]));
        _this56.name = "Recorder";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_5__["optionsFromArguments"])(Recorder.getDefaults(), arguments, ["gain", "units"]);
        _this56.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this56.context
        });
        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["assert"])(Recorder.supported, "Media Recorder API is not available");
        _this56._stream = _this56.context.createMediaStreamDestination();

        _this56.input.connect(_this56._stream);

        _this56._recorder = new MediaRecorder(_this56._stream.stream, {
          mimeType: options.mimeType
        });
        return _this56;
      }

      _createClass2(Recorder, [{
        key: "start",
        value: function start() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee33() {
            var _this57 = this;

            var startPromise;
            return regeneratorRuntime.wrap(function _callee33$(_context33) {
              while (1) {
                switch (_context33.prev = _context33.next) {
                  case 0:
                    Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["assert"])(this.state !== "started", "Recorder is already started");
                    startPromise = new Promise(function (done) {
                      var handleStart = function handleStart() {
                        _this57._recorder.removeEventListener("start", handleStart, false);

                        done();
                      };

                      _this57._recorder.addEventListener("start", handleStart, false);
                    });

                    this._recorder.start();

                    _context33.next = 5;
                    return startPromise;

                  case 5:
                    return _context33.abrupt("return", _context33.sent);

                  case 6:
                  case "end":
                    return _context33.stop();
                }
              }
            }, _callee33, this);
          }));
        }
      }, {
        key: "stop",
        value: function stop() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee34() {
            var _this58 = this;

            var dataPromise;
            return regeneratorRuntime.wrap(function _callee34$(_context34) {
              while (1) {
                switch (_context34.prev = _context34.next) {
                  case 0:
                    Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["assert"])(this.state !== "stopped", "Recorder is not started");
                    dataPromise = new Promise(function (done) {
                      var handleData = function handleData(e) {
                        _this58._recorder.removeEventListener("dataavailable", handleData, false);

                        done(e.data);
                      };

                      _this58._recorder.addEventListener("dataavailable", handleData, false);
                    });

                    this._recorder.stop();

                    _context34.next = 5;
                    return dataPromise;

                  case 5:
                    return _context34.abrupt("return", _context34.sent);

                  case 6:
                  case "end":
                    return _context34.stop();
                }
              }
            }, _callee34, this);
          }));
        }
      }, {
        key: "pause",
        value: function pause() {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["assert"])(this.state === "started", "Recorder must be started");

          this._recorder.pause();

          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Recorder.prototype), "dispose", this).call(this);

          this.input.dispose();

          this._stream.disconnect();

          return this;
        }
      }, {
        key: "mimeType",

        /**
         * The mime type is the format that the audio is encoded in. For Chrome
         * that is typically webm encoded as "vorbis".
         */
        get: function get() {
          return this._recorder.mimeType;
        }
        /**
         * Test if your platform supports the Media Recorder API. If it's not available,
         * try installing this (polyfill)[https://www.npmjs.com/package/audio-recorder-polyfill].
         */

      }, {
        key: "state",

        /**
         * Get the playback state of the Recorder, either "started", "stopped" or "paused"
         */
        get: function get() {
          if (this._recorder.state === "inactive") {
            return "stopped";
          } else if (this._recorder.state === "paused") {
            return "paused";
          } else {
            return "started";
          }
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults();
        }
      }, {
        key: "supported",
        get: function get() {
          return _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_4__["theWindow"] !== null && Reflect.has(_core_context_AudioContext__WEBPACK_IMPORTED_MODULE_4__["theWindow"], "MediaRecorder");
        }
      }]);

      return Recorder;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=Recorder.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/channel/Solo.js":
  /*!***************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/Solo.js ***!
    \***************************************************************/

  /*! exports provided: Solo */

  /***/
  function node_modulesToneBuildEsmComponentChannelSoloJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Solo", function () {
      return Solo;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /**
     * Solo lets you isolate a specific audio stream. When an instance is set to `solo=true`,
     * it will mute all other instances of Solo.
     * @example
     * const soloA = new Tone.Solo().toDestination();
     * const oscA = new Tone.Oscillator("C4", "sawtooth").connect(soloA);
     * const soloB = new Tone.Solo().toDestination();
     * const oscB = new Tone.Oscillator("E4", "square").connect(soloB);
     * soloA.solo = true;
     * // no audio will pass through soloB
     * @category Component
     */


    var Solo = /*#__PURE__*/function (_core_context_ToneAud14) {
      _inherits(Solo, _core_context_ToneAud14);

      var _super46 = _createSuper(Solo);

      function Solo() {
        var _this59;

        _classCallCheck2(this, Solo);

        _this59 = _super46.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Solo.getDefaults(), arguments, ["solo"]));
        _this59.name = "Solo";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Solo.getDefaults(), arguments, ["solo"]);
        _this59.input = _this59.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this59.context
        });

        if (!Solo._allSolos.has(_this59.context)) {
          Solo._allSolos.set(_this59.context, new Set());
        }

        Solo._allSolos.get(_this59.context).add(_assertThisInitialized(_this59)); // set initially


        _this59.solo = options.solo;
        return _this59;
      }

      _createClass2(Solo, [{
        key: "_addSolo",

        /**
         * Add this to the soloed array
         */
        value: function _addSolo() {
          if (!Solo._soloed.has(this.context)) {
            Solo._soloed.set(this.context, new Set());
          }

          Solo._soloed.get(this.context).add(this);
        }
        /**
         * Remove this from the soloed array
         */

      }, {
        key: "_removeSolo",
        value: function _removeSolo() {
          if (Solo._soloed.has(this.context)) {
            Solo._soloed.get(this.context)["delete"](this);
          }
        }
        /**
         * Is this on the soloed array
         */

      }, {
        key: "_isSoloed",
        value: function _isSoloed() {
          return Solo._soloed.has(this.context) && Solo._soloed.get(this.context).has(this);
        }
        /**
         * Returns true if no one is soloed
         */

      }, {
        key: "_noSolos",
        value: function _noSolos() {
          // either does not have any soloed added
          return !Solo._soloed.has(this.context) || // or has a solo set but doesn't include any items
          Solo._soloed.has(this.context) && Solo._soloed.get(this.context).size === 0;
        }
        /**
         * Solo the current instance and unsolo all other instances.
         */

      }, {
        key: "_updateSolo",
        value: function _updateSolo() {
          if (this._isSoloed()) {
            this.input.gain.value = 1;
          } else if (this._noSolos()) {
            // no one is soloed
            this.input.gain.value = 1;
          } else {
            this.input.gain.value = 0;
          }
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Solo.prototype), "dispose", this).call(this);

          Solo._allSolos.get(this.context)["delete"](this);

          this._removeSolo();

          return this;
        }
      }, {
        key: "solo",

        /**
         * Isolates this instance and mutes all other instances of Solo.
         * Only one instance can be soloed at a time. A soloed
         * instance will report `solo=false` when another instance is soloed.
         */
        get: function get() {
          return this._isSoloed();
        },
        set: function set(solo) {
          if (solo) {
            this._addSolo();
          } else {
            this._removeSolo();
          }

          Solo._allSolos.get(this.context).forEach(function (instance) {
            return instance._updateSolo();
          });
        }
        /**
         * If the current instance is muted, i.e. another instance is soloed
         */

      }, {
        key: "muted",
        get: function get() {
          return this.input.gain.value === 0;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            solo: false
          });
        }
      }]);

      return Solo;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);
    /**
     * Hold all of the solo'ed tracks belonging to a specific context
     */


    Solo._allSolos = new Map();
    /**
     * Hold the currently solo'ed instance(s)
     */

    Solo._soloed = new Map(); //# sourceMappingURL=Solo.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/component/channel/Split.js":
  /*!****************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/Split.js ***!
    \****************************************************************/

  /*! exports provided: Split */

  /***/
  function node_modulesToneBuildEsmComponentChannelSplitJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Split", function () {
      return Split;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /**
     * Split splits an incoming signal into the number of given channels.
     *
     * @example
     * const split = new Tone.Split();
     * // stereoSignal.connect(split);
     * @category Component
     */


    var Split = /*#__PURE__*/function (_core_context_ToneAud15) {
      _inherits(Split, _core_context_ToneAud15);

      var _super47 = _createSuper(Split);

      function Split() {
        var _this60;

        _classCallCheck2(this, Split);

        _this60 = _super47.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Split.getDefaults(), arguments, ["channels"]));
        _this60.name = "Split";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Split.getDefaults(), arguments, ["channels"]);
        _this60._splitter = _this60.input = _this60.output = _this60.context.createChannelSplitter(options.channels);
        _this60._internalChannels = [_this60._splitter];
        return _this60;
      }

      _createClass2(Split, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Split.prototype), "dispose", this).call(this);

          this._splitter.disconnect();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            channels: 2
          });
        }
      }]);

      return Split;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=Split.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/channel/Volume.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/channel/Volume.js ***!
    \*****************************************************************/

  /*! exports provided: Volume */

  /***/
  function node_modulesToneBuildEsmComponentChannelVolumeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Volume", function () {
      return Volume;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Volume is a simple volume node, useful for creating a volume fader.
     *
     * @example
     * const vol = new Tone.Volume(-12).toDestination();
     * const osc = new Tone.Oscillator().connect(vol).start();
     * @category Component
     */


    var Volume = /*#__PURE__*/function (_core_context_ToneAud16) {
      _inherits(Volume, _core_context_ToneAud16);

      var _super48 = _createSuper(Volume);

      function Volume() {
        var _this61;

        _classCallCheck2(this, Volume);

        _this61 = _super48.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Volume.getDefaults(), arguments, ["volume"]));
        _this61.name = "Volume";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Volume.getDefaults(), arguments, ["volume"]);
        _this61.input = _this61.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this61.context,
          gain: options.volume,
          units: "decibels"
        });
        _this61.volume = _this61.output.gain;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this61), "volume");
        _this61._unmutedVolume = options.volume; // set the mute initially

        _this61.mute = options.mute;
        return _this61;
      }

      _createClass2(Volume, [{
        key: "dispose",

        /**
         * clean up
         */
        value: function dispose() {
          _get(_getPrototypeOf(Volume.prototype), "dispose", this).call(this);

          this.input.dispose();
          this.volume.dispose();
          return this;
        }
      }, {
        key: "mute",

        /**
         * Mute the output.
         * @example
         * const vol = new Tone.Volume(-12).toDestination();
         * const osc = new Tone.Oscillator().connect(vol).start();
         * // mute the output
         * vol.mute = true;
         */
        get: function get() {
          return this.volume.value === -Infinity;
        },
        set: function set(mute) {
          if (!this.mute && mute) {
            this._unmutedVolume = this.volume.value; // maybe it should ramp here?

            this.volume.value = -Infinity;
          } else if (this.mute && !mute) {
            this.volume.value = this._unmutedVolume;
          }
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            mute: false,
            volume: 0
          });
        }
      }]);

      return Volume;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=Volume.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/dynamics/Compressor.js":
  /*!**********************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/dynamics/Compressor.js ***!
    \**********************************************************************/

  /*! exports provided: Compressor */

  /***/
  function node_modulesToneBuildEsmComponentDynamicsCompressorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Compressor", function () {
      return Compressor;
    });
    /* harmony import */


    var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Compressor is a thin wrapper around the Web Audio
     * [DynamicsCompressorNode](http://webaudio.github.io/web-audio-api/#the-dynamicscompressornode-interface).
     * Compression reduces the volume of loud sounds or amplifies quiet sounds
     * by narrowing or "compressing" an audio signal's dynamic range.
     * Read more on [Wikipedia](https://en.wikipedia.org/wiki/Dynamic_range_compression).
     * @example
     * const comp = new Tone.Compressor(-30, 3);
     * @category Component
     */


    var Compressor = /*#__PURE__*/function (_core_context_ToneAud17) {
      _inherits(Compressor, _core_context_ToneAud17);

      var _super49 = _createSuper(Compressor);

      function Compressor() {
        var _this62;

        _classCallCheck2(this, Compressor);

        _this62 = _super49.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Compressor.getDefaults(), arguments, ["threshold", "ratio"]));
        _this62.name = "Compressor";
        /**
         * the compressor node
         */

        _this62._compressor = _this62.context.createDynamicsCompressor();
        _this62.input = _this62._compressor;
        _this62.output = _this62._compressor;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Compressor.getDefaults(), arguments, ["threshold", "ratio"]);
        _this62.threshold = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          minValue: _this62._compressor.threshold.minValue,
          maxValue: _this62._compressor.threshold.maxValue,
          context: _this62.context,
          convert: false,
          param: _this62._compressor.threshold,
          units: "decibels",
          value: options.threshold
        });
        _this62.attack = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          minValue: _this62._compressor.attack.minValue,
          maxValue: _this62._compressor.attack.maxValue,
          context: _this62.context,
          param: _this62._compressor.attack,
          units: "time",
          value: options.attack
        });
        _this62.release = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          minValue: _this62._compressor.release.minValue,
          maxValue: _this62._compressor.release.maxValue,
          context: _this62.context,
          param: _this62._compressor.release,
          units: "time",
          value: options.release
        });
        _this62.knee = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          minValue: _this62._compressor.knee.minValue,
          maxValue: _this62._compressor.knee.maxValue,
          context: _this62.context,
          convert: false,
          param: _this62._compressor.knee,
          units: "decibels",
          value: options.knee
        });
        _this62.ratio = new _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          minValue: _this62._compressor.ratio.minValue,
          maxValue: _this62._compressor.ratio.maxValue,
          context: _this62.context,
          convert: false,
          param: _this62._compressor.ratio,
          units: "positive",
          value: options.ratio
        }); // set the defaults

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this62), ["knee", "release", "attack", "ratio", "threshold"]);
        return _this62;
      }

      _createClass2(Compressor, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Compressor.prototype), "dispose", this).call(this);

          this._compressor.disconnect();

          this.attack.dispose();
          this.release.dispose();
          this.threshold.dispose();
          this.ratio.dispose();
          this.knee.dispose();
          return this;
        }
      }, {
        key: "reduction",

        /**
         * A read-only decibel value for metering purposes, representing the current amount of gain
         * reduction that the compressor is applying to the signal. If fed no signal the value will be 0 (no gain reduction).
         */
        get: function get() {
          return this._compressor.reduction;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            attack: 0.003,
            knee: 30,
            ratio: 12,
            release: 0.25,
            threshold: -24
          });
        }
      }]);

      return Compressor;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=Compressor.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/dynamics/Gate.js":
  /*!****************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/dynamics/Gate.js ***!
    \****************************************************************/

  /*! exports provided: Gate */

  /***/
  function node_modulesToneBuildEsmComponentDynamicsGateJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Gate", function () {
      return Gate;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _signal_GreaterThan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../signal/GreaterThan */
    "./node_modules/tone/build/esm/signal/GreaterThan.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _analysis_Follower__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../analysis/Follower */
    "./node_modules/tone/build/esm/component/analysis/Follower.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/type/Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /**
     * Gate only passes a signal through when the incoming
     * signal exceeds a specified threshold. It uses [[Follower]] to follow the ampltiude
     * of the incoming signal and compares it to the [[threshold]] value using [[GreaterThan]].
     *
     * @example
     * const gate = new Tone.Gate(-30, 0.2).toDestination();
     * const mic = new Tone.UserMedia().connect(gate);
     * // the gate will only pass through the incoming
     * // signal when it's louder than -30db
     */


    var Gate = /*#__PURE__*/function (_core_context_ToneAud18) {
      _inherits(Gate, _core_context_ToneAud18);

      var _super50 = _createSuper(Gate);

      function Gate() {
        var _this63;

        _classCallCheck2(this, Gate);

        _this63 = _super50.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Gate.getDefaults(), arguments, ["threshold", "smoothing"])));
        _this63.name = "Gate";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Gate.getDefaults(), arguments, ["threshold", "smoothing"]);
        _this63._follower = new _analysis_Follower__WEBPACK_IMPORTED_MODULE_3__["Follower"]({
          context: _this63.context,
          smoothing: options.smoothing
        });
        _this63._gt = new _signal_GreaterThan__WEBPACK_IMPORTED_MODULE_1__["GreaterThan"]({
          context: _this63.context,
          value: Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__["dbToGain"])(options.threshold)
        });
        _this63.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this63.context
        });
        _this63._gate = _this63.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this63.context
        }); // connections

        _this63.input.connect(_this63._gate); // the control signal


        _this63.input.chain(_this63._follower, _this63._gt, _this63._gate.gain);

        return _this63;
      }

      _createClass2(Gate, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Gate.prototype), "dispose", this).call(this);

          this.input.dispose();

          this._follower.dispose();

          this._gt.dispose();

          this._gate.dispose();

          return this;
        }
      }, {
        key: "threshold",

        /**
         * The threshold of the gate in decibels
         */
        get: function get() {
          return Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__["gainToDb"])(this._gt.value);
        },
        set: function set(thresh) {
          this._gt.value = Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__["dbToGain"])(thresh);
        }
        /**
         * The attack/decay speed of the gate. See [[Follower.smoothing]]
         */

      }, {
        key: "smoothing",
        get: function get() {
          return this._follower.smoothing;
        },
        set: function set(smoothingTime) {
          this._follower.smoothing = smoothingTime;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            smoothing: 0.1,
            threshold: -40
          });
        }
      }]);

      return Gate;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=Gate.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/dynamics/Limiter.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/dynamics/Limiter.js ***!
    \*******************************************************************/

  /*! exports provided: Limiter */

  /***/
  function node_modulesToneBuildEsmComponentDynamicsLimiterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Limiter", function () {
      return Limiter;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Compressor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Compressor */
    "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");

    ;
    /**
     * Limiter will limit the loudness of an incoming signal.
     * It is composed of a [[Compressor]] with a fast attack
     * and release and max ratio. Limiters are commonly used to safeguard against
     * signal clipping. Unlike a compressor, limiters do not provide
     * smooth gain reduction and almost completely prevent
     * additional gain above the threshold.
     *
     * @example
     * const limiter = new Tone.Limiter(-20).toDestination();
     * const oscillator = new Tone.Oscillator().connect(limiter);
     * oscillator.start();
     */

    var Limiter = /*#__PURE__*/function (_core_context_ToneAud19) {
      _inherits(Limiter, _core_context_ToneAud19);

      var _super51 = _createSuper(Limiter);

      function Limiter() {
        var _this64;

        _classCallCheck2(this, Limiter);

        _this64 = _super51.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Limiter.getDefaults(), arguments, ["threshold"])));
        _this64.name = "Limiter";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Limiter.getDefaults(), arguments, ["threshold"]);
        _this64._compressor = _this64.input = _this64.output = new _Compressor__WEBPACK_IMPORTED_MODULE_2__["Compressor"]({
          context: _this64.context,
          ratio: 20,
          attack: 0,
          release: 0,
          threshold: options.threshold
        });
        _this64.threshold = _this64._compressor.threshold;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this64), "threshold");
        return _this64;
      }

      _createClass2(Limiter, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Limiter.prototype), "dispose", this).call(this);

          this._compressor.dispose();

          this.threshold.dispose();
          return this;
        }
      }, {
        key: "reduction",

        /**
         * A read-only decibel value for metering purposes, representing the current amount of gain
         * reduction that the compressor is applying to the signal.
         */
        get: function get() {
          return this._compressor.reduction;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            threshold: -12
          });
        }
      }]);

      return Limiter;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=Limiter.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js":
  /*!*****************************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js ***!
    \*****************************************************************************/

  /*! exports provided: MidSideCompressor */

  /***/
  function node_modulesToneBuildEsmComponentDynamicsMidSideCompressorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MidSideCompressor", function () {
      return MidSideCompressor;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _Compressor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Compressor */
    "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../channel/MidSideSplit */
    "./node_modules/tone/build/esm/component/channel/MidSideSplit.js");
    /* harmony import */


    var _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../channel/MidSideMerge */
    "./node_modules/tone/build/esm/component/channel/MidSideMerge.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * MidSideCompressor applies two different compressors to the [[mid]]
     * and [[side]] signal components of the input. See [[MidSideSplit]] and [[MidSideMerge]].
     */


    var MidSideCompressor = /*#__PURE__*/function (_core_context_ToneAud20) {
      _inherits(MidSideCompressor, _core_context_ToneAud20);

      var _super52 = _createSuper(MidSideCompressor);

      function MidSideCompressor() {
        var _this65;

        _classCallCheck2(this, MidSideCompressor);

        _this65 = _super52.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MidSideCompressor.getDefaults(), arguments)));
        _this65.name = "MidSideCompressor";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MidSideCompressor.getDefaults(), arguments);
        _this65._midSideSplit = _this65.input = new _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_3__["MidSideSplit"]({
          context: _this65.context
        });
        _this65._midSideMerge = _this65.output = new _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_4__["MidSideMerge"]({
          context: _this65.context
        });
        _this65.mid = new _Compressor__WEBPACK_IMPORTED_MODULE_1__["Compressor"](Object.assign(options.mid, {
          context: _this65.context
        }));
        _this65.side = new _Compressor__WEBPACK_IMPORTED_MODULE_1__["Compressor"](Object.assign(options.side, {
          context: _this65.context
        }));

        _this65._midSideSplit.mid.chain(_this65.mid, _this65._midSideMerge.mid);

        _this65._midSideSplit.side.chain(_this65.side, _this65._midSideMerge.side);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this65), ["mid", "side"]);
        return _this65;
      }

      _createClass2(MidSideCompressor, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(MidSideCompressor.prototype), "dispose", this).call(this);

          this.mid.dispose();
          this.side.dispose();

          this._midSideSplit.dispose();

          this._midSideMerge.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            mid: {
              ratio: 3,
              threshold: -24,
              release: 0.03,
              attack: 0.02,
              knee: 16
            },
            side: {
              ratio: 6,
              threshold: -30,
              release: 0.25,
              attack: 0.03,
              knee: 10
            }
          });
        }
      }]);

      return MidSideCompressor;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=MidSideCompressor.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js":
  /*!*******************************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js ***!
    \*******************************************************************************/

  /*! exports provided: MultibandCompressor */

  /***/
  function node_modulesToneBuildEsmComponentDynamicsMultibandCompressorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MultibandCompressor", function () {
      return MultibandCompressor;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _Compressor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Compressor */
    "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../channel/MultibandSplit */
    "./node_modules/tone/build/esm/component/channel/MultibandSplit.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /**
     * A compressor with separate controls over low/mid/high dynamics. See [[Compressor]] and [[MultibandSplit]]
     *
     * @example
     * const multiband = new Tone.MultibandCompressor({
     * 	lowFrequency: 200,
     * 	highFrequency: 1300,
     * 	low: {
     * 		threshold: -12
     * 	}
     * });
     */


    var MultibandCompressor = /*#__PURE__*/function (_core_context_ToneAud21) {
      _inherits(MultibandCompressor, _core_context_ToneAud21);

      var _super53 = _createSuper(MultibandCompressor);

      function MultibandCompressor() {
        var _this66;

        _classCallCheck2(this, MultibandCompressor);

        _this66 = _super53.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MultibandCompressor.getDefaults(), arguments)));
        _this66.name = "MultibandCompressor";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MultibandCompressor.getDefaults(), arguments);
        _this66._splitter = _this66.input = new _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__["MultibandSplit"]({
          context: _this66.context,
          lowFrequency: options.lowFrequency,
          highFrequency: options.highFrequency
        });
        _this66.lowFrequency = _this66._splitter.lowFrequency;
        _this66.highFrequency = _this66._splitter.highFrequency;
        _this66.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
          context: _this66.context
        });
        _this66.low = new _Compressor__WEBPACK_IMPORTED_MODULE_1__["Compressor"](Object.assign(options.low, {
          context: _this66.context
        }));
        _this66.mid = new _Compressor__WEBPACK_IMPORTED_MODULE_1__["Compressor"](Object.assign(options.mid, {
          context: _this66.context
        }));
        _this66.high = new _Compressor__WEBPACK_IMPORTED_MODULE_1__["Compressor"](Object.assign(options.high, {
          context: _this66.context
        })); // connect the compressor

        _this66._splitter.low.chain(_this66.low, _this66.output);

        _this66._splitter.mid.chain(_this66.mid, _this66.output);

        _this66._splitter.high.chain(_this66.high, _this66.output);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this66), ["high", "mid", "low", "highFrequency", "lowFrequency"]);
        return _this66;
      }

      _createClass2(MultibandCompressor, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(MultibandCompressor.prototype), "dispose", this).call(this);

          this._splitter.dispose();

          this.low.dispose();
          this.mid.dispose();
          this.high.dispose();
          this.output.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            lowFrequency: 250,
            highFrequency: 2000,
            low: {
              ratio: 6,
              threshold: -30,
              release: 0.25,
              attack: 0.03,
              knee: 10
            },
            mid: {
              ratio: 3,
              threshold: -24,
              release: 0.03,
              attack: 0.02,
              knee: 16
            },
            high: {
              ratio: 3,
              threshold: -24,
              release: 0.03,
              attack: 0.02,
              knee: 16
            }
          });
        }
      }]);

      return MultibandCompressor;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=MultibandCompressor.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js":
  /*!*****************************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js ***!
    \*****************************************************************************/

  /*! exports provided: AmplitudeEnvelope */

  /***/
  function node_modulesToneBuildEsmComponentEnvelopeAmplitudeEnvelopeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AmplitudeEnvelope", function () {
      return AmplitudeEnvelope;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Envelope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Envelope */
    "./node_modules/tone/build/esm/component/envelope/Envelope.js");
    /**
     * AmplitudeEnvelope is a Tone.Envelope connected to a gain node.
     * Unlike Tone.Envelope, which outputs the envelope's value, AmplitudeEnvelope accepts
     * an audio signal as the input and will apply the envelope to the amplitude
     * of the signal.
     * Read more about ADSR Envelopes on [Wikipedia](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope).
     *
     * @offline 1.5 1
     * @example
     * const ampEnv = new Tone.AmplitudeEnvelope({
     * 	attack: 0.1,
     * 	decay: 0.2,
     * 	sustain: 1.0,
     * 	release: 0.8
     * }).toDestination();
     * // create an oscillator and connect it
     * const osc = new Tone.Oscillator().connect(ampEnv).start();
     * // trigger the envelopes attack and release "8t" apart
     * ampEnv.triggerAttackRelease("8t");
     * @category Component
     */


    var AmplitudeEnvelope = /*#__PURE__*/function (_Envelope__WEBPACK_IM) {
      _inherits(AmplitudeEnvelope, _Envelope__WEBPACK_IM);

      var _super54 = _createSuper(AmplitudeEnvelope);

      function AmplitudeEnvelope() {
        var _this67;

        _classCallCheck2(this, AmplitudeEnvelope);

        _this67 = _super54.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AmplitudeEnvelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]));
        _this67.name = "AmplitudeEnvelope";
        _this67._gainNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this67.context,
          gain: 0
        });
        _this67.output = _this67._gainNode;
        _this67.input = _this67._gainNode;

        _this67._sig.connect(_this67._gainNode.gain);

        _this67.output = _this67._gainNode;
        _this67.input = _this67._gainNode;
        return _this67;
      }
      /**
       * Clean up
       */


      _createClass2(AmplitudeEnvelope, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(AmplitudeEnvelope.prototype), "dispose", this).call(this);

          this._gainNode.dispose();

          return this;
        }
      }]);

      return AmplitudeEnvelope;
    }(_Envelope__WEBPACK_IMPORTED_MODULE_2__["Envelope"]); //# sourceMappingURL=AmplitudeEnvelope.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/envelope/Envelope.js":
  /*!********************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/envelope/Envelope.js ***!
    \********************************************************************/

  /*! exports provided: Envelope */

  /***/
  function node_modulesToneBuildEsmComponentEnvelopeEnvelopeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Envelope", function () {
      return Envelope;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/context/OfflineContext */
    "./node_modules/tone/build/esm/core/context/OfflineContext.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../core/util/Decorator */
    "./node_modules/tone/build/esm/core/util/Decorator.js");
    /**
     * Envelope is an [ADSR](https://en.wikipedia.org/wiki/Synthesizer#ADSR_envelope)
     * envelope generator. Envelope outputs a signal which
     * can be connected to an AudioParam or Tone.Signal.
     * ```
     *           /\
     *          /  \
     *         /    \
     *        /      \
     *       /        \___________
     *      /                     \
     *     /                       \
     *    /                         \
     *   /                           \
     * ```
     * @offline 1.5 1
     * @example
     * const env = new Tone.Envelope({
     * 	attack: 0.1,
     * 	decay: 0.2,
     * 	sustain: 0.5,
     * 	release: 0.8,
     * }).toDestination();
     * env.triggerAttackRelease(0.5);
     * @category Component
     */


    var Envelope = /*#__PURE__*/function (_core_context_ToneAud22) {
      _inherits(Envelope, _core_context_ToneAud22);

      var _super55 = _createSuper(Envelope);

      function Envelope() {
        var _this68;

        _classCallCheck2(this, Envelope);

        _this68 = _super55.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Envelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]));
        _this68.name = "Envelope";
        /**
         * the signal which is output.
         */

        _this68._sig = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
          context: _this68.context,
          value: 0
        });
        /**
         * The output signal of the envelope
         */

        _this68.output = _this68._sig;
        /**
         * Envelope has no input
         */

        _this68.input = undefined;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Envelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]);
        _this68.attack = options.attack;
        _this68.decay = options.decay;
        _this68.sustain = options.sustain;
        _this68.release = options.release;
        _this68.attackCurve = options.attackCurve;
        _this68.releaseCurve = options.releaseCurve;
        _this68.decayCurve = options.decayCurve;
        return _this68;
      }

      _createClass2(Envelope, [{
        key: "_getCurve",

        /**
         * Get the curve
         * @param  curve
         * @param  direction  In/Out
         * @return The curve name
         */
        value: function _getCurve(curve, direction) {
          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isString"])(curve)) {
            return curve;
          } else {
            // look up the name in the curves array
            var curveName;

            for (curveName in EnvelopeCurves) {
              if (EnvelopeCurves[curveName][direction] === curve) {
                return curveName;
              }
            } // return the custom curve


            return curve;
          }
        }
        /**
         * Assign a the curve to the given name using the direction
         * @param  name
         * @param  direction In/Out
         * @param  curve
         */

      }, {
        key: "_setCurve",
        value: function _setCurve(name, direction, curve) {
          // check if it's a valid type
          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isString"])(curve) && Reflect.has(EnvelopeCurves, curve)) {
            var curveDef = EnvelopeCurves[curve];

            if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isObject"])(curveDef)) {
              if (name !== "_decayCurve") {
                this[name] = curveDef[direction];
              }
            } else {
              this[name] = curveDef;
            }
          } else if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isArray"])(curve) && name !== "_decayCurve") {
            this[name] = curve;
          } else {
            throw new Error("Envelope: invalid curve: " + curve);
          }
        }
        /**
         * The shape of the attack.
         * Can be any of these strings:
         * * "linear"
         * * "exponential"
         * * "sine"
         * * "cosine"
         * * "bounce"
         * * "ripple"
         * * "step"
         *
         * Can also be an array which describes the curve. Values
         * in the array are evenly subdivided and linearly
         * interpolated over the duration of the attack.
         * @offline 1 1
         * @example
         * const env = new Tone.Envelope(0.4).toDestination();
         * env.attackCurve = "linear";
         * env.triggerAttack();
         */

      }, {
        key: "triggerAttack",

        /**
         * Trigger the attack/decay portion of the ADSR envelope.
         * @param  time When the attack should start.
         * @param velocity The velocity of the envelope scales the vales.
         *                             number between 0-1
         * @example
         * const env = new Tone.AmplitudeEnvelope().toDestination();
         * const osc = new Tone.Oscillator().connect(env).start();
         * // trigger the attack 0.5 seconds from now with a velocity of 0.2
         * env.triggerAttack("+0.5", 0.2);
         */
        value: function triggerAttack(time) {
          var velocity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
          this.log("triggerAttack", time, velocity);
          time = this.toSeconds(time);
          var originalAttack = this.toSeconds(this.attack);
          var attack = originalAttack;
          var decay = this.toSeconds(this.decay); // check if it's not a complete attack

          var currentValue = this.getValueAtTime(time);

          if (currentValue > 0) {
            // subtract the current value from the attack time
            var attackRate = 1 / attack;
            var remainingDistance = 1 - currentValue; // the attack is now the remaining time

            attack = remainingDistance / attackRate;
          } // attack


          if (attack < this.sampleTime) {
            this._sig.cancelScheduledValues(time); // case where the attack time is 0 should set instantly


            this._sig.setValueAtTime(velocity, time);
          } else if (this._attackCurve === "linear") {
            this._sig.linearRampTo(velocity, attack, time);
          } else if (this._attackCurve === "exponential") {
            this._sig.targetRampTo(velocity, attack, time);
          } else {
            this._sig.cancelAndHoldAtTime(time);

            var curve = this._attackCurve; // find the starting position in the curve

            for (var i = 1; i < curve.length; i++) {
              // the starting index is between the two values
              if (curve[i - 1] <= currentValue && currentValue <= curve[i]) {
                curve = this._attackCurve.slice(i); // the first index is the current value

                curve[0] = currentValue;
                break;
              }
            }

            this._sig.setValueCurveAtTime(curve, time, attack, velocity);
          } // decay


          if (decay && this.sustain < 1) {
            var decayValue = velocity * this.sustain;
            var decayStart = time + attack;
            this.log("decay", decayStart);

            if (this._decayCurve === "linear") {
              this._sig.linearRampToValueAtTime(decayValue, decay + decayStart);
            } else {
              this._sig.exponentialApproachValueAtTime(decayValue, decayStart, decay);
            }
          }

          return this;
        }
        /**
         * Triggers the release of the envelope.
         * @param  time When the release portion of the envelope should start.
         * @example
         * const env = new Tone.AmplitudeEnvelope().toDestination();
         * const osc = new Tone.Oscillator({
         * 	type: "sawtooth"
         * }).connect(env).start();
         * env.triggerAttack();
         * // trigger the release half a second after the attack
         * env.triggerRelease("+0.5");
         */

      }, {
        key: "triggerRelease",
        value: function triggerRelease(time) {
          this.log("triggerRelease", time);
          time = this.toSeconds(time);
          var currentValue = this.getValueAtTime(time);

          if (currentValue > 0) {
            var release = this.toSeconds(this.release);

            if (release < this.sampleTime) {
              this._sig.setValueAtTime(0, time);
            } else if (this._releaseCurve === "linear") {
              this._sig.linearRampTo(0, release, time);
            } else if (this._releaseCurve === "exponential") {
              this._sig.targetRampTo(0, release, time);
            } else {
              Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isArray"])(this._releaseCurve), "releaseCurve must be either 'linear', 'exponential' or an array");

              this._sig.cancelAndHoldAtTime(time);

              this._sig.setValueCurveAtTime(this._releaseCurve, time, release, currentValue);
            }
          }

          return this;
        }
        /**
         * Get the scheduled value at the given time. This will
         * return the unconverted (raw) value.
         * @example
         * const env = new Tone.Envelope(0.5, 1, 0.4, 2);
         * env.triggerAttackRelease(2);
         * setInterval(() => console.log(env.getValueAtTime), 100);
         */

      }, {
        key: "getValueAtTime",
        value: function getValueAtTime(time) {
          return this._sig.getValueAtTime(time);
        }
        /**
         * triggerAttackRelease is shorthand for triggerAttack, then waiting
         * some duration, then triggerRelease.
         * @param duration The duration of the sustain.
         * @param time When the attack should be triggered.
         * @param velocity The velocity of the envelope.
         * @example
         * const env = new Tone.AmplitudeEnvelope().toDestination();
         * const osc = new Tone.Oscillator().connect(env).start();
         * // trigger the release 0.5 seconds after the attack
         * env.triggerAttackRelease(0.5);
         */

      }, {
        key: "triggerAttackRelease",
        value: function triggerAttackRelease(duration, time) {
          var velocity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
          time = this.toSeconds(time);
          this.triggerAttack(time, velocity);
          this.triggerRelease(time + this.toSeconds(duration));
          return this;
        }
        /**
         * Cancels all scheduled envelope changes after the given time.
         */

      }, {
        key: "cancel",
        value: function cancel(after) {
          this._sig.cancelScheduledValues(this.toSeconds(after));

          return this;
        }
        /**
         * Connect the envelope to a destination node.
         */

      }, {
        key: "connect",
        value: function connect(destination) {
          var outputNumber = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var inputNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
          Object(_signal_Signal__WEBPACK_IMPORTED_MODULE_4__["connectSignal"])(this, destination, outputNumber, inputNumber);
          return this;
        }
        /**
         * Render the envelope curve to an array of the given length.
         * Good for visualizing the envelope curve. Rescales the duration of the
         * envelope to fit the length.
         */

      }, {
        key: "asArray",
        value: function asArray() {
          var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee35() {
            var duration, context, attackPortion, envelopeDuration, sustainTime, totalDuration, clone, buffer;
            return regeneratorRuntime.wrap(function _callee35$(_context35) {
              while (1) {
                switch (_context35.prev = _context35.next) {
                  case 0:
                    duration = length / this.context.sampleRate;
                    context = new _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_5__["OfflineContext"](1, duration, this.context.sampleRate); // normalize the ADSR for the given duration with 20% sustain time

                    attackPortion = this.toSeconds(this.attack) + this.toSeconds(this.decay);
                    envelopeDuration = attackPortion + this.toSeconds(this.release);
                    sustainTime = envelopeDuration * 0.1;
                    totalDuration = envelopeDuration + sustainTime; // @ts-ignore

                    clone = new this.constructor(Object.assign(this.get(), {
                      attack: duration * this.toSeconds(this.attack) / totalDuration,
                      decay: duration * this.toSeconds(this.decay) / totalDuration,
                      release: duration * this.toSeconds(this.release) / totalDuration,
                      context: context
                    }));

                    clone._sig.toDestination();

                    clone.triggerAttackRelease(duration * (attackPortion + sustainTime) / totalDuration, 0);
                    _context35.next = 11;
                    return context.render();

                  case 11:
                    buffer = _context35.sent;
                    return _context35.abrupt("return", buffer.getChannelData(0));

                  case 13:
                  case "end":
                    return _context35.stop();
                }
              }
            }, _callee35, this);
          }));
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Envelope.prototype), "dispose", this).call(this);

          this._sig.dispose();

          return this;
        }
      }, {
        key: "value",

        /**
         * Read the current value of the envelope. Useful for
         * synchronizing visual output to the envelope.
         */
        get: function get() {
          return this.getValueAtTime(this.now());
        }
      }, {
        key: "attackCurve",
        get: function get() {
          return this._getCurve(this._attackCurve, "In");
        },
        set: function set(curve) {
          this._setCurve("_attackCurve", "In", curve);
        }
        /**
         * The shape of the release. See the attack curve types.
         * @offline 1 1
         * @example
         * const env = new Tone.Envelope({
         * 	release: 0.8
         * }).toDestination();
         * env.triggerAttack();
         * // release curve could also be defined by an array
         * env.releaseCurve = [1, 0.3, 0.4, 0.2, 0.7, 0];
         * env.triggerRelease(0.2);
         */

      }, {
        key: "releaseCurve",
        get: function get() {
          return this._getCurve(this._releaseCurve, "Out");
        },
        set: function set(curve) {
          this._setCurve("_releaseCurve", "Out", curve);
        }
        /**
         * The shape of the decay either "linear" or "exponential"
         * @offline 1 1
         * @example
         * const env = new Tone.Envelope({
         * 	sustain: 0.1,
         * 	decay: 0.5
         * }).toDestination();
         * env.decayCurve = "linear";
         * env.triggerAttack();
         */

      }, {
        key: "decayCurve",
        get: function get() {
          return this._decayCurve;
        },
        set: function set(curve) {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__["assert"])(["linear", "exponential"].some(function (c) {
            return c === curve;
          }), "Invalid envelope curve: ".concat(curve));
          this._decayCurve = curve;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            attack: 0.01,
            attackCurve: "linear",
            decay: 0.1,
            decayCurve: "exponential",
            release: 1,
            releaseCurve: "exponential",
            sustain: 0.5
          });
        }
      }]);

      return Envelope;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_7__["timeRange"])(0)], Envelope.prototype, "attack", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_7__["timeRange"])(0)], Envelope.prototype, "decay", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_7__["range"])(0, 1)], Envelope.prototype, "sustain", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_7__["timeRange"])(0)], Envelope.prototype, "release", void 0);
    /**
     * Generate some complex envelope curves.
     */

    var EnvelopeCurves = function () {
      var curveLen = 128;
      var i;
      var k; // cosine curve

      var cosineCurve = [];

      for (i = 0; i < curveLen; i++) {
        cosineCurve[i] = Math.sin(i / (curveLen - 1) * (Math.PI / 2));
      } // ripple curve


      var rippleCurve = [];
      var rippleCurveFreq = 6.4;

      for (i = 0; i < curveLen - 1; i++) {
        k = i / (curveLen - 1);
        var sineWave = Math.sin(k * (Math.PI * 2) * rippleCurveFreq - Math.PI / 2) + 1;
        rippleCurve[i] = sineWave / 10 + k * 0.83;
      }

      rippleCurve[curveLen - 1] = 1; // stairs curve

      var stairsCurve = [];
      var steps = 5;

      for (i = 0; i < curveLen; i++) {
        stairsCurve[i] = Math.ceil(i / (curveLen - 1) * steps) / steps;
      } // in-out easing curve


      var sineCurve = [];

      for (i = 0; i < curveLen; i++) {
        k = i / (curveLen - 1);
        sineCurve[i] = 0.5 * (1 - Math.cos(Math.PI * k));
      } // a bounce curve


      var bounceCurve = [];

      for (i = 0; i < curveLen; i++) {
        k = i / (curveLen - 1);
        var freq = Math.pow(k, 3) * 4 + 0.2;
        var val = Math.cos(freq * Math.PI * 2 * k);
        bounceCurve[i] = Math.abs(val * (1 - k));
      }
      /**
       * Invert a value curve to make it work for the release
       */


      function invertCurve(curve) {
        var out = new Array(curve.length);

        for (var j = 0; j < curve.length; j++) {
          out[j] = 1 - curve[j];
        }

        return out;
      }
      /**
       * reverse the curve
       */


      function reverseCurve(curve) {
        return curve.slice(0).reverse();
      }
      /**
       * attack and release curve arrays
       */


      return {
        bounce: {
          In: invertCurve(bounceCurve),
          Out: bounceCurve
        },
        cosine: {
          In: cosineCurve,
          Out: reverseCurve(cosineCurve)
        },
        exponential: "exponential",
        linear: "linear",
        ripple: {
          In: rippleCurve,
          Out: invertCurve(rippleCurve)
        },
        sine: {
          In: sineCurve,
          Out: invertCurve(sineCurve)
        },
        step: {
          In: stairsCurve,
          Out: invertCurve(stairsCurve)
        }
      };
    }(); //# sourceMappingURL=Envelope.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js":
  /*!*****************************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js ***!
    \*****************************************************************************/

  /*! exports provided: FrequencyEnvelope */

  /***/
  function node_modulesToneBuildEsmComponentEnvelopeFrequencyEnvelopeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FrequencyEnvelope", function () {
      return FrequencyEnvelope;
    });
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Envelope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Envelope */
    "./node_modules/tone/build/esm/component/envelope/Envelope.js");
    /* harmony import */


    var _signal_Scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../signal/Scale */
    "./node_modules/tone/build/esm/signal/Scale.js");
    /* harmony import */


    var _signal_Pow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../signal/Pow */
    "./node_modules/tone/build/esm/signal/Pow.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * FrequencyEnvelope is an [[Envelope]] which ramps between [[baseFrequency]]
     * and [[octaves]]. It can also have an optional [[exponent]] to adjust the curve
     * which it ramps.
     * @example
     * const oscillator = new Tone.Oscillator().toDestination().start();
     * const freqEnv = new Tone.FrequencyEnvelope({
     * 	attack: 0.2,
     * 	baseFrequency: "C2",
     * 	octaves: 4
     * });
     * freqEnv.connect(oscillator.frequency);
     * freqEnv.triggerAttack();
     */


    var FrequencyEnvelope = /*#__PURE__*/function (_Envelope__WEBPACK_IM2) {
      _inherits(FrequencyEnvelope, _Envelope__WEBPACK_IM2);

      var _super56 = _createSuper(FrequencyEnvelope);

      function FrequencyEnvelope() {
        var _this69;

        _classCallCheck2(this, FrequencyEnvelope);

        _this69 = _super56.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(FrequencyEnvelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]));
        _this69.name = "FrequencyEnvelope";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(FrequencyEnvelope.getDefaults(), arguments, ["attack", "decay", "sustain", "release"]);
        _this69._octaves = options.octaves;
        _this69._baseFrequency = _this69.toFrequency(options.baseFrequency);
        _this69._exponent = _this69.input = new _signal_Pow__WEBPACK_IMPORTED_MODULE_3__["Pow"]({
          context: _this69.context,
          value: options.exponent
        });
        _this69._scale = _this69.output = new _signal_Scale__WEBPACK_IMPORTED_MODULE_2__["Scale"]({
          context: _this69.context,
          min: _this69._baseFrequency,
          max: _this69._baseFrequency * Math.pow(2, _this69._octaves)
        });

        _this69._sig.chain(_this69._exponent, _this69._scale);

        return _this69;
      }

      _createClass2(FrequencyEnvelope, [{
        key: "dispose",

        /**
         * Clean up
         */
        value: function dispose() {
          _get(_getPrototypeOf(FrequencyEnvelope.prototype), "dispose", this).call(this);

          this._exponent.dispose();

          this._scale.dispose();

          return this;
        }
      }, {
        key: "baseFrequency",

        /**
         * The envelope's minimum output value. This is the value which it
         * starts at.
         */
        get: function get() {
          return this._baseFrequency;
        },
        set: function set(min) {
          var freq = this.toFrequency(min);
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assertRange"])(freq, 0);
          this._baseFrequency = freq;
          this._scale.min = this._baseFrequency; // update the max value when the min changes

          this.octaves = this._octaves;
        }
        /**
         * The number of octaves above the baseFrequency that the
         * envelope will scale to.
         */

      }, {
        key: "octaves",
        get: function get() {
          return this._octaves;
        },
        set: function set(octaves) {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assertRange"])(octaves, 0);
          this._octaves = octaves;
          this._scale.max = this._baseFrequency * Math.pow(2, octaves);
        }
        /**
         * The envelope's exponent value.
         */

      }, {
        key: "exponent",
        get: function get() {
          return this._exponent.value;
        },
        set: function set(exponent) {
          this._exponent.value = exponent;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Envelope__WEBPACK_IMPORTED_MODULE_1__["Envelope"].getDefaults(), {
            baseFrequency: 200,
            exponent: 1,
            octaves: 4
          });
        }
      }]);

      return FrequencyEnvelope;
    }(_Envelope__WEBPACK_IMPORTED_MODULE_1__["Envelope"]); //# sourceMappingURL=FrequencyEnvelope.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/filter/Convolver.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/filter/Convolver.js ***!
    \*******************************************************************/

  /*! exports provided: Convolver */

  /***/
  function node_modulesToneBuildEsmComponentFilterConvolverJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Convolver", function () {
      return Convolver;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/context/ToneAudioBuffer */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Convolver is a wrapper around the Native Web Audio
     * [ConvolverNode](http://webaudio.github.io/web-audio-api/#the-convolvernode-interface).
     * Convolution is useful for reverb and filter emulation. Read more about convolution reverb on
     * [Wikipedia](https://en.wikipedia.org/wiki/Convolution_reverb).
     *
     * @example
     * // initializing the convolver with an impulse response
     * const convolver = new Tone.Convolver("./path/to/ir.wav").toDestination();
     * @category Component
     */


    var Convolver = /*#__PURE__*/function (_core_context_ToneAud23) {
      _inherits(Convolver, _core_context_ToneAud23);

      var _super57 = _createSuper(Convolver);

      function Convolver() {
        var _this70;

        _classCallCheck2(this, Convolver);

        _this70 = _super57.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Convolver.getDefaults(), arguments, ["url", "onload"]));
        _this70.name = "Convolver";
        /**
         * The native ConvolverNode
         */

        _this70._convolver = _this70.context.createConvolver();
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Convolver.getDefaults(), arguments, ["url", "onload"]);
        _this70._buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__["ToneAudioBuffer"](options.url, function (buffer) {
          _this70.buffer = buffer;
          options.onload();
        });
        _this70.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_4__["Gain"]({
          context: _this70.context
        });
        _this70.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_4__["Gain"]({
          context: _this70.context
        }); // set if it's already loaded, set it immediately

        if (_this70._buffer.loaded) {
          _this70.buffer = _this70._buffer;
        } // initially set normalization


        _this70.normalize = options.normalize; // connect it up

        _this70.input.chain(_this70._convolver, _this70.output);

        return _this70;
      }

      _createClass2(Convolver, [{
        key: "load",

        /**
         * Load an impulse response url as an audio buffer.
         * Decodes the audio asynchronously and invokes
         * the callback once the audio buffer loads.
         * @param url The url of the buffer to load. filetype support depends on the browser.
         */
        value: function load(url) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee36() {
            return regeneratorRuntime.wrap(function _callee36$(_context36) {
              while (1) {
                switch (_context36.prev = _context36.next) {
                  case 0:
                    _context36.next = 2;
                    return this._buffer.load(url);

                  case 2:
                    this.buffer = _context36.sent;

                  case 3:
                  case "end":
                    return _context36.stop();
                }
              }
            }, _callee36, this);
          }));
        }
        /**
         * The convolver's buffer
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Convolver.prototype), "dispose", this).call(this);

          this._buffer.dispose();

          this._convolver.disconnect();

          return this;
        }
      }, {
        key: "buffer",
        get: function get() {
          if (this._buffer.length) {
            return this._buffer;
          } else {
            return null;
          }
        },
        set: function set(buffer) {
          if (buffer) {
            this._buffer.set(buffer);
          } // if it's already got a buffer, create a new one


          if (this._convolver.buffer) {
            // disconnect the old one
            this.input.disconnect();

            this._convolver.disconnect(); // create and connect a new one


            this._convolver = this.context.createConvolver();
            this.input.chain(this._convolver, this.output);
          }

          var buff = this._buffer.get();

          this._convolver.buffer = buff ? buff : null;
        }
        /**
         * The normalize property of the ConvolverNode interface is a boolean that
         * controls whether the impulse response from the buffer will be scaled by
         * an equal-power normalization when the buffer attribute is set, or not.
         */

      }, {
        key: "normalize",
        get: function get() {
          return this._convolver.normalize;
        },
        set: function set(norm) {
          this._convolver.normalize = norm;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            normalize: true,
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"]
          });
        }
      }]);

      return Convolver;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=Convolver.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/filter/EQ3.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/filter/EQ3.js ***!
    \*************************************************************/

  /*! exports provided: EQ3 */

  /***/
  function node_modulesToneBuildEsmComponentFilterEQ3Js(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EQ3", function () {
      return EQ3;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../channel/MultibandSplit */
    "./node_modules/tone/build/esm/component/channel/MultibandSplit.js");
    /**
     * EQ3 provides 3 equalizer bins: Low/Mid/High.
     * @category Component
     */


    var EQ3 = /*#__PURE__*/function (_core_context_ToneAud24) {
      _inherits(EQ3, _core_context_ToneAud24);

      var _super58 = _createSuper(EQ3);

      function EQ3() {
        var _this71;

        _classCallCheck2(this, EQ3);

        _this71 = _super58.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(EQ3.getDefaults(), arguments, ["low", "mid", "high"]));
        _this71.name = "EQ3";
        /**
         * the output
         */

        _this71.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this71.context
        });
        _this71._internalChannels = [];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(EQ3.getDefaults(), arguments, ["low", "mid", "high"]);
        _this71.input = _this71._multibandSplit = new _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_4__["MultibandSplit"]({
          context: _this71.context,
          highFrequency: options.highFrequency,
          lowFrequency: options.lowFrequency
        });
        _this71._lowGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this71.context,
          gain: options.low,
          units: "decibels"
        });
        _this71._midGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this71.context,
          gain: options.mid,
          units: "decibels"
        });
        _this71._highGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this71.context,
          gain: options.high,
          units: "decibels"
        });
        _this71.low = _this71._lowGain.gain;
        _this71.mid = _this71._midGain.gain;
        _this71.high = _this71._highGain.gain;
        _this71.Q = _this71._multibandSplit.Q;
        _this71.lowFrequency = _this71._multibandSplit.lowFrequency;
        _this71.highFrequency = _this71._multibandSplit.highFrequency; // the frequency bands

        _this71._multibandSplit.low.chain(_this71._lowGain, _this71.output);

        _this71._multibandSplit.mid.chain(_this71._midGain, _this71.output);

        _this71._multibandSplit.high.chain(_this71._highGain, _this71.output);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this71), ["low", "mid", "high", "lowFrequency", "highFrequency"]);
        _this71._internalChannels = [_this71._multibandSplit];
        return _this71;
      }

      _createClass2(EQ3, [{
        key: "dispose",

        /**
         * Clean up.
         */
        value: function dispose() {
          _get(_getPrototypeOf(EQ3.prototype), "dispose", this).call(this);

          Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["writable"])(this, ["low", "mid", "high", "lowFrequency", "highFrequency"]);

          this._multibandSplit.dispose();

          this.lowFrequency.dispose();
          this.highFrequency.dispose();

          this._lowGain.dispose();

          this._midGain.dispose();

          this._highGain.dispose();

          this.low.dispose();
          this.mid.dispose();
          this.high.dispose();
          this.Q.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            high: 0,
            highFrequency: 2500,
            low: 0,
            lowFrequency: 400,
            mid: 0
          });
        }
      }]);

      return EQ3;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=EQ3.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js":
  /*!****************************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js ***!
    \****************************************************************************/

  /*! exports provided: FeedbackCombFilter */

  /***/
  function node_modulesToneBuildEsmComponentFilterFeedbackCombFilterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FeedbackCombFilter", function () {
      return FeedbackCombFilter;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/worklet/ToneAudioWorklet */
    "./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js");
    /* harmony import */


    var _FeedbackCombFilter_worklet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./FeedbackCombFilter.worklet */
    "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js");
    /**
     * Comb filters are basic building blocks for physical modeling. Read more
     * about comb filters on [CCRMA's website](https://ccrma.stanford.edu/~jos/pasp/Feedback_Comb_Filters.html).
     *
     * This comb filter is implemented with the AudioWorkletNode which allows it to have feedback delays less than the
     * Web Audio processing block of 128 samples. There is a polyfill for browsers that don't yet support the
     * AudioWorkletNode, but it will add some latency and have slower performance than the AudioWorkletNode.
     * @category Component
     */


    var FeedbackCombFilter = /*#__PURE__*/function (_core_worklet_ToneAud) {
      _inherits(FeedbackCombFilter, _core_worklet_ToneAud);

      var _super59 = _createSuper(FeedbackCombFilter);

      function FeedbackCombFilter() {
        var _this72;

        _classCallCheck2(this, FeedbackCombFilter);

        _this72 = _super59.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(FeedbackCombFilter.getDefaults(), arguments, ["delayTime", "resonance"]));
        _this72.name = "FeedbackCombFilter";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(FeedbackCombFilter.getDefaults(), arguments, ["delayTime", "resonance"]);
        _this72.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this72.context
        });
        _this72.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this72.context
        });
        _this72.delayTime = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this72.context,
          value: options.delayTime,
          units: "time",
          minValue: 0,
          maxValue: 1,
          param: _this72._dummyParam,
          swappable: true
        });
        _this72.resonance = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this72.context,
          value: options.resonance,
          units: "normalRange",
          param: _this72._dummyParam,
          swappable: true
        });
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this72), ["resonance", "delayTime"]);
        return _this72;
      }

      _createClass2(FeedbackCombFilter, [{
        key: "_audioWorkletName",
        value: function _audioWorkletName() {
          return _FeedbackCombFilter_worklet__WEBPACK_IMPORTED_MODULE_6__["workletName"];
        }
        /**
         * The default parameters
         */

      }, {
        key: "onReady",
        value: function onReady(node) {
          Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["connectSeries"])(this.input, node, this.output);
          var delayTime = node.parameters.get("delayTime");
          ;
          this.delayTime.setParam(delayTime);
          var feedback = node.parameters.get("feedback");
          ;
          this.resonance.setParam(feedback);
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(FeedbackCombFilter.prototype), "dispose", this).call(this);

          this.input.dispose();
          this.output.dispose();
          this.delayTime.dispose();
          this.resonance.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"].getDefaults(), {
            delayTime: 0.1,
            resonance: 0.5
          });
        }
      }]);

      return FeedbackCombFilter;
    }(_core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_5__["ToneAudioWorklet"]); //# sourceMappingURL=FeedbackCombFilter.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js":
  /*!************************************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.worklet.js ***!
    \************************************************************************************/

  /*! exports provided: workletName */

  /***/
  function node_modulesToneBuildEsmComponentFilterFeedbackCombFilterWorkletJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "workletName", function () {
      return workletName;
    });
    /* harmony import */


    var _core_worklet_SingleIOProcessor_worklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/worklet/SingleIOProcessor.worklet */
    "./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js");
    /* harmony import */


    var _core_worklet_DelayLine_worklet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/worklet/DelayLine.worklet */
    "./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js");
    /* harmony import */


    var _core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/worklet/WorkletGlobalScope */
    "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");

    var workletName = "feedback-comb-filter";
    var feedbackCombFilter =
    /* javascript */
    "\n\tclass FeedbackCombFilterWorklet extends SingleIOProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(options);\n\t\t\tthis.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);\n\t\t}\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"delayTime\",\n\t\t\t\tdefaultValue: 0.1,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 1\n\t\t\t}, {\n\t\t\t\tname: \"feedback\",\n\t\t\t\tdefaultValue: 0.5,\n\t\t\t\tminValue: 0,\n\t\t\t\tmaxValue: 0.9999,\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, channel, parameters) {\n\t\t\tconst delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);\n\t\t\tthis.delayLine.push(channel, input + delayedSample * parameters.feedback);\n\t\t\treturn delayedSample;\n\t\t}\n\t}\n";
    Object(_core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__["registerProcessor"])(workletName, feedbackCombFilter); //# sourceMappingURL=FeedbackCombFilter.worklet.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/component/filter/Filter.js":
  /*!****************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/filter/Filter.js ***!
    \****************************************************************/

  /*! exports provided: Filter */

  /***/
  function node_modulesToneBuildEsmComponentFilterFilterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Filter", function () {
      return Filter;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * Tone.Filter is a filter which allows for all of the same native methods
     * as the [BiquadFilterNode](http://webaudio.github.io/web-audio-api/#the-biquadfilternode-interface).
     * Tone.Filter has the added ability to set the filter rolloff at -12
     * (default), -24 and -48.
     * @example
     * const filter = new Tone.Filter(1500, "highpass").toDestination();
     * filter.frequency.rampTo(20000, 10);
     * const noise = new Tone.Noise().connect(filter).start();
     * @category Component
     */


    var Filter = /*#__PURE__*/function (_core_context_ToneAud25) {
      _inherits(Filter, _core_context_ToneAud25);

      var _super60 = _createSuper(Filter);

      function Filter() {
        var _this73;

        _classCallCheck2(this, Filter);

        _this73 = _super60.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Filter.getDefaults(), arguments, ["frequency", "type", "rolloff"]));
        _this73.name = "Filter";
        _this73.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this73.context
        });
        _this73.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this73.context
        });
        _this73._filters = [];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Filter.getDefaults(), arguments, ["frequency", "type", "rolloff"]);
        _this73._filters = [];
        _this73.Q = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
          context: _this73.context,
          units: "positive",
          value: options.Q
        });
        _this73.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
          context: _this73.context,
          units: "frequency",
          value: options.frequency
        });
        _this73.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
          context: _this73.context,
          units: "cents",
          value: options.detune
        });
        _this73.gain = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
          context: _this73.context,
          units: "decibels",
          value: options.gain
        });
        _this73._type = options.type;
        _this73.rolloff = options.rolloff;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this73), ["detune", "frequency", "gain", "Q"]);
        return _this73;
      }

      _createClass2(Filter, [{
        key: "getFrequencyResponse",

        /**
         * Get the frequency response curve. This curve represents how the filter
         * responses to frequencies between 20hz-20khz.
         * @param  len The number of values to return
         * @return The frequency response curve between 20-20kHz
         */
        value: function getFrequencyResponse() {
          var _this74 = this;

          var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
          // start with all 1s
          var totalResponse = new Float32Array(len).map(function () {
            return 1;
          });
          var freqValues = new Float32Array(len);

          for (var i = 0; i < len; i++) {
            var norm = Math.pow(i / len, 2);
            var freq = norm * (20000 - 20) + 20;
            freqValues[i] = freq;
          }

          var magValues = new Float32Array(len);
          var phaseValues = new Float32Array(len);

          this._filters.forEach(function () {
            var filterClone = _this74.context.createBiquadFilter();

            filterClone.type = _this74._type;
            filterClone.Q.value = _this74.Q.value;
            filterClone.frequency.value = _this74.frequency.value;
            filterClone.gain.value = _this74.gain.value;
            filterClone.getFrequencyResponse(freqValues, magValues, phaseValues);
            magValues.forEach(function (val, i) {
              totalResponse[i] *= val;
            });
          });

          return totalResponse;
        }
        /**
         * Clean up.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Filter.prototype), "dispose", this).call(this);

          this._filters.forEach(function (filter) {
            filter.disconnect();
          });

          Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["writable"])(this, ["detune", "frequency", "gain", "Q"]);
          this.frequency.dispose();
          this.Q.dispose();
          this.detune.dispose();
          this.gain.dispose();
          return this;
        }
      }, {
        key: "type",

        /**
         * The type of the filter. Types: "lowpass", "highpass",
         * "bandpass", "lowshelf", "highshelf", "notch", "allpass", or "peaking".
         */
        get: function get() {
          return this._type;
        },
        set: function set(type) {
          var types = ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "notch", "allpass", "peaking"];
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__["assert"])(types.indexOf(type) !== -1, "Invalid filter type: ".concat(type));
          this._type = type;

          this._filters.forEach(function (filter) {
            return filter.type = type;
          });
        }
        /**
         * The rolloff of the filter which is the drop in db
         * per octave. Implemented internally by cascading filters.
         * Only accepts the values -12, -24, -48 and -96.
         */

      }, {
        key: "rolloff",
        get: function get() {
          return this._rolloff;
        },
        set: function set(rolloff) {
          var rolloffNum = Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isNumber"])(rolloff) ? rolloff : parseInt(rolloff, 10);
          var possibilities = [-12, -24, -48, -96];
          var cascadingCount = possibilities.indexOf(rolloffNum); // check the rolloff is valid

          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__["assert"])(cascadingCount !== -1, "rolloff can only be ".concat(possibilities.join(", ")));
          cascadingCount += 1;
          this._rolloff = rolloffNum;
          this.input.disconnect();

          this._filters.forEach(function (filter) {
            return filter.disconnect();
          });

          this._filters = new Array(cascadingCount);

          for (var count = 0; count < cascadingCount; count++) {
            var filter = this.context.createBiquadFilter();
            filter.type = this._type;
            this.frequency.connect(filter.frequency);
            this.detune.connect(filter.detune);
            this.Q.connect(filter.Q);
            this.gain.connect(filter.gain);
            this._filters[count] = filter;
          }

          this._internalChannels = this._filters;
          Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connectSeries"]).apply(void 0, [this.input].concat(_toConsumableArray(this._internalChannels), [this.output]));
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            Q: 1,
            detune: 0,
            frequency: 350,
            gain: 0,
            rolloff: -12,
            type: "lowpass"
          });
        }
      }]);

      return Filter;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=Filter.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js":
  /*!***************************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js ***!
    \***************************************************************************/

  /*! exports provided: LowpassCombFilter */

  /***/
  function node_modulesToneBuildEsmComponentFilterLowpassCombFilterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LowpassCombFilter", function () {
      return LowpassCombFilter;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./FeedbackCombFilter */
    "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js");
    /* harmony import */


    var _OnePoleFilter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./OnePoleFilter */
    "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js");
    /**
     * A lowpass feedback comb filter. It is similar to
     * [[FeedbackCombFilter]], but includes a lowpass filter.
     * @category Component
     */


    var LowpassCombFilter = /*#__PURE__*/function (_core_context_ToneAud26) {
      _inherits(LowpassCombFilter, _core_context_ToneAud26);

      var _super61 = _createSuper(LowpassCombFilter);

      function LowpassCombFilter() {
        var _this75;

        _classCallCheck2(this, LowpassCombFilter);

        _this75 = _super61.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(LowpassCombFilter.getDefaults(), arguments, ["delayTime", "resonance", "dampening"]));
        _this75.name = "LowpassCombFilter";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(LowpassCombFilter.getDefaults(), arguments, ["delayTime", "resonance", "dampening"]);
        _this75._combFilter = _this75.output = new _FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_2__["FeedbackCombFilter"]({
          context: _this75.context,
          delayTime: options.delayTime,
          resonance: options.resonance
        });
        _this75.delayTime = _this75._combFilter.delayTime;
        _this75.resonance = _this75._combFilter.resonance;
        _this75._lowpass = _this75.input = new _OnePoleFilter__WEBPACK_IMPORTED_MODULE_3__["OnePoleFilter"]({
          context: _this75.context,
          frequency: options.dampening,
          type: "lowpass"
        }); // connections

        _this75._lowpass.connect(_this75._combFilter);

        return _this75;
      }

      _createClass2(LowpassCombFilter, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(LowpassCombFilter.prototype), "dispose", this).call(this);

          this._combFilter.dispose();

          this._lowpass.dispose();

          return this;
        }
      }, {
        key: "dampening",

        /**
         * The dampening control of the feedback
         */
        get: function get() {
          return this._lowpass.frequency;
        },
        set: function set(fq) {
          this._lowpass.frequency = fq;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            dampening: 3000,
            delayTime: 0.1,
            resonance: 0.5
          });
        }
      }]);

      return LowpassCombFilter;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=LowpassCombFilter.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/filter/OnePoleFilter.js ***!
    \***********************************************************************/

  /*! exports provided: OnePoleFilter */

  /***/
  function node_modulesToneBuildEsmComponentFilterOnePoleFilterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OnePoleFilter", function () {
      return OnePoleFilter;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /**
     * A one pole filter with 6db-per-octave rolloff. Either "highpass" or "lowpass".
     * Note that changing the type or frequency may result in a discontinuity which
     * can sound like a click or pop.
     * References:
     * * http://www.earlevel.com/main/2012/12/15/a-one-pole-filter/
     * * http://www.dspguide.com/ch19/2.htm
     * * https://github.com/vitaliy-bobrov/js-rocks/blob/master/src/app/audio/effects/one-pole-filters.ts
     * @category Component
     */


    var OnePoleFilter = /*#__PURE__*/function (_core_context_ToneAud27) {
      _inherits(OnePoleFilter, _core_context_ToneAud27);

      var _super62 = _createSuper(OnePoleFilter);

      function OnePoleFilter() {
        var _this76;

        _classCallCheck2(this, OnePoleFilter);

        _this76 = _super62.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(OnePoleFilter.getDefaults(), arguments, ["frequency", "type"]));
        _this76.name = "OnePoleFilter";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(OnePoleFilter.getDefaults(), arguments, ["frequency", "type"]);
        _this76._frequency = options.frequency;
        _this76._type = options.type;
        _this76.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this76.context
        });
        _this76.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this76.context
        });

        _this76._createFilter();

        return _this76;
      }

      _createClass2(OnePoleFilter, [{
        key: "_createFilter",

        /**
         * Create a filter and dispose the old one
         */
        value: function _createFilter() {
          var _this77 = this;

          var oldFilter = this._filter;
          var freq = this.toFrequency(this._frequency);
          var t = 1 / (2 * Math.PI * freq);

          if (this._type === "lowpass") {
            var a0 = 1 / (t * this.context.sampleRate);
            var b1 = a0 - 1;
            this._filter = this.context.createIIRFilter([a0, 0], [1, b1]);
          } else {
            var _b2 = 1 / (t * this.context.sampleRate) - 1;

            this._filter = this.context.createIIRFilter([1, -1], [1, _b2]);
          }

          this.input.chain(this._filter, this.output);

          if (oldFilter) {
            // dispose it on the next block
            this.context.setTimeout(function () {
              if (!_this77.disposed) {
                _this77.input.disconnect(oldFilter);

                oldFilter.disconnect();
              }
            }, this.blockTime);
          }
        }
        /**
         * The frequency value.
         */

      }, {
        key: "getFrequencyResponse",

        /**
         * Get the frequency response curve. This curve represents how the filter
         * responses to frequencies between 20hz-20khz.
         * @param  len The number of values to return
         * @return The frequency response curve between 20-20kHz
         */
        value: function getFrequencyResponse() {
          var len = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;
          var freqValues = new Float32Array(len);

          for (var i = 0; i < len; i++) {
            var norm = Math.pow(i / len, 2);
            var freq = norm * (20000 - 20) + 20;
            freqValues[i] = freq;
          }

          var magValues = new Float32Array(len);
          var phaseValues = new Float32Array(len);

          this._filter.getFrequencyResponse(freqValues, magValues, phaseValues);

          return magValues;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(OnePoleFilter.prototype), "dispose", this).call(this);

          this.input.dispose();
          this.output.dispose();

          this._filter.disconnect();

          return this;
        }
      }, {
        key: "frequency",
        get: function get() {
          return this._frequency;
        },
        set: function set(fq) {
          this._frequency = fq;

          this._createFilter();
        }
        /**
         * The OnePole Filter type, either "highpass" or "lowpass"
         */

      }, {
        key: "type",
        get: function get() {
          return this._type;
        },
        set: function set(t) {
          this._type = t;

          this._createFilter();
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            frequency: 880,
            type: "lowpass"
          });
        }
      }]);

      return OnePoleFilter;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=OnePoleFilter.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js":
  /*!***************************************************************************!*\
    !*** ./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js ***!
    \***************************************************************************/

  /*! exports provided: PhaseShiftAllpass */

  /***/
  function node_modulesToneBuildEsmComponentFilterPhaseShiftAllpassJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PhaseShiftAllpass", function () {
      return PhaseShiftAllpass;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /**
     * PhaseShiftAllpass is an very efficient implementation of a Hilbert Transform
     * using two Allpass filter banks whose outputs have a phase difference of 90°.
     * Here the `offset90` phase is offset by +90° in relation to `output`.
     * Coefficients and structure was developed by Olli Niemitalo.
     * For more details see: http://yehar.com/blog/?p=368
     * @category Component
     */


    var PhaseShiftAllpass = /*#__PURE__*/function (_core_context_ToneAud28) {
      _inherits(PhaseShiftAllpass, _core_context_ToneAud28);

      var _super63 = _createSuper(PhaseShiftAllpass);

      function PhaseShiftAllpass(options) {
        var _this78;

        _classCallCheck2(this, PhaseShiftAllpass);

        _this78 = _super63.call(this, options);
        _this78.name = "PhaseShiftAllpass";
        _this78.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this78.context
        });
        /**
         * The phase shifted output
         */

        _this78.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this78.context
        });
        /**
         * The PhaseShifted allpass output
         */

        _this78.offset90 = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this78.context
        });
        var allpassBank1Values = [0.6923878, 0.9360654322959, 0.9882295226860, 0.9987488452737];
        var allpassBank2Values = [0.4021921162426, 0.8561710882420, 0.9722909545651, 0.9952884791278];
        _this78._bank0 = _this78._createAllPassFilterBank(allpassBank1Values);
        _this78._bank1 = _this78._createAllPassFilterBank(allpassBank2Values);
        _this78._oneSampleDelay = _this78.context.createIIRFilter([0.0, 1.0], [1.0, 0.0]); // connect Allpass filter banks

        Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connectSeries"]).apply(void 0, [_this78.input].concat(_toConsumableArray(_this78._bank0), [_this78._oneSampleDelay, _this78.output]));
        Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connectSeries"]).apply(void 0, [_this78.input].concat(_toConsumableArray(_this78._bank1), [_this78.offset90]));
        return _this78;
      }
      /**
       * Create all of the IIR filters from an array of values using the coefficient calculation.
       */


      _createClass2(PhaseShiftAllpass, [{
        key: "_createAllPassFilterBank",
        value: function _createAllPassFilterBank(bankValues) {
          var _this79 = this;

          var nodes = bankValues.map(function (value) {
            var coefficients = [[value * value, 0, -1], [1, 0, -(value * value)]];
            return _this79.context.createIIRFilter(coefficients[0], coefficients[1]);
          });
          return nodes;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(PhaseShiftAllpass.prototype), "dispose", this).call(this);

          this.input.dispose();
          this.output.dispose();
          this.offset90.dispose();

          this._bank0.forEach(function (f) {
            return f.disconnect();
          });

          this._bank1.forEach(function (f) {
            return f.disconnect();
          });

          this._oneSampleDelay.disconnect();

          return this;
        }
      }]);

      return PhaseShiftAllpass;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=PhaseShiftAllpass.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/component/index.js":
  /*!********************************************************!*\
    !*** ./node_modules/tone/build/esm/component/index.js ***!
    \********************************************************/

  /*! exports provided: Analyser, Meter, FFT, DCMeter, Waveform, Follower, Channel, CrossFade, Merge, MidSideMerge, MidSideSplit, MultibandSplit, Panner, Panner3D, PanVol, Recorder, Solo, Split, Volume, Compressor, Gate, Limiter, MidSideCompressor, MultibandCompressor, AmplitudeEnvelope, Envelope, FrequencyEnvelope, EQ3, Filter, OnePoleFilter, FeedbackCombFilter, LowpassCombFilter, Convolver */

  /***/
  function node_modulesToneBuildEsmComponentIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _analysis_Analyser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./analysis/Analyser */
    "./node_modules/tone/build/esm/component/analysis/Analyser.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Analyser", function () {
      return _analysis_Analyser__WEBPACK_IMPORTED_MODULE_0__["Analyser"];
    });
    /* harmony import */


    var _analysis_Meter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./analysis/Meter */
    "./node_modules/tone/build/esm/component/analysis/Meter.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Meter", function () {
      return _analysis_Meter__WEBPACK_IMPORTED_MODULE_1__["Meter"];
    });
    /* harmony import */


    var _analysis_FFT__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./analysis/FFT */
    "./node_modules/tone/build/esm/component/analysis/FFT.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FFT", function () {
      return _analysis_FFT__WEBPACK_IMPORTED_MODULE_2__["FFT"];
    });
    /* harmony import */


    var _analysis_DCMeter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./analysis/DCMeter */
    "./node_modules/tone/build/esm/component/analysis/DCMeter.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DCMeter", function () {
      return _analysis_DCMeter__WEBPACK_IMPORTED_MODULE_3__["DCMeter"];
    });
    /* harmony import */


    var _analysis_Waveform__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./analysis/Waveform */
    "./node_modules/tone/build/esm/component/analysis/Waveform.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Waveform", function () {
      return _analysis_Waveform__WEBPACK_IMPORTED_MODULE_4__["Waveform"];
    });
    /* harmony import */


    var _analysis_Follower__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./analysis/Follower */
    "./node_modules/tone/build/esm/component/analysis/Follower.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Follower", function () {
      return _analysis_Follower__WEBPACK_IMPORTED_MODULE_5__["Follower"];
    });
    /* harmony import */


    var _channel_Channel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./channel/Channel */
    "./node_modules/tone/build/esm/component/channel/Channel.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Channel", function () {
      return _channel_Channel__WEBPACK_IMPORTED_MODULE_6__["Channel"];
    });
    /* harmony import */


    var _channel_CrossFade__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./channel/CrossFade */
    "./node_modules/tone/build/esm/component/channel/CrossFade.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "CrossFade", function () {
      return _channel_CrossFade__WEBPACK_IMPORTED_MODULE_7__["CrossFade"];
    });
    /* harmony import */


    var _channel_Merge__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./channel/Merge */
    "./node_modules/tone/build/esm/component/channel/Merge.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Merge", function () {
      return _channel_Merge__WEBPACK_IMPORTED_MODULE_8__["Merge"];
    });
    /* harmony import */


    var _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./channel/MidSideMerge */
    "./node_modules/tone/build/esm/component/channel/MidSideMerge.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidSideMerge", function () {
      return _channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_9__["MidSideMerge"];
    });
    /* harmony import */


    var _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./channel/MidSideSplit */
    "./node_modules/tone/build/esm/component/channel/MidSideSplit.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidSideSplit", function () {
      return _channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_10__["MidSideSplit"];
    });
    /* harmony import */


    var _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./channel/MultibandSplit */
    "./node_modules/tone/build/esm/component/channel/MultibandSplit.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MultibandSplit", function () {
      return _channel_MultibandSplit__WEBPACK_IMPORTED_MODULE_11__["MultibandSplit"];
    });
    /* harmony import */


    var _channel_Panner__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./channel/Panner */
    "./node_modules/tone/build/esm/component/channel/Panner.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Panner", function () {
      return _channel_Panner__WEBPACK_IMPORTED_MODULE_12__["Panner"];
    });
    /* harmony import */


    var _channel_Panner3D__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./channel/Panner3D */
    "./node_modules/tone/build/esm/component/channel/Panner3D.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Panner3D", function () {
      return _channel_Panner3D__WEBPACK_IMPORTED_MODULE_13__["Panner3D"];
    });
    /* harmony import */


    var _channel_PanVol__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./channel/PanVol */
    "./node_modules/tone/build/esm/component/channel/PanVol.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PanVol", function () {
      return _channel_PanVol__WEBPACK_IMPORTED_MODULE_14__["PanVol"];
    });
    /* harmony import */


    var _channel_Recorder__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./channel/Recorder */
    "./node_modules/tone/build/esm/component/channel/Recorder.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Recorder", function () {
      return _channel_Recorder__WEBPACK_IMPORTED_MODULE_15__["Recorder"];
    });
    /* harmony import */


    var _channel_Solo__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./channel/Solo */
    "./node_modules/tone/build/esm/component/channel/Solo.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Solo", function () {
      return _channel_Solo__WEBPACK_IMPORTED_MODULE_16__["Solo"];
    });
    /* harmony import */


    var _channel_Split__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./channel/Split */
    "./node_modules/tone/build/esm/component/channel/Split.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Split", function () {
      return _channel_Split__WEBPACK_IMPORTED_MODULE_17__["Split"];
    });
    /* harmony import */


    var _channel_Volume__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./channel/Volume */
    "./node_modules/tone/build/esm/component/channel/Volume.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Volume", function () {
      return _channel_Volume__WEBPACK_IMPORTED_MODULE_18__["Volume"];
    });
    /* harmony import */


    var _dynamics_Compressor__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./dynamics/Compressor */
    "./node_modules/tone/build/esm/component/dynamics/Compressor.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Compressor", function () {
      return _dynamics_Compressor__WEBPACK_IMPORTED_MODULE_19__["Compressor"];
    });
    /* harmony import */


    var _dynamics_Gate__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ./dynamics/Gate */
    "./node_modules/tone/build/esm/component/dynamics/Gate.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Gate", function () {
      return _dynamics_Gate__WEBPACK_IMPORTED_MODULE_20__["Gate"];
    });
    /* harmony import */


    var _dynamics_Limiter__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./dynamics/Limiter */
    "./node_modules/tone/build/esm/component/dynamics/Limiter.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Limiter", function () {
      return _dynamics_Limiter__WEBPACK_IMPORTED_MODULE_21__["Limiter"];
    });
    /* harmony import */


    var _dynamics_MidSideCompressor__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./dynamics/MidSideCompressor */
    "./node_modules/tone/build/esm/component/dynamics/MidSideCompressor.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidSideCompressor", function () {
      return _dynamics_MidSideCompressor__WEBPACK_IMPORTED_MODULE_22__["MidSideCompressor"];
    });
    /* harmony import */


    var _dynamics_MultibandCompressor__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ./dynamics/MultibandCompressor */
    "./node_modules/tone/build/esm/component/dynamics/MultibandCompressor.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MultibandCompressor", function () {
      return _dynamics_MultibandCompressor__WEBPACK_IMPORTED_MODULE_23__["MultibandCompressor"];
    });
    /* harmony import */


    var _envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ./envelope/AmplitudeEnvelope */
    "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AmplitudeEnvelope", function () {
      return _envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_24__["AmplitudeEnvelope"];
    });
    /* harmony import */


    var _envelope_Envelope__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./envelope/Envelope */
    "./node_modules/tone/build/esm/component/envelope/Envelope.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Envelope", function () {
      return _envelope_Envelope__WEBPACK_IMPORTED_MODULE_25__["Envelope"];
    });
    /* harmony import */


    var _envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ./envelope/FrequencyEnvelope */
    "./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FrequencyEnvelope", function () {
      return _envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_26__["FrequencyEnvelope"];
    });
    /* harmony import */


    var _filter_EQ3__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ./filter/EQ3 */
    "./node_modules/tone/build/esm/component/filter/EQ3.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "EQ3", function () {
      return _filter_EQ3__WEBPACK_IMPORTED_MODULE_27__["EQ3"];
    });
    /* harmony import */


    var _filter_Filter__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
    /*! ./filter/Filter */
    "./node_modules/tone/build/esm/component/filter/Filter.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Filter", function () {
      return _filter_Filter__WEBPACK_IMPORTED_MODULE_28__["Filter"];
    });
    /* harmony import */


    var _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
    /*! ./filter/OnePoleFilter */
    "./node_modules/tone/build/esm/component/filter/OnePoleFilter.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "OnePoleFilter", function () {
      return _filter_OnePoleFilter__WEBPACK_IMPORTED_MODULE_29__["OnePoleFilter"];
    });
    /* harmony import */


    var _filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
    /*! ./filter/FeedbackCombFilter */
    "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FeedbackCombFilter", function () {
      return _filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_30__["FeedbackCombFilter"];
    });
    /* harmony import */


    var _filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
    /*! ./filter/LowpassCombFilter */
    "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "LowpassCombFilter", function () {
      return _filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_31__["LowpassCombFilter"];
    });
    /* harmony import */


    var _filter_Convolver__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
    /*! ./filter/Convolver */
    "./node_modules/tone/build/esm/component/filter/Convolver.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Convolver", function () {
      return _filter_Convolver__WEBPACK_IMPORTED_MODULE_32__["Convolver"];
    }); //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/Global.js":
  /*!****************************************************!*\
    !*** ./node_modules/tone/build/esm/core/Global.js ***!
    \****************************************************/

  /*! exports provided: getContext, setContext, start */

  /***/
  function node_modulesToneBuildEsmCoreGlobalJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getContext", function () {
      return getContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setContext", function () {
      return setContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "start", function () {
      return start;
    });
    /* harmony import */


    var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../version */
    "./node_modules/tone/build/esm/version.js");
    /* harmony import */


    var _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./context/AudioContext */
    "./node_modules/tone/build/esm/core/context/AudioContext.js");
    /* harmony import */


    var _context_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./context/Context */
    "./node_modules/tone/build/esm/core/context/Context.js");
    /* harmony import */


    var _context_DummyContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./context/DummyContext */
    "./node_modules/tone/build/esm/core/context/DummyContext.js");
    /* harmony import */


    var _context_OfflineContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./context/OfflineContext */
    "./node_modules/tone/build/esm/core/context/OfflineContext.js");
    /* harmony import */


    var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./util/AdvancedTypeCheck */
    "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
    /**
     * This dummy context is used to avoid throwing immediate errors when importing in Node.js
     */


    var dummyContext = new _context_DummyContext__WEBPACK_IMPORTED_MODULE_3__["DummyContext"]();
    /**
     * The global audio context which is getable and assignable through
     * getContext and setContext
     */

    var globalContext = dummyContext;
    /**
     * Returns the default system-wide [[Context]]
     * @category Core
     */

    function getContext() {
      if (globalContext === dummyContext && _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__["hasAudioContext"]) {
        setContext(new _context_Context__WEBPACK_IMPORTED_MODULE_2__["Context"]());
      }

      return globalContext;
    }
    /**
     * Set the default audio context
     * @category Core
     */


    function setContext(context) {
      if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_5__["isAudioContext"])(context)) {
        globalContext = new _context_Context__WEBPACK_IMPORTED_MODULE_2__["Context"](context);
      } else if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_5__["isOfflineAudioContext"])(context)) {
        globalContext = new _context_OfflineContext__WEBPACK_IMPORTED_MODULE_4__["OfflineContext"](context);
      } else {
        globalContext = context;
      }
    }
    /**
     * Most browsers will not play _any_ audio until a user
     * clicks something (like a play button). Invoke this method
     * on a click or keypress event handler to start the audio context.
     * More about the Autoplay policy
     * [here](https://developers.google.com/web/updates/2017/09/autoplay-policy-changes#webaudio)
     * @example
     * document.querySelector("button").addEventListener("click", async () => {
     * 	await Tone.start();
     * 	console.log("context started");
     * });
     * @category Core
     */


    function start() {
      return globalContext.resume();
    }
    /**
     * Log Tone.js + version in the console.
     */


    if (_context_AudioContext__WEBPACK_IMPORTED_MODULE_1__["theWindow"] && !_context_AudioContext__WEBPACK_IMPORTED_MODULE_1__["theWindow"].TONE_SILENCE_LOGGING) {
      var prefix = "v";

      if (_version__WEBPACK_IMPORTED_MODULE_0__["version"] === "dev") {
        prefix = "";
      }

      var printString = " * Tone.js ".concat(prefix).concat(_version__WEBPACK_IMPORTED_MODULE_0__["version"], " * "); // eslint-disable-next-line no-console

      console.log("%c".concat(printString), "background: #000; color: #fff");
    } //# sourceMappingURL=Global.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/Tone.js":
  /*!**************************************************!*\
    !*** ./node_modules/tone/build/esm/core/Tone.js ***!
    \**************************************************/

  /*! exports provided: Tone */

  /***/
  function node_modulesToneBuildEsmCoreToneJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Tone", function () {
      return Tone;
    });
    /* harmony import */


    var _version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../version */
    "./node_modules/tone/build/esm/version.js");
    /* harmony import */


    var _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./context/AudioContext */
    "./node_modules/tone/build/esm/core/context/AudioContext.js");
    /* harmony import */


    var _util_Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * Tone.js
     * @author Yotam Mann
     * @license http://opensource.org/licenses/MIT MIT License
     * @copyright 2014-2019 Yotam Mann
     */

    /**
     * @class  Tone is the base class of all other classes.
     * @constructor
     */


    var Tone = /*#__PURE__*/function () {
      function Tone() {
        _classCallCheck2(this, Tone);

        //-------------------------------------
        // 	DEBUGGING
        //-------------------------------------

        /**
         * Set this debug flag to log all events that happen in this class.
         */
        this.debug = false; //-------------------------------------
        // 	DISPOSING
        //-------------------------------------

        /**
         * Indicates if the instance was disposed
         */

        this._wasDisposed = false;
      }
      /**
       * Returns all of the default options belonging to the class.
       */


      _createClass2(Tone, [{
        key: "log",

        /**
         * Prints the outputs to the console log for debugging purposes.
         * Prints the contents only if either the object has a property
         * called `debug` set to true, or a variable called TONE_DEBUG_CLASS
         * is set to the name of the class.
         * @example
         * const osc = new Tone.Oscillator();
         * // prints all logs originating from this oscillator
         * osc.debug = true;
         * // calls to start/stop will print in the console
         * osc.start();
         */
        value: function log() {
          // if the object is either set to debug = true
          // or if there is a string on the Tone.global.with the class name
          if (this.debug || _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__["theWindow"] && this.toString() === _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__["theWindow"].TONE_DEBUG_CLASS) {
            for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
              args[_key5] = arguments[_key5];
            }

            Object(_util_Debug__WEBPACK_IMPORTED_MODULE_2__["log"]).apply(void 0, [this].concat(args));
          }
        }
        /**
         * disconnect and dispose.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          this._wasDisposed = true;
          return this;
        }
        /**
         * Indicates if the instance was disposed. 'Disposing' an
         * instance means that all of the Web Audio nodes that were
         * created for the instance are disconnected and freed for garbage collection.
         */

      }, {
        key: "toString",

        /**
         * Convert the class to a string
         * @example
         * const osc = new Tone.Oscillator();
         * console.log(osc.toString());
         */
        value: function toString() {
          return this.name;
        }
      }, {
        key: "disposed",
        get: function get() {
          return this._wasDisposed;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return {};
        }
      }]);

      return Tone;
    }();
    /**
     * The version number semver
     */


    Tone.version = _version__WEBPACK_IMPORTED_MODULE_0__["version"]; //# sourceMappingURL=Tone.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/core/clock/Clock.js":
  /*!*********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/clock/Clock.js ***!
    \*********************************************************/

  /*! exports provided: Clock */

  /***/
  function node_modulesToneBuildEsmCoreClockClockJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Clock", function () {
      return Clock;
    });
    /* harmony import */


    var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../context/ToneWithContext */
    "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _util_Emitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/Emitter */
    "./node_modules/tone/build/esm/core/util/Emitter.js");
    /* harmony import */


    var _util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _util_StateTimeline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../util/StateTimeline */
    "./node_modules/tone/build/esm/core/util/StateTimeline.js");
    /* harmony import */


    var _TickSource__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./TickSource */
    "./node_modules/tone/build/esm/core/clock/TickSource.js");
    /* harmony import */


    var _util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * A sample accurate clock which provides a callback at the given rate.
     * While the callback is not sample-accurate (it is still susceptible to
     * loose JS timing), the time passed in as the argument to the callback
     * is precise. For most applications, it is better to use Tone.Transport
     * instead of the Clock by itself since you can synchronize multiple callbacks.
     * @example
     * // the callback will be invoked approximately once a second
     * // and will print the time exactly once a second apart.
     * const clock = new Tone.Clock(time => {
     * 	console.log(time);
     * }, 1);
     * clock.start();
     * @category Core
     */


    var Clock = /*#__PURE__*/function (_context_ToneWithCont) {
      _inherits(Clock, _context_ToneWithCont);

      var _super64 = _createSuper(Clock);

      function Clock() {
        var _this80;

        _classCallCheck2(this, Clock);

        _this80 = _super64.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Clock.getDefaults(), arguments, ["callback", "frequency"]));
        _this80.name = "Clock";
        /**
         * The callback function to invoke at the scheduled tick.
         */

        _this80.callback = _util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"];
        /**
         * The last time the loop callback was invoked
         */

        _this80._lastUpdate = 0;
        /**
         * Keep track of the playback state
         */

        _this80._state = new _util_StateTimeline__WEBPACK_IMPORTED_MODULE_4__["StateTimeline"]("stopped");
        /**
         * Context bound reference to the _loop method
         * This is necessary to remove the event in the end.
         */

        _this80._boundLoop = _this80._loop.bind(_assertThisInitialized(_this80));
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Clock.getDefaults(), arguments, ["callback", "frequency"]);
        _this80.callback = options.callback;
        _this80._tickSource = new _TickSource__WEBPACK_IMPORTED_MODULE_5__["TickSource"]({
          context: _this80.context,
          frequency: options.frequency,
          units: options.units
        });
        _this80._lastUpdate = 0;
        _this80.frequency = _this80._tickSource.frequency;
        Object(_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this80), "frequency"); // add an initial state

        _this80._state.setStateAtTime("stopped", 0); // bind a callback to the worker thread


        _this80.context.on("tick", _this80._boundLoop);

        return _this80;
      }

      _createClass2(Clock, [{
        key: "start",

        /**
         * Start the clock at the given time. Optionally pass in an offset
         * of where to start the tick counter from.
         * @param  time    The time the clock should start
         * @param offset  Where the tick counter starts counting from.
         */
        value: function start(time, offset) {
          // make sure the context is running
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_6__["assertContextRunning"])(this.context); // start the loop

          var computedTime = this.toSeconds(time);
          this.log("start", computedTime);

          if (this._state.getValueAtTime(computedTime) !== "started") {
            this._state.setStateAtTime("started", computedTime);

            this._tickSource.start(computedTime, offset);

            if (computedTime < this._lastUpdate) {
              this.emit("start", computedTime, offset);
            }
          }

          return this;
        }
        /**
         * Stop the clock. Stopping the clock resets the tick counter to 0.
         * @param time The time when the clock should stop.
         * @example
         * const clock = new Tone.Clock(time => {
         * 	console.log(time);
         * }, 1);
         * clock.start();
         * // stop the clock after 10 seconds
         * clock.stop("+10");
         */

      }, {
        key: "stop",
        value: function stop(time) {
          var computedTime = this.toSeconds(time);
          this.log("stop", computedTime);

          this._state.cancel(computedTime);

          this._state.setStateAtTime("stopped", computedTime);

          this._tickSource.stop(computedTime);

          if (computedTime < this._lastUpdate) {
            this.emit("stop", computedTime);
          }

          return this;
        }
        /**
         * Pause the clock. Pausing does not reset the tick counter.
         * @param time The time when the clock should stop.
         */

      }, {
        key: "pause",
        value: function pause(time) {
          var computedTime = this.toSeconds(time);

          if (this._state.getValueAtTime(computedTime) === "started") {
            this._state.setStateAtTime("paused", computedTime);

            this._tickSource.pause(computedTime);

            if (computedTime < this._lastUpdate) {
              this.emit("pause", computedTime);
            }
          }

          return this;
        }
        /**
         * The number of times the callback was invoked. Starts counting at 0
         * and increments after the callback was invoked.
         */

      }, {
        key: "getSecondsAtTime",

        /**
         * Return the elapsed seconds at the given time.
         * @param  time  When to get the elapsed seconds
         * @return  The number of elapsed seconds
         */
        value: function getSecondsAtTime(time) {
          return this._tickSource.getSecondsAtTime(time);
        }
        /**
         * Set the clock's ticks at the given time.
         * @param  ticks The tick value to set
         * @param  time  When to set the tick value
         */

      }, {
        key: "setTicksAtTime",
        value: function setTicksAtTime(ticks, time) {
          this._tickSource.setTicksAtTime(ticks, time);

          return this;
        }
        /**
         * Get the time of the given tick. The second argument
         * is when to test before. Since ticks can be set (with setTicksAtTime)
         * there may be multiple times for a given tick value.
         * @param  tick The tick number.
         * @param  before When to measure the tick value from.
         * @return The time of the tick
         */

      }, {
        key: "getTimeOfTick",
        value: function getTimeOfTick(tick) {
          var before = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.now();
          return this._tickSource.getTimeOfTick(tick, before);
        }
        /**
         * Get the clock's ticks at the given time.
         * @param  time  When to get the tick value
         * @return The tick value at the given time.
         */

      }, {
        key: "getTicksAtTime",
        value: function getTicksAtTime(time) {
          return this._tickSource.getTicksAtTime(time);
        }
        /**
         * Get the time of the next tick
         * @param  offset The tick number.
         */

      }, {
        key: "nextTickTime",
        value: function nextTickTime(offset, when) {
          var computedTime = this.toSeconds(when);
          var currentTick = this.getTicksAtTime(computedTime);
          return this._tickSource.getTimeOfTick(currentTick + offset, computedTime);
        }
        /**
         * The scheduling loop.
         */

      }, {
        key: "_loop",
        value: function _loop() {
          var _this81 = this;

          var startTime = this._lastUpdate;
          var endTime = this.now();
          this._lastUpdate = endTime;
          this.log("loop", startTime, endTime);

          if (startTime !== endTime) {
            // the state change events
            this._state.forEachBetween(startTime, endTime, function (e) {
              switch (e.state) {
                case "started":
                  var offset = _this81._tickSource.getTicksAtTime(e.time);

                  _this81.emit("start", e.time, offset);

                  break;

                case "stopped":
                  if (e.time !== 0) {
                    _this81.emit("stop", e.time);
                  }

                  break;

                case "paused":
                  _this81.emit("pause", e.time);

                  break;
              }
            }); // the tick callbacks


            this._tickSource.forEachTickBetween(startTime, endTime, function (time, ticks) {
              _this81.callback(time, ticks);
            });
          }
        }
        /**
         * Returns the scheduled state at the given time.
         * @param  time  The time to query.
         * @return  The name of the state input in setStateAtTime.
         * @example
         * const clock = new Tone.Clock();
         * clock.start("+0.1");
         * clock.getStateAtTime("+0.1"); // returns "started"
         */

      }, {
        key: "getStateAtTime",
        value: function getStateAtTime(time) {
          var computedTime = this.toSeconds(time);
          return this._state.getValueAtTime(computedTime);
        }
        /**
         * Clean up
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Clock.prototype), "dispose", this).call(this);

          this.context.off("tick", this._boundLoop);

          this._tickSource.dispose();

          this._state.dispose();

          return this;
        }
      }, {
        key: "state",

        /**
         * Returns the playback state of the source, either "started", "stopped" or "paused".
         */
        get: function get() {
          return this._state.getValueAtTime(this.now());
        }
      }, {
        key: "ticks",
        get: function get() {
          return Math.ceil(this.getTicksAtTime(this.now()));
        },
        set: function set(t) {
          this._tickSource.ticks = t;
        }
        /**
         * The time since ticks=0 that the Clock has been running. Accounts for tempo curves
         */

      }, {
        key: "seconds",
        get: function get() {
          return this._tickSource.seconds;
        },
        set: function set(s) {
          this._tickSource.seconds = s;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__["ToneWithContext"].getDefaults(), {
            callback: _util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"],
            frequency: 1,
            units: "hertz"
          });
        }
      }]);

      return Clock;
    }(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__["ToneWithContext"]);

    _util_Emitter__WEBPACK_IMPORTED_MODULE_2__["Emitter"].mixin(Clock); //# sourceMappingURL=Clock.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/clock/TickParam.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/clock/TickParam.js ***!
    \*************************************************************/

  /*! exports provided: TickParam */

  /***/
  function node_modulesToneBuildEsmCoreClockTickParamJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TickParam", function () {
      return TickParam;
    });
    /* harmony import */


    var _context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _util_Timeline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/Timeline */
    "./node_modules/tone/build/esm/core/util/Timeline.js");
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /**
     * A Param class just for computing ticks. Similar to the [[Param]] class,
     * but offers conversion to BPM values as well as ability to compute tick
     * duration and elapsed ticks
     */


    var TickParam = /*#__PURE__*/function (_context_Param__WEBPA) {
      _inherits(TickParam, _context_Param__WEBPA);

      var _super65 = _createSuper(TickParam);

      function TickParam() {
        var _this82;

        _classCallCheck2(this, TickParam);

        _this82 = _super65.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickParam.getDefaults(), arguments, ["value"]));
        _this82.name = "TickParam";
        /**
         * The timeline which tracks all of the automations.
         */

        _this82._events = new _util_Timeline__WEBPACK_IMPORTED_MODULE_2__["Timeline"](Infinity);
        /**
         * The internal holder for the multiplier value
         */

        _this82._multiplier = 1;
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickParam.getDefaults(), arguments, ["value"]); // set the multiplier

        _this82._multiplier = options.multiplier; // clear the ticks from the beginning

        _this82._events.cancel(0); // set an initial event


        _this82._events.add({
          ticks: 0,
          time: 0,
          type: "setValueAtTime",
          value: _this82._fromType(options.value)
        });

        _this82.setValueAtTime(options.value, 0);

        return _this82;
      }

      _createClass2(TickParam, [{
        key: "setTargetAtTime",
        value: function setTargetAtTime(value, time, constant) {
          // approximate it with multiple linear ramps
          time = this.toSeconds(time);
          this.setRampPoint(time);

          var computedValue = this._fromType(value); // start from previously scheduled value


          var prevEvent = this._events.get(time);

          var segments = Math.round(Math.max(1 / constant, 1));

          for (var i = 0; i <= segments; i++) {
            var segTime = constant * i + time;

            var rampVal = this._exponentialApproach(prevEvent.time, prevEvent.value, computedValue, constant, segTime);

            this.linearRampToValueAtTime(this._toType(rampVal), segTime);
          }

          return this;
        }
      }, {
        key: "setValueAtTime",
        value: function setValueAtTime(value, time) {
          var computedTime = this.toSeconds(time);

          _get(_getPrototypeOf(TickParam.prototype), "setValueAtTime", this).call(this, value, time);

          var event = this._events.get(computedTime);

          var previousEvent = this._events.previousEvent(event);

          var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);

          event.ticks = Math.max(ticksUntilTime, 0);
          return this;
        }
      }, {
        key: "linearRampToValueAtTime",
        value: function linearRampToValueAtTime(value, time) {
          var computedTime = this.toSeconds(time);

          _get(_getPrototypeOf(TickParam.prototype), "linearRampToValueAtTime", this).call(this, value, time);

          var event = this._events.get(computedTime);

          var previousEvent = this._events.previousEvent(event);

          var ticksUntilTime = this._getTicksUntilEvent(previousEvent, computedTime);

          event.ticks = Math.max(ticksUntilTime, 0);
          return this;
        }
      }, {
        key: "exponentialRampToValueAtTime",
        value: function exponentialRampToValueAtTime(value, time) {
          // aproximate it with multiple linear ramps
          time = this.toSeconds(time);

          var computedVal = this._fromType(value); // start from previously scheduled value


          var prevEvent = this._events.get(time); // approx 10 segments per second


          var segments = Math.round(Math.max((time - prevEvent.time) * 10, 1));
          var segmentDur = (time - prevEvent.time) / segments;

          for (var i = 0; i <= segments; i++) {
            var segTime = segmentDur * i + prevEvent.time;

            var rampVal = this._exponentialInterpolate(prevEvent.time, prevEvent.value, time, computedVal, segTime);

            this.linearRampToValueAtTime(this._toType(rampVal), segTime);
          }

          return this;
        }
        /**
         * Returns the tick value at the time. Takes into account
         * any automation curves scheduled on the signal.
         * @param  event The time to get the tick count at
         * @return The number of ticks which have elapsed at the time given any automations.
         */

      }, {
        key: "_getTicksUntilEvent",
        value: function _getTicksUntilEvent(event, time) {
          if (event === null) {
            event = {
              ticks: 0,
              time: 0,
              type: "setValueAtTime",
              value: 0
            };
          } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isUndef"])(event.ticks)) {
            var previousEvent = this._events.previousEvent(event);

            event.ticks = this._getTicksUntilEvent(previousEvent, event.time);
          }

          var val0 = this._fromType(this.getValueAtTime(event.time));

          var val1 = this._fromType(this.getValueAtTime(time)); // if it's right on the line, take the previous value


          var onTheLineEvent = this._events.get(time);

          if (onTheLineEvent && onTheLineEvent.time === time && onTheLineEvent.type === "setValueAtTime") {
            val1 = this._fromType(this.getValueAtTime(time - this.sampleTime));
          }

          return 0.5 * (time - event.time) * (val0 + val1) + event.ticks;
        }
        /**
         * Returns the tick value at the time. Takes into account
         * any automation curves scheduled on the signal.
         * @param  time The time to get the tick count at
         * @return The number of ticks which have elapsed at the time given any automations.
         */

      }, {
        key: "getTicksAtTime",
        value: function getTicksAtTime(time) {
          var computedTime = this.toSeconds(time);

          var event = this._events.get(computedTime);

          return Math.max(this._getTicksUntilEvent(event, computedTime), 0);
        }
        /**
         * Return the elapsed time of the number of ticks from the given time
         * @param ticks The number of ticks to calculate
         * @param  time The time to get the next tick from
         * @return The duration of the number of ticks from the given time in seconds
         */

      }, {
        key: "getDurationOfTicks",
        value: function getDurationOfTicks(ticks, time) {
          var computedTime = this.toSeconds(time);
          var currentTick = this.getTicksAtTime(time);
          return this.getTimeOfTick(currentTick + ticks) - computedTime;
        }
        /**
         * Given a tick, returns the time that tick occurs at.
         * @return The time that the tick occurs.
         */

      }, {
        key: "getTimeOfTick",
        value: function getTimeOfTick(tick) {
          var before = this._events.get(tick, "ticks");

          var after = this._events.getAfter(tick, "ticks");

          if (before && before.ticks === tick) {
            return before.time;
          } else if (before && after && after.type === "linearRampToValueAtTime" && before.value !== after.value) {
            var val0 = this._fromType(this.getValueAtTime(before.time));

            var val1 = this._fromType(this.getValueAtTime(after.time));

            var delta = (val1 - val0) / (after.time - before.time);
            var k = Math.sqrt(Math.pow(val0, 2) - 2 * delta * (before.ticks - tick));
            var sol1 = (-val0 + k) / delta;
            var sol2 = (-val0 - k) / delta;
            return (sol1 > 0 ? sol1 : sol2) + before.time;
          } else if (before) {
            if (before.value === 0) {
              return Infinity;
            } else {
              return before.time + (tick - before.ticks) / before.value;
            }
          } else {
            return tick / this._initialValue;
          }
        }
        /**
         * Convert some number of ticks their the duration in seconds accounting
         * for any automation curves starting at the given time.
         * @param  ticks The number of ticks to convert to seconds.
         * @param  when  When along the automation timeline to convert the ticks.
         * @return The duration in seconds of the ticks.
         */

      }, {
        key: "ticksToTime",
        value: function ticksToTime(ticks, when) {
          return this.getDurationOfTicks(ticks, when);
        }
        /**
         * The inverse of [[ticksToTime]]. Convert a duration in
         * seconds to the corresponding number of ticks accounting for any
         * automation curves starting at the given time.
         * @param  duration The time interval to convert to ticks.
         * @param  when When along the automation timeline to convert the ticks.
         * @return The duration in ticks.
         */

      }, {
        key: "timeToTicks",
        value: function timeToTicks(duration, when) {
          var computedTime = this.toSeconds(when);
          var computedDuration = this.toSeconds(duration);
          var startTicks = this.getTicksAtTime(computedTime);
          var endTicks = this.getTicksAtTime(computedTime + computedDuration);
          return endTicks - startTicks;
        }
        /**
         * Convert from the type when the unit value is BPM
         */

      }, {
        key: "_fromType",
        value: function _fromType(val) {
          if (this.units === "bpm" && this.multiplier) {
            return 1 / (60 / val / this.multiplier);
          } else {
            return _get(_getPrototypeOf(TickParam.prototype), "_fromType", this).call(this, val);
          }
        }
        /**
         * Special case of type conversion where the units === "bpm"
         */

      }, {
        key: "_toType",
        value: function _toType(val) {
          if (this.units === "bpm" && this.multiplier) {
            return val / this.multiplier * 60;
          } else {
            return _get(_getPrototypeOf(TickParam.prototype), "_toType", this).call(this, val);
          }
        }
        /**
         * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.
         */

      }, {
        key: "multiplier",
        get: function get() {
          return this._multiplier;
        },
        set: function set(m) {
          // get and reset the current value with the new multiplier
          // might be necessary to clear all the previous values
          var currentVal = this.value;
          this._multiplier = m;
          this.cancelScheduledValues(0);
          this.setValueAtTime(currentVal, 0);
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"].getDefaults(), {
            multiplier: 1,
            units: "hertz",
            value: 1
          });
        }
      }]);

      return TickParam;
    }(_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]); //# sourceMappingURL=TickParam.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/clock/TickSignal.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/clock/TickSignal.js ***!
    \**************************************************************/

  /*! exports provided: TickSignal */

  /***/
  function node_modulesToneBuildEsmCoreClockTickSignalJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TickSignal", function () {
      return TickSignal;
    });
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _TickParam__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./TickParam */
    "./node_modules/tone/build/esm/core/clock/TickParam.js");
    /**
     * TickSignal extends Tone.Signal, but adds the capability
     * to calculate the number of elapsed ticks. exponential and target curves
     * are approximated with multiple linear ramps.
     *
     * Thank you Bruno Dias, H. Sofia Pinto, and David M. Matos,
     * for your [WAC paper](https://smartech.gatech.edu/bitstream/handle/1853/54588/WAC2016-49.pdf)
     * describing integrating timing functions for tempo calculations.
     */


    var TickSignal = /*#__PURE__*/function (_signal_Signal__WEBPA) {
      _inherits(TickSignal, _signal_Signal__WEBPA);

      var _super66 = _createSuper(TickSignal);

      function TickSignal() {
        var _this83;

        _classCallCheck2(this, TickSignal);

        _this83 = _super66.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickSignal.getDefaults(), arguments, ["value"]));
        _this83.name = "TickSignal";
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickSignal.getDefaults(), arguments, ["value"]);
        _this83.input = _this83._param = new _TickParam__WEBPACK_IMPORTED_MODULE_2__["TickParam"]({
          context: _this83.context,
          convert: options.convert,
          multiplier: options.multiplier,
          param: _this83._constantSource.offset,
          units: options.units,
          value: options.value
        });
        return _this83;
      }

      _createClass2(TickSignal, [{
        key: "ticksToTime",
        value: function ticksToTime(ticks, when) {
          return this._param.ticksToTime(ticks, when);
        }
      }, {
        key: "timeToTicks",
        value: function timeToTicks(duration, when) {
          return this._param.timeToTicks(duration, when);
        }
      }, {
        key: "getTimeOfTick",
        value: function getTimeOfTick(tick) {
          return this._param.getTimeOfTick(tick);
        }
      }, {
        key: "getDurationOfTicks",
        value: function getDurationOfTicks(ticks, time) {
          return this._param.getDurationOfTicks(ticks, time);
        }
      }, {
        key: "getTicksAtTime",
        value: function getTicksAtTime(time) {
          return this._param.getTicksAtTime(time);
        }
        /**
         * A multiplier on the bpm value. Useful for setting a PPQ relative to the base frequency value.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(TickSignal.prototype), "dispose", this).call(this);

          this._param.dispose();

          return this;
        }
      }, {
        key: "multiplier",
        get: function get() {
          return this._param.multiplier;
        },
        set: function set(m) {
          this._param.multiplier = m;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_signal_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"].getDefaults(), {
            multiplier: 1,
            units: "hertz",
            value: 1
          });
        }
      }]);

      return TickSignal;
    }(_signal_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"]); //# sourceMappingURL=TickSignal.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/clock/TickSource.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/clock/TickSource.js ***!
    \**************************************************************/

  /*! exports provided: TickSource */

  /***/
  function node_modulesToneBuildEsmCoreClockTickSourceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TickSource", function () {
      return TickSource;
    });
    /* harmony import */


    var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../context/ToneWithContext */
    "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../util/StateTimeline */
    "./node_modules/tone/build/esm/core/util/StateTimeline.js");
    /* harmony import */


    var _util_Timeline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../util/Timeline */
    "./node_modules/tone/build/esm/core/util/Timeline.js");
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _TickSignal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./TickSignal */
    "./node_modules/tone/build/esm/core/clock/TickSignal.js");
    /* harmony import */


    var _util_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../util/Math */
    "./node_modules/tone/build/esm/core/util/Math.js");
    /**
     * Uses [TickSignal](TickSignal) to track elapsed ticks with complex automation curves.
     */


    var TickSource = /*#__PURE__*/function (_context_ToneWithCont2) {
      _inherits(TickSource, _context_ToneWithCont2);

      var _super67 = _createSuper(TickSource);

      function TickSource() {
        var _this84;

        _classCallCheck2(this, TickSource);

        _this84 = _super67.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickSource.getDefaults(), arguments, ["frequency"]));
        _this84.name = "TickSource";
        /**
         * The state timeline
         */

        _this84._state = new _util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__["StateTimeline"]();
        /**
         * The offset values of the ticks
         */

        _this84._tickOffset = new _util_Timeline__WEBPACK_IMPORTED_MODULE_4__["Timeline"]();
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(TickSource.getDefaults(), arguments, ["frequency"]);
        _this84.frequency = new _TickSignal__WEBPACK_IMPORTED_MODULE_6__["TickSignal"]({
          context: _this84.context,
          units: options.units,
          value: options.frequency
        });
        Object(_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this84), "frequency"); // set the initial state

        _this84._state.setStateAtTime("stopped", 0); // add the first event


        _this84.setTicksAtTime(0, 0);

        return _this84;
      }

      _createClass2(TickSource, [{
        key: "start",

        /**
         * Start the clock at the given time. Optionally pass in an offset
         * of where to start the tick counter from.
         * @param  time    The time the clock should start
         * @param offset The number of ticks to start the source at
         */
        value: function start(time, offset) {
          var computedTime = this.toSeconds(time);

          if (this._state.getValueAtTime(computedTime) !== "started") {
            this._state.setStateAtTime("started", computedTime);

            if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__["isDefined"])(offset)) {
              this.setTicksAtTime(offset, computedTime);
            }
          }

          return this;
        }
        /**
         * Stop the clock. Stopping the clock resets the tick counter to 0.
         * @param time The time when the clock should stop.
         */

      }, {
        key: "stop",
        value: function stop(time) {
          var computedTime = this.toSeconds(time); // cancel the previous stop

          if (this._state.getValueAtTime(computedTime) === "stopped") {
            var event = this._state.get(computedTime);

            if (event && event.time > 0) {
              this._tickOffset.cancel(event.time);

              this._state.cancel(event.time);
            }
          }

          this._state.cancel(computedTime);

          this._state.setStateAtTime("stopped", computedTime);

          this.setTicksAtTime(0, computedTime);
          return this;
        }
        /**
         * Pause the clock. Pausing does not reset the tick counter.
         * @param time The time when the clock should stop.
         */

      }, {
        key: "pause",
        value: function pause(time) {
          var computedTime = this.toSeconds(time);

          if (this._state.getValueAtTime(computedTime) === "started") {
            this._state.setStateAtTime("paused", computedTime);
          }

          return this;
        }
        /**
         * Cancel start/stop/pause and setTickAtTime events scheduled after the given time.
         * @param time When to clear the events after
         */

      }, {
        key: "cancel",
        value: function cancel(time) {
          time = this.toSeconds(time);

          this._state.cancel(time);

          this._tickOffset.cancel(time);

          return this;
        }
        /**
         * Get the elapsed ticks at the given time
         * @param  time  When to get the tick value
         * @return The number of ticks
         */

      }, {
        key: "getTicksAtTime",
        value: function getTicksAtTime(time) {
          var _this85 = this;

          var computedTime = this.toSeconds(time);

          var stopEvent = this._state.getLastState("stopped", computedTime); // this event allows forEachBetween to iterate until the current time


          var tmpEvent = {
            state: "paused",
            time: computedTime
          };

          this._state.add(tmpEvent); // keep track of the previous offset event


          var lastState = stopEvent;
          var elapsedTicks = 0; // iterate through all the events since the last stop

          this._state.forEachBetween(stopEvent.time, computedTime + this.sampleTime, function (e) {
            var periodStartTime = lastState.time; // if there is an offset event in this period use that

            var offsetEvent = _this85._tickOffset.get(e.time);

            if (offsetEvent && offsetEvent.time >= lastState.time) {
              elapsedTicks = offsetEvent.ticks;
              periodStartTime = offsetEvent.time;
            }

            if (lastState.state === "started" && e.state !== "started") {
              elapsedTicks += _this85.frequency.getTicksAtTime(e.time) - _this85.frequency.getTicksAtTime(periodStartTime);
            }

            lastState = e;
          }); // remove the temporary event


          this._state.remove(tmpEvent); // return the ticks


          return elapsedTicks;
        }
        /**
         * The number of times the callback was invoked. Starts counting at 0
         * and increments after the callback was invoked. Returns -1 when stopped.
         */

      }, {
        key: "getSecondsAtTime",

        /**
         * Return the elapsed seconds at the given time.
         * @param  time  When to get the elapsed seconds
         * @return  The number of elapsed seconds
         */
        value: function getSecondsAtTime(time) {
          var _this86 = this;

          time = this.toSeconds(time);

          var stopEvent = this._state.getLastState("stopped", time); // this event allows forEachBetween to iterate until the current time


          var tmpEvent = {
            state: "paused",
            time: time
          };

          this._state.add(tmpEvent); // keep track of the previous offset event


          var lastState = stopEvent;
          var elapsedSeconds = 0; // iterate through all the events since the last stop

          this._state.forEachBetween(stopEvent.time, time + this.sampleTime, function (e) {
            var periodStartTime = lastState.time; // if there is an offset event in this period use that

            var offsetEvent = _this86._tickOffset.get(e.time);

            if (offsetEvent && offsetEvent.time >= lastState.time) {
              elapsedSeconds = offsetEvent.seconds;
              periodStartTime = offsetEvent.time;
            }

            if (lastState.state === "started" && e.state !== "started") {
              elapsedSeconds += e.time - periodStartTime;
            }

            lastState = e;
          }); // remove the temporary event


          this._state.remove(tmpEvent); // return the ticks


          return elapsedSeconds;
        }
        /**
         * Set the clock's ticks at the given time.
         * @param  ticks The tick value to set
         * @param  time  When to set the tick value
         */

      }, {
        key: "setTicksAtTime",
        value: function setTicksAtTime(ticks, time) {
          time = this.toSeconds(time);

          this._tickOffset.cancel(time);

          this._tickOffset.add({
            seconds: this.frequency.getDurationOfTicks(ticks, time),
            ticks: ticks,
            time: time
          });

          return this;
        }
        /**
         * Returns the scheduled state at the given time.
         * @param  time  The time to query.
         */

      }, {
        key: "getStateAtTime",
        value: function getStateAtTime(time) {
          time = this.toSeconds(time);
          return this._state.getValueAtTime(time);
        }
        /**
         * Get the time of the given tick. The second argument
         * is when to test before. Since ticks can be set (with setTicksAtTime)
         * there may be multiple times for a given tick value.
         * @param  tick The tick number.
         * @param  before When to measure the tick value from.
         * @return The time of the tick
         */

      }, {
        key: "getTimeOfTick",
        value: function getTimeOfTick(tick) {
          var before = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.now();

          var offset = this._tickOffset.get(before);

          var event = this._state.get(before);

          var startTime = Math.max(offset.time, event.time);
          var absoluteTicks = this.frequency.getTicksAtTime(startTime) + tick - offset.ticks;
          return this.frequency.getTimeOfTick(absoluteTicks);
        }
        /**
         * Invoke the callback event at all scheduled ticks between the
         * start time and the end time
         * @param  startTime  The beginning of the search range
         * @param  endTime    The end of the search range
         * @param  callback   The callback to invoke with each tick
         */

      }, {
        key: "forEachTickBetween",
        value: function forEachTickBetween(startTime, endTime, callback) {
          var _this87 = this;

          // only iterate through the sections where it is "started"
          var lastStateEvent = this._state.get(startTime);

          this._state.forEachBetween(startTime, endTime, function (event) {
            if (lastStateEvent && lastStateEvent.state === "started" && event.state !== "started") {
              _this87.forEachTickBetween(Math.max(lastStateEvent.time, startTime), event.time - _this87.sampleTime, callback);
            }

            lastStateEvent = event;
          });

          var error = null;

          if (lastStateEvent && lastStateEvent.state === "started") {
            var maxStartTime = Math.max(lastStateEvent.time, startTime); // figure out the difference between the frequency ticks and the

            var startTicks = this.frequency.getTicksAtTime(maxStartTime);
            var ticksAtStart = this.frequency.getTicksAtTime(lastStateEvent.time);
            var diff = startTicks - ticksAtStart;
            var offset = Math.ceil(diff) - diff; // guard against floating point issues

            offset = Object(_util_Math__WEBPACK_IMPORTED_MODULE_7__["EQ"])(offset, 1) ? 0 : offset;
            var nextTickTime = this.frequency.getTimeOfTick(startTicks + offset);

            while (nextTickTime < endTime) {
              try {
                callback(nextTickTime, Math.round(this.getTicksAtTime(nextTickTime)));
              } catch (e) {
                error = e;
                break;
              }

              nextTickTime += this.frequency.getDurationOfTicks(1, nextTickTime);
            }
          }

          if (error) {
            throw error;
          }

          return this;
        }
        /**
         * Clean up
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(TickSource.prototype), "dispose", this).call(this);

          this._state.dispose();

          this._tickOffset.dispose();

          this.frequency.dispose();
          return this;
        }
      }, {
        key: "state",

        /**
         * Returns the playback state of the source, either "started", "stopped" or "paused".
         */
        get: function get() {
          return this.getStateAtTime(this.now());
        }
      }, {
        key: "ticks",
        get: function get() {
          return this.getTicksAtTime(this.now());
        },
        set: function set(t) {
          this.setTicksAtTime(t, this.now());
        }
        /**
         * The time since ticks=0 that the TickSource has been running. Accounts
         * for tempo curves
         */

      }, {
        key: "seconds",
        get: function get() {
          return this.getSecondsAtTime(this.now());
        },
        set: function set(s) {
          var now = this.now();
          var ticks = this.frequency.timeToTicks(s, now);
          this.setTicksAtTime(ticks, now);
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign({
            frequency: 1,
            units: "hertz"
          }, _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__["ToneWithContext"].getDefaults());
        }
      }]);

      return TickSource;
    }(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__["ToneWithContext"]); //# sourceMappingURL=TickSource.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/clock/Ticker.js":
  /*!**********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/clock/Ticker.js ***!
    \**********************************************************/

  /*! exports provided: Ticker */

  /***/
  function node_modulesToneBuildEsmCoreClockTickerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Ticker", function () {
      return Ticker;
    });
    /**
     * A class which provides a reliable callback using either
     * a Web Worker, or if that isn't supported, falls back to setTimeout.
     */


    var Ticker = /*#__PURE__*/function () {
      function Ticker(callback, type, updateInterval) {
        _classCallCheck2(this, Ticker);

        this._callback = callback;
        this._type = type;
        this._updateInterval = updateInterval; // create the clock source for the first time

        this._createClock();
      }
      /**
       * Generate a web worker
       */


      _createClass2(Ticker, [{
        key: "_createWorker",
        value: function _createWorker() {
          var blob = new Blob([
          /* javascript */
          "\n\t\t\t// the initial timeout time\n\t\t\tlet timeoutTime =  ".concat((this._updateInterval * 1000).toFixed(1), ";\n\t\t\t// onmessage callback\n\t\t\tself.onmessage = function(msg){\n\t\t\t\ttimeoutTime = parseInt(msg.data);\n\t\t\t};\n\t\t\t// the tick function which posts a message\n\t\t\t// and schedules a new tick\n\t\t\tfunction tick(){\n\t\t\t\tsetTimeout(tick, timeoutTime);\n\t\t\t\tself.postMessage('tick');\n\t\t\t}\n\t\t\t// call tick initially\n\t\t\ttick();\n\t\t\t")], {
            type: "text/javascript"
          });
          var blobUrl = URL.createObjectURL(blob);
          var worker = new Worker(blobUrl);
          worker.onmessage = this._callback.bind(this);
          this._worker = worker;
        }
        /**
         * Create a timeout loop
         */

      }, {
        key: "_createTimeout",
        value: function _createTimeout() {
          var _this88 = this;

          this._timeout = setTimeout(function () {
            _this88._createTimeout();

            _this88._callback();
          }, this._updateInterval * 1000);
        }
        /**
         * Create the clock source.
         */

      }, {
        key: "_createClock",
        value: function _createClock() {
          if (this._type === "worker") {
            try {
              this._createWorker();
            } catch (e) {
              // workers not supported, fallback to timeout
              this._type = "timeout";

              this._createClock();
            }
          } else if (this._type === "timeout") {
            this._createTimeout();
          }
        }
        /**
         * Clean up the current clock source
         */

      }, {
        key: "_disposeClock",
        value: function _disposeClock() {
          if (this._timeout) {
            clearTimeout(this._timeout);
            this._timeout = 0;
          }

          if (this._worker) {
            this._worker.terminate();

            this._worker.onmessage = null;
          }
        }
        /**
         * The rate in seconds the ticker will update
         */

      }, {
        key: "dispose",

        /**
         * Clean up
         */
        value: function dispose() {
          this._disposeClock();
        }
      }, {
        key: "updateInterval",
        get: function get() {
          return this._updateInterval;
        },
        set: function set(interval) {
          this._updateInterval = Math.max(interval, 128 / 44100);

          if (this._type === "worker") {
            this._worker.postMessage(Math.max(interval * 1000, 1));
          }
        }
        /**
         * The type of the ticker, either a worker or a timeout
         */

      }, {
        key: "type",
        get: function get() {
          return this._type;
        },
        set: function set(type) {
          this._disposeClock();

          this._type = type;

          this._createClock();
        }
      }]);

      return Ticker;
    }(); //# sourceMappingURL=Ticker.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/clock/Transport.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/clock/Transport.js ***!
    \*************************************************************/

  /*! exports provided: Transport */

  /***/
  function node_modulesToneBuildEsmCoreClockTransportJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Transport", function () {
      return Transport;
    });
    /* harmony import */


    var _core_type_Time__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/type/Time */
    "./node_modules/tone/build/esm/core/type/Time.js");
    /* harmony import */


    var _core_util_TimelineValue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/TimelineValue */
    "./node_modules/tone/build/esm/core/util/TimelineValue.js");
    /* harmony import */


    var _context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../context/ContextInitialization */
    "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
    /* harmony import */


    var _context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../context/ToneWithContext */
    "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
    /* harmony import */


    var _type_Ticks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../type/Ticks */
    "./node_modules/tone/build/esm/core/type/Ticks.js");
    /* harmony import */


    var _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../type/TransportTime */
    "./node_modules/tone/build/esm/core/type/TransportTime.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _util_Emitter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../util/Emitter */
    "./node_modules/tone/build/esm/core/util/Emitter.js");
    /* harmony import */


    var _util_Interface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../util/IntervalTimeline */
    "./node_modules/tone/build/esm/core/util/IntervalTimeline.js");
    /* harmony import */


    var _util_Timeline__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ../util/Timeline */
    "./node_modules/tone/build/esm/core/util/Timeline.js");
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ../util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _Clock__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./Clock */
    "./node_modules/tone/build/esm/core/clock/Clock.js");
    /* harmony import */


    var _TransportEvent__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./TransportEvent */
    "./node_modules/tone/build/esm/core/clock/TransportEvent.js");
    /* harmony import */


    var _TransportRepeatEvent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./TransportRepeatEvent */
    "./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js");
    /**
     * Transport for timing musical events.
     * Supports tempo curves and time changes. Unlike browser-based timing (setInterval, requestAnimationFrame)
     * Transport timing events pass in the exact time of the scheduled event
     * in the argument of the callback function. Pass that time value to the object
     * you're scheduling. <br><br>
     * A single transport is created for you when the library is initialized.
     * <br><br>
     * The transport emits the events: "start", "stop", "pause", and "loop" which are
     * called with the time of that event as the argument.
     *
     * @example
     * const osc = new Tone.Oscillator().toDestination();
     * // repeated event every 8th note
     * Tone.Transport.scheduleRepeat((time) => {
     * 	// use the callback time to schedule events
     * 	osc.start(time).stop(time + 0.1);
     * }, "8n");
     * // transport must be started before it starts invoking events
     * Tone.Transport.start();
     * @category Core
     */


    var Transport = /*#__PURE__*/function (_context_ToneWithCont3) {
      _inherits(Transport, _context_ToneWithCont3);

      var _super68 = _createSuper(Transport);

      function Transport() {
        var _this89;

        _classCallCheck2(this, Transport);

        _this89 = _super68.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["optionsFromArguments"])(Transport.getDefaults(), arguments));
        _this89.name = "Transport"; //-------------------------------------
        // 	LOOPING
        //-------------------------------------

        /**
         * If the transport loops or not.
         */

        _this89._loop = new _core_util_TimelineValue__WEBPACK_IMPORTED_MODULE_1__["TimelineValue"](false);
        /**
         * The loop start position in ticks
         */

        _this89._loopStart = 0;
        /**
         * The loop end position in ticks
         */

        _this89._loopEnd = 0; //-------------------------------------
        // 	TIMELINE EVENTS
        //-------------------------------------

        /**
         * All the events in an object to keep track by ID
         */

        _this89._scheduledEvents = {};
        /**
         * The scheduled events.
         */

        _this89._timeline = new _util_Timeline__WEBPACK_IMPORTED_MODULE_11__["Timeline"]();
        /**
         * Repeated events
         */

        _this89._repeatedEvents = new _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_10__["IntervalTimeline"]();
        /**
         * All of the synced Signals
         */

        _this89._syncedSignals = [];
        /**
         * The swing amount
         */

        _this89._swingAmount = 0;
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["optionsFromArguments"])(Transport.getDefaults(), arguments); // CLOCK/TEMPO

        _this89._ppq = options.ppq;
        _this89._clock = new _Clock__WEBPACK_IMPORTED_MODULE_13__["Clock"]({
          callback: _this89._processTick.bind(_assertThisInitialized(_this89)),
          context: _this89.context,
          frequency: 0,
          units: "bpm"
        });

        _this89._bindClockEvents();

        _this89.bpm = _this89._clock.frequency;
        _this89._clock.frequency.multiplier = options.ppq;

        _this89.bpm.setValueAtTime(options.bpm, 0);

        Object(_util_Interface__WEBPACK_IMPORTED_MODULE_9__["readOnly"])(_assertThisInitialized(_this89), "bpm");
        _this89._timeSignature = options.timeSignature; // SWING

        _this89._swingTicks = options.ppq / 2; // 8n

        return _this89;
      }

      _createClass2(Transport, [{
        key: "_processTick",
        //-------------------------------------
        // 	TICKS
        //-------------------------------------

        /**
         * called on every tick
         * @param  tickTime clock relative tick time
         */
        value: function _processTick(tickTime, ticks) {
          // handle swing
          if (this._swingAmount > 0 && ticks % this._ppq !== 0 && // not on a downbeat
          ticks % (this._swingTicks * 2) !== 0) {
            // add some swing
            var progress = ticks % (this._swingTicks * 2) / (this._swingTicks * 2);

            var amount = Math.sin(progress * Math.PI) * this._swingAmount;

            tickTime += new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__["TicksClass"](this.context, this._swingTicks * 2 / 3).toSeconds() * amount;
          } // do the loop test


          if (this._loop.get(tickTime)) {
            if (ticks >= this._loopEnd) {
              this.emit("loopEnd", tickTime);

              this._clock.setTicksAtTime(this._loopStart, tickTime);

              ticks = this._loopStart;
              this.emit("loopStart", tickTime, this._clock.getSecondsAtTime(tickTime));
              this.emit("loop", tickTime);
            }
          } // invoke the timeline events scheduled on this tick


          this._timeline.forEachAtTime(ticks, function (event) {
            return event.invoke(tickTime);
          });
        } //-------------------------------------
        // 	SCHEDULABLE EVENTS
        //-------------------------------------

        /**
         * Schedule an event along the timeline.
         * @param callback The callback to be invoked at the time.
         * @param time The time to invoke the callback at.
         * @return The id of the event which can be used for canceling the event.
         * @example
         * // schedule an event on the 16th measure
         * Tone.Transport.schedule((time) => {
         * 	// invoked on measure 16
         * 	console.log("measure 16!");
         * }, "16:0:0");
         */

      }, {
        key: "schedule",
        value: function schedule(callback, time) {
          var event = new _TransportEvent__WEBPACK_IMPORTED_MODULE_14__["TransportEvent"](this, {
            callback: callback,
            time: new _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__["TransportTimeClass"](this.context, time).toTicks()
          });
          return this._addEvent(event, this._timeline);
        }
        /**
         * Schedule a repeated event along the timeline. The event will fire
         * at the `interval` starting at the `startTime` and for the specified
         * `duration`.
         * @param  callback   The callback to invoke.
         * @param  interval   The duration between successive callbacks. Must be a positive number.
         * @param  startTime  When along the timeline the events should start being invoked.
         * @param  duration How long the event should repeat.
         * @return  The ID of the scheduled event. Use this to cancel the event.
         * @example
         * const osc = new Tone.Oscillator().toDestination().start();
         * // a callback invoked every eighth note after the first measure
         * Tone.Transport.scheduleRepeat((time) => {
         * 	osc.start(time).stop(time + 0.1);
         * }, "8n", "1m");
         */

      }, {
        key: "scheduleRepeat",
        value: function scheduleRepeat(callback, interval, startTime) {
          var duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Infinity;
          var event = new _TransportRepeatEvent__WEBPACK_IMPORTED_MODULE_15__["TransportRepeatEvent"](this, {
            callback: callback,
            duration: new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__["TimeClass"](this.context, duration).toTicks(),
            interval: new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__["TimeClass"](this.context, interval).toTicks(),
            time: new _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__["TransportTimeClass"](this.context, startTime).toTicks()
          }); // kick it off if the Transport is started
          // @ts-ignore

          return this._addEvent(event, this._repeatedEvents);
        }
        /**
         * Schedule an event that will be removed after it is invoked.
         * @param callback The callback to invoke once.
         * @param time The time the callback should be invoked.
         * @returns The ID of the scheduled event.
         */

      }, {
        key: "scheduleOnce",
        value: function scheduleOnce(callback, time) {
          var event = new _TransportEvent__WEBPACK_IMPORTED_MODULE_14__["TransportEvent"](this, {
            callback: callback,
            once: true,
            time: new _type_TransportTime__WEBPACK_IMPORTED_MODULE_6__["TransportTimeClass"](this.context, time).toTicks()
          });
          return this._addEvent(event, this._timeline);
        }
        /**
         * Clear the passed in event id from the timeline
         * @param eventId The id of the event.
         */

      }, {
        key: "clear",
        value: function clear(eventId) {
          if (this._scheduledEvents.hasOwnProperty(eventId)) {
            var item = this._scheduledEvents[eventId.toString()];

            item.timeline.remove(item.event);
            item.event.dispose();
            delete this._scheduledEvents[eventId.toString()];
          }

          return this;
        }
        /**
         * Add an event to the correct timeline. Keep track of the
         * timeline it was added to.
         * @returns the event id which was just added
         */

      }, {
        key: "_addEvent",
        value: function _addEvent(event, timeline) {
          this._scheduledEvents[event.id.toString()] = {
            event: event,
            timeline: timeline
          };
          timeline.add(event);
          return event.id;
        }
        /**
         * Remove scheduled events from the timeline after
         * the given time. Repeated events will be removed
         * if their startTime is after the given time
         * @param after Clear all events after this time.
         */

      }, {
        key: "cancel",
        value: function cancel() {
          var _this90 = this;

          var after = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
          var computedAfter = this.toTicks(after);

          this._timeline.forEachFrom(computedAfter, function (event) {
            return _this90.clear(event.id);
          });

          this._repeatedEvents.forEachFrom(computedAfter, function (event) {
            return _this90.clear(event.id);
          });

          return this;
        } //-------------------------------------
        // 	START/STOP/PAUSE
        //-------------------------------------

        /**
         * Bind start/stop/pause events from the clock and emit them.
         */

      }, {
        key: "_bindClockEvents",
        value: function _bindClockEvents() {
          var _this91 = this;

          this._clock.on("start", function (time, offset) {
            offset = new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__["TicksClass"](_this91.context, offset).toSeconds();

            _this91.emit("start", time, offset);
          });

          this._clock.on("stop", function (time) {
            _this91.emit("stop", time);
          });

          this._clock.on("pause", function (time) {
            _this91.emit("pause", time);
          });
        }
        /**
         * Returns the playback state of the source, either "started", "stopped", or "paused"
         */

      }, {
        key: "start",

        /**
         * Start the transport and all sources synced to the transport.
         * @param  time The time when the transport should start.
         * @param  offset The timeline offset to start the transport.
         * @example
         * // start the transport in one second starting at beginning of the 5th measure.
         * Tone.Transport.start("+1", "4:0:0");
         */
        value: function start(time, offset) {
          var offsetTicks;

          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_12__["isDefined"])(offset)) {
            offsetTicks = this.toTicks(offset);
          } // start the clock


          this._clock.start(time, offsetTicks);

          return this;
        }
        /**
         * Stop the transport and all sources synced to the transport.
         * @param time The time when the transport should stop.
         * @example
         * Tone.Transport.stop();
         */

      }, {
        key: "stop",
        value: function stop(time) {
          this._clock.stop(time);

          return this;
        }
        /**
         * Pause the transport and all sources synced to the transport.
         */

      }, {
        key: "pause",
        value: function pause(time) {
          this._clock.pause(time);

          return this;
        }
        /**
         * Toggle the current state of the transport. If it is
         * started, it will stop it, otherwise it will start the Transport.
         * @param  time The time of the event
         */

      }, {
        key: "toggle",
        value: function toggle(time) {
          time = this.toSeconds(time);

          if (this._clock.getStateAtTime(time) !== "started") {
            this.start(time);
          } else {
            this.stop(time);
          }

          return this;
        } //-------------------------------------
        // 	SETTERS/GETTERS
        //-------------------------------------

        /**
         * The time signature as just the numerator over 4.
         * For example 4/4 would be just 4 and 6/8 would be 3.
         * @example
         * // common time
         * Tone.Transport.timeSignature = 4;
         * // 7/8
         * Tone.Transport.timeSignature = [7, 8];
         * // this will be reduced to a single number
         * Tone.Transport.timeSignature; // returns 3.5
         */

      }, {
        key: "setLoopPoints",

        /**
         * Set the loop start and stop at the same time.
         * @example
         * // loop over the first measure
         * Tone.Transport.setLoopPoints(0, "1m");
         * Tone.Transport.loop = true;
         */
        value: function setLoopPoints(startPosition, endPosition) {
          this.loopStart = startPosition;
          this.loopEnd = endPosition;
          return this;
        }
        /**
         * The swing value. Between 0-1 where 1 equal to the note + half the subdivision.
         */

      }, {
        key: "getTicksAtTime",

        /**
         * Get the clock's ticks at the given time.
         * @param  time  When to get the tick value
         * @return The tick value at the given time.
         */
        value: function getTicksAtTime(time) {
          return Math.round(this._clock.getTicksAtTime(time));
        }
        /**
         * Return the elapsed seconds at the given time.
         * @param  time  When to get the elapsed seconds
         * @return  The number of elapsed seconds
         */

      }, {
        key: "getSecondsAtTime",
        value: function getSecondsAtTime(time) {
          return this._clock.getSecondsAtTime(time);
        }
        /**
         * Pulses Per Quarter note. This is the smallest resolution
         * the Transport timing supports. This should be set once
         * on initialization and not set again. Changing this value
         * after other objects have been created can cause problems.
         */

      }, {
        key: "nextSubdivision",
        //-------------------------------------
        // 	SYNCING
        //-------------------------------------

        /**
         * Returns the time aligned to the next subdivision
         * of the Transport. If the Transport is not started,
         * it will return 0.
         * Note: this will not work precisely during tempo ramps.
         * @param  subdivision  The subdivision to quantize to
         * @return  The context time of the next subdivision.
         * @example
         * // the transport must be started, otherwise returns 0
         * Tone.Transport.start();
         * Tone.Transport.nextSubdivision("4n");
         */
        value: function nextSubdivision(subdivision) {
          subdivision = this.toTicks(subdivision);

          if (this.state !== "started") {
            // if the transport's not started, return 0
            return 0;
          } else {
            var now = this.now(); // the remainder of the current ticks and the subdivision

            var transportPos = this.getTicksAtTime(now);
            var remainingTicks = subdivision - transportPos % subdivision;
            return this._clock.nextTickTime(remainingTicks, now);
          }
        }
        /**
         * Attaches the signal to the tempo control signal so that
         * any changes in the tempo will change the signal in the same
         * ratio.
         *
         * @param signal
         * @param ratio Optionally pass in the ratio between the two signals.
         * 			Otherwise it will be computed based on their current values.
         */

      }, {
        key: "syncSignal",
        value: function syncSignal(signal, ratio) {
          if (!ratio) {
            // get the sync ratio
            var now = this.now();

            if (signal.getValueAtTime(now) !== 0) {
              var bpm = this.bpm.getValueAtTime(now);
              var computedFreq = 1 / (60 / bpm / this.PPQ);
              ratio = signal.getValueAtTime(now) / computedFreq;
            } else {
              ratio = 0;
            }
          }

          var ratioSignal = new _context_Gain__WEBPACK_IMPORTED_MODULE_3__["Gain"](ratio); // @ts-ignore

          this.bpm.connect(ratioSignal); // @ts-ignore

          ratioSignal.connect(signal._param);

          this._syncedSignals.push({
            initial: signal.value,
            ratio: ratioSignal,
            signal: signal
          });

          signal.value = 0;
          return this;
        }
        /**
         * Unsyncs a previously synced signal from the transport's control.
         * See Transport.syncSignal.
         */

      }, {
        key: "unsyncSignal",
        value: function unsyncSignal(signal) {
          for (var i = this._syncedSignals.length - 1; i >= 0; i--) {
            var syncedSignal = this._syncedSignals[i];

            if (syncedSignal.signal === signal) {
              syncedSignal.ratio.dispose();
              syncedSignal.signal.value = syncedSignal.initial;

              this._syncedSignals.splice(i, 1);
            }
          }

          return this;
        }
        /**
         * Clean up.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Transport.prototype), "dispose", this).call(this);

          this._clock.dispose();

          Object(_util_Interface__WEBPACK_IMPORTED_MODULE_9__["writable"])(this, "bpm");

          this._timeline.dispose();

          this._repeatedEvents.dispose();

          return this;
        }
      }, {
        key: "state",
        get: function get() {
          return this._clock.getStateAtTime(this.now());
        }
      }, {
        key: "timeSignature",
        get: function get() {
          return this._timeSignature;
        },
        set: function set(timeSig) {
          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_12__["isArray"])(timeSig)) {
            timeSig = timeSig[0] / timeSig[1] * 4;
          }

          this._timeSignature = timeSig;
        }
        /**
         * When the Transport.loop = true, this is the starting position of the loop.
         */

      }, {
        key: "loopStart",
        get: function get() {
          return new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__["TimeClass"](this.context, this._loopStart, "i").toSeconds();
        },
        set: function set(startPosition) {
          this._loopStart = this.toTicks(startPosition);
        }
        /**
         * When the Transport.loop = true, this is the ending position of the loop.
         */

      }, {
        key: "loopEnd",
        get: function get() {
          return new _core_type_Time__WEBPACK_IMPORTED_MODULE_0__["TimeClass"](this.context, this._loopEnd, "i").toSeconds();
        },
        set: function set(endPosition) {
          this._loopEnd = this.toTicks(endPosition);
        }
        /**
         * If the transport loops or not.
         */

      }, {
        key: "loop",
        get: function get() {
          return this._loop.get(this.now());
        },
        set: function set(loop) {
          this._loop.set(loop, this.now());
        }
      }, {
        key: "swing",
        get: function get() {
          return this._swingAmount;
        },
        set: function set(amount) {
          // scale the values to a normal range
          this._swingAmount = amount;
        }
        /**
         * Set the subdivision which the swing will be applied to.
         * The default value is an 8th note. Value must be less
         * than a quarter note.
         */

      }, {
        key: "swingSubdivision",
        get: function get() {
          return new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__["TicksClass"](this.context, this._swingTicks).toNotation();
        },
        set: function set(subdivision) {
          this._swingTicks = this.toTicks(subdivision);
        }
        /**
         * The Transport's position in Bars:Beats:Sixteenths.
         * Setting the value will jump to that position right away.
         */

      }, {
        key: "position",
        get: function get() {
          var now = this.now();

          var ticks = this._clock.getTicksAtTime(now);

          return new _type_Ticks__WEBPACK_IMPORTED_MODULE_5__["TicksClass"](this.context, ticks).toBarsBeatsSixteenths();
        },
        set: function set(progress) {
          var ticks = this.toTicks(progress);
          this.ticks = ticks;
        }
        /**
         * The Transport's position in seconds
         * Setting the value will jump to that position right away.
         */

      }, {
        key: "seconds",
        get: function get() {
          return this._clock.seconds;
        },
        set: function set(s) {
          var now = this.now();

          var ticks = this._clock.frequency.timeToTicks(s, now);

          this.ticks = ticks;
        }
        /**
         * The Transport's loop position as a normalized value. Always
         * returns 0 if the transport if loop is not true.
         */

      }, {
        key: "progress",
        get: function get() {
          if (this.loop) {
            var now = this.now();

            var ticks = this._clock.getTicksAtTime(now);

            return (ticks - this._loopStart) / (this._loopEnd - this._loopStart);
          } else {
            return 0;
          }
        }
        /**
         * The transports current tick position.
         */

      }, {
        key: "ticks",
        get: function get() {
          return this._clock.ticks;
        },
        set: function set(t) {
          if (this._clock.ticks !== t) {
            var now = this.now(); // stop everything synced to the transport

            if (this.state === "started") {
              var ticks = this._clock.getTicksAtTime(now); // schedule to start on the next tick, #573


              var time = this._clock.getTimeOfTick(Math.ceil(ticks));

              this.emit("stop", time);

              this._clock.setTicksAtTime(t, time); // restart it with the new time


              this.emit("start", time, this._clock.getSecondsAtTime(time));
            } else {
              this._clock.setTicksAtTime(t, now);
            }
          }
        }
      }, {
        key: "PPQ",
        get: function get() {
          return this._clock.frequency.multiplier;
        },
        set: function set(ppq) {
          this._clock.frequency.multiplier = ppq;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_4__["ToneWithContext"].getDefaults(), {
            bpm: 120,
            loopEnd: "4m",
            loopStart: 0,
            ppq: 192,
            swing: 0,
            swingSubdivision: "8n",
            timeSignature: 4
          });
        }
      }]);

      return Transport;
    }(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_4__["ToneWithContext"]);

    _util_Emitter__WEBPACK_IMPORTED_MODULE_8__["Emitter"].mixin(Transport); //-------------------------------------
    // 	INITIALIZATION
    //-------------------------------------


    Object(_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextInit"])(function (context) {
      context.transport = new Transport({
        context: context
      });
    });
    Object(_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextClose"])(function (context) {
      context.transport.dispose();
    }); //# sourceMappingURL=Transport.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/core/clock/TransportEvent.js":
  /*!******************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/clock/TransportEvent.js ***!
    \******************************************************************/

  /*! exports provided: TransportEvent */

  /***/
  function node_modulesToneBuildEsmCoreClockTransportEventJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TransportEvent", function () {
      return TransportEvent;
    });
    /* harmony import */


    var _util_Interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * TransportEvent is an internal class used by [[Transport]]
     * to schedule events. Do no invoke this class directly, it is
     * handled from within Tone.Transport.
     */


    var TransportEvent = /*#__PURE__*/function () {
      /**
       * @param transport The transport object which the event belongs to
       */
      function TransportEvent(transport, opts) {
        _classCallCheck2(this, TransportEvent);

        /**
         * The unique id of the event
         */
        this.id = TransportEvent._eventId++;
        var options = Object.assign(TransportEvent.getDefaults(), opts);
        this.transport = transport;
        this.callback = options.callback;
        this._once = options.once;
        this.time = options.time;
      }

      _createClass2(TransportEvent, [{
        key: "invoke",

        /**
         * Invoke the event callback.
         * @param  time  The AudioContext time in seconds of the event
         */
        value: function invoke(time) {
          if (this.callback) {
            this.callback(time);

            if (this._once) {
              this.transport.clear(this.id);
            }
          }
        }
        /**
         * Clean up
         */

      }, {
        key: "dispose",
        value: function dispose() {
          this.callback = undefined;
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return {
            callback: _util_Interface__WEBPACK_IMPORTED_MODULE_0__["noOp"],
            once: false,
            time: 0
          };
        }
      }]);

      return TransportEvent;
    }();
    /**
     * Current ID counter
     */


    TransportEvent._eventId = 0; //# sourceMappingURL=TransportEvent.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js":
  /*!************************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/clock/TransportRepeatEvent.js ***!
    \************************************************************************/

  /*! exports provided: TransportRepeatEvent */

  /***/
  function node_modulesToneBuildEsmCoreClockTransportRepeatEventJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TransportRepeatEvent", function () {
      return TransportRepeatEvent;
    });
    /* harmony import */


    var _type_Ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../type/Ticks */
    "./node_modules/tone/build/esm/core/type/Ticks.js");
    /* harmony import */


    var _TransportEvent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./TransportEvent */
    "./node_modules/tone/build/esm/core/clock/TransportEvent.js");
    /**
     * TransportRepeatEvent is an internal class used by Tone.Transport
     * to schedule repeat events. This class should not be instantiated directly.
     */


    var TransportRepeatEvent = /*#__PURE__*/function (_TransportEvent__WEBP) {
      _inherits(TransportRepeatEvent, _TransportEvent__WEBP);

      var _super69 = _createSuper(TransportRepeatEvent);

      /**
       * @param transport The transport object which the event belongs to
       */
      function TransportRepeatEvent(transport, opts) {
        var _this92;

        _classCallCheck2(this, TransportRepeatEvent);

        _this92 = _super69.call(this, transport, opts);
        /**
         * The ID of the current timeline event
         */

        _this92._currentId = -1;
        /**
         * The ID of the next timeline event
         */

        _this92._nextId = -1;
        /**
         * The time of the next event
         */

        _this92._nextTick = _this92.time;
        /**
         * a reference to the bound start method
         */

        _this92._boundRestart = _this92._restart.bind(_assertThisInitialized(_this92));
        var options = Object.assign(TransportRepeatEvent.getDefaults(), opts);
        _this92.duration = new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](transport.context, options.duration).valueOf();
        _this92._interval = new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](transport.context, options.interval).valueOf();
        _this92._nextTick = options.time;

        _this92.transport.on("start", _this92._boundRestart);

        _this92.transport.on("loopStart", _this92._boundRestart);

        _this92.context = _this92.transport.context;

        _this92._restart();

        return _this92;
      }

      _createClass2(TransportRepeatEvent, [{
        key: "invoke",

        /**
         * Invoke the callback. Returns the tick time which
         * the next event should be scheduled at.
         * @param  time  The AudioContext time in seconds of the event
         */
        value: function invoke(time) {
          // create more events if necessary
          this._createEvents(time); // call the super class


          _get(_getPrototypeOf(TransportRepeatEvent.prototype), "invoke", this).call(this, time);
        }
        /**
         * Push more events onto the timeline to keep up with the position of the timeline
         */

      }, {
        key: "_createEvents",
        value: function _createEvents(time) {
          // schedule the next event
          var ticks = this.transport.getTicksAtTime(time);

          if (ticks >= this.time && ticks >= this._nextTick && this._nextTick + this._interval < this.time + this.duration) {
            this._nextTick += this._interval;
            this._currentId = this._nextId;
            this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._nextTick).toSeconds());
          }
        }
        /**
         * Push more events onto the timeline to keep up with the position of the timeline
         */

      }, {
        key: "_restart",
        value: function _restart(time) {
          this.transport.clear(this._currentId);
          this.transport.clear(this._nextId);
          this._nextTick = this.time;
          var ticks = this.transport.getTicksAtTime(time);

          if (ticks > this.time) {
            this._nextTick = this.time + Math.ceil((ticks - this.time) / this._interval) * this._interval;
          }

          this._currentId = this.transport.scheduleOnce(this.invoke.bind(this), new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._nextTick).toSeconds());
          this._nextTick += this._interval;
          this._nextId = this.transport.scheduleOnce(this.invoke.bind(this), new _type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._nextTick).toSeconds());
        }
        /**
         * Clean up
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(TransportRepeatEvent.prototype), "dispose", this).call(this);

          this.transport.clear(this._currentId);
          this.transport.clear(this._nextId);
          this.transport.off("start", this._boundRestart);
          this.transport.off("loopStart", this._boundRestart);
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign({}, _TransportEvent__WEBPACK_IMPORTED_MODULE_1__["TransportEvent"].getDefaults(), {
            duration: Infinity,
            interval: 1,
            once: false
          });
        }
      }]);

      return TransportRepeatEvent;
    }(_TransportEvent__WEBPACK_IMPORTED_MODULE_1__["TransportEvent"]); //# sourceMappingURL=TransportRepeatEvent.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/AudioContext.js":
  /*!******************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/AudioContext.js ***!
    \******************************************************************/

  /*! exports provided: createAudioContext, createOfflineAudioContext, theWindow, hasAudioContext, createAudioWorkletNode, supported */

  /***/
  function node_modulesToneBuildEsmCoreContextAudioContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioContext", function () {
      return createAudioContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createOfflineAudioContext", function () {
      return createOfflineAudioContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "theWindow", function () {
      return theWindow;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "hasAudioContext", function () {
      return hasAudioContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "createAudioWorkletNode", function () {
      return createAudioWorkletNode;
    });
    /* harmony import */


    var standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! standardized-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/module.js");
    /* harmony import */


    var _util_Debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "supported", function () {
      return standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["isSupported"];
    });
    /**
     * Create a new AudioContext
     */


    function createAudioContext(options) {
      return new standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["AudioContext"](options);
    }
    /**
     * Create a new OfflineAudioContext
     */


    function createOfflineAudioContext(channels, length, sampleRate) {
      return new standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["OfflineAudioContext"](channels, length, sampleRate);
    }
    /**
     * A reference to the window object
     * @hidden
     */


    var theWindow = typeof self === "object" ? self : null;
    /**
     * If the browser has a window object which has an AudioContext
     * @hidden
     */

    var hasAudioContext = theWindow && (theWindow.hasOwnProperty("AudioContext") || theWindow.hasOwnProperty("webkitAudioContext"));

    function createAudioWorkletNode(context, name, options) {
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_1__["assert"])(Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isDefined"])(standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["AudioWorkletNode"]), "This node only works in a secure context (https or localhost)"); // @ts-ignore

      return new standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["AudioWorkletNode"](context, name, options);
    }
    /**
     * This promise resolves to a boolean which indicates if the
     * functionality is supported within the currently used browse.
     * Taken from [standardized-audio-context](https://github.com/chrisguttandin/standardized-audio-context#issupported)
     */
    //# sourceMappingURL=AudioContext.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/BaseContext.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/BaseContext.js ***!
    \*****************************************************************/

  /*! exports provided: BaseContext */

  /***/
  function node_modulesToneBuildEsmCoreContextBaseContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BaseContext", function () {
      return BaseContext;
    });
    /* harmony import */


    var _util_Emitter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../util/Emitter */
    "./node_modules/tone/build/esm/core/util/Emitter.js");

    var BaseContext = /*#__PURE__*/function (_util_Emitter__WEBPAC) {
      _inherits(BaseContext, _util_Emitter__WEBPAC);

      var _super70 = _createSuper(BaseContext);

      function BaseContext() {
        var _this93;

        _classCallCheck2(this, BaseContext);

        _this93 = _super70.apply(this, arguments);
        _this93.isOffline = false;
        return _this93;
      }

      return BaseContext;
    }(_util_Emitter__WEBPACK_IMPORTED_MODULE_0__["Emitter"]); //# sourceMappingURL=BaseContext.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/Context.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/Context.js ***!
    \*************************************************************/

  /*! exports provided: Context */

  /***/
  function node_modulesToneBuildEsmCoreContextContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Context", function () {
      return Context;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _clock_Ticker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../clock/Ticker */
    "./node_modules/tone/build/esm/core/clock/Ticker.js");
    /* harmony import */


    var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/AdvancedTypeCheck */
    "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _util_Timeline__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../util/Timeline */
    "./node_modules/tone/build/esm/core/util/Timeline.js");
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _AudioContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./AudioContext */
    "./node_modules/tone/build/esm/core/context/AudioContext.js");
    /* harmony import */


    var _ContextInitialization__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./ContextInitialization */
    "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
    /* harmony import */


    var _BaseContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./BaseContext */
    "./node_modules/tone/build/esm/core/context/BaseContext.js");
    /* harmony import */


    var _util_Debug__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * Wrapper around the native AudioContext.
     * @category Core
     */


    var Context = /*#__PURE__*/function (_BaseContext__WEBPACK) {
      _inherits(Context, _BaseContext__WEBPACK);

      var _super71 = _createSuper(Context);

      function Context() {
        var _this94;

        _classCallCheck2(this, Context);

        _this94 = _super71.call(this);
        _this94.name = "Context";
        /**
         * An object containing all of the constants AudioBufferSourceNodes
         */

        _this94._constants = new Map();
        /**
         * All of the setTimeout events.
         */

        _this94._timeouts = new _util_Timeline__WEBPACK_IMPORTED_MODULE_4__["Timeline"]();
        /**
         * The timeout id counter
         */

        _this94._timeoutIds = 0;
        /**
         * Private indicator if the context has been initialized
         */

        _this94._initialized = false;
        /**
         * Indicates if the context is an OfflineAudioContext or an AudioContext
         */

        _this94.isOffline = false; //--------------------------------------------
        // AUDIO WORKLET
        //--------------------------------------------

        /**
         * Maps a module name to promise of the addModule method
         */

        _this94._workletModules = new Map();
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Context.getDefaults(), arguments, ["context"]);

        if (options.context) {
          _this94._context = options.context;
        } else {
          _this94._context = Object(_AudioContext__WEBPACK_IMPORTED_MODULE_6__["createAudioContext"])({
            latencyHint: options.latencyHint
          });
        }

        _this94._ticker = new _clock_Ticker__WEBPACK_IMPORTED_MODULE_1__["Ticker"](_this94.emit.bind(_assertThisInitialized(_this94), "tick"), options.clockSource, options.updateInterval);

        _this94.on("tick", _this94._timeoutLoop.bind(_assertThisInitialized(_this94))); // fwd events from the context


        _this94._context.onstatechange = function () {
          _this94.emit("statechange", _this94.state);
        };

        _this94._setLatencyHint(options.latencyHint);

        _this94.lookAhead = options.lookAhead;
        return _this94;
      }

      _createClass2(Context, [{
        key: "initialize",

        /**
         * Finish setting up the context. **You usually do not need to do this manually.**
         */
        value: function initialize() {
          if (!this._initialized) {
            // add any additional modules
            Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_7__["initializeContext"])(this);
            this._initialized = true;
          }

          return this;
        } //---------------------------
        // BASE AUDIO CONTEXT METHODS
        //---------------------------

      }, {
        key: "createAnalyser",
        value: function createAnalyser() {
          return this._context.createAnalyser();
        }
      }, {
        key: "createOscillator",
        value: function createOscillator() {
          return this._context.createOscillator();
        }
      }, {
        key: "createBufferSource",
        value: function createBufferSource() {
          return this._context.createBufferSource();
        }
      }, {
        key: "createBiquadFilter",
        value: function createBiquadFilter() {
          return this._context.createBiquadFilter();
        }
      }, {
        key: "createBuffer",
        value: function createBuffer(numberOfChannels, length, sampleRate) {
          return this._context.createBuffer(numberOfChannels, length, sampleRate);
        }
      }, {
        key: "createChannelMerger",
        value: function createChannelMerger(numberOfInputs) {
          return this._context.createChannelMerger(numberOfInputs);
        }
      }, {
        key: "createChannelSplitter",
        value: function createChannelSplitter(numberOfOutputs) {
          return this._context.createChannelSplitter(numberOfOutputs);
        }
      }, {
        key: "createConstantSource",
        value: function createConstantSource() {
          return this._context.createConstantSource();
        }
      }, {
        key: "createConvolver",
        value: function createConvolver() {
          return this._context.createConvolver();
        }
      }, {
        key: "createDelay",
        value: function createDelay(maxDelayTime) {
          return this._context.createDelay(maxDelayTime);
        }
      }, {
        key: "createDynamicsCompressor",
        value: function createDynamicsCompressor() {
          return this._context.createDynamicsCompressor();
        }
      }, {
        key: "createGain",
        value: function createGain() {
          return this._context.createGain();
        }
      }, {
        key: "createIIRFilter",
        value: function createIIRFilter(feedForward, feedback) {
          // @ts-ignore
          return this._context.createIIRFilter(feedForward, feedback);
        }
      }, {
        key: "createPanner",
        value: function createPanner() {
          return this._context.createPanner();
        }
      }, {
        key: "createPeriodicWave",
        value: function createPeriodicWave(real, imag, constraints) {
          return this._context.createPeriodicWave(real, imag, constraints);
        }
      }, {
        key: "createStereoPanner",
        value: function createStereoPanner() {
          return this._context.createStereoPanner();
        }
      }, {
        key: "createWaveShaper",
        value: function createWaveShaper() {
          return this._context.createWaveShaper();
        }
      }, {
        key: "createMediaStreamSource",
        value: function createMediaStreamSource(stream) {
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_9__["assert"])(Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__["isAudioContext"])(this._context), "Not available if OfflineAudioContext");
          var context = this._context;
          return context.createMediaStreamSource(stream);
        }
      }, {
        key: "createMediaStreamDestination",
        value: function createMediaStreamDestination() {
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_9__["assert"])(Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__["isAudioContext"])(this._context), "Not available if OfflineAudioContext");
          var context = this._context;
          return context.createMediaStreamDestination();
        }
      }, {
        key: "decodeAudioData",
        value: function decodeAudioData(audioData) {
          return this._context.decodeAudioData(audioData);
        }
        /**
         * The current time in seconds of the AudioContext.
         */

      }, {
        key: "createAudioWorkletNode",

        /**
         * Create an audio worklet node from a name and options. The module
         * must first be loaded using [[addAudioWorkletModule]].
         */
        value: function createAudioWorkletNode(name, options) {
          return Object(_AudioContext__WEBPACK_IMPORTED_MODULE_6__["createAudioWorkletNode"])(this.rawContext, name, options);
        }
        /**
         * Add an AudioWorkletProcessor module
         * @param url The url of the module
         * @param name The name of the module
         */

      }, {
        key: "addAudioWorkletModule",
        value: function addAudioWorkletModule(url, name) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee37() {
            return regeneratorRuntime.wrap(function _callee37$(_context37) {
              while (1) {
                switch (_context37.prev = _context37.next) {
                  case 0:
                    Object(_util_Debug__WEBPACK_IMPORTED_MODULE_9__["assert"])(Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__["isDefined"])(this.rawContext.audioWorklet), "AudioWorkletNode is only available in a secure context (https or localhost)");

                    if (!this._workletModules.has(name)) {
                      this._workletModules.set(name, this.rawContext.audioWorklet.addModule(url));
                    }

                    _context37.next = 4;
                    return this._workletModules.get(name);

                  case 4:
                  case "end":
                    return _context37.stop();
                }
              }
            }, _callee37, this);
          }));
        }
        /**
         * Returns a promise which resolves when all of the worklets have been loaded on this context
         */

      }, {
        key: "workletsAreReady",
        value: function workletsAreReady() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee38() {
            var promises;
            return regeneratorRuntime.wrap(function _callee38$(_context38) {
              while (1) {
                switch (_context38.prev = _context38.next) {
                  case 0:
                    promises = [];

                    this._workletModules.forEach(function (promise) {
                      return promises.push(promise);
                    });

                    _context38.next = 4;
                    return Promise.all(promises);

                  case 4:
                  case "end":
                    return _context38.stop();
                }
              }
            }, _callee38, this);
          }));
        } //---------------------------
        // TICKER
        //---------------------------

        /**
         * How often the interval callback is invoked.
         * This number corresponds to how responsive the scheduling
         * can be. context.updateInterval + context.lookAhead gives you the
         * total latency between scheduling an event and hearing it.
         */

      }, {
        key: "_setLatencyHint",

        /**
         * Update the lookAhead and updateInterval based on the latencyHint
         */
        value: function _setLatencyHint(hint) {
          var lookAheadValue = 0;
          this._latencyHint = hint;

          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__["isString"])(hint)) {
            switch (hint) {
              case "interactive":
                lookAheadValue = 0.1;
                break;

              case "playback":
                lookAheadValue = 0.5;
                break;

              case "balanced":
                lookAheadValue = 0.25;
                break;
            }
          }

          this.lookAhead = lookAheadValue;
          this.updateInterval = lookAheadValue / 2;
        }
        /**
         * The unwrapped AudioContext or OfflineAudioContext
         */

      }, {
        key: "now",

        /**
         * The current audio context time plus a short [[lookAhead]].
         */
        value: function now() {
          return this._context.currentTime + this.lookAhead;
        }
        /**
         * The current audio context time without the [[lookAhead]].
         * In most cases it is better to use [[now]] instead of [[immediate]] since
         * with [[now]] the [[lookAhead]] is applied equally to _all_ components including internal components,
         * to making sure that everything is scheduled in sync. Mixing [[now]] and [[immediate]]
         * can cause some timing issues. If no lookAhead is desired, you can set the [[lookAhead]] to `0`.
         */

      }, {
        key: "immediate",
        value: function immediate() {
          return this._context.currentTime;
        }
        /**
         * Starts the audio context from a suspended state. This is required
         * to initially start the AudioContext. See [[Tone.start]]
         */

      }, {
        key: "resume",
        value: function resume() {
          if (this._context.state === "suspended" && Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__["isAudioContext"])(this._context)) {
            return this._context.resume();
          } else {
            return Promise.resolve();
          }
        }
        /**
         * Close the context. Once closed, the context can no longer be used and
         * any AudioNodes created from the context will be silent.
         */

      }, {
        key: "close",
        value: function close() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee39() {
            return regeneratorRuntime.wrap(function _callee39$(_context39) {
              while (1) {
                switch (_context39.prev = _context39.next) {
                  case 0:
                    if (!Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__["isAudioContext"])(this._context)) {
                      _context39.next = 3;
                      break;
                    }

                    _context39.next = 3;
                    return this._context.close();

                  case 3:
                    if (this._initialized) {
                      Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_7__["closeContext"])(this);
                    }

                  case 4:
                  case "end":
                    return _context39.stop();
                }
              }
            }, _callee39, this);
          }));
        }
        /**
         * **Internal** Generate a looped buffer at some constant value.
         */

      }, {
        key: "getConstant",
        value: function getConstant(val) {
          if (this._constants.has(val)) {
            return this._constants.get(val);
          } else {
            var buffer = this._context.createBuffer(1, 128, this._context.sampleRate);

            var arr = buffer.getChannelData(0);

            for (var i = 0; i < arr.length; i++) {
              arr[i] = val;
            }

            var constant = this._context.createBufferSource();

            constant.channelCount = 1;
            constant.channelCountMode = "explicit";
            constant.buffer = buffer;
            constant.loop = true;
            constant.start(0);

            this._constants.set(val, constant);

            return constant;
          }
        }
        /**
         * Clean up. Also closes the audio context.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          var _this95 = this;

          _get(_getPrototypeOf(Context.prototype), "dispose", this).call(this);

          this._ticker.dispose();

          this._timeouts.dispose();

          Object.keys(this._constants).map(function (val) {
            return _this95._constants[val].disconnect();
          });
          return this;
        } //---------------------------
        // TIMEOUTS
        //---------------------------

        /**
         * The private loop which keeps track of the context scheduled timeouts
         * Is invoked from the clock source
         */

      }, {
        key: "_timeoutLoop",
        value: function _timeoutLoop() {
          var now = this.now();

          var firstEvent = this._timeouts.peek();

          while (this._timeouts.length && firstEvent && firstEvent.time <= now) {
            // invoke the callback
            firstEvent.callback(); // shift the first event off

            this._timeouts.shift(); // get the next one


            firstEvent = this._timeouts.peek();
          }
        }
        /**
         * A setTimeout which is guaranteed by the clock source.
         * Also runs in the offline context.
         * @param  fn       The callback to invoke
         * @param  timeout  The timeout in seconds
         * @returns ID to use when invoking Context.clearTimeout
         */

      }, {
        key: "setTimeout",
        value: function setTimeout(fn, timeout) {
          this._timeoutIds++;
          var now = this.now();

          this._timeouts.add({
            callback: fn,
            id: this._timeoutIds,
            time: now + timeout
          });

          return this._timeoutIds;
        }
        /**
         * Clears a previously scheduled timeout with Tone.context.setTimeout
         * @param  id  The ID returned from setTimeout
         */

      }, {
        key: "clearTimeout",
        value: function clearTimeout(id) {
          var _this96 = this;

          this._timeouts.forEach(function (event) {
            if (event.id === id) {
              _this96._timeouts.remove(event);
            }
          });

          return this;
        }
        /**
         * Clear the function scheduled by [[setInterval]]
         */

      }, {
        key: "clearInterval",
        value: function clearInterval(id) {
          return this.clearTimeout(id);
        }
        /**
         * Adds a repeating event to the context's callback clock
         */

      }, {
        key: "setInterval",
        value: function setInterval(fn, interval) {
          var _this97 = this;

          var id = ++this._timeoutIds;

          var intervalFn = function intervalFn() {
            var now = _this97.now();

            _this97._timeouts.add({
              callback: function callback() {
                // invoke the callback
                fn(); // invoke the event to repeat it

                intervalFn();
              },
              id: id,
              time: now + interval
            });
          }; // kick it off


          intervalFn();
          return id;
        }
      }, {
        key: "currentTime",
        get: function get() {
          return this._context.currentTime;
        }
        /**
         * The current time in seconds of the AudioContext.
         */

      }, {
        key: "state",
        get: function get() {
          return this._context.state;
        }
        /**
         * The current time in seconds of the AudioContext.
         */

      }, {
        key: "sampleRate",
        get: function get() {
          return this._context.sampleRate;
        }
        /**
         * The listener
         */

      }, {
        key: "listener",
        get: function get() {
          this.initialize();
          return this._listener;
        },
        set: function set(l) {
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_9__["assert"])(!this._initialized, "The listener cannot be set after initialization.");
          this._listener = l;
        }
        /**
         * There is only one Transport per Context. It is created on initialization.
         */

      }, {
        key: "transport",
        get: function get() {
          this.initialize();
          return this._transport;
        },
        set: function set(t) {
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_9__["assert"])(!this._initialized, "The transport cannot be set after initialization.");
          this._transport = t;
        }
        /**
         * This is the Draw object for the context which is useful for synchronizing the draw frame with the Tone.js clock.
         */

      }, {
        key: "draw",
        get: function get() {
          this.initialize();
          return this._draw;
        },
        set: function set(d) {
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_9__["assert"])(!this._initialized, "Draw cannot be set after initialization.");
          this._draw = d;
        }
        /**
         * A reference to the Context's destination node.
         */

      }, {
        key: "destination",
        get: function get() {
          this.initialize();
          return this._destination;
        },
        set: function set(d) {
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_9__["assert"])(!this._initialized, "The destination cannot be set after initialization.");
          this._destination = d;
        }
      }, {
        key: "updateInterval",
        get: function get() {
          return this._ticker.updateInterval;
        },
        set: function set(interval) {
          this._ticker.updateInterval = interval;
        }
        /**
         * What the source of the clock is, either "worker" (default),
         * "timeout", or "offline" (none).
         */

      }, {
        key: "clockSource",
        get: function get() {
          return this._ticker.type;
        },
        set: function set(type) {
          this._ticker.type = type;
        }
        /**
         * The type of playback, which affects tradeoffs between audio
         * output latency and responsiveness.
         * In addition to setting the value in seconds, the latencyHint also
         * accepts the strings "interactive" (prioritizes low latency),
         * "playback" (prioritizes sustained playback), "balanced" (balances
         * latency and performance), and "fastest" (lowest latency, might glitch more often).
         * @example
         * // prioritize sustained playback
         * const context = new Tone.Context({ latencyHint: "playback" });
         * // set this context as the global Context
         * Tone.setContext(context);
         */

      }, {
        key: "latencyHint",
        get: function get() {
          return this._latencyHint;
        }
      }, {
        key: "rawContext",
        get: function get() {
          return this._context;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return {
            clockSource: "worker",
            latencyHint: "interactive",
            lookAhead: 0.1,
            updateInterval: 0.05
          };
        }
      }]);

      return Context;
    }(_BaseContext__WEBPACK_IMPORTED_MODULE_8__["BaseContext"]); //# sourceMappingURL=Context.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/ContextInitialization.js":
  /*!***************************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/ContextInitialization.js ***!
    \***************************************************************************/

  /*! exports provided: onContextInit, initializeContext, onContextClose, closeContext */

  /***/
  function node_modulesToneBuildEsmCoreContextContextInitializationJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "onContextInit", function () {
      return onContextInit;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "initializeContext", function () {
      return initializeContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "onContextClose", function () {
      return onContextClose;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "closeContext", function () {
      return closeContext;
    }); //-------------------------------------
    // INITIALIZING NEW CONTEXT
    //-------------------------------------

    /**
     * Array of callbacks to invoke when a new context is created
     */


    var notifyNewContext = [];
    /**
     * Used internally to setup a new Context
     */

    function onContextInit(cb) {
      notifyNewContext.push(cb);
    }
    /**
     * Invoke any classes which need to also be initialized when a new context is created.
     */


    function initializeContext(ctx) {
      // add any additional modules
      notifyNewContext.forEach(function (cb) {
        return cb(ctx);
      });
    }
    /**
     * Array of callbacks to invoke when a new context is created
     */


    var notifyCloseContext = [];
    /**
     * Used internally to tear down a Context
     */

    function onContextClose(cb) {
      notifyCloseContext.push(cb);
    }

    function closeContext(ctx) {
      // add any additional modules
      notifyCloseContext.forEach(function (cb) {
        return cb(ctx);
      });
    } //# sourceMappingURL=ContextInitialization.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/Delay.js":
  /*!***********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/Delay.js ***!
    \***********************************************************/

  /*! exports provided: Delay */

  /***/
  function node_modulesToneBuildEsmCoreContextDelayJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Delay", function () {
      return Delay;
    });
    /* harmony import */


    var _context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /**
     * Wrapper around Web Audio's native [DelayNode](http://webaudio.github.io/web-audio-api/#the-delaynode-interface).
     * @category Core
     * @offline 0.5 1
     * @example
     * const delay = new Tone.Delay(0.1).toDestination();
     * // connect the signal to both the delay and the destination
     * const pulse = new Tone.PulseOscillator().fan(delay, Tone.Destination);
     * // start and stop the pulse
     * pulse.start(0).stop(0.01);
     */


    var Delay = /*#__PURE__*/function (_ToneAudioNode__WEBPA) {
      _inherits(Delay, _ToneAudioNode__WEBPA);

      var _super72 = _createSuper(Delay);

      function Delay() {
        var _this98;

        _classCallCheck2(this, Delay);

        _this98 = _super72.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Delay.getDefaults(), arguments, ["delayTime", "maxDelay"]));
        _this98.name = "Delay";
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Delay.getDefaults(), arguments, ["delayTime", "maxDelay"]);

        var maxDelayInSeconds = _this98.toSeconds(options.maxDelay);

        _this98._maxDelay = Math.max(maxDelayInSeconds, _this98.toSeconds(options.delayTime));
        _this98._delayNode = _this98.input = _this98.output = _this98.context.createDelay(maxDelayInSeconds);
        _this98.delayTime = new _context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          context: _this98.context,
          param: _this98._delayNode.delayTime,
          units: "time",
          value: options.delayTime,
          minValue: 0,
          maxValue: _this98.maxDelay
        });
        Object(_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this98), "delayTime");
        return _this98;
      }

      _createClass2(Delay, [{
        key: "dispose",

        /**
         * Clean up.
         */
        value: function dispose() {
          _get(_getPrototypeOf(Delay.prototype), "dispose", this).call(this);

          this._delayNode.disconnect();

          this.delayTime.dispose();
          return this;
        }
      }, {
        key: "maxDelay",

        /**
         * The maximum delay time. This cannot be changed after
         * the value is passed into the constructor.
         */
        get: function get() {
          return this._maxDelay;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"].getDefaults(), {
            delayTime: 0,
            maxDelay: 1
          });
        }
      }]);

      return Delay;
    }(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"]); //# sourceMappingURL=Delay.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/Destination.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/Destination.js ***!
    \*****************************************************************/

  /*! exports provided: Destination */

  /***/
  function node_modulesToneBuildEsmCoreContextDestinationJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Destination", function () {
      return Destination;
    });
    /* harmony import */


    var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../component/channel/Volume */
    "./node_modules/tone/build/esm/component/channel/Volume.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./ContextInitialization */
    "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
    /* harmony import */


    var _Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /**
     * A single master output which is connected to the
     * AudioDestinationNode (aka your speakers).
     * It provides useful conveniences such as the ability
     * to set the volume and mute the entire application.
     * It also gives you the ability to apply master effects to your application.
     *
     * @example
     * const oscillator = new Tone.Oscillator().start();
     * // the audio will go from the oscillator to the speakers
     * oscillator.connect(Tone.Destination);
     * // a convenience for connecting to the master output is also provided:
     * oscillator.toDestination();
     * @category Core
     */


    var Destination = /*#__PURE__*/function (_ToneAudioNode__WEBPA2) {
      _inherits(Destination, _ToneAudioNode__WEBPA2);

      var _super73 = _createSuper(Destination);

      function Destination() {
        var _this99;

        _classCallCheck2(this, Destination);

        _this99 = _super73.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Destination.getDefaults(), arguments));
        _this99.name = "Destination";
        _this99.input = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__["Volume"]({
          context: _this99.context
        });
        _this99.output = new _Gain__WEBPACK_IMPORTED_MODULE_3__["Gain"]({
          context: _this99.context
        });
        /**
         * The volume of the master output.
         */

        _this99.volume = _this99.input.volume;
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Destination.getDefaults(), arguments);
        Object(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["connectSeries"])(_this99.input, _this99.output, _this99.context.rawContext.destination);
        _this99.mute = options.mute;
        _this99._internalChannels = [_this99.input, _this99.context.rawContext.destination, _this99.output];
        return _this99;
      }

      _createClass2(Destination, [{
        key: "chain",

        /**
         * Add a master effects chain. NOTE: this will disconnect any nodes which were previously
         * chained in the master effects chain.
         * @param args All arguments will be connected in a row and the Master will be routed through it.
         * @example
         * // route all audio through a filter and compressor
         * const lowpass = new Tone.Filter(800, "lowpass");
         * const compressor = new Tone.Compressor(-18);
         * Tone.Destination.chain(lowpass, compressor);
         */
        value: function chain() {
          this.input.disconnect();

          for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
            args[_key6] = arguments[_key6];
          }

          args.unshift(this.input);
          args.push(this.output);
          Object(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["connectSeries"]).apply(void 0, args);
          return this;
        }
        /**
         * The maximum number of channels the system can output
         * @example
         * console.log(Tone.Destination.maxChannelCount);
         */

      }, {
        key: "dispose",

        /**
         * Clean up
         */
        value: function dispose() {
          _get(_getPrototypeOf(Destination.prototype), "dispose", this).call(this);

          this.volume.dispose();
          return this;
        }
      }, {
        key: "mute",

        /**
         * Mute the output.
         * @example
         * const oscillator = new Tone.Oscillator().start().toDestination();
         * setTimeout(() => {
         * 	// mute the output
         * 	Tone.Destination.mute = true;
         * }, 1000);
         */
        get: function get() {
          return this.input.mute;
        },
        set: function set(mute) {
          this.input.mute = mute;
        }
      }, {
        key: "maxChannelCount",
        get: function get() {
          return this.context.rawContext.destination.maxChannelCount;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["ToneAudioNode"].getDefaults(), {
            mute: false,
            volume: 0
          });
        }
      }]);

      return Destination;
    }(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["ToneAudioNode"]); //-------------------------------------
    // 	INITIALIZATION
    //-------------------------------------


    Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextInit"])(function (context) {
      context.destination = new Destination({
        context: context
      });
    });
    Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextClose"])(function (context) {
      context.destination.dispose();
    }); //# sourceMappingURL=Destination.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/core/context/DummyContext.js":
  /*!******************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/DummyContext.js ***!
    \******************************************************************/

  /*! exports provided: DummyContext */

  /***/
  function node_modulesToneBuildEsmCoreContextDummyContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DummyContext", function () {
      return DummyContext;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _BaseContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./BaseContext */
    "./node_modules/tone/build/esm/core/context/BaseContext.js");

    var DummyContext = /*#__PURE__*/function (_BaseContext__WEBPACK2) {
      _inherits(DummyContext, _BaseContext__WEBPACK2);

      var _super74 = _createSuper(DummyContext);

      function DummyContext() {
        var _this100;

        _classCallCheck2(this, DummyContext);

        _this100 = _super74.apply(this, arguments);
        _this100.lookAhead = 0;
        _this100.latencyHint = 0;
        _this100.isOffline = false;
        return _this100;
      } //---------------------------
      // BASE AUDIO CONTEXT METHODS
      //---------------------------


      _createClass2(DummyContext, [{
        key: "createAnalyser",
        value: function createAnalyser() {
          return {};
        }
      }, {
        key: "createOscillator",
        value: function createOscillator() {
          return {};
        }
      }, {
        key: "createBufferSource",
        value: function createBufferSource() {
          return {};
        }
      }, {
        key: "createBiquadFilter",
        value: function createBiquadFilter() {
          return {};
        }
      }, {
        key: "createBuffer",
        value: function createBuffer(_numberOfChannels, _length, _sampleRate) {
          return {};
        }
      }, {
        key: "createChannelMerger",
        value: function createChannelMerger(_numberOfInputs) {
          return {};
        }
      }, {
        key: "createChannelSplitter",
        value: function createChannelSplitter(_numberOfOutputs) {
          return {};
        }
      }, {
        key: "createConstantSource",
        value: function createConstantSource() {
          return {};
        }
      }, {
        key: "createConvolver",
        value: function createConvolver() {
          return {};
        }
      }, {
        key: "createDelay",
        value: function createDelay(_maxDelayTime) {
          return {};
        }
      }, {
        key: "createDynamicsCompressor",
        value: function createDynamicsCompressor() {
          return {};
        }
      }, {
        key: "createGain",
        value: function createGain() {
          return {};
        }
      }, {
        key: "createIIRFilter",
        value: function createIIRFilter(_feedForward, _feedback) {
          return {};
        }
      }, {
        key: "createPanner",
        value: function createPanner() {
          return {};
        }
      }, {
        key: "createPeriodicWave",
        value: function createPeriodicWave(_real, _imag, _constraints) {
          return {};
        }
      }, {
        key: "createStereoPanner",
        value: function createStereoPanner() {
          return {};
        }
      }, {
        key: "createWaveShaper",
        value: function createWaveShaper() {
          return {};
        }
      }, {
        key: "createMediaStreamSource",
        value: function createMediaStreamSource(_stream) {
          return {};
        }
      }, {
        key: "createMediaStreamDestination",
        value: function createMediaStreamDestination() {
          return {};
        }
      }, {
        key: "decodeAudioData",
        value: function decodeAudioData(_audioData) {
          return Promise.resolve({});
        } //---------------------------
        // TONE AUDIO CONTEXT METHODS
        //---------------------------

      }, {
        key: "createAudioWorkletNode",
        value: function createAudioWorkletNode(_name, _options) {
          return {};
        }
      }, {
        key: "addAudioWorkletModule",
        value: function addAudioWorkletModule(_url, _name) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee40() {
            return regeneratorRuntime.wrap(function _callee40$(_context40) {
              while (1) {
                switch (_context40.prev = _context40.next) {
                  case 0:
                    return _context40.abrupt("return", Promise.resolve());

                  case 1:
                  case "end":
                    return _context40.stop();
                }
              }
            }, _callee40);
          }));
        }
      }, {
        key: "resume",
        value: function resume() {
          return Promise.resolve();
        }
      }, {
        key: "setTimeout",
        value: function setTimeout(_fn, _timeout) {
          return 0;
        }
      }, {
        key: "clearTimeout",
        value: function clearTimeout(_id) {
          return this;
        }
      }, {
        key: "setInterval",
        value: function setInterval(_fn, _interval) {
          return 0;
        }
      }, {
        key: "clearInterval",
        value: function clearInterval(_id) {
          return this;
        }
      }, {
        key: "getConstant",
        value: function getConstant(_val) {
          return {};
        }
      }, {
        key: "now",
        value: function now() {
          return 0;
        }
      }, {
        key: "immediate",
        value: function immediate() {
          return 0;
        }
      }, {
        key: "rawContext",
        get: function get() {
          return {};
        }
      }, {
        key: "currentTime",
        get: function get() {
          return 0;
        }
      }, {
        key: "state",
        get: function get() {
          return {};
        }
      }, {
        key: "sampleRate",
        get: function get() {
          return 0;
        }
      }, {
        key: "listener",
        get: function get() {
          return {};
        }
      }, {
        key: "transport",
        get: function get() {
          return {};
        }
      }, {
        key: "draw",
        get: function get() {
          return {};
        },
        set: function set(_d) {}
      }, {
        key: "destination",
        get: function get() {
          return {};
        },
        set: function set(_d) {}
      }]);

      return DummyContext;
    }(_BaseContext__WEBPACK_IMPORTED_MODULE_1__["BaseContext"]); //# sourceMappingURL=DummyContext.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/Gain.js":
  /*!**********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/Gain.js ***!
    \**********************************************************/

  /*! exports provided: Gain */

  /***/
  function node_modulesToneBuildEsmCoreContextGainJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Gain", function () {
      return Gain;
    });
    /* harmony import */


    var _context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /**
     * A thin wrapper around the Native Web Audio GainNode.
     * The GainNode is a basic building block of the Web Audio
     * API and is useful for routing audio and adjusting gains.
     * @category Core
     * @offline 0.7 1
     * @example
     * const gainNode = new Tone.Gain(0).toDestination();
     * const osc = new Tone.Oscillator(30).connect(gainNode).start();
     * gainNode.gain.rampTo(1, 0.1);
     * gainNode.gain.rampTo(0, 0.4, 0.2);
     */


    var Gain = /*#__PURE__*/function (_ToneAudioNode__WEBPA3) {
      _inherits(Gain, _ToneAudioNode__WEBPA3);

      var _super75 = _createSuper(Gain);

      function Gain() {
        var _this101;

        _classCallCheck2(this, Gain);

        _this101 = _super75.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Gain.getDefaults(), arguments, ["gain", "units"]));
        _this101.name = "Gain";
        /**
         * The wrapped GainNode.
         */

        _this101._gainNode = _this101.context.createGain(); // input = output

        _this101.input = _this101._gainNode;
        _this101.output = _this101._gainNode;
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Gain.getDefaults(), arguments, ["gain", "units"]);
        _this101.gain = new _context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"]({
          context: _this101.context,
          convert: options.convert,
          param: _this101._gainNode.gain,
          units: options.units,
          value: options.gain,
          minValue: options.minValue,
          maxValue: options.maxValue
        });
        Object(_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this101), "gain");
        return _this101;
      }

      _createClass2(Gain, [{
        key: "dispose",

        /**
         * Clean up.
         */
        value: function dispose() {
          _get(_getPrototypeOf(Gain.prototype), "dispose", this).call(this);

          this._gainNode.disconnect();

          this.gain.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"].getDefaults(), {
            convert: true,
            gain: 1,
            units: "gain"
          });
        }
      }]);

      return Gain;
    }(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"]); //# sourceMappingURL=Gain.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/Listener.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/Listener.js ***!
    \**************************************************************/

  /*! exports provided: Listener */

  /***/
  function node_modulesToneBuildEsmCoreContextListenerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Listener", function () {
      return Listener;
    });
    /* harmony import */


    var _ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./ContextInitialization */
    "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
    /**
     * Tone.Listener is a thin wrapper around the AudioListener. Listener combined
     * with [[Panner3D]] makes up the Web Audio API's 3D panning system. Panner3D allows you
     * to place sounds in 3D and Listener allows you to navigate the 3D sound environment from
     * a first-person perspective. There is only one listener per audio context.
     */


    var Listener = /*#__PURE__*/function (_ToneAudioNode__WEBPA4) {
      _inherits(Listener, _ToneAudioNode__WEBPA4);

      var _super76 = _createSuper(Listener);

      function Listener() {
        var _this102;

        _classCallCheck2(this, Listener);

        _this102 = _super76.apply(this, arguments);
        _this102.name = "Listener";
        _this102.positionX = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this102.context,
          param: _this102.context.rawContext.listener.positionX
        });
        _this102.positionY = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this102.context,
          param: _this102.context.rawContext.listener.positionY
        });
        _this102.positionZ = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this102.context,
          param: _this102.context.rawContext.listener.positionZ
        });
        _this102.forwardX = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this102.context,
          param: _this102.context.rawContext.listener.forwardX
        });
        _this102.forwardY = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this102.context,
          param: _this102.context.rawContext.listener.forwardY
        });
        _this102.forwardZ = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this102.context,
          param: _this102.context.rawContext.listener.forwardZ
        });
        _this102.upX = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this102.context,
          param: _this102.context.rawContext.listener.upX
        });
        _this102.upY = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this102.context,
          param: _this102.context.rawContext.listener.upY
        });
        _this102.upZ = new _Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this102.context,
          param: _this102.context.rawContext.listener.upZ
        });
        return _this102;
      }

      _createClass2(Listener, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Listener.prototype), "dispose", this).call(this);

          this.positionX.dispose();
          this.positionY.dispose();
          this.positionZ.dispose();
          this.forwardX.dispose();
          this.forwardY.dispose();
          this.forwardZ.dispose();
          this.upX.dispose();
          this.upY.dispose();
          this.upZ.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            positionX: 0,
            positionY: 0,
            positionZ: 0,
            forwardX: 0,
            forwardY: 0,
            forwardZ: -1,
            upX: 0,
            upY: 1,
            upZ: 0
          });
        }
      }]);

      return Listener;
    }(_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //-------------------------------------
    // 	INITIALIZATION
    //-------------------------------------


    Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextInit"])(function (context) {
      context.listener = new Listener({
        context: context
      });
    });
    Object(_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextClose"])(function (context) {
      context.listener.dispose();
    }); //# sourceMappingURL=Listener.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/core/context/Offline.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/Offline.js ***!
    \*************************************************************/

  /*! exports provided: Offline */

  /***/
  function node_modulesToneBuildEsmCoreContextOfflineJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Offline", function () {
      return Offline;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _Global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../Global */
    "./node_modules/tone/build/esm/core/Global.js");
    /* harmony import */


    var _OfflineContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./OfflineContext */
    "./node_modules/tone/build/esm/core/context/OfflineContext.js");
    /* harmony import */


    var _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./ToneAudioBuffer */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
    /**
     * Generate a buffer by rendering all of the Tone.js code within the callback using the OfflineAudioContext.
     * The OfflineAudioContext is capable of rendering much faster than real time in many cases.
     * The callback function also passes in an offline instance of [[Context]] which can be used
     * to schedule events along the Transport.
     * @param  callback  All Tone.js nodes which are created and scheduled within this callback are recorded into the output Buffer.
     * @param  duration     the amount of time to record for.
     * @return  The promise which is invoked with the ToneAudioBuffer of the recorded output.
     * @example
     * // render 2 seconds of the oscillator
     * Tone.Offline(() => {
     * 	// only nodes created in this callback will be recorded
     * 	const oscillator = new Tone.Oscillator().toDestination().start(0);
     * }, 2).then((buffer) => {
     * 	// do something with the output buffer
     * 	console.log(buffer);
     * });
     * @example
     * // can also schedule events along the Transport
     * // using the passed in Offline Transport
     * Tone.Offline(({ transport }) => {
     * 	const osc = new Tone.Oscillator().toDestination();
     * 	transport.schedule(time => {
     * 		osc.start(time).stop(time + 0.1);
     * 	}, 1);
     * 	// make sure to start the transport
     * 	transport.start(0.2);
     * }, 4).then((buffer) => {
     * 	// do something with the output buffer
     * 	console.log(buffer);
     * });
     * @category Core
     */


    function Offline(callback, duration) {
      var channels = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;
      var sampleRate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Object(_Global__WEBPACK_IMPORTED_MODULE_1__["getContext"])().sampleRate;
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee41() {
        var originalContext, context, bufferPromise, buffer;
        return regeneratorRuntime.wrap(function _callee41$(_context41) {
          while (1) {
            switch (_context41.prev = _context41.next) {
              case 0:
                // set the OfflineAudioContext based on the current context
                originalContext = Object(_Global__WEBPACK_IMPORTED_MODULE_1__["getContext"])();
                context = new _OfflineContext__WEBPACK_IMPORTED_MODULE_2__["OfflineContext"](channels, duration, sampleRate);
                Object(_Global__WEBPACK_IMPORTED_MODULE_1__["setContext"])(context); // invoke the callback/scheduling

                _context41.next = 5;
                return callback(context);

              case 5:
                // then render the audio
                bufferPromise = context.render(); // return the original AudioContext

                Object(_Global__WEBPACK_IMPORTED_MODULE_1__["setContext"])(originalContext); // await the rendering

                _context41.next = 9;
                return bufferPromise;

              case 9:
                buffer = _context41.sent;
                return _context41.abrupt("return", new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__["ToneAudioBuffer"](buffer));

              case 11:
              case "end":
                return _context41.stop();
            }
          }
        }, _callee41);
      }));
    } //# sourceMappingURL=Offline.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/OfflineContext.js":
  /*!********************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/OfflineContext.js ***!
    \********************************************************************/

  /*! exports provided: OfflineContext */

  /***/
  function node_modulesToneBuildEsmCoreContextOfflineContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OfflineContext", function () {
      return OfflineContext;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _context_AudioContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../context/AudioContext */
    "./node_modules/tone/build/esm/core/context/AudioContext.js");
    /* harmony import */


    var _context_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../context/Context */
    "./node_modules/tone/build/esm/core/context/Context.js");
    /* harmony import */


    var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../util/AdvancedTypeCheck */
    "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
    /* harmony import */


    var _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./ToneAudioBuffer */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
    /**
     * Wrapper around the OfflineAudioContext
     * @category Core
     * @example
     * // generate a single channel, 0.5 second buffer
     * const context = new Tone.OfflineContext(1, 0.5);
     * const osc = new Tone.Oscillator({ context });
     * context.render().then(buffer => {
     * 	console.log(buffer.numberOfChannels, buffer.duration);
     * });
     */


    var OfflineContext = /*#__PURE__*/function (_context_Context__WEB) {
      _inherits(OfflineContext, _context_Context__WEB);

      var _super77 = _createSuper(OfflineContext);

      function OfflineContext() {
        var _this103;

        _classCallCheck2(this, OfflineContext);

        _this103 = _super77.call(this, {
          clockSource: "offline",
          context: Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__["isOfflineAudioContext"])(arguments[0]) ? arguments[0] : Object(_context_AudioContext__WEBPACK_IMPORTED_MODULE_1__["createOfflineAudioContext"])(arguments[0], arguments[1] * arguments[2], arguments[2]),
          lookAhead: 0,
          updateInterval: Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__["isOfflineAudioContext"])(arguments[0]) ? 128 / arguments[0].sampleRate : 128 / arguments[2]
        });
        _this103.name = "OfflineContext";
        /**
         * An artificial clock source
         */

        _this103._currentTime = 0;
        _this103.isOffline = true;
        _this103._duration = Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__["isOfflineAudioContext"])(arguments[0]) ? arguments[0].length / arguments[0].sampleRate : arguments[1];
        return _this103;
      }
      /**
       * Override the now method to point to the internal clock time
       */


      _createClass2(OfflineContext, [{
        key: "now",
        value: function now() {
          return this._currentTime;
        }
        /**
         * Same as this.now()
         */

      }, {
        key: "_renderClock",

        /**
         * Render just the clock portion of the audio context.
         */
        value: function _renderClock(asynchronous) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee42() {
            var index, yieldEvery;
            return regeneratorRuntime.wrap(function _callee42$(_context42) {
              while (1) {
                switch (_context42.prev = _context42.next) {
                  case 0:
                    index = 0;

                  case 1:
                    if (!(this._duration - this._currentTime >= 0)) {
                      _context42.next = 11;
                      break;
                    }

                    // invoke all the callbacks on that time
                    this.emit("tick"); // increment the clock in block-sized chunks

                    this._currentTime += 128 / this.sampleRate; // yield once a second of audio

                    index++;
                    yieldEvery = Math.floor(this.sampleRate / 128);

                    if (!(asynchronous && index % yieldEvery === 0)) {
                      _context42.next = 9;
                      break;
                    }

                    _context42.next = 9;
                    return new Promise(function (done) {
                      return setTimeout(done, 1);
                    });

                  case 9:
                    _context42.next = 1;
                    break;

                  case 11:
                  case "end":
                    return _context42.stop();
                }
              }
            }, _callee42, this);
          }));
        }
        /**
         * Render the output of the OfflineContext
         * @param asynchronous If the clock should be rendered asynchronously, which will not block the main thread, but be slightly slower.
         */

      }, {
        key: "render",
        value: function render() {
          var asynchronous = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee43() {
            var buffer;
            return regeneratorRuntime.wrap(function _callee43$(_context43) {
              while (1) {
                switch (_context43.prev = _context43.next) {
                  case 0:
                    _context43.next = 2;
                    return this.workletsAreReady();

                  case 2:
                    _context43.next = 4;
                    return this._renderClock(asynchronous);

                  case 4:
                    _context43.next = 6;
                    return this._context.startRendering();

                  case 6:
                    buffer = _context43.sent;
                    return _context43.abrupt("return", new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__["ToneAudioBuffer"](buffer));

                  case 8:
                  case "end":
                    return _context43.stop();
                }
              }
            }, _callee43, this);
          }));
        }
        /**
         * Close the context
         */

      }, {
        key: "close",
        value: function close() {
          return Promise.resolve();
        }
      }, {
        key: "currentTime",
        get: function get() {
          return this._currentTime;
        }
      }]);

      return OfflineContext;
    }(_context_Context__WEBPACK_IMPORTED_MODULE_2__["Context"]); //# sourceMappingURL=OfflineContext.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/Param.js":
  /*!***********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/Param.js ***!
    \***********************************************************/

  /*! exports provided: Param */

  /***/
  function node_modulesToneBuildEsmCoreContextParamJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Param", function () {
      return Param;
    });
    /* harmony import */


    var _type_Conversions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../type/Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /* harmony import */


    var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/AdvancedTypeCheck */
    "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _util_Timeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../util/Timeline */
    "./node_modules/tone/build/esm/core/util/Timeline.js");
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _ToneWithContext__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./ToneWithContext */
    "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
    /* harmony import */


    var _util_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../util/Math */
    "./node_modules/tone/build/esm/core/util/Math.js");
    /* harmony import */


    var _util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * Param wraps the native Web Audio's AudioParam to provide
     * additional unit conversion functionality. It also
     * serves as a base-class for classes which have a single,
     * automatable parameter.
     */


    var Param = /*#__PURE__*/function (_ToneWithContext__WEB) {
      _inherits(Param, _ToneWithContext__WEB);

      var _super78 = _createSuper(Param);

      function Param() {
        var _this104;

        _classCallCheck2(this, Param);

        _this104 = _super78.call(this, Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Param.getDefaults(), arguments, ["param", "units", "convert"]));
        _this104.name = "Param";
        _this104.overridden = false;
        /**
         * The minimum output value
         */

        _this104._minOutput = 1e-7;
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Param.getDefaults(), arguments, ["param", "units", "convert"]);
        Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(options.param) && (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__["isAudioParam"])(options.param) || options.param instanceof Param), "param must be an AudioParam");

        while (!Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_1__["isAudioParam"])(options.param)) {
          options.param = options.param._param;
        }

        _this104._swappable = Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(options.swappable) ? options.swappable : false;

        if (_this104._swappable) {
          _this104.input = _this104.context.createGain(); // initialize

          _this104._param = options.param;

          _this104.input.connect(_this104._param);
        } else {
          _this104._param = _this104.input = options.param;
        }

        _this104._events = new _util_Timeline__WEBPACK_IMPORTED_MODULE_3__["Timeline"](1000);
        _this104._initialValue = _this104._param.defaultValue;
        _this104.units = options.units;
        _this104.convert = options.convert;
        _this104._minValue = options.minValue;
        _this104._maxValue = options.maxValue; // if the value is defined, set it immediately

        if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(options.value) && options.value !== _this104._toType(_this104._initialValue)) {
          _this104.setValueAtTime(options.value, 0);
        }

        return _this104;
      }

      _createClass2(Param, [{
        key: "_is",

        /**
         * Type guard based on the unit name
         */
        value: function _is(arg, type) {
          return this.units === type;
        }
        /**
         * Make sure the value is always in the defined range
         */

      }, {
        key: "_assertRange",
        value: function _assertRange(value) {
          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(this.maxValue) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(this.minValue)) {
            Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(value, this._fromType(this.minValue), this._fromType(this.maxValue));
          }

          return value;
        }
        /**
         * Convert the given value from the type specified by Param.units
         * into the destination value (such as Gain or Frequency).
         */

      }, {
        key: "_fromType",
        value: function _fromType(val) {
          if (this.convert && !this.overridden) {
            if (this._is(val, "time")) {
              return this.toSeconds(val);
            } else if (this._is(val, "decibels")) {
              return Object(_type_Conversions__WEBPACK_IMPORTED_MODULE_0__["dbToGain"])(val);
            } else if (this._is(val, "frequency")) {
              return this.toFrequency(val);
            } else {
              return val;
            }
          } else if (this.overridden) {
            // if it's overridden, should only schedule 0s
            return 0;
          } else {
            return val;
          }
        }
        /**
         * Convert the parameters value into the units specified by Param.units.
         */

      }, {
        key: "_toType",
        value: function _toType(val) {
          if (this.convert && this.units === "decibels") {
            return Object(_type_Conversions__WEBPACK_IMPORTED_MODULE_0__["gainToDb"])(val);
          } else {
            return val;
          }
        } //-------------------------------------
        // ABSTRACT PARAM INTERFACE
        // all docs are generated from ParamInterface.ts
        //-------------------------------------

      }, {
        key: "setValueAtTime",
        value: function setValueAtTime(value, time) {
          var computedTime = this.toSeconds(time);

          var numericValue = this._fromType(value);

          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(numericValue) && isFinite(computedTime), "Invalid argument(s) to setValueAtTime: ".concat(JSON.stringify(value), ", ").concat(JSON.stringify(time)));

          this._assertRange(numericValue);

          this.log(this.units, "setValueAtTime", value, computedTime);

          this._events.add({
            time: computedTime,
            type: "setValueAtTime",
            value: numericValue
          });

          this._param.setValueAtTime(numericValue, computedTime);

          return this;
        }
      }, {
        key: "getValueAtTime",
        value: function getValueAtTime(time) {
          var computedTime = Math.max(this.toSeconds(time), 0);

          var after = this._events.getAfter(computedTime);

          var before = this._events.get(computedTime);

          var value = this._initialValue; // if it was set by

          if (before === null) {
            value = this._initialValue;
          } else if (before.type === "setTargetAtTime" && (after === null || after.type === "setValueAtTime")) {
            var previous = this._events.getBefore(before.time);

            var previousVal;

            if (previous === null) {
              previousVal = this._initialValue;
            } else {
              previousVal = previous.value;
            }

            if (before.type === "setTargetAtTime") {
              value = this._exponentialApproach(before.time, previousVal, before.value, before.constant, computedTime);
            }
          } else if (after === null) {
            value = before.value;
          } else if (after.type === "linearRampToValueAtTime" || after.type === "exponentialRampToValueAtTime") {
            var beforeValue = before.value;

            if (before.type === "setTargetAtTime") {
              var _previous = this._events.getBefore(before.time);

              if (_previous === null) {
                beforeValue = this._initialValue;
              } else {
                beforeValue = _previous.value;
              }
            }

            if (after.type === "linearRampToValueAtTime") {
              value = this._linearInterpolate(before.time, beforeValue, after.time, after.value, computedTime);
            } else {
              value = this._exponentialInterpolate(before.time, beforeValue, after.time, after.value, computedTime);
            }
          } else {
            value = before.value;
          }

          return this._toType(value);
        }
      }, {
        key: "setRampPoint",
        value: function setRampPoint(time) {
          time = this.toSeconds(time);
          var currentVal = this.getValueAtTime(time);
          this.cancelAndHoldAtTime(time);

          if (this._fromType(currentVal) === 0) {
            currentVal = this._toType(this._minOutput);
          }

          this.setValueAtTime(currentVal, time);
          return this;
        }
      }, {
        key: "linearRampToValueAtTime",
        value: function linearRampToValueAtTime(value, endTime) {
          var numericValue = this._fromType(value);

          var computedTime = this.toSeconds(endTime);
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(numericValue) && isFinite(computedTime), "Invalid argument(s) to linearRampToValueAtTime: ".concat(JSON.stringify(value), ", ").concat(JSON.stringify(endTime)));

          this._assertRange(numericValue);

          this._events.add({
            time: computedTime,
            type: "linearRampToValueAtTime",
            value: numericValue
          });

          this.log(this.units, "linearRampToValueAtTime", value, computedTime);

          this._param.linearRampToValueAtTime(numericValue, computedTime);

          return this;
        }
      }, {
        key: "exponentialRampToValueAtTime",
        value: function exponentialRampToValueAtTime(value, endTime) {
          var numericValue = this._fromType(value);

          numericValue = Math.max(this._minOutput, numericValue);

          this._assertRange(numericValue);

          var computedTime = this.toSeconds(endTime);
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(numericValue) && isFinite(computedTime), "Invalid argument(s) to exponentialRampToValueAtTime: ".concat(JSON.stringify(value), ", ").concat(JSON.stringify(endTime))); // store the event

          this._events.add({
            time: computedTime,
            type: "exponentialRampToValueAtTime",
            value: numericValue
          });

          this.log(this.units, "exponentialRampToValueAtTime", value, computedTime);

          this._param.exponentialRampToValueAtTime(numericValue, computedTime);

          return this;
        }
      }, {
        key: "exponentialRampTo",
        value: function exponentialRampTo(value, rampTime, startTime) {
          startTime = this.toSeconds(startTime);
          this.setRampPoint(startTime);
          this.exponentialRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
          return this;
        }
      }, {
        key: "linearRampTo",
        value: function linearRampTo(value, rampTime, startTime) {
          startTime = this.toSeconds(startTime);
          this.setRampPoint(startTime);
          this.linearRampToValueAtTime(value, startTime + this.toSeconds(rampTime));
          return this;
        }
      }, {
        key: "targetRampTo",
        value: function targetRampTo(value, rampTime, startTime) {
          startTime = this.toSeconds(startTime);
          this.setRampPoint(startTime);
          this.exponentialApproachValueAtTime(value, startTime, rampTime);
          return this;
        }
      }, {
        key: "exponentialApproachValueAtTime",
        value: function exponentialApproachValueAtTime(value, time, rampTime) {
          time = this.toSeconds(time);
          rampTime = this.toSeconds(rampTime);
          var timeConstant = Math.log(rampTime + 1) / Math.log(200);
          this.setTargetAtTime(value, time, timeConstant); // at 90% start a linear ramp to the final value

          this.cancelAndHoldAtTime(time + rampTime * 0.9);
          this.linearRampToValueAtTime(value, time + rampTime);
          return this;
        }
      }, {
        key: "setTargetAtTime",
        value: function setTargetAtTime(value, startTime, timeConstant) {
          var numericValue = this._fromType(value); // The value will never be able to approach without timeConstant > 0.


          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(timeConstant) && timeConstant > 0, "timeConstant must be a number greater than 0");
          var computedTime = this.toSeconds(startTime);

          this._assertRange(numericValue);

          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(numericValue) && isFinite(computedTime), "Invalid argument(s) to setTargetAtTime: ".concat(JSON.stringify(value), ", ").concat(JSON.stringify(startTime)));

          this._events.add({
            constant: timeConstant,
            time: computedTime,
            type: "setTargetAtTime",
            value: numericValue
          });

          this.log(this.units, "setTargetAtTime", value, computedTime, timeConstant);

          this._param.setTargetAtTime(numericValue, computedTime, timeConstant);

          return this;
        }
      }, {
        key: "setValueCurveAtTime",
        value: function setValueCurveAtTime(values, startTime, duration) {
          var scaling = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
          duration = this.toSeconds(duration);
          startTime = this.toSeconds(startTime);
          var startingValue = this._fromType(values[0]) * scaling;
          this.setValueAtTime(this._toType(startingValue), startTime);
          var segTime = duration / (values.length - 1);

          for (var i = 1; i < values.length; i++) {
            var numericValue = this._fromType(values[i]) * scaling;
            this.linearRampToValueAtTime(this._toType(numericValue), startTime + i * segTime);
          }

          return this;
        }
      }, {
        key: "cancelScheduledValues",
        value: function cancelScheduledValues(time) {
          var computedTime = this.toSeconds(time);
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(computedTime), "Invalid argument to cancelScheduledValues: ".concat(JSON.stringify(time)));

          this._events.cancel(computedTime);

          this._param.cancelScheduledValues(computedTime);

          this.log(this.units, "cancelScheduledValues", computedTime);
          return this;
        }
      }, {
        key: "cancelAndHoldAtTime",
        value: function cancelAndHoldAtTime(time) {
          var computedTime = this.toSeconds(time);

          var valueAtTime = this._fromType(this.getValueAtTime(computedTime)); // remove the schedule events


          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(isFinite(computedTime), "Invalid argument to cancelAndHoldAtTime: ".concat(JSON.stringify(time)));
          this.log(this.units, "cancelAndHoldAtTime", computedTime, "value=" + valueAtTime); // if there is an event at the given computedTime
          // and that even is not a "set"

          var before = this._events.get(computedTime);

          var after = this._events.getAfter(computedTime);

          if (before && Object(_util_Math__WEBPACK_IMPORTED_MODULE_6__["EQ"])(before.time, computedTime)) {
            // remove everything after
            if (after) {
              this._param.cancelScheduledValues(after.time);

              this._events.cancel(after.time);
            } else {
              this._param.cancelAndHoldAtTime(computedTime);

              this._events.cancel(computedTime + this.sampleTime);
            }
          } else if (after) {
            this._param.cancelScheduledValues(after.time); // cancel the next event(s)


            this._events.cancel(after.time);

            if (after.type === "linearRampToValueAtTime") {
              this.linearRampToValueAtTime(this._toType(valueAtTime), computedTime);
            } else if (after.type === "exponentialRampToValueAtTime") {
              this.exponentialRampToValueAtTime(this._toType(valueAtTime), computedTime);
            }
          } // set the value at the given time


          this._events.add({
            time: computedTime,
            type: "setValueAtTime",
            value: valueAtTime
          });

          this._param.setValueAtTime(valueAtTime, computedTime);

          return this;
        }
      }, {
        key: "rampTo",
        value: function rampTo(value) {
          var rampTime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.1;
          var startTime = arguments.length > 2 ? arguments[2] : undefined;

          if (this.units === "frequency" || this.units === "bpm" || this.units === "decibels") {
            this.exponentialRampTo(value, rampTime, startTime);
          } else {
            this.linearRampTo(value, rampTime, startTime);
          }

          return this;
        }
        /**
         * Apply all of the previously scheduled events to the passed in Param or AudioParam.
         * The applied values will start at the context's current time and schedule
         * all of the events which are scheduled on this Param onto the passed in param.
         */

      }, {
        key: "apply",
        value: function apply(param) {
          var now = this.context.currentTime; // set the param's value at the current time and schedule everything else

          param.setValueAtTime(this.getValueAtTime(now), now); // if the previous event was a curve, then set the rest of it

          var previousEvent = this._events.get(now);

          if (previousEvent && previousEvent.type === "setTargetAtTime") {
            // approx it until the next event with linear ramps
            var nextEvent = this._events.getAfter(previousEvent.time); // or for 2 seconds if there is no event


            var endTime = nextEvent ? nextEvent.time : now + 2;
            var subdivisions = (endTime - now) / 10;

            for (var i = now; i < endTime; i += subdivisions) {
              param.linearRampToValueAtTime(this.getValueAtTime(i), i);
            }
          }

          this._events.forEachAfter(this.context.currentTime, function (event) {
            if (event.type === "cancelScheduledValues") {
              param.cancelScheduledValues(event.time);
            } else if (event.type === "setTargetAtTime") {
              param.setTargetAtTime(event.value, event.time, event.constant);
            } else {
              param[event.type](event.value, event.time);
            }
          });

          return this;
        }
        /**
         * Replace the Param's internal AudioParam. Will apply scheduled curves
         * onto the parameter and replace the connections.
         */

      }, {
        key: "setParam",
        value: function setParam(param) {
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(this._swappable, "The Param must be assigned as 'swappable' in the constructor");
          var input = this.input;
          input.disconnect(this._param);
          this.apply(param);
          this._param = param;
          input.connect(this._param);
          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Param.prototype), "dispose", this).call(this);

          this._events.dispose();

          return this;
        }
      }, {
        key: "_exponentialApproach",
        //-------------------------------------
        // 	AUTOMATION CURVE CALCULATIONS
        // 	MIT License, copyright (c) 2014 Jordan Santell
        //-------------------------------------
        // Calculates the the value along the curve produced by setTargetAtTime
        value: function _exponentialApproach(t0, v0, v1, timeConstant, t) {
          return v1 + (v0 - v1) * Math.exp(-(t - t0) / timeConstant);
        } // Calculates the the value along the curve produced by linearRampToValueAtTime

      }, {
        key: "_linearInterpolate",
        value: function _linearInterpolate(t0, v0, t1, v1, t) {
          return v0 + (v1 - v0) * ((t - t0) / (t1 - t0));
        } // Calculates the the value along the curve produced by exponentialRampToValueAtTime

      }, {
        key: "_exponentialInterpolate",
        value: function _exponentialInterpolate(t0, v0, t1, v1, t) {
          return v0 * Math.pow(v1 / v0, (t - t0) / (t1 - t0));
        }
      }, {
        key: "value",
        get: function get() {
          var now = this.now();
          return this.getValueAtTime(now);
        },
        set: function set(value) {
          this.cancelScheduledValues(this.now());
          this.setValueAtTime(value, this.now());
        }
      }, {
        key: "minValue",
        get: function get() {
          // if it's not the default minValue, return it
          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(this._minValue)) {
            return this._minValue;
          } else if (this.units === "time" || this.units === "frequency" || this.units === "normalRange" || this.units === "positive" || this.units === "transportTime" || this.units === "ticks" || this.units === "bpm" || this.units === "hertz" || this.units === "samples") {
            return 0;
          } else if (this.units === "audioRange") {
            return -1;
          } else if (this.units === "decibels") {
            return -Infinity;
          } else {
            return this._param.minValue;
          }
        }
      }, {
        key: "maxValue",
        get: function get() {
          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(this._maxValue)) {
            return this._maxValue;
          } else if (this.units === "normalRange" || this.units === "audioRange") {
            return 1;
          } else {
            return this._param.maxValue;
          }
        }
      }, {
        key: "defaultValue",
        get: function get() {
          return this._toType(this._param.defaultValue);
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_ToneWithContext__WEBPACK_IMPORTED_MODULE_5__["ToneWithContext"].getDefaults(), {
            convert: true,
            units: "number"
          });
        }
      }]);

      return Param;
    }(_ToneWithContext__WEBPACK_IMPORTED_MODULE_5__["ToneWithContext"]); //# sourceMappingURL=Param.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js ***!
    \*********************************************************************/

  /*! exports provided: ToneAudioBuffer */

  /***/
  function node_modulesToneBuildEsmCoreContextToneAudioBufferJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioBuffer", function () {
      return ToneAudioBuffer;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _Global__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../Global */
    "./node_modules/tone/build/esm/core/Global.js");
    /* harmony import */


    var _Tone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../Tone */
    "./node_modules/tone/build/esm/core/Tone.js");
    /* harmony import */


    var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../util/AdvancedTypeCheck */
    "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * AudioBuffer loading and storage. ToneAudioBuffer is used internally by all
     * classes that make requests for audio files such as Tone.Player,
     * Tone.Sampler and Tone.Convolver.
     * Aside from load callbacks from individual buffers, ToneAudioBuffer
     * provides events which keep track of the loading progress
     * of _all_ of the buffers. These are ToneAudioBuffer.on("load" / "progress" / "error")
     * @example
     * const buffer = new Tone.ToneAudioBuffer("https://tonejs.github.io/examples/audio/FWDL.mp3", () => {
     * 	console.log("loaded");
     * });
     * @category Core
     */


    var ToneAudioBuffer = /*#__PURE__*/function (_Tone__WEBPACK_IMPORT) {
      _inherits(ToneAudioBuffer, _Tone__WEBPACK_IMPORT);

      var _super79 = _createSuper(ToneAudioBuffer);

      function ToneAudioBuffer() {
        var _this105;

        _classCallCheck2(this, ToneAudioBuffer);

        _this105 = _super79.call(this);
        _this105.name = "ToneAudioBuffer";
        /**
         * Callback when the buffer is loaded.
         */

        _this105.onload = _util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"];
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(ToneAudioBuffer.getDefaults(), arguments, ["url", "onload", "onerror"]);
        _this105.reverse = options.reverse;
        _this105.onload = options.onload;

        if (options.url && Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_3__["isAudioBuffer"])(options.url) || options.url instanceof ToneAudioBuffer) {
          _this105.set(options.url);
        } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isString"])(options.url)) {
          // initiate the download
          _this105.load(options.url)["catch"](options.onerror);
        }

        return _this105;
      }

      _createClass2(ToneAudioBuffer, [{
        key: "set",

        /**
         * Pass in an AudioBuffer or ToneAudioBuffer to set the value of this buffer.
         */
        value: function set(buffer) {
          var _this106 = this;

          if (buffer instanceof ToneAudioBuffer) {
            // if it's loaded, set it
            if (buffer.loaded) {
              this._buffer = buffer.get();
            } else {
              // otherwise when it's loaded, invoke it's callback
              buffer.onload = function () {
                _this106.set(buffer);

                _this106.onload(_this106);
              };
            }
          } else {
            this._buffer = buffer;
          } // reverse it initially


          if (this._reversed) {
            this._reverse();
          }

          return this;
        }
        /**
         * The audio buffer stored in the object.
         */

      }, {
        key: "get",
        value: function get() {
          return this._buffer;
        }
        /**
         * Makes an fetch request for the selected url then decodes the file as an audio buffer.
         * Invokes the callback once the audio buffer loads.
         * @param url The url of the buffer to load. filetype support depends on the browser.
         * @returns A Promise which resolves with this ToneAudioBuffer
         */

      }, {
        key: "load",
        value: function load(url) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee44() {
            var _this107 = this;

            var doneLoading, index;
            return regeneratorRuntime.wrap(function _callee44$(_context44) {
              while (1) {
                switch (_context44.prev = _context44.next) {
                  case 0:
                    doneLoading = ToneAudioBuffer.load(url).then(function (audioBuffer) {
                      _this107.set(audioBuffer); // invoke the onload method


                      _this107.onload(_this107);
                    });
                    ToneAudioBuffer.downloads.push(doneLoading);
                    _context44.prev = 2;
                    _context44.next = 5;
                    return doneLoading;

                  case 5:
                    _context44.prev = 5;
                    // remove the downloaded file
                    index = ToneAudioBuffer.downloads.indexOf(doneLoading);
                    ToneAudioBuffer.downloads.splice(index, 1);
                    return _context44.finish(5);

                  case 9:
                    return _context44.abrupt("return", this);

                  case 10:
                  case "end":
                    return _context44.stop();
                }
              }
            }, _callee44, this, [[2,, 5, 9]]);
          }));
        }
        /**
         * clean up
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(ToneAudioBuffer.prototype), "dispose", this).call(this);

          this._buffer = undefined;
          return this;
        }
        /**
         * Set the audio buffer from the array.
         * To create a multichannel AudioBuffer, pass in a multidimensional array.
         * @param array The array to fill the audio buffer
         */

      }, {
        key: "fromArray",
        value: function fromArray(array) {
          var isMultidimensional = Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isArray"])(array) && array[0].length > 0;
          var channels = isMultidimensional ? array.length : 1;
          var len = isMultidimensional ? array[0].length : array.length;
          var context = Object(_Global__WEBPACK_IMPORTED_MODULE_1__["getContext"])();
          var buffer = context.createBuffer(channels, len, context.sampleRate);
          var multiChannelArray = !isMultidimensional && channels === 1 ? [array] : array;

          for (var c = 0; c < channels; c++) {
            buffer.copyToChannel(multiChannelArray[c], c);
          }

          this._buffer = buffer;
          return this;
        }
        /**
         * Sums multiple channels into 1 channel
         * @param chanNum Optionally only copy a single channel from the array.
         */

      }, {
        key: "toMono",
        value: function toMono(chanNum) {
          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(chanNum)) {
            this.fromArray(this.toArray(chanNum));
          } else {
            var outputArray = new Float32Array(this.length);
            var numChannels = this.numberOfChannels;

            for (var channel = 0; channel < numChannels; channel++) {
              var channelArray = this.toArray(channel);

              for (var i = 0; i < channelArray.length; i++) {
                outputArray[i] += channelArray[i];
              }
            } // divide by the number of channels


            outputArray = outputArray.map(function (sample) {
              return sample / numChannels;
            });
            this.fromArray(outputArray);
          }

          return this;
        }
        /**
         * Get the buffer as an array. Single channel buffers will return a 1-dimensional
         * Float32Array, and multichannel buffers will return multidimensional arrays.
         * @param channel Optionally only copy a single channel from the array.
         */

      }, {
        key: "toArray",
        value: function toArray(channel) {
          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(channel)) {
            return this.getChannelData(channel);
          } else if (this.numberOfChannels === 1) {
            return this.toArray(0);
          } else {
            var ret = [];

            for (var c = 0; c < this.numberOfChannels; c++) {
              ret[c] = this.getChannelData(c);
            }

            return ret;
          }
        }
        /**
         * Returns the Float32Array representing the PCM audio data for the specific channel.
         * @param  channel  The channel number to return
         * @return The audio as a TypedArray
         */

      }, {
        key: "getChannelData",
        value: function getChannelData(channel) {
          if (this._buffer) {
            return this._buffer.getChannelData(channel);
          } else {
            return new Float32Array(0);
          }
        }
        /**
         * Cut a subsection of the array and return a buffer of the
         * subsection. Does not modify the original buffer
         * @param start The time to start the slice
         * @param end The end time to slice. If none is given will default to the end of the buffer
         */

      }, {
        key: "slice",
        value: function slice(start) {
          var end = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.duration;
          var startSamples = Math.floor(start * this.sampleRate);
          var endSamples = Math.floor(end * this.sampleRate);
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assert"])(startSamples < endSamples, "The start time must be less than the end time");
          var length = endSamples - startSamples;
          var retBuffer = Object(_Global__WEBPACK_IMPORTED_MODULE_1__["getContext"])().createBuffer(this.numberOfChannels, length, this.sampleRate);

          for (var channel = 0; channel < this.numberOfChannels; channel++) {
            retBuffer.copyToChannel(this.getChannelData(channel).subarray(startSamples, endSamples), channel);
          }

          return new ToneAudioBuffer(retBuffer);
        }
        /**
         * Reverse the buffer.
         */

      }, {
        key: "_reverse",
        value: function _reverse() {
          if (this.loaded) {
            for (var i = 0; i < this.numberOfChannels; i++) {
              this.getChannelData(i).reverse();
            }
          }

          return this;
        }
        /**
         * If the buffer is loaded or not
         */

      }, {
        key: "sampleRate",

        /**
         * The sample rate of the AudioBuffer
         */
        get: function get() {
          if (this._buffer) {
            return this._buffer.sampleRate;
          } else {
            return Object(_Global__WEBPACK_IMPORTED_MODULE_1__["getContext"])().sampleRate;
          }
        }
      }, {
        key: "loaded",
        get: function get() {
          return this.length > 0;
        }
        /**
         * The duration of the buffer in seconds.
         */

      }, {
        key: "duration",
        get: function get() {
          if (this._buffer) {
            return this._buffer.duration;
          } else {
            return 0;
          }
        }
        /**
         * The length of the buffer in samples
         */

      }, {
        key: "length",
        get: function get() {
          if (this._buffer) {
            return this._buffer.length;
          } else {
            return 0;
          }
        }
        /**
         * The number of discrete audio channels. Returns 0 if no buffer is loaded.
         */

      }, {
        key: "numberOfChannels",
        get: function get() {
          if (this._buffer) {
            return this._buffer.numberOfChannels;
          } else {
            return 0;
          }
        }
        /**
         * Reverse the buffer.
         */

      }, {
        key: "reverse",
        get: function get() {
          return this._reversed;
        },
        set: function set(rev) {
          if (this._reversed !== rev) {
            this._reversed = rev;

            this._reverse();
          }
        }
        /**
         * Create a ToneAudioBuffer from the array. To create a multichannel AudioBuffer,
         * pass in a multidimensional array.
         * @param array The array to fill the audio buffer
         * @return A ToneAudioBuffer created from the array
         */

      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return {
            onerror: _util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
            onload: _util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
            reverse: false
          };
        }
      }, {
        key: "fromArray",
        value: function fromArray(array) {
          return new ToneAudioBuffer().fromArray(array);
        }
        /**
         * Creates a ToneAudioBuffer from a URL, returns a promise which resolves to a ToneAudioBuffer
         * @param  url The url to load.
         * @return A promise which resolves to a ToneAudioBuffer
         */

      }, {
        key: "fromUrl",
        value: function fromUrl(url) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee45() {
            var buffer;
            return regeneratorRuntime.wrap(function _callee45$(_context45) {
              while (1) {
                switch (_context45.prev = _context45.next) {
                  case 0:
                    buffer = new ToneAudioBuffer();
                    _context45.next = 3;
                    return buffer.load(url);

                  case 3:
                    return _context45.abrupt("return", _context45.sent);

                  case 4:
                  case "end":
                    return _context45.stop();
                }
              }
            }, _callee45);
          }));
        }
        /**
         * Loads a url using fetch and returns the AudioBuffer.
         */

      }, {
        key: "load",
        value: function load(url) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee46() {
            var matches, extensions, extension, _iterator20, _step20, ext, baseUrl, response, arrayBuffer, audioBuffer;

            return regeneratorRuntime.wrap(function _callee46$(_context46) {
              while (1) {
                switch (_context46.prev = _context46.next) {
                  case 0:
                    // test if the url contains multiple extensions
                    matches = url.match(/\[(.+\|?)+\]$/);

                    if (!matches) {
                      _context46.next = 23;
                      break;
                    }

                    extensions = matches[1].split("|");
                    extension = extensions[0];
                    _iterator20 = _createForOfIteratorHelper(extensions);
                    _context46.prev = 5;

                    _iterator20.s();

                  case 7:
                    if ((_step20 = _iterator20.n()).done) {
                      _context46.next = 14;
                      break;
                    }

                    ext = _step20.value;

                    if (!ToneAudioBuffer.supportsType(ext)) {
                      _context46.next = 12;
                      break;
                    }

                    extension = ext;
                    return _context46.abrupt("break", 14);

                  case 12:
                    _context46.next = 7;
                    break;

                  case 14:
                    _context46.next = 19;
                    break;

                  case 16:
                    _context46.prev = 16;
                    _context46.t0 = _context46["catch"](5);

                    _iterator20.e(_context46.t0);

                  case 19:
                    _context46.prev = 19;

                    _iterator20.f();

                    return _context46.finish(19);

                  case 22:
                    url = url.replace(matches[0], extension);

                  case 23:
                    // make sure there is a slash between the baseUrl and the url
                    baseUrl = ToneAudioBuffer.baseUrl === "" || ToneAudioBuffer.baseUrl.endsWith("/") ? ToneAudioBuffer.baseUrl : ToneAudioBuffer.baseUrl + "/";
                    _context46.next = 26;
                    return fetch(baseUrl + url);

                  case 26:
                    response = _context46.sent;

                    if (response.ok) {
                      _context46.next = 29;
                      break;
                    }

                    throw new Error("could not load url: ".concat(url));

                  case 29:
                    _context46.next = 31;
                    return response.arrayBuffer();

                  case 31:
                    arrayBuffer = _context46.sent;
                    _context46.next = 34;
                    return Object(_Global__WEBPACK_IMPORTED_MODULE_1__["getContext"])().decodeAudioData(arrayBuffer);

                  case 34:
                    audioBuffer = _context46.sent;
                    return _context46.abrupt("return", audioBuffer);

                  case 36:
                  case "end":
                    return _context46.stop();
                }
              }
            }, _callee46, null, [[5, 16, 19, 22]]);
          }));
        }
        /**
         * Checks a url's extension to see if the current browser can play that file type.
         * @param url The url/extension to test
         * @return If the file extension can be played
         * @static
         * @example
         * Tone.ToneAudioBuffer.supportsType("wav"); // returns true
         * Tone.ToneAudioBuffer.supportsType("path/to/file.wav"); // returns true
         */

      }, {
        key: "supportsType",
        value: function supportsType(url) {
          var extensions = url.split(".");
          var extension = extensions[extensions.length - 1];
          var response = document.createElement("audio").canPlayType("audio/" + extension);
          return response !== "";
        }
        /**
         * Returns a Promise which resolves when all of the buffers have loaded
         */

      }, {
        key: "loaded",
        value: function loaded() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee47() {
            return regeneratorRuntime.wrap(function _callee47$(_context47) {
              while (1) {
                switch (_context47.prev = _context47.next) {
                  case 0:
                    _context47.next = 2;
                    return Promise.resolve();

                  case 2:
                    if (!ToneAudioBuffer.downloads.length) {
                      _context47.next = 7;
                      break;
                    }

                    _context47.next = 5;
                    return ToneAudioBuffer.downloads[0];

                  case 5:
                    _context47.next = 2;
                    break;

                  case 7:
                  case "end":
                    return _context47.stop();
                }
              }
            }, _callee47);
          }));
        }
      }]);

      return ToneAudioBuffer;
    }(_Tone__WEBPACK_IMPORTED_MODULE_2__["Tone"]); //-------------------------------------
    // STATIC METHODS
    //-------------------------------------

    /**
     * A path which is prefixed before every url.
     */


    ToneAudioBuffer.baseUrl = "";
    /**
     * All of the downloads
     */

    ToneAudioBuffer.downloads = []; //# sourceMappingURL=ToneAudioBuffer.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js":
  /*!**********************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js ***!
    \**********************************************************************/

  /*! exports provided: ToneAudioBuffers */

  /***/
  function node_modulesToneBuildEsmCoreContextToneAudioBuffersJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioBuffers", function () {
      return ToneAudioBuffers;
    });
    /* harmony import */


    var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Tone */
    "./node_modules/tone/build/esm/core/Tone.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./ToneAudioBuffer */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
    /* harmony import */


    var _util_Debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * A data structure for holding multiple buffers in a Map-like datastructure.
     *
     * @example
     * const pianoSamples = new Tone.ToneAudioBuffers({
     * 	C1: "https://tonejs.github.io/examples/audio/casio/C1.mp3",
     * 	C2: "https://tonejs.github.io/examples/audio/casio/C2.mp3",
     * }, () => {
     * 	const player = new Tone.Player().toDestination();
     * 	// play one of the samples when they all load
     * 	player.buffer = pianoSamples.get("C2");
     * 	player.start();
     * });
     * @example
     * // To pass in additional parameters in the second parameter
     * const buffers = new Tone.ToneAudioBuffers({
     * 	 urls: {
     * 		 C1: "C1.mp3",
     * 		 C2: "C2.mp3",
     * 	 },
     * 	 onload: () => console.log("loaded"),
     * 	 baseUrl: "https://tonejs.github.io/examples/audio/casio/"
     * });
     * @category Core
     */


    var ToneAudioBuffers = /*#__PURE__*/function (_Tone__WEBPACK_IMPORT2) {
      _inherits(ToneAudioBuffers, _Tone__WEBPACK_IMPORT2);

      var _super80 = _createSuper(ToneAudioBuffers);

      function ToneAudioBuffers() {
        var _this108;

        _classCallCheck2(this, ToneAudioBuffers);

        _this108 = _super80.call(this);
        _this108.name = "ToneAudioBuffers";
        /**
         * All of the buffers
         */

        _this108._buffers = new Map();
        /**
         * Keep track of the number of loaded buffers
         */

        _this108._loadingCount = 0;
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(ToneAudioBuffers.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls");
        _this108.baseUrl = options.baseUrl; // add each one

        Object.keys(options.urls).forEach(function (name) {
          _this108._loadingCount++;
          var url = options.urls[name];

          _this108.add(name, url, _this108._bufferLoaded.bind(_assertThisInitialized(_this108), options.onload), options.onerror);
        });
        return _this108;
      }

      _createClass2(ToneAudioBuffers, [{
        key: "has",

        /**
         * True if the buffers object has a buffer by that name.
         * @param  name  The key or index of the buffer.
         */
        value: function has(name) {
          return this._buffers.has(name.toString());
        }
        /**
         * Get a buffer by name. If an array was loaded,
         * then use the array index.
         * @param  name  The key or index of the buffer.
         */

      }, {
        key: "get",
        value: function get(name) {
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(this.has(name), "ToneAudioBuffers has no buffer named: ".concat(name));
          return this._buffers.get(name.toString());
        }
        /**
         * A buffer was loaded. decrement the counter.
         */

      }, {
        key: "_bufferLoaded",
        value: function _bufferLoaded(callback) {
          this._loadingCount--;

          if (this._loadingCount === 0 && callback) {
            callback();
          }
        }
        /**
         * If the buffers are loaded or not
         */

      }, {
        key: "add",

        /**
         * Add a buffer by name and url to the Buffers
         * @param  name      A unique name to give the buffer
         * @param  url  Either the url of the bufer, or a buffer which will be added with the given name.
         * @param  callback  The callback to invoke when the url is loaded.
         * @param  onerror  Invoked if the buffer can't be loaded
         */
        value: function add(name, url) {
          var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"];
          var onerror = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"];

          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isString"])(url)) {
            this._buffers.set(name.toString(), new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__["ToneAudioBuffer"](this.baseUrl + url, callback, onerror));
          } else {
            this._buffers.set(name.toString(), new _ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_4__["ToneAudioBuffer"](url, callback, onerror));
          }

          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(ToneAudioBuffers.prototype), "dispose", this).call(this);

          this._buffers.forEach(function (buffer) {
            return buffer.dispose();
          });

          this._buffers.clear();

          return this;
        }
      }, {
        key: "loaded",
        get: function get() {
          return Array.from(this._buffers).every(function (_ref68) {
            var _ref69 = _slicedToArray2(_ref68, 2),
                _ = _ref69[0],
                buffer = _ref69[1];

            return buffer.loaded;
          });
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return {
            baseUrl: "",
            onerror: _util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"],
            onload: _util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"],
            urls: {}
          };
        }
      }]);

      return ToneAudioBuffers;
    }(_Tone__WEBPACK_IMPORTED_MODULE_0__["Tone"]); //# sourceMappingURL=ToneAudioBuffers.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/ToneAudioNode.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/ToneAudioNode.js ***!
    \*******************************************************************/

  /*! exports provided: ToneAudioNode, connectSeries, connect, disconnect */

  /***/
  function node_modulesToneBuildEsmCoreContextToneAudioNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioNode", function () {
      return ToneAudioNode;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "connectSeries", function () {
      return connectSeries;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "connect", function () {
      return _connect;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "disconnect", function () {
      return _disconnect;
    });
    /* harmony import */


    var _util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../util/AdvancedTypeCheck */
    "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _Param__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _ToneWithContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./ToneWithContext */
    "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
    /* harmony import */


    var _util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * ToneAudioNode is the base class for classes which process audio.
     */


    var ToneAudioNode = /*#__PURE__*/function (_ToneWithContext__WEB2) {
      _inherits(ToneAudioNode, _ToneWithContext__WEB2);

      var _super81 = _createSuper(ToneAudioNode);

      function ToneAudioNode() {
        var _this109;

        _classCallCheck2(this, ToneAudioNode);

        _this109 = _super81.apply(this, arguments);
        /**
         * The name of the class
         */

        _this109.name = "ToneAudioNode";
        /**
         * List all of the node that must be set to match the ChannelProperties
         */

        _this109._internalChannels = [];
        return _this109;
      }
      /**
       * The number of inputs feeding into the AudioNode.
       * For source nodes, this will be 0.
       * @example
       * const node = new Tone.Gain();
       * console.log(node.numberOfInputs);
       */


      _createClass2(ToneAudioNode, [{
        key: "_isAudioNode",
        //-------------------------------------
        // AUDIO PROPERTIES
        //-------------------------------------

        /**
         * Used to decide which nodes to get/set properties on
         */
        value: function _isAudioNode(node) {
          return Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(node) && (node instanceof ToneAudioNode || Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(node));
        }
        /**
         * Get all of the audio nodes (either internal or input/output) which together
         * make up how the class node responds to channel input/output
         */

      }, {
        key: "_getInternalNodes",
        value: function _getInternalNodes() {
          var nodeList = this._internalChannels.slice(0);

          if (this._isAudioNode(this.input)) {
            nodeList.push(this.input);
          }

          if (this._isAudioNode(this.output)) {
            if (this.input !== this.output) {
              nodeList.push(this.output);
            }
          }

          return nodeList;
        }
        /**
         * Set the audio options for this node such as channelInterpretation
         * channelCount, etc.
         * @param options
         */

      }, {
        key: "_setChannelProperties",
        value: function _setChannelProperties(options) {
          var nodeList = this._getInternalNodes();

          nodeList.forEach(function (node) {
            node.channelCount = options.channelCount;
            node.channelCountMode = options.channelCountMode;
            node.channelInterpretation = options.channelInterpretation;
          });
        }
        /**
         * Get the current audio options for this node such as channelInterpretation
         * channelCount, etc.
         */

      }, {
        key: "_getChannelProperties",
        value: function _getChannelProperties() {
          var nodeList = this._getInternalNodes();

          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(nodeList.length > 0, "ToneAudioNode does not have any internal nodes"); // use the first node to get properties
          // they should all be the same

          var node = nodeList[0];
          return {
            channelCount: node.channelCount,
            channelCountMode: node.channelCountMode,
            channelInterpretation: node.channelInterpretation
          };
        }
        /**
         * channelCount is the number of channels used when up-mixing and down-mixing
         * connections to any inputs to the node. The default value is 2 except for
         * specific nodes where its value is specially determined.
         */

      }, {
        key: "connect",
        //-------------------------------------
        // CONNECTIONS
        //-------------------------------------

        /**
         * connect the output of a ToneAudioNode to an AudioParam, AudioNode, or ToneAudioNode
         * @param destination The output to connect to
         * @param outputNum The output to connect from
         * @param inputNum The input to connect to
         */
        value: function connect(destination) {
          var outputNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var inputNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

          _connect(this, destination, outputNum, inputNum);

          return this;
        }
        /**
         * Connect the output to the context's destination node.
         * @example
         * const osc = new Tone.Oscillator().start();
         * osc.toDestination();
         */

      }, {
        key: "toDestination",
        value: function toDestination() {
          this.connect(this.context.destination);
          return this;
        }
        /**
         * Connect the output to the context's destination node.
         * See [[toDestination]]
         * @deprecated
         */

      }, {
        key: "toMaster",
        value: function toMaster() {
          Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["warn"])("toMaster() has been renamed toDestination()");
          return this.toDestination();
        }
        /**
         * disconnect the output
         */

      }, {
        key: "disconnect",
        value: function disconnect(destination) {
          var outputNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var inputNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

          _disconnect(this, destination, outputNum, inputNum);

          return this;
        }
        /**
         * Connect the output of this node to the rest of the nodes in series.
         * @example
         * const osc = new Tone.Oscillator().start();
         * const filter = new Tone.Filter();
         * const volume = new Tone.Volume(-8);
         * // connect a node to the filter, volume and then to the master output
         * osc.chain(filter, volume, Tone.Destination);
         */

      }, {
        key: "chain",
        value: function chain() {
          for (var _len7 = arguments.length, nodes = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
            nodes[_key7] = arguments[_key7];
          }

          connectSeries.apply(void 0, [this].concat(nodes));
          return this;
        }
        /**
         * connect the output of this node to the rest of the nodes in parallel.
         */

      }, {
        key: "fan",
        value: function fan() {
          var _this110 = this;

          for (var _len8 = arguments.length, nodes = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
            nodes[_key8] = arguments[_key8];
          }

          nodes.forEach(function (node) {
            return _this110.connect(node);
          });
          return this;
        }
        /**
         * Dispose and disconnect
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(ToneAudioNode.prototype), "dispose", this).call(this);

          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this.input)) {
            if (this.input instanceof ToneAudioNode) {
              this.input.dispose();
            } else if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(this.input)) {
              this.input.disconnect();
            }
          }

          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this.output)) {
            if (this.output instanceof ToneAudioNode) {
              this.output.dispose();
            } else if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(this.output)) {
              this.output.disconnect();
            }
          }

          this._internalChannels = [];
          return this;
        }
      }, {
        key: "numberOfInputs",
        get: function get() {
          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this.input)) {
            if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioParam"])(this.input) || this.input instanceof _Param__WEBPACK_IMPORTED_MODULE_2__["Param"]) {
              return 1;
            } else {
              return this.input.numberOfInputs;
            }
          } else {
            return 0;
          }
        }
        /**
         * The number of outputs of the AudioNode.
         * @example
         * const node = new Tone.Gain();
         * console.log(node.numberOfOutputs);
         */

      }, {
        key: "numberOfOutputs",
        get: function get() {
          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this.output)) {
            return this.output.numberOfOutputs;
          } else {
            return 0;
          }
        }
      }, {
        key: "channelCount",
        get: function get() {
          return this._getChannelProperties().channelCount;
        },
        set: function set(channelCount) {
          var props = this._getChannelProperties(); // merge it with the other properties


          this._setChannelProperties(Object.assign(props, {
            channelCount: channelCount
          }));
        }
        /**
         * channelCountMode determines how channels will be counted when up-mixing and
         * down-mixing connections to any inputs to the node.
         * The default value is "max". This attribute has no effect for nodes with no inputs.
         * * "max" - computedNumberOfChannels is the maximum of the number of channels of all connections to an input. In this mode channelCount is ignored.
         * * "clamped-max" - computedNumberOfChannels is determined as for "max" and then clamped to a maximum value of the given channelCount.
         * * "explicit" - computedNumberOfChannels is the exact value as specified by the channelCount.
         */

      }, {
        key: "channelCountMode",
        get: function get() {
          return this._getChannelProperties().channelCountMode;
        },
        set: function set(channelCountMode) {
          var props = this._getChannelProperties(); // merge it with the other properties


          this._setChannelProperties(Object.assign(props, {
            channelCountMode: channelCountMode
          }));
        }
        /**
         * channelInterpretation determines how individual channels will be treated
         * when up-mixing and down-mixing connections to any inputs to the node.
         * The default value is "speakers".
         */

      }, {
        key: "channelInterpretation",
        get: function get() {
          return this._getChannelProperties().channelInterpretation;
        },
        set: function set(channelInterpretation) {
          var props = this._getChannelProperties(); // merge it with the other properties


          this._setChannelProperties(Object.assign(props, {
            channelInterpretation: channelInterpretation
          }));
        }
      }]);

      return ToneAudioNode;
    }(_ToneWithContext__WEBPACK_IMPORTED_MODULE_3__["ToneWithContext"]); //-------------------------------------
    // CONNECTIONS
    //-------------------------------------

    /**
     * connect together all of the arguments in series
     * @param nodes
     */


    function connectSeries() {
      for (var _len9 = arguments.length, nodes = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        nodes[_key9] = arguments[_key9];
      }

      var first = nodes.shift();
      nodes.reduce(function (prev, current) {
        if (prev instanceof ToneAudioNode) {
          prev.connect(current);
        } else if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(prev)) {
          _connect(prev, current);
        }

        return current;
      }, first);
    }
    /**
     * Connect two nodes together so that signal flows from the
     * first node to the second. Optionally specify the input and output channels.
     * @param srcNode The source node
     * @param dstNode The destination node
     * @param outputNumber The output channel of the srcNode
     * @param inputNumber The input channel of the dstNode
     */


    function _connect(srcNode, dstNode) {
      var outputNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var inputNumber = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(srcNode), "Cannot connect from undefined node");
      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(dstNode), "Cannot connect to undefined node");

      if (dstNode instanceof ToneAudioNode || Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(dstNode)) {
        Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(dstNode.numberOfInputs > 0, "Cannot connect to node with no inputs");
      }

      Object(_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(srcNode.numberOfOutputs > 0, "Cannot connect from node with no outputs"); // resolve the input of the dstNode

      while (dstNode instanceof ToneAudioNode || dstNode instanceof _Param__WEBPACK_IMPORTED_MODULE_2__["Param"]) {
        if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(dstNode.input)) {
          dstNode = dstNode.input;
        }
      }

      while (srcNode instanceof ToneAudioNode) {
        if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(srcNode.output)) {
          srcNode = srcNode.output;
        }
      } // make the connection


      if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioParam"])(dstNode)) {
        srcNode.connect(dstNode, outputNumber);
      } else {
        srcNode.connect(dstNode, outputNumber, inputNumber);
      }
    }
    /**
     * Disconnect a node from all nodes or optionally include a destination node and input/output channels.
     * @param srcNode The source node
     * @param dstNode The destination node
     * @param outputNumber The output channel of the srcNode
     * @param inputNumber The input channel of the dstNode
     */


    function _disconnect(srcNode, dstNode) {
      var outputNumber = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
      var inputNumber = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;

      // resolve the destination node
      if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(dstNode)) {
        while (dstNode instanceof ToneAudioNode) {
          dstNode = dstNode.input;
        }
      } // resolve the src node


      while (!Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(srcNode)) {
        if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(srcNode.output)) {
          srcNode = srcNode.output;
        }
      }

      if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioParam"])(dstNode)) {
        srcNode.disconnect(dstNode, outputNumber);
      } else if (Object(_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(dstNode)) {
        srcNode.disconnect(dstNode, outputNumber, inputNumber);
      } else {
        srcNode.disconnect();
      }
    } //# sourceMappingURL=ToneAudioNode.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/context/ToneWithContext.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/context/ToneWithContext.js ***!
    \*********************************************************************/

  /*! exports provided: ToneWithContext */

  /***/
  function node_modulesToneBuildEsmCoreContextToneWithContextJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ToneWithContext", function () {
      return ToneWithContext;
    });
    /* harmony import */


    var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Global */
    "./node_modules/tone/build/esm/core/Global.js");
    /* harmony import */


    var _Tone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../Tone */
    "./node_modules/tone/build/esm/core/Tone.js");
    /* harmony import */


    var _type_Frequency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../type/Frequency */
    "./node_modules/tone/build/esm/core/type/Frequency.js");
    /* harmony import */


    var _type_Time__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../type/Time */
    "./node_modules/tone/build/esm/core/type/Time.js");
    /* harmony import */


    var _type_TransportTime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../type/TransportTime */
    "./node_modules/tone/build/esm/core/type/TransportTime.js");
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /**
     * The Base class for all nodes that have an AudioContext.
     */


    var ToneWithContext = /*#__PURE__*/function (_Tone__WEBPACK_IMPORT3) {
      _inherits(ToneWithContext, _Tone__WEBPACK_IMPORT3);

      var _super82 = _createSuper(ToneWithContext);

      function ToneWithContext() {
        var _this111;

        _classCallCheck2(this, ToneWithContext);

        _this111 = _super82.call(this);
        var options = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_5__["optionsFromArguments"])(ToneWithContext.getDefaults(), arguments, ["context"]);

        if (_this111.defaultContext) {
          _this111.context = _this111.defaultContext;
        } else {
          _this111.context = options.context;
        }

        return _this111;
      }

      _createClass2(ToneWithContext, [{
        key: "now",

        /**
         * Return the current time of the Context clock plus the lookAhead.
         * @example
         * setInterval(() => {
         * 	console.log(Tone.now());
         * }, 100)
         */
        value: function now() {
          return this.context.currentTime + this.context.lookAhead;
        }
        /**
         * Return the current time of the Context clock without any lookAhead.
         * @example
         * setInterval(() => {
         * 	console.log(Tone.immediate());
         * }, 100)
         */

      }, {
        key: "immediate",
        value: function immediate() {
          return this.context.currentTime;
        }
        /**
         * The duration in seconds of one sample.
         * @example
         * console.log(Tone.Transport.sampleTime);
         */

      }, {
        key: "toSeconds",

        /**
         * Convert the incoming time to seconds
         * @example
         * const gain = new Tone.Gain();
         * console.log(gain.toSeconds("4n"));
         */
        value: function toSeconds(time) {
          return new _type_Time__WEBPACK_IMPORTED_MODULE_3__["TimeClass"](this.context, time).toSeconds();
        }
        /**
         * Convert the input to a frequency number
         * @example
         * const gain = new Tone.Gain();
         * console.log(gain.toFrequency("4n"));
         */

      }, {
        key: "toFrequency",
        value: function toFrequency(freq) {
          return new _type_Frequency__WEBPACK_IMPORTED_MODULE_2__["FrequencyClass"](this.context, freq).toFrequency();
        }
        /**
         * Convert the input time into ticks
         * @example
         * const gain = new Tone.Gain();
         * console.log(gain.toTicks("4n"));
         */

      }, {
        key: "toTicks",
        value: function toTicks(time) {
          return new _type_TransportTime__WEBPACK_IMPORTED_MODULE_4__["TransportTimeClass"](this.context, time).toTicks();
        } //-------------------------------------
        // 	GET/SET
        //-------------------------------------

        /**
         * Get a subset of the properties which are in the partial props
         */

      }, {
        key: "_getPartialProperties",
        value: function _getPartialProperties(props) {
          var options = this.get(); // remove attributes from the prop that are not in the partial

          Object.keys(options).forEach(function (name) {
            if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isUndef"])(props[name])) {
              delete options[name];
            }
          });
          return options;
        }
        /**
         * Get the object's attributes.
         * @example
         * const osc = new Tone.Oscillator();
         * console.log(osc.get());
         */

      }, {
        key: "get",
        value: function get() {
          var _this112 = this;

          var defaults = Object(_util_Defaults__WEBPACK_IMPORTED_MODULE_5__["getDefaultsFromInstance"])(this);
          Object.keys(defaults).forEach(function (attribute) {
            if (Reflect.has(_this112, attribute)) {
              var member = _this112[attribute];

              if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(member) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(member.value) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(member.setValueAtTime)) {
                defaults[attribute] = member.value;
              } else if (member instanceof ToneWithContext) {
                defaults[attribute] = member._getPartialProperties(defaults[attribute]); // otherwise make sure it's a serializable type
              } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isArray"])(member) || Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(member) || Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isString"])(member) || Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isBoolean"])(member)) {
                defaults[attribute] = member;
              } else {
                // remove all undefined and unserializable attributes
                delete defaults[attribute];
              }
            }
          });
          return defaults;
        }
        /**
         * Set multiple properties at once with an object.
         * @example
         * const filter = new Tone.Filter();
         * // set values using an object
         * filter.set({
         * 	frequency: 300,
         * 	type: "highpass"
         * });
         */

      }, {
        key: "set",
        value: function set(props) {
          var _this113 = this;

          Object.keys(props).forEach(function (attribute) {
            if (Reflect.has(_this113, attribute) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(_this113[attribute])) {
              if (_this113[attribute] && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(_this113[attribute].value) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(_this113[attribute].setValueAtTime)) {
                // small optimization
                if (_this113[attribute].value !== props[attribute]) {
                  _this113[attribute].value = props[attribute];
                }
              } else if (_this113[attribute] instanceof ToneWithContext) {
                _this113[attribute].set(props[attribute]);
              } else {
                _this113[attribute] = props[attribute];
              }
            }
          });
          return this;
        }
      }, {
        key: "sampleTime",
        get: function get() {
          return 1 / this.context.sampleRate;
        }
        /**
         * The number of seconds of 1 processing block (128 samples)
         * @example
         * console.log(Tone.Destination.blockTime);
         */

      }, {
        key: "blockTime",
        get: function get() {
          return 128 / this.context.sampleRate;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return {
            context: Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])()
          };
        }
      }]);

      return ToneWithContext;
    }(_Tone__WEBPACK_IMPORTED_MODULE_1__["Tone"]); //# sourceMappingURL=ToneWithContext.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/index.js":
  /*!***************************************************!*\
    !*** ./node_modules/tone/build/esm/core/index.js ***!
    \***************************************************/

  /*! exports provided: Clock, Transport, Context, BaseContext, Delay, Destination, Gain, Offline, OfflineContext, Param, ToneAudioBuffer, ToneAudioBuffers, ToneAudioNode, connectSeries, connect, disconnect, FrequencyClass, Frequency, MidiClass, Midi, TimeClass, Time, TicksClass, Ticks, TransportTimeClass, TransportTime, Draw, Emitter, IntervalTimeline, StateTimeline, Timeline, isUndef, isDefined, isFunction, isNumber, isObject, isBoolean, isArray, isString, isNote, dbToGain, gainToDb, intervalToFrequencyRatio, ftom, mtof, optionsFromArguments, defaultArg, Unit, debug */

  /***/
  function node_modulesToneBuildEsmCoreIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _clock_Clock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./clock/Clock */
    "./node_modules/tone/build/esm/core/clock/Clock.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Clock", function () {
      return _clock_Clock__WEBPACK_IMPORTED_MODULE_0__["Clock"];
    });
    /* harmony import */


    var _clock_Transport__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./clock/Transport */
    "./node_modules/tone/build/esm/core/clock/Transport.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Transport", function () {
      return _clock_Transport__WEBPACK_IMPORTED_MODULE_1__["Transport"];
    });
    /* harmony import */


    var _context_Context__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./context/Context */
    "./node_modules/tone/build/esm/core/context/Context.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Context", function () {
      return _context_Context__WEBPACK_IMPORTED_MODULE_2__["Context"];
    });
    /* harmony import */


    var _context_BaseContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./context/BaseContext */
    "./node_modules/tone/build/esm/core/context/BaseContext.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BaseContext", function () {
      return _context_BaseContext__WEBPACK_IMPORTED_MODULE_3__["BaseContext"];
    });
    /* harmony import */


    var _context_Delay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./context/Delay */
    "./node_modules/tone/build/esm/core/context/Delay.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Delay", function () {
      return _context_Delay__WEBPACK_IMPORTED_MODULE_4__["Delay"];
    });
    /* harmony import */


    var _context_Destination__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./context/Destination */
    "./node_modules/tone/build/esm/core/context/Destination.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Destination", function () {
      return _context_Destination__WEBPACK_IMPORTED_MODULE_5__["Destination"];
    });
    /* harmony import */


    var _context_Gain__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Gain", function () {
      return _context_Gain__WEBPACK_IMPORTED_MODULE_6__["Gain"];
    });
    /* harmony import */


    var _context_Offline__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./context/Offline */
    "./node_modules/tone/build/esm/core/context/Offline.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Offline", function () {
      return _context_Offline__WEBPACK_IMPORTED_MODULE_7__["Offline"];
    });
    /* harmony import */


    var _context_OfflineContext__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./context/OfflineContext */
    "./node_modules/tone/build/esm/core/context/OfflineContext.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "OfflineContext", function () {
      return _context_OfflineContext__WEBPACK_IMPORTED_MODULE_8__["OfflineContext"];
    });
    /* harmony import */


    var _context_Param__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Param", function () {
      return _context_Param__WEBPACK_IMPORTED_MODULE_9__["Param"];
    });
    /* harmony import */


    var _context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./context/ToneAudioBuffer */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioBuffer", function () {
      return _context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_10__["ToneAudioBuffer"];
    });
    /* harmony import */


    var _context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./context/ToneAudioBuffers */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioBuffers", function () {
      return _context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_11__["ToneAudioBuffers"];
    });
    /* harmony import */


    var _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioNode", function () {
      return _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_12__["ToneAudioNode"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "connectSeries", function () {
      return _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_12__["connectSeries"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "connect", function () {
      return _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_12__["connect"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "disconnect", function () {
      return _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_12__["disconnect"];
    });
    /* harmony import */


    var _type_Frequency__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./type/Frequency */
    "./node_modules/tone/build/esm/core/type/Frequency.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FrequencyClass", function () {
      return _type_Frequency__WEBPACK_IMPORTED_MODULE_13__["FrequencyClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Frequency", function () {
      return _type_Frequency__WEBPACK_IMPORTED_MODULE_13__["Frequency"];
    });
    /* harmony import */


    var _type_Midi__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./type/Midi */
    "./node_modules/tone/build/esm/core/type/Midi.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidiClass", function () {
      return _type_Midi__WEBPACK_IMPORTED_MODULE_14__["MidiClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Midi", function () {
      return _type_Midi__WEBPACK_IMPORTED_MODULE_14__["Midi"];
    });
    /* harmony import */


    var _type_Time__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./type/Time */
    "./node_modules/tone/build/esm/core/type/Time.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TimeClass", function () {
      return _type_Time__WEBPACK_IMPORTED_MODULE_15__["TimeClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Time", function () {
      return _type_Time__WEBPACK_IMPORTED_MODULE_15__["Time"];
    });
    /* harmony import */


    var _type_Ticks__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./type/Ticks */
    "./node_modules/tone/build/esm/core/type/Ticks.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TicksClass", function () {
      return _type_Ticks__WEBPACK_IMPORTED_MODULE_16__["TicksClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Ticks", function () {
      return _type_Ticks__WEBPACK_IMPORTED_MODULE_16__["Ticks"];
    });
    /* harmony import */


    var _type_TransportTime__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./type/TransportTime */
    "./node_modules/tone/build/esm/core/type/TransportTime.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TransportTimeClass", function () {
      return _type_TransportTime__WEBPACK_IMPORTED_MODULE_17__["TransportTimeClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TransportTime", function () {
      return _type_TransportTime__WEBPACK_IMPORTED_MODULE_17__["TransportTime"];
    });
    /* harmony import */


    var _util_Draw__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
    /*! ./util/Draw */
    "./node_modules/tone/build/esm/core/util/Draw.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Draw", function () {
      return _util_Draw__WEBPACK_IMPORTED_MODULE_18__["Draw"];
    });
    /* harmony import */


    var _util_Emitter__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
    /*! ./util/Emitter */
    "./node_modules/tone/build/esm/core/util/Emitter.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Emitter", function () {
      return _util_Emitter__WEBPACK_IMPORTED_MODULE_19__["Emitter"];
    });
    /* harmony import */


    var _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
    /*! ./util/IntervalTimeline */
    "./node_modules/tone/build/esm/core/util/IntervalTimeline.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "IntervalTimeline", function () {
      return _util_IntervalTimeline__WEBPACK_IMPORTED_MODULE_20__["IntervalTimeline"];
    });
    /* harmony import */


    var _util_StateTimeline__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
    /*! ./util/StateTimeline */
    "./node_modules/tone/build/esm/core/util/StateTimeline.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StateTimeline", function () {
      return _util_StateTimeline__WEBPACK_IMPORTED_MODULE_21__["StateTimeline"];
    });
    /* harmony import */


    var _util_Timeline__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
    /*! ./util/Timeline */
    "./node_modules/tone/build/esm/core/util/Timeline.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Timeline", function () {
      return _util_Timeline__WEBPACK_IMPORTED_MODULE_22__["Timeline"];
    });
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
    /*! ./util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isUndef", function () {
      return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_23__["isUndef"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isDefined", function () {
      return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_23__["isDefined"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isFunction", function () {
      return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_23__["isFunction"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isNumber", function () {
      return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_23__["isNumber"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isObject", function () {
      return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_23__["isObject"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isBoolean", function () {
      return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_23__["isBoolean"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isArray", function () {
      return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_23__["isArray"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isString", function () {
      return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_23__["isString"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isNote", function () {
      return _util_TypeCheck__WEBPACK_IMPORTED_MODULE_23__["isNote"];
    });
    /* harmony import */


    var _type_Conversions__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
    /*! ./type/Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "dbToGain", function () {
      return _type_Conversions__WEBPACK_IMPORTED_MODULE_24__["dbToGain"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "gainToDb", function () {
      return _type_Conversions__WEBPACK_IMPORTED_MODULE_24__["gainToDb"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "intervalToFrequencyRatio", function () {
      return _type_Conversions__WEBPACK_IMPORTED_MODULE_24__["intervalToFrequencyRatio"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ftom", function () {
      return _type_Conversions__WEBPACK_IMPORTED_MODULE_24__["ftom"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "mtof", function () {
      return _type_Conversions__WEBPACK_IMPORTED_MODULE_24__["mtof"];
    });
    /* harmony import */


    var _util_Defaults__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
    /*! ./util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "optionsFromArguments", function () {
      return _util_Defaults__WEBPACK_IMPORTED_MODULE_25__["optionsFromArguments"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "defaultArg", function () {
      return _util_Defaults__WEBPACK_IMPORTED_MODULE_25__["defaultArg"];
    });
    /* harmony import */


    var _type_Units__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
    /*! ./type/Units */
    "./node_modules/tone/build/esm/core/type/Units.js");
    /* harmony import */


    var _type_Units__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_type_Units__WEBPACK_IMPORTED_MODULE_26__);
    /* harmony reexport (module object) */


    __webpack_require__.d(__webpack_exports__, "Unit", function () {
      return _type_Units__WEBPACK_IMPORTED_MODULE_26__;
    });
    /* harmony import */


    var _util_Debug__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
    /*! ./util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony reexport (module object) */


    __webpack_require__.d(__webpack_exports__, "debug", function () {
      return _util_Debug__WEBPACK_IMPORTED_MODULE_27__;
    }); // get the units and export them under the "Unit" namespace
    // export the debug stuff as Debug
    //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/type/Conversions.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/type/Conversions.js ***!
    \**************************************************************/

  /*! exports provided: equalPowerScale, dbToGain, gainToDb, intervalToFrequencyRatio, getA4, setA4, ftom, ftomf, mtof */

  /***/
  function node_modulesToneBuildEsmCoreTypeConversionsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "equalPowerScale", function () {
      return equalPowerScale;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "dbToGain", function () {
      return dbToGain;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "gainToDb", function () {
      return gainToDb;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "intervalToFrequencyRatio", function () {
      return intervalToFrequencyRatio;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getA4", function () {
      return getA4;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setA4", function () {
      return setA4;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ftom", function () {
      return ftom;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ftomf", function () {
      return ftomf;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "mtof", function () {
      return mtof;
    });
    /**
     * Equal power gain scale. Good for cross-fading.
     * @param  percent (0-1)
     */


    function equalPowerScale(percent) {
      var piFactor = 0.5 * Math.PI;
      return Math.sin(percent * piFactor);
    }
    /**
     * Convert decibels into gain.
     */


    function dbToGain(db) {
      return Math.pow(10, db / 20);
    }
    /**
     * Convert gain to decibels.
     */


    function gainToDb(gain) {
      return 20 * (Math.log(gain) / Math.LN10);
    }
    /**
     * Convert an interval (in semitones) to a frequency ratio.
     * @param interval the number of semitones above the base note
     * @example
     * Tone.intervalToFrequencyRatio(0); // 1
     * Tone.intervalToFrequencyRatio(12); // 2
     * Tone.intervalToFrequencyRatio(-12); // 0.5
     */


    function intervalToFrequencyRatio(interval) {
      return Math.pow(2, interval / 12);
    }
    /**
     * The Global [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used
     * to generate all the other pitch values from notes. A4's values in Hertz.
     */


    var A4 = 440;

    function getA4() {
      return A4;
    }

    function setA4(freq) {
      A4 = freq;
    }
    /**
     * Convert a frequency value to a MIDI note.
     * @param frequency The value to frequency value to convert.
     * @example
     * Tone.ftom(440); // returns 69
     */


    function ftom(frequency) {
      return Math.round(ftomf(frequency));
    }
    /**
     * Convert a frequency to a floating point midi value
     */


    function ftomf(frequency) {
      return 69 + 12 * Math.log2(frequency / A4);
    }
    /**
     * Convert a MIDI note to frequency value.
     * @param  midi The midi number to convert.
     * @return The corresponding frequency value
     * @example
     * Tone.mtof(69); // 440
     */


    function mtof(midi) {
      return A4 * Math.pow(2, (midi - 69) / 12);
    } //# sourceMappingURL=Conversions.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/type/Frequency.js":
  /*!************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/type/Frequency.js ***!
    \************************************************************/

  /*! exports provided: FrequencyClass, Frequency */

  /***/
  function node_modulesToneBuildEsmCoreTypeFrequencyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FrequencyClass", function () {
      return FrequencyClass;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Frequency", function () {
      return Frequency;
    });
    /* harmony import */


    var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Global */
    "./node_modules/tone/build/esm/core/Global.js");
    /* harmony import */


    var _Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /* harmony import */


    var _Time__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Time */
    "./node_modules/tone/build/esm/core/type/Time.js");
    /**
     * Frequency is a primitive type for encoding Frequency values.
     * Eventually all time values are evaluated to hertz using the `eval` method.
     * @example
     * Tone.Frequency("C3"); // 261
     * Tone.Frequency(38, "midi");
     * Tone.Frequency("C3").transpose(4);
     * @category Unit
     */


    var FrequencyClass = /*#__PURE__*/function (_Time__WEBPACK_IMPORT) {
      _inherits(FrequencyClass, _Time__WEBPACK_IMPORT);

      var _super83 = _createSuper(FrequencyClass);

      function FrequencyClass() {
        var _this114;

        _classCallCheck2(this, FrequencyClass);

        _this114 = _super83.apply(this, arguments);
        _this114.name = "Frequency";
        _this114.defaultUnits = "hz";
        return _this114;
      }
      /**
       * The [concert tuning pitch](https://en.wikipedia.org/wiki/Concert_pitch) which is used
       * to generate all the other pitch values from notes. A4's values in Hertz.
       */


      _createClass2(FrequencyClass, [{
        key: "_getExpressions",
        //-------------------------------------
        // 	AUGMENT BASE EXPRESSIONS
        //-------------------------------------
        value: function _getExpressions() {
          return Object.assign({}, _get(_getPrototypeOf(FrequencyClass.prototype), "_getExpressions", this).call(this), {
            midi: {
              regexp: /^(\d+(?:\.\d+)?midi)/,
              method: function method(value) {
                if (this.defaultUnits === "midi") {
                  return value;
                } else {
                  return FrequencyClass.mtof(value);
                }
              }
            },
            note: {
              regexp: /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i,
              method: function method(pitch, octave) {
                var index = noteToScaleIndex[pitch.toLowerCase()];
                var noteNumber = index + (parseInt(octave, 10) + 1) * 12;

                if (this.defaultUnits === "midi") {
                  return noteNumber;
                } else {
                  return FrequencyClass.mtof(noteNumber);
                }
              }
            },
            tr: {
              regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,
              method: function method(m, q, s) {
                var total = 1;

                if (m && m !== "0") {
                  total *= this._beatsToUnits(this._getTimeSignature() * parseFloat(m));
                }

                if (q && q !== "0") {
                  total *= this._beatsToUnits(parseFloat(q));
                }

                if (s && s !== "0") {
                  total *= this._beatsToUnits(parseFloat(s) / 4);
                }

                return total;
              }
            }
          });
        } //-------------------------------------
        // 	EXPRESSIONS
        //-------------------------------------

        /**
         * Transposes the frequency by the given number of semitones.
         * @return  A new transposed frequency
         * @example
         * Tone.Frequency("A4").transpose(3); // "C5"
         */

      }, {
        key: "transpose",
        value: function transpose(interval) {
          return new FrequencyClass(this.context, this.valueOf() * Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["intervalToFrequencyRatio"])(interval));
        }
        /**
         * Takes an array of semitone intervals and returns
         * an array of frequencies transposed by those intervals.
         * @return  Returns an array of Frequencies
         * @example
         * Tone.Frequency("A4").harmonize([0, 3, 7]); // ["A4", "C5", "E5"]
         */

      }, {
        key: "harmonize",
        value: function harmonize(intervals) {
          var _this115 = this;

          return intervals.map(function (interval) {
            return _this115.transpose(interval);
          });
        } //-------------------------------------
        // 	UNIT CONVERSIONS
        //-------------------------------------

        /**
         * Return the value of the frequency as a MIDI note
         * @example
         * Tone.Frequency("C4").toMidi(); // 60
         */

      }, {
        key: "toMidi",
        value: function toMidi() {
          return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(this.valueOf());
        }
        /**
         * Return the value of the frequency in Scientific Pitch Notation
         * @example
         * Tone.Frequency(69, "midi").toNote(); // "A4"
         */

      }, {
        key: "toNote",
        value: function toNote() {
          var freq = this.toFrequency();
          var log = Math.log2(freq / FrequencyClass.A4);
          var noteNumber = Math.round(12 * log) + 57;
          var octave = Math.floor(noteNumber / 12);

          if (octave < 0) {
            noteNumber += -12 * octave;
          }

          var noteName = scaleIndexToNote[noteNumber % 12];
          return noteName + octave.toString();
        }
        /**
         * Return the duration of one cycle in seconds.
         */

      }, {
        key: "toSeconds",
        value: function toSeconds() {
          return 1 / _get(_getPrototypeOf(FrequencyClass.prototype), "toSeconds", this).call(this);
        }
        /**
         * Return the duration of one cycle in ticks
         */

      }, {
        key: "toTicks",
        value: function toTicks() {
          var quarterTime = this._beatsToUnits(1);

          var quarters = this.valueOf() / quarterTime;
          return Math.floor(quarters * this._getPPQ());
        } //-------------------------------------
        // 	UNIT CONVERSIONS HELPERS
        //-------------------------------------

        /**
         * With no arguments, return 0
         */

      }, {
        key: "_noArg",
        value: function _noArg() {
          return 0;
        }
        /**
         * Returns the value of a frequency in the current units
         */

      }, {
        key: "_frequencyToUnits",
        value: function _frequencyToUnits(freq) {
          return freq;
        }
        /**
         * Returns the value of a tick in the current time units
         */

      }, {
        key: "_ticksToUnits",
        value: function _ticksToUnits(ticks) {
          return 1 / (ticks * 60 / (this._getBpm() * this._getPPQ()));
        }
        /**
         * Return the value of the beats in the current units
         */

      }, {
        key: "_beatsToUnits",
        value: function _beatsToUnits(beats) {
          return 1 / _get(_getPrototypeOf(FrequencyClass.prototype), "_beatsToUnits", this).call(this, beats);
        }
        /**
         * Returns the value of a second in the current units
         */

      }, {
        key: "_secondsToUnits",
        value: function _secondsToUnits(seconds) {
          return 1 / seconds;
        }
        /**
         * Convert a MIDI note to frequency value.
         * @param  midi The midi number to convert.
         * @return The corresponding frequency value
         */

      }], [{
        key: "mtof",
        value: function mtof(midi) {
          return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["mtof"])(midi);
        }
        /**
         * Convert a frequency value to a MIDI note.
         * @param frequency The value to frequency value to convert.
         */

      }, {
        key: "ftom",
        value: function ftom(frequency) {
          return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(frequency);
        }
      }, {
        key: "A4",
        get: function get() {
          return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["getA4"])();
        },
        set: function set(freq) {
          Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["setA4"])(freq);
        }
      }]);

      return FrequencyClass;
    }(_Time__WEBPACK_IMPORTED_MODULE_2__["TimeClass"]); //-------------------------------------
    // 	FREQUENCY CONVERSIONS
    //-------------------------------------

    /**
     * Note to scale index.
     * @hidden
     */


    var noteToScaleIndex = {
      cbb: -2,
      cb: -1,
      c: 0,
      "c#": 1,
      cx: 2,
      dbb: 0,
      db: 1,
      d: 2,
      "d#": 3,
      dx: 4,
      ebb: 2,
      eb: 3,
      e: 4,
      "e#": 5,
      ex: 6,
      fbb: 3,
      fb: 4,
      f: 5,
      "f#": 6,
      fx: 7,
      gbb: 5,
      gb: 6,
      g: 7,
      "g#": 8,
      gx: 9,
      abb: 7,
      ab: 8,
      a: 9,
      "a#": 10,
      ax: 11,
      bbb: 9,
      bb: 10,
      b: 11,
      "b#": 12,
      bx: 13
    };
    /**
     * scale index to note (sharps)
     * @hidden
     */

    var scaleIndexToNote = ["C", "C#", "D", "D#", "E", "F", "F#", "G", "G#", "A", "A#", "B"];
    /**
     * Convert a value into a FrequencyClass object.
     * @category Unit
     */

    function Frequency(value, units) {
      return new FrequencyClass(Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])(), value, units);
    } //# sourceMappingURL=Frequency.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/type/Midi.js":
  /*!*******************************************************!*\
    !*** ./node_modules/tone/build/esm/core/type/Midi.js ***!
    \*******************************************************/

  /*! exports provided: MidiClass, Midi */

  /***/
  function node_modulesToneBuildEsmCoreTypeMidiJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MidiClass", function () {
      return MidiClass;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Midi", function () {
      return Midi;
    });
    /* harmony import */


    var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Global */
    "./node_modules/tone/build/esm/core/Global.js");
    /* harmony import */


    var _Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /* harmony import */


    var _Frequency__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Frequency */
    "./node_modules/tone/build/esm/core/type/Frequency.js");
    /**
     * Midi is a primitive type for encoding Time values.
     * Midi can be constructed with or without the `new` keyword. Midi can be passed
     * into the parameter of any method which takes time as an argument.
     * @category Unit
     */


    var MidiClass = /*#__PURE__*/function (_Frequency__WEBPACK_I) {
      _inherits(MidiClass, _Frequency__WEBPACK_I);

      var _super84 = _createSuper(MidiClass);

      function MidiClass() {
        var _this116;

        _classCallCheck2(this, MidiClass);

        _this116 = _super84.apply(this, arguments);
        _this116.name = "MidiClass";
        _this116.defaultUnits = "midi";
        return _this116;
      }
      /**
       * Returns the value of a frequency in the current units
       */


      _createClass2(MidiClass, [{
        key: "_frequencyToUnits",
        value: function _frequencyToUnits(freq) {
          return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(_get(_getPrototypeOf(MidiClass.prototype), "_frequencyToUnits", this).call(this, freq));
        }
        /**
         * Returns the value of a tick in the current time units
         */

      }, {
        key: "_ticksToUnits",
        value: function _ticksToUnits(ticks) {
          return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(_get(_getPrototypeOf(MidiClass.prototype), "_ticksToUnits", this).call(this, ticks));
        }
        /**
         * Return the value of the beats in the current units
         */

      }, {
        key: "_beatsToUnits",
        value: function _beatsToUnits(beats) {
          return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(_get(_getPrototypeOf(MidiClass.prototype), "_beatsToUnits", this).call(this, beats));
        }
        /**
         * Returns the value of a second in the current units
         */

      }, {
        key: "_secondsToUnits",
        value: function _secondsToUnits(seconds) {
          return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(_get(_getPrototypeOf(MidiClass.prototype), "_secondsToUnits", this).call(this, seconds));
        }
        /**
         * Return the value of the frequency as a MIDI note
         * @example
         * Tone.Midi(60).toMidi(); // 60
         */

      }, {
        key: "toMidi",
        value: function toMidi() {
          return this.valueOf();
        }
        /**
         * Return the value of the frequency as a MIDI note
         * @example
         * Tone.Midi(60).toFrequency(); // 261.6255653005986
         */

      }, {
        key: "toFrequency",
        value: function toFrequency() {
          return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["mtof"])(this.toMidi());
        }
        /**
         * Transposes the frequency by the given number of semitones.
         * @return A new transposed MidiClass
         * @example
         * Tone.Midi("A4").transpose(3); // "C5"
         */

      }, {
        key: "transpose",
        value: function transpose(interval) {
          return new MidiClass(this.context, this.toMidi() + interval);
        }
      }]);

      return MidiClass;
    }(_Frequency__WEBPACK_IMPORTED_MODULE_2__["FrequencyClass"]);
    /**
     * Convert a value into a FrequencyClass object.
     * @category Unit
     */


    function Midi(value, units) {
      return new MidiClass(Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])(), value, units);
    } //# sourceMappingURL=Midi.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/type/Ticks.js":
  /*!********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/type/Ticks.js ***!
    \********************************************************/

  /*! exports provided: TicksClass, Ticks */

  /***/
  function node_modulesToneBuildEsmCoreTypeTicksJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TicksClass", function () {
      return TicksClass;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Ticks", function () {
      return Ticks;
    });
    /* harmony import */


    var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Global */
    "./node_modules/tone/build/esm/core/Global.js");
    /* harmony import */


    var _TransportTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./TransportTime */
    "./node_modules/tone/build/esm/core/type/TransportTime.js");
    /**
     * Ticks is a primitive type for encoding Time values.
     * Ticks can be constructed with or without the `new` keyword. Ticks can be passed
     * into the parameter of any method which takes time as an argument.
     * @example
     * const t = Tone.Ticks("4n"); // a quarter note as ticks
     * @category Unit
     */


    var TicksClass = /*#__PURE__*/function (_TransportTime__WEBPA) {
      _inherits(TicksClass, _TransportTime__WEBPA);

      var _super85 = _createSuper(TicksClass);

      function TicksClass() {
        var _this117;

        _classCallCheck2(this, TicksClass);

        _this117 = _super85.apply(this, arguments);
        _this117.name = "Ticks";
        _this117.defaultUnits = "i";
        return _this117;
      }
      /**
       * Get the current time in the given units
       */


      _createClass2(TicksClass, [{
        key: "_now",
        value: function _now() {
          return this.context.transport.ticks;
        }
        /**
         * Return the value of the beats in the current units
         */

      }, {
        key: "_beatsToUnits",
        value: function _beatsToUnits(beats) {
          return this._getPPQ() * beats;
        }
        /**
         * Returns the value of a second in the current units
         */

      }, {
        key: "_secondsToUnits",
        value: function _secondsToUnits(seconds) {
          return Math.floor(seconds / (60 / this._getBpm()) * this._getPPQ());
        }
        /**
         * Returns the value of a tick in the current time units
         */

      }, {
        key: "_ticksToUnits",
        value: function _ticksToUnits(ticks) {
          return ticks;
        }
        /**
         * Return the time in ticks
         */

      }, {
        key: "toTicks",
        value: function toTicks() {
          return this.valueOf();
        }
        /**
         * Return the time in seconds
         */

      }, {
        key: "toSeconds",
        value: function toSeconds() {
          return this.valueOf() / this._getPPQ() * (60 / this._getBpm());
        }
      }]);

      return TicksClass;
    }(_TransportTime__WEBPACK_IMPORTED_MODULE_1__["TransportTimeClass"]);
    /**
     * Convert a time representation to ticks
     * @category Unit
     */


    function Ticks(value, units) {
      return new TicksClass(Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])(), value, units);
    } //# sourceMappingURL=Ticks.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/type/Time.js":
  /*!*******************************************************!*\
    !*** ./node_modules/tone/build/esm/core/type/Time.js ***!
    \*******************************************************/

  /*! exports provided: TimeClass, Time */

  /***/
  function node_modulesToneBuildEsmCoreTypeTimeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TimeClass", function () {
      return TimeClass;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Time", function () {
      return Time;
    });
    /* harmony import */


    var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Global */
    "./node_modules/tone/build/esm/core/Global.js");
    /* harmony import */


    var _Conversions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /* harmony import */


    var _TimeBase__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./TimeBase */
    "./node_modules/tone/build/esm/core/type/TimeBase.js");
    /**
     * TimeClass is a primitive type for encoding and decoding Time values.
     * TimeClass can be passed into the parameter of any method which takes time as an argument.
     * @param  val    The time value.
     * @param  units  The units of the value.
     * @example
     * const time = Tone.Time("4n"); // a quarter note
     * @category Unit
     */


    var TimeClass = /*#__PURE__*/function (_TimeBase__WEBPACK_IM) {
      _inherits(TimeClass, _TimeBase__WEBPACK_IM);

      var _super86 = _createSuper(TimeClass);

      function TimeClass() {
        var _this118;

        _classCallCheck2(this, TimeClass);

        _this118 = _super86.apply(this, arguments);
        _this118.name = "TimeClass";
        return _this118;
      }

      _createClass2(TimeClass, [{
        key: "_getExpressions",
        value: function _getExpressions() {
          var _this119 = this;

          return Object.assign(_get(_getPrototypeOf(TimeClass.prototype), "_getExpressions", this).call(this), {
            now: {
              method: function method(capture) {
                return _this119._now() + new _this119.constructor(_this119.context, capture).valueOf();
              },
              regexp: /^\+(.+)/
            },
            quantize: {
              method: function method(capture) {
                var quantTo = new TimeClass(_this119.context, capture).valueOf();
                return _this119._secondsToUnits(_this119.context.transport.nextSubdivision(quantTo));
              },
              regexp: /^@(.+)/
            }
          });
        }
        /**
         * Quantize the time by the given subdivision. Optionally add a
         * percentage which will move the time value towards the ideal
         * quantized value by that percentage.
         * @param  subdiv    The subdivision to quantize to
         * @param  percent  Move the time value towards the quantized value by a percentage.
         * @example
         * Tone.Time(21).quantize(2); // returns 22
         * Tone.Time(0.6).quantize("4n", 0.5); // returns 0.55
         */

      }, {
        key: "quantize",
        value: function quantize(subdiv) {
          var percent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
          var subdivision = new this.constructor(this.context, subdiv).valueOf();
          var value = this.valueOf();
          var multiple = Math.round(value / subdivision);
          var ideal = multiple * subdivision;
          var diff = ideal - value;
          return value + diff * percent;
        } //-------------------------------------
        // CONVERSIONS
        //-------------------------------------

        /**
         * Convert a Time to Notation. The notation values are will be the
         * closest representation between 1m to 128th note.
         * @return {Notation}
         * @example
         * // if the Transport is at 120bpm:
         * Tone.Time(2).toNotation(); // returns "1m"
         */

      }, {
        key: "toNotation",
        value: function toNotation() {
          var _this120 = this;

          var time = this.toSeconds();
          var testNotations = ["1m"];

          for (var power = 1; power < 9; power++) {
            var subdiv = Math.pow(2, power);
            testNotations.push(subdiv + "n.");
            testNotations.push(subdiv + "n");
            testNotations.push(subdiv + "t");
          }

          testNotations.push("0"); // find the closets notation representation

          var closest = testNotations[0];
          var closestSeconds = new TimeClass(this.context, testNotations[0]).toSeconds();
          testNotations.forEach(function (notation) {
            var notationSeconds = new TimeClass(_this120.context, notation).toSeconds();

            if (Math.abs(notationSeconds - time) < Math.abs(closestSeconds - time)) {
              closest = notation;
              closestSeconds = notationSeconds;
            }
          });
          return closest;
        }
        /**
         * Return the time encoded as Bars:Beats:Sixteenths.
         */

      }, {
        key: "toBarsBeatsSixteenths",
        value: function toBarsBeatsSixteenths() {
          var quarterTime = this._beatsToUnits(1);

          var quarters = this.valueOf() / quarterTime;
          quarters = parseFloat(quarters.toFixed(4));
          var measures = Math.floor(quarters / this._getTimeSignature());
          var sixteenths = quarters % 1 * 4;
          quarters = Math.floor(quarters) % this._getTimeSignature();
          var sixteenthString = sixteenths.toString();

          if (sixteenthString.length > 3) {
            // the additional parseFloat removes insignificant trailing zeroes
            sixteenths = parseFloat(parseFloat(sixteenthString).toFixed(3));
          }

          var progress = [measures, quarters, sixteenths];
          return progress.join(":");
        }
        /**
         * Return the time in ticks.
         */

      }, {
        key: "toTicks",
        value: function toTicks() {
          var quarterTime = this._beatsToUnits(1);

          var quarters = this.valueOf() / quarterTime;
          return Math.round(quarters * this._getPPQ());
        }
        /**
         * Return the time in seconds.
         */

      }, {
        key: "toSeconds",
        value: function toSeconds() {
          return this.valueOf();
        }
        /**
         * Return the value as a midi note.
         */

      }, {
        key: "toMidi",
        value: function toMidi() {
          return Object(_Conversions__WEBPACK_IMPORTED_MODULE_1__["ftom"])(this.toFrequency());
        }
      }, {
        key: "_now",
        value: function _now() {
          return this.context.now();
        }
      }]);

      return TimeClass;
    }(_TimeBase__WEBPACK_IMPORTED_MODULE_2__["TimeBaseClass"]);
    /**
     * Create a TimeClass from a time string or number.
     * @param value A value which reprsents time
     * @param units The value's units if they can't be inferred by the value.
     * @category Unit
     */


    function Time(value, units) {
      return new TimeClass(Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])(), value, units);
    } //# sourceMappingURL=Time.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/type/TimeBase.js":
  /*!***********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/type/TimeBase.js ***!
    \***********************************************************/

  /*! exports provided: TimeBaseClass */

  /***/
  function node_modulesToneBuildEsmCoreTypeTimeBaseJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TimeBaseClass", function () {
      return TimeBaseClass;
    });
    /* harmony import */


    var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Tone */
    "./node_modules/tone/build/esm/core/Tone.js");
    /* harmony import */


    var _util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /**
     * TimeBase is a flexible encoding of time which can be evaluated to and from a string.
     */


    var TimeBaseClass = /*#__PURE__*/function (_Tone__WEBPACK_IMPORT4) {
      _inherits(TimeBaseClass, _Tone__WEBPACK_IMPORT4);

      var _super87 = _createSuper(TimeBaseClass);

      /**
       * @param context The context associated with the time value. Used to compute
       * Transport and context-relative timing.
       * @param  value  The time value as a number, string or object
       * @param  units  Unit values
       */
      function TimeBaseClass(context, value, units) {
        var _this121;

        _classCallCheck2(this, TimeBaseClass);

        _this121 = _super87.call(this);
        /**
         * The default units
         */

        _this121.defaultUnits = "s";
        _this121._val = value;
        _this121._units = units;
        _this121.context = context;
        _this121._expressions = _this121._getExpressions();
        return _this121;
      }
      /**
       * All of the time encoding expressions
       */


      _createClass2(TimeBaseClass, [{
        key: "_getExpressions",
        value: function _getExpressions() {
          var _this122 = this;

          return {
            hz: {
              method: function method(value) {
                return _this122._frequencyToUnits(parseFloat(value));
              },
              regexp: /^(\d+(?:\.\d+)?)hz$/i
            },
            i: {
              method: function method(value) {
                return _this122._ticksToUnits(parseInt(value, 10));
              },
              regexp: /^(\d+)i$/i
            },
            m: {
              method: function method(value) {
                return _this122._beatsToUnits(parseInt(value, 10) * _this122._getTimeSignature());
              },
              regexp: /^(\d+)m$/i
            },
            n: {
              method: function method(value, dot) {
                var numericValue = parseInt(value, 10);
                var scalar = dot === "." ? 1.5 : 1;

                if (numericValue === 1) {
                  return _this122._beatsToUnits(_this122._getTimeSignature()) * scalar;
                } else {
                  return _this122._beatsToUnits(4 / numericValue) * scalar;
                }
              },
              regexp: /^(\d+)n(\.?)$/i
            },
            number: {
              method: function method(value) {
                return _this122._expressions[_this122.defaultUnits].method.call(_this122, value);
              },
              regexp: /^(\d+(?:\.\d+)?)$/
            },
            s: {
              method: function method(value) {
                return _this122._secondsToUnits(parseFloat(value));
              },
              regexp: /^(\d+(?:\.\d+)?)s$/
            },
            samples: {
              method: function method(value) {
                return parseInt(value, 10) / _this122.context.sampleRate;
              },
              regexp: /^(\d+)samples$/
            },
            t: {
              method: function method(value) {
                var numericValue = parseInt(value, 10);
                return _this122._beatsToUnits(8 / (Math.floor(numericValue) * 3));
              },
              regexp: /^(\d+)t$/i
            },
            tr: {
              method: function method(m, q, s) {
                var total = 0;

                if (m && m !== "0") {
                  total += _this122._beatsToUnits(_this122._getTimeSignature() * parseFloat(m));
                }

                if (q && q !== "0") {
                  total += _this122._beatsToUnits(parseFloat(q));
                }

                if (s && s !== "0") {
                  total += _this122._beatsToUnits(parseFloat(s) / 4);
                }

                return total;
              },
              regexp: /^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/
            }
          };
        } //-------------------------------------
        // 	VALUE OF
        //-------------------------------------

        /**
         * Evaluate the time value. Returns the time in seconds.
         */

      }, {
        key: "valueOf",
        value: function valueOf() {
          if (this._val instanceof TimeBaseClass) {
            this.fromType(this._val);
          }

          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(this._val)) {
            return this._noArg();
          } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isString"])(this._val) && Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(this._units)) {
            for (var units in this._expressions) {
              if (this._expressions[units].regexp.test(this._val.trim())) {
                this._units = units;
                break;
              }
            }
          } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(this._val)) {
            var total = 0;

            for (var typeName in this._val) {
              if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this._val[typeName])) {
                var quantity = this._val[typeName]; // @ts-ignore

                var time = new this.constructor(this.context, typeName).valueOf() * quantity;
                total += time;
              }
            }

            return total;
          }

          if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(this._units)) {
            var expr = this._expressions[this._units];

            var matching = this._val.toString().trim().match(expr.regexp);

            if (matching) {
              return expr.method.apply(this, matching.slice(1));
            } else {
              return expr.method.call(this, this._val);
            }
          } else if (Object(_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isString"])(this._val)) {
            return parseFloat(this._val);
          } else {
            return this._val;
          }
        } //-------------------------------------
        // 	UNIT CONVERSIONS
        //-------------------------------------

        /**
         * Returns the value of a frequency in the current units
         */

      }, {
        key: "_frequencyToUnits",
        value: function _frequencyToUnits(freq) {
          return 1 / freq;
        }
        /**
         * Return the value of the beats in the current units
         */

      }, {
        key: "_beatsToUnits",
        value: function _beatsToUnits(beats) {
          return 60 / this._getBpm() * beats;
        }
        /**
         * Returns the value of a second in the current units
         */

      }, {
        key: "_secondsToUnits",
        value: function _secondsToUnits(seconds) {
          return seconds;
        }
        /**
         * Returns the value of a tick in the current time units
         */

      }, {
        key: "_ticksToUnits",
        value: function _ticksToUnits(ticks) {
          return ticks * this._beatsToUnits(1) / this._getPPQ();
        }
        /**
         * With no arguments, return 'now'
         */

      }, {
        key: "_noArg",
        value: function _noArg() {
          return this._now();
        } //-------------------------------------
        // 	TEMPO CONVERSIONS
        //-------------------------------------

        /**
         * Return the bpm
         */

      }, {
        key: "_getBpm",
        value: function _getBpm() {
          return this.context.transport.bpm.value;
        }
        /**
         * Return the timeSignature
         */

      }, {
        key: "_getTimeSignature",
        value: function _getTimeSignature() {
          return this.context.transport.timeSignature;
        }
        /**
         * Return the PPQ or 192 if Transport is not available
         */

      }, {
        key: "_getPPQ",
        value: function _getPPQ() {
          return this.context.transport.PPQ;
        } //-------------------------------------
        // 	CONVERSION INTERFACE
        //-------------------------------------

        /**
         * Coerce a time type into this units type.
         * @param type Any time type units
         */

      }, {
        key: "fromType",
        value: function fromType(type) {
          this._units = undefined;

          switch (this.defaultUnits) {
            case "s":
              this._val = type.toSeconds();
              break;

            case "i":
              this._val = type.toTicks();
              break;

            case "hz":
              this._val = type.toFrequency();
              break;

            case "midi":
              this._val = type.toMidi();
              break;
          }

          return this;
        }
        /**
         * Return the value in hertz
         */

      }, {
        key: "toFrequency",
        value: function toFrequency() {
          return 1 / this.toSeconds();
        }
        /**
         * Return the time in samples
         */

      }, {
        key: "toSamples",
        value: function toSamples() {
          return this.toSeconds() * this.context.sampleRate;
        }
        /**
         * Return the time in milliseconds.
         */

      }, {
        key: "toMilliseconds",
        value: function toMilliseconds() {
          return this.toSeconds() * 1000;
        }
      }]);

      return TimeBaseClass;
    }(_Tone__WEBPACK_IMPORTED_MODULE_0__["Tone"]); //# sourceMappingURL=TimeBase.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/type/TransportTime.js":
  /*!****************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/type/TransportTime.js ***!
    \****************************************************************/

  /*! exports provided: TransportTimeClass, TransportTime */

  /***/
  function node_modulesToneBuildEsmCoreTypeTransportTimeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TransportTimeClass", function () {
      return TransportTimeClass;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TransportTime", function () {
      return TransportTime;
    });
    /* harmony import */


    var _Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Global */
    "./node_modules/tone/build/esm/core/Global.js");
    /* harmony import */


    var _Time__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Time */
    "./node_modules/tone/build/esm/core/type/Time.js");
    /**
     * TransportTime is a the time along the Transport's
     * timeline. It is similar to Tone.Time, but instead of evaluating
     * against the AudioContext's clock, it is evaluated against
     * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).
     * @category Unit
     */


    var TransportTimeClass = /*#__PURE__*/function (_Time__WEBPACK_IMPORT2) {
      _inherits(TransportTimeClass, _Time__WEBPACK_IMPORT2);

      var _super88 = _createSuper(TransportTimeClass);

      function TransportTimeClass() {
        var _this123;

        _classCallCheck2(this, TransportTimeClass);

        _this123 = _super88.apply(this, arguments);
        _this123.name = "TransportTime";
        return _this123;
      }
      /**
       * Return the current time in whichever context is relevant
       */


      _createClass2(TransportTimeClass, [{
        key: "_now",
        value: function _now() {
          return this.context.transport.seconds;
        }
      }]);

      return TransportTimeClass;
    }(_Time__WEBPACK_IMPORTED_MODULE_1__["TimeClass"]);
    /**
     * TransportTime is a the time along the Transport's
     * timeline. It is similar to [[Time]], but instead of evaluating
     * against the AudioContext's clock, it is evaluated against
     * the Transport's position. See [TransportTime wiki](https://github.com/Tonejs/Tone.js/wiki/TransportTime).
     * @category Unit
     */


    function TransportTime(value, units) {
      return new TransportTimeClass(Object(_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])(), value, units);
    } //# sourceMappingURL=TransportTime.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/type/Units.js":
  /*!********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/type/Units.js ***!
    \********************************************************/

  /*! no static exports found */

  /***/
  function node_modulesToneBuildEsmCoreTypeUnitsJs(module, exports) {//# sourceMappingURL=Units.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js":
  /*!********************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js ***!
    \********************************************************************/

  /*! exports provided: isAudioParam, isAudioNode, isOfflineAudioContext, isAudioContext, isAudioBuffer */

  /***/
  function node_modulesToneBuildEsmCoreUtilAdvancedTypeCheckJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAudioParam", function () {
      return isAudioParam;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAudioNode", function () {
      return isAudioNode;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isOfflineAudioContext", function () {
      return isOfflineAudioContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAudioContext", function () {
      return isAudioContext;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isAudioBuffer", function () {
      return isAudioBuffer;
    });
    /* harmony import */


    var standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! standardized-audio-context */
    "./node_modules/standardized-audio-context/build/es2019/module.js");
    /**
     * Test if the given value is an instanceof AudioParam
     */


    function isAudioParam(arg) {
      return Object(standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["isAnyAudioParam"])(arg);
    }
    /**
     * Test if the given value is an instanceof AudioNode
     */


    function isAudioNode(arg) {
      return Object(standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["isAnyAudioNode"])(arg);
    }
    /**
     * Test if the arg is instanceof an OfflineAudioContext
     */


    function isOfflineAudioContext(arg) {
      return Object(standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["isAnyOfflineAudioContext"])(arg);
    }
    /**
     * Test if the arg is an instanceof AudioContext
     */


    function isAudioContext(arg) {
      return Object(standardized_audio_context__WEBPACK_IMPORTED_MODULE_0__["isAnyAudioContext"])(arg);
    }
    /**
     * Test if the arg is instanceof an AudioBuffer
     */


    function isAudioBuffer(arg) {
      return arg instanceof AudioBuffer;
    } //# sourceMappingURL=AdvancedTypeCheck.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/util/Debug.js":
  /*!********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/Debug.js ***!
    \********************************************************/

  /*! exports provided: assert, assertRange, assertContextRunning, setLogger, log, warn */

  /***/
  function node_modulesToneBuildEsmCoreUtilDebugJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "assert", function () {
      return assert;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "assertRange", function () {
      return assertRange;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "assertContextRunning", function () {
      return assertContextRunning;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "setLogger", function () {
      return setLogger;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "log", function () {
      return log;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "warn", function () {
      return warn;
    });
    /**
     * Assert that the statement is true, otherwise invoke the error.
     * @param statement
     * @param error The message which is passed into an Error
     */


    function assert(statement, error) {
      if (!statement) {
        throw new Error(error);
      }
    }
    /**
     * Make sure that the given value is within the range
     */


    function assertRange(value, gte) {
      var lte = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Infinity;

      if (!(gte <= value && value <= lte)) {
        throw new RangeError("Value must be within [".concat(gte, ", ").concat(lte, "], got: ").concat(value));
      }
    }
    /**
     * Make sure that the given value is within the range
     */


    function assertContextRunning(context) {
      // add a warning if the context is not started
      if (!context.isOffline && context.state !== "running") {
        warn("The AudioContext is \"suspended\". Invoke Tone.start() from a user action to start the audio.");
      }
    }
    /**
     * The default logger is the console
     */


    var defaultLogger = console;
    /**
     * Set the logging interface
     */

    function setLogger(logger) {
      defaultLogger = logger;
    }
    /**
     * Log anything
     */


    function log() {
      var _defaultLogger;

      (_defaultLogger = defaultLogger).log.apply(_defaultLogger, arguments);
    }
    /**
     * Warn anything
     */


    function warn() {
      var _defaultLogger2;

      (_defaultLogger2 = defaultLogger).warn.apply(_defaultLogger2, arguments);
    } //# sourceMappingURL=Debug.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/util/Decorator.js":
  /*!************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/Decorator.js ***!
    \************************************************************/

  /*! exports provided: range, timeRange */

  /***/
  function node_modulesToneBuildEsmCoreUtilDecoratorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "range", function () {
      return range;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "timeRange", function () {
      return timeRange;
    });
    /* harmony import */


    var _Debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * Assert that the number is in the given range.
     */


    function range(min) {
      var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;
      var valueMap = new WeakMap();
      return function (target, propertyKey) {
        Reflect.defineProperty(target, propertyKey, {
          configurable: true,
          enumerable: true,
          get: function get() {
            return valueMap.get(this);
          },
          set: function set(newValue) {
            Object(_Debug__WEBPACK_IMPORTED_MODULE_0__["assertRange"])(newValue, min, max);
            valueMap.set(this, newValue);
          }
        });
      };
    }
    /**
     * Convert the time to seconds and assert that the time is in between the two
     * values when being set.
     */


    function timeRange(min) {
      var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;
      var valueMap = new WeakMap();
      return function (target, propertyKey) {
        Reflect.defineProperty(target, propertyKey, {
          configurable: true,
          enumerable: true,
          get: function get() {
            return valueMap.get(this);
          },
          set: function set(newValue) {
            Object(_Debug__WEBPACK_IMPORTED_MODULE_0__["assertRange"])(this.toSeconds(newValue), min, max);
            valueMap.set(this, newValue);
          }
        });
      };
    } //# sourceMappingURL=Decorator.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/util/Defaults.js":
  /*!***********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/Defaults.js ***!
    \***********************************************************/

  /*! exports provided: deepMerge, deepEquals, optionsFromArguments, getDefaultsFromInstance, defaultArg, omitFromObject */

  /***/
  function node_modulesToneBuildEsmCoreUtilDefaultsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "deepMerge", function () {
      return deepMerge;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "deepEquals", function () {
      return deepEquals;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "optionsFromArguments", function () {
      return optionsFromArguments;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getDefaultsFromInstance", function () {
      return getDefaultsFromInstance;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "defaultArg", function () {
      return defaultArg;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "omitFromObject", function () {
      return omitFromObject;
    });
    /* harmony import */


    var _AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./AdvancedTypeCheck */
    "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
    /* harmony import */


    var _TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /**
     * Some objects should not be merged
     */


    function noCopy(key, arg) {
      return key === "value" || Object(_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioParam"])(arg) || Object(_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioNode"])(arg) || Object(_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_0__["isAudioBuffer"])(arg);
    }

    function deepMerge(target) {
      for (var _len10 = arguments.length, sources = new Array(_len10 > 1 ? _len10 - 1 : 0), _key10 = 1; _key10 < _len10; _key10++) {
        sources[_key10 - 1] = arguments[_key10];
      }

      if (!sources.length) {
        return target;
      }

      var source = sources.shift();

      if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(target) && Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(source)) {
        for (var key in source) {
          if (noCopy(key, source[key])) {
            target[key] = source[key];
          } else if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(source[key])) {
            if (!target[key]) {
              Object.assign(target, _defineProperty({}, key, {}));
            }

            deepMerge(target[key], source[key]);
          } else {
            Object.assign(target, _defineProperty({}, key, source[key]));
          }
        }
      } // @ts-ignore


      return deepMerge.apply(void 0, [target].concat(sources));
    }
    /**
     * Returns true if the two arrays have the same value for each of the elements
     */


    function deepEquals(arrayA, arrayB) {
      return arrayA.length === arrayB.length && arrayA.every(function (element, index) {
        return arrayB[index] === element;
      });
    }
    /**
     * Convert an args array into an object.
     */


    function optionsFromArguments(defaults, argsArray) {
      var keys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
      var objKey = arguments.length > 3 ? arguments[3] : undefined;
      var opts = {};
      var args = Array.from(argsArray); // if the first argument is an object and has an object key

      if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(args[0]) && objKey && !Reflect.has(args[0], objKey)) {
        // if it's not part of the defaults
        var partOfDefaults = Object.keys(args[0]).some(function (key) {
          return Reflect.has(defaults, key);
        });

        if (!partOfDefaults) {
          // merge that key
          deepMerge(opts, _defineProperty({}, objKey, args[0])); // remove the obj key from the keys

          keys.splice(keys.indexOf(objKey), 1); // shift the first argument off

          args.shift();
        }
      }

      if (args.length === 1 && Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isObject"])(args[0])) {
        deepMerge(opts, args[0]);
      } else {
        for (var i = 0; i < keys.length; i++) {
          if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(args[i])) {
            opts[keys[i]] = args[i];
          }
        }
      }

      return deepMerge(defaults, opts);
    }
    /**
     * Return this instances default values by calling Constructor.getDefaults()
     */


    function getDefaultsFromInstance(instance) {
      return instance.constructor.getDefaults();
    }
    /**
     * Returns the fallback if the given object is undefined.
     * Take an array of arguments and return a formatted options object.
     */


    function defaultArg(given, fallback) {
      if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(given)) {
        return fallback;
      } else {
        return given;
      }
    }
    /**
     * Remove all of the properties belonging to omit from obj.
     */


    function omitFromObject(obj, omit) {
      omit.forEach(function (prop) {
        if (Reflect.has(obj, prop)) {
          delete obj[prop];
        }
      });
      return obj;
    } //# sourceMappingURL=Defaults.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/util/Draw.js":
  /*!*******************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/Draw.js ***!
    \*******************************************************/

  /*! exports provided: Draw */

  /***/
  function node_modulesToneBuildEsmCoreUtilDrawJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Draw", function () {
      return Draw;
    });
    /* harmony import */


    var _context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../context/ToneWithContext */
    "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
    /* harmony import */


    var _Timeline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Timeline */
    "./node_modules/tone/build/esm/core/util/Timeline.js");
    /* harmony import */


    var _context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../context/ContextInitialization */
    "./node_modules/tone/build/esm/core/context/ContextInitialization.js");
    /**
     * Draw is useful for synchronizing visuals and audio events.
     * Callbacks from Tone.Transport or any of the Tone.Event classes
     * always happen _before_ the scheduled time and are not synchronized
     * to the animation frame so they are not good for triggering tightly
     * synchronized visuals and sound. Draw makes it easy to schedule
     * callbacks using the AudioContext time and uses requestAnimationFrame.
     * @example
     * Tone.Transport.schedule((time) => {
     * 	// use the time argument to schedule a callback with Draw
     * 	Tone.Draw.schedule(() => {
     * 		// do drawing or DOM manipulation here
     * 		console.log(time);
     * 	}, time);
     * }, "+0.5");
     * Tone.Transport.start();
     * @category Core
     */


    var Draw = /*#__PURE__*/function (_context_ToneWithCont4) {
      _inherits(Draw, _context_ToneWithCont4);

      var _super89 = _createSuper(Draw);

      function Draw() {
        var _this124;

        _classCallCheck2(this, Draw);

        _this124 = _super89.apply(this, arguments);
        _this124.name = "Draw";
        /**
         * The duration after which events are not invoked.
         */

        _this124.expiration = 0.25;
        /**
         * The amount of time before the scheduled time
         * that the callback can be invoked. Default is
         * half the time of an animation frame (0.008 seconds).
         */

        _this124.anticipation = 0.008;
        /**
         * All of the events.
         */

        _this124._events = new _Timeline__WEBPACK_IMPORTED_MODULE_1__["Timeline"]();
        /**
         * The draw loop
         */

        _this124._boundDrawLoop = _this124._drawLoop.bind(_assertThisInitialized(_this124));
        /**
         * The animation frame id
         */

        _this124._animationFrame = -1;
        return _this124;
      }
      /**
       * Schedule a function at the given time to be invoked
       * on the nearest animation frame.
       * @param  callback  Callback is invoked at the given time.
       * @param  time      The time relative to the AudioContext time to invoke the callback.
       * @example
       * Tone.Transport.scheduleRepeat(time => {
       * 	Tone.Draw.schedule(() => console.log(time), time);
       * }, 1);
       * Tone.Transport.start();
       */


      _createClass2(Draw, [{
        key: "schedule",
        value: function schedule(callback, time) {
          this._events.add({
            callback: callback,
            time: this.toSeconds(time)
          }); // start the draw loop on the first event


          if (this._events.length === 1) {
            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);
          }

          return this;
        }
        /**
         * Cancel events scheduled after the given time
         * @param  after  Time after which scheduled events will be removed from the scheduling timeline.
         */

      }, {
        key: "cancel",
        value: function cancel(after) {
          this._events.cancel(this.toSeconds(after));

          return this;
        }
        /**
         * The draw loop
         */

      }, {
        key: "_drawLoop",
        value: function _drawLoop() {
          var now = this.context.currentTime;

          while (this._events.length && this._events.peek().time - this.anticipation <= now) {
            var event = this._events.shift();

            if (event && now - event.time <= this.expiration) {
              event.callback();
            }
          }

          if (this._events.length > 0) {
            this._animationFrame = requestAnimationFrame(this._boundDrawLoop);
          }
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Draw.prototype), "dispose", this).call(this);

          this._events.dispose();

          cancelAnimationFrame(this._animationFrame);
          return this;
        }
      }]);

      return Draw;
    }(_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_0__["ToneWithContext"]); //-------------------------------------
    // 	INITIALIZATION
    //-------------------------------------


    Object(_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextInit"])(function (context) {
      context.draw = new Draw({
        context: context
      });
    });
    Object(_context_ContextInitialization__WEBPACK_IMPORTED_MODULE_2__["onContextClose"])(function (context) {
      context.draw.dispose();
    }); //# sourceMappingURL=Draw.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/core/util/Emitter.js":
  /*!**********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/Emitter.js ***!
    \**********************************************************/

  /*! exports provided: Emitter */

  /***/
  function node_modulesToneBuildEsmCoreUtilEmitterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Emitter", function () {
      return Emitter;
    });
    /* harmony import */


    var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Tone */
    "./node_modules/tone/build/esm/core/Tone.js");
    /* harmony import */


    var _TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /**
     * Emitter gives classes which extend it
     * the ability to listen for and emit events.
     * Inspiration and reference from Jerome Etienne's [MicroEvent](https://github.com/jeromeetienne/microevent.js).
     * MIT (c) 2011 Jerome Etienne.
     */


    var Emitter = /*#__PURE__*/function (_Tone__WEBPACK_IMPORT5) {
      _inherits(Emitter, _Tone__WEBPACK_IMPORT5);

      var _super90 = _createSuper(Emitter);

      function Emitter() {
        var _this125;

        _classCallCheck2(this, Emitter);

        _this125 = _super90.apply(this, arguments);
        _this125.name = "Emitter";
        return _this125;
      }
      /**
       * Bind a callback to a specific event.
       * @param  event     The name of the event to listen for.
       * @param  callback  The callback to invoke when the event is emitted
       */


      _createClass2(Emitter, [{
        key: "on",
        value: function on(event, callback) {
          var _this126 = this;

          // split the event
          var events = event.split(/\W+/);
          events.forEach(function (eventName) {
            if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(_this126._events)) {
              _this126._events = {};
            }

            if (!_this126._events.hasOwnProperty(eventName)) {
              _this126._events[eventName] = [];
            }

            _this126._events[eventName].push(callback);
          });
          return this;
        }
        /**
         * Bind a callback which is only invoked once
         * @param  event     The name of the event to listen for.
         * @param  callback  The callback to invoke when the event is emitted
         */

      }, {
        key: "once",
        value: function once(event, callback) {
          var _this127 = this;

          var boundCallback = function boundCallback() {
            // invoke the callback
            callback.apply(void 0, arguments); // remove the event

            _this127.off(event, boundCallback);
          };

          this.on(event, boundCallback);
          return this;
        }
        /**
         * Remove the event listener.
         * @param  event     The event to stop listening to.
         * @param  callback  The callback which was bound to the event with Emitter.on.
         *                   If no callback is given, all callbacks events are removed.
         */

      }, {
        key: "off",
        value: function off(event, callback) {
          var _this128 = this;

          var events = event.split(/\W+/);
          events.forEach(function (eventName) {
            if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(_this128._events)) {
              _this128._events = {};
            }

            if (_this128._events.hasOwnProperty(event)) {
              if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isUndef"])(callback)) {
                _this128._events[event] = [];
              } else {
                var eventList = _this128._events[event];

                for (var i = 0; i < eventList.length; i++) {
                  if (eventList[i] === callback) {
                    eventList.splice(i, 1);
                  }
                }
              }
            }
          });
          return this;
        }
        /**
         * Invoke all of the callbacks bound to the event
         * with any arguments passed in.
         * @param  event  The name of the event.
         * @param args The arguments to pass to the functions listening.
         */

      }, {
        key: "emit",
        value: function emit(event) {
          if (this._events) {
            if (this._events.hasOwnProperty(event)) {
              var eventList = this._events[event].slice(0);

              for (var _len11 = arguments.length, args = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {
                args[_key11 - 1] = arguments[_key11];
              }

              for (var i = 0, len = eventList.length; i < len; i++) {
                eventList[i].apply(this, args);
              }
            }
          }

          return this;
        }
        /**
         * Add Emitter functions (on/off/emit) to the object
         */

      }, {
        key: "dispose",

        /**
         * Clean up
         */
        value: function dispose() {
          _get(_getPrototypeOf(Emitter.prototype), "dispose", this).call(this);

          this._events = undefined;
          return this;
        }
      }], [{
        key: "mixin",
        value: function mixin(constr) {
          // instance._events = {};
          ["on", "once", "off", "emit"].forEach(function (name) {
            var property = Object.getOwnPropertyDescriptor(Emitter.prototype, name);
            Object.defineProperty(constr.prototype, name, property);
          });
        }
      }]);

      return Emitter;
    }(_Tone__WEBPACK_IMPORTED_MODULE_0__["Tone"]); //# sourceMappingURL=Emitter.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/util/Interface.js":
  /*!************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/Interface.js ***!
    \************************************************************/

  /*! exports provided: readOnly, writable, noOp */

  /***/
  function node_modulesToneBuildEsmCoreUtilInterfaceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "readOnly", function () {
      return readOnly;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "writable", function () {
      return writable;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "noOp", function () {
      return noOp;
    });
    /* harmony import */


    var _TypeCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /**
     * Make the property not writable using `defineProperty`. Internal use only.
     */


    function readOnly(target, property) {
      if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_0__["isArray"])(property)) {
        property.forEach(function (str) {
          return readOnly(target, str);
        });
      } else {
        Object.defineProperty(target, property, {
          enumerable: true,
          writable: false
        });
      }
    }
    /**
     * Make an attribute writeable. Internal use only.
     */


    function writable(target, property) {
      if (Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_0__["isArray"])(property)) {
        property.forEach(function (str) {
          return writable(target, str);
        });
      } else {
        Object.defineProperty(target, property, {
          writable: true
        });
      }
    }

    var noOp = function noOp() {// no operation here!
    }; //# sourceMappingURL=Interface.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/util/IntervalTimeline.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/IntervalTimeline.js ***!
    \*******************************************************************/

  /*! exports provided: IntervalTimeline */

  /***/
  function node_modulesToneBuildEsmCoreUtilIntervalTimelineJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "IntervalTimeline", function () {
      return IntervalTimeline;
    });
    /* harmony import */


    var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Tone */
    "./node_modules/tone/build/esm/core/Tone.js");
    /* harmony import */


    var _TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * Similar to Tone.Timeline, but all events represent
     * intervals with both "time" and "duration" times. The
     * events are placed in a tree structure optimized
     * for querying an intersection point with the timeline
     * events. Internally uses an [Interval Tree](https://en.wikipedia.org/wiki/Interval_tree)
     * to represent the data.
     */


    var IntervalTimeline = /*#__PURE__*/function (_Tone__WEBPACK_IMPORT6) {
      _inherits(IntervalTimeline, _Tone__WEBPACK_IMPORT6);

      var _super91 = _createSuper(IntervalTimeline);

      function IntervalTimeline() {
        var _this129;

        _classCallCheck2(this, IntervalTimeline);

        _this129 = _super91.apply(this, arguments);
        _this129.name = "IntervalTimeline";
        /**
         * The root node of the inteval tree
         */

        _this129._root = null;
        /**
         * Keep track of the length of the timeline.
         */

        _this129._length = 0;
        return _this129;
      }
      /**
       * The event to add to the timeline. All events must
       * have a time and duration value
       * @param  event  The event to add to the timeline
       */


      _createClass2(IntervalTimeline, [{
        key: "add",
        value: function add(event) {
          Object(_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(event.time), "Events must have a time property");
          Object(_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(Object(_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isDefined"])(event.duration), "Events must have a duration parameter");
          event.time = event.time.valueOf();
          var node = new IntervalNode(event.time, event.time + event.duration, event);

          if (this._root === null) {
            this._root = node;
          } else {
            this._root.insert(node);
          }

          this._length++; // Restructure tree to be balanced

          while (node !== null) {
            node.updateHeight();
            node.updateMax();

            this._rebalance(node);

            node = node.parent;
          }

          return this;
        }
        /**
         * Remove an event from the timeline.
         * @param  event  The event to remove from the timeline
         */

      }, {
        key: "remove",
        value: function remove(event) {
          if (this._root !== null) {
            var results = [];

            this._root.search(event.time, results);

            for (var _i17 = 0, _results = results; _i17 < _results.length; _i17++) {
              var node = _results[_i17];

              if (node.event === event) {
                this._removeNode(node);

                this._length--;
                break;
              }
            }
          }

          return this;
        }
        /**
         * The number of items in the timeline.
         * @readOnly
         */

      }, {
        key: "cancel",

        /**
         * Remove events whose time time is after the given time
         * @param  after  The time to query.
         */
        value: function cancel(after) {
          var _this130 = this;

          this.forEachFrom(after, function (event) {
            return _this130.remove(event);
          });
          return this;
        }
        /**
         * Set the root node as the given node
         */

      }, {
        key: "_setRoot",
        value: function _setRoot(node) {
          this._root = node;

          if (this._root !== null) {
            this._root.parent = null;
          }
        }
        /**
         * Replace the references to the node in the node's parent
         * with the replacement node.
         */

      }, {
        key: "_replaceNodeInParent",
        value: function _replaceNodeInParent(node, replacement) {
          if (node.parent !== null) {
            if (node.isLeftChild()) {
              node.parent.left = replacement;
            } else {
              node.parent.right = replacement;
            }

            this._rebalance(node.parent);
          } else {
            this._setRoot(replacement);
          }
        }
        /**
         * Remove the node from the tree and replace it with
         * a successor which follows the schema.
         */

      }, {
        key: "_removeNode",
        value: function _removeNode(node) {
          if (node.left === null && node.right === null) {
            this._replaceNodeInParent(node, null);
          } else if (node.right === null) {
            this._replaceNodeInParent(node, node.left);
          } else if (node.left === null) {
            this._replaceNodeInParent(node, node.right);
          } else {
            var balance = node.getBalance();
            var replacement;
            var temp = null;

            if (balance > 0) {
              if (node.left.right === null) {
                replacement = node.left;
                replacement.right = node.right;
                temp = replacement;
              } else {
                replacement = node.left.right;

                while (replacement.right !== null) {
                  replacement = replacement.right;
                }

                if (replacement.parent) {
                  replacement.parent.right = replacement.left;
                  temp = replacement.parent;
                  replacement.left = node.left;
                  replacement.right = node.right;
                }
              }
            } else if (node.right.left === null) {
              replacement = node.right;
              replacement.left = node.left;
              temp = replacement;
            } else {
              replacement = node.right.left;

              while (replacement.left !== null) {
                replacement = replacement.left;
              }

              if (replacement.parent) {
                replacement.parent.left = replacement.right;
                temp = replacement.parent;
                replacement.left = node.left;
                replacement.right = node.right;
              }
            }

            if (node.parent !== null) {
              if (node.isLeftChild()) {
                node.parent.left = replacement;
              } else {
                node.parent.right = replacement;
              }
            } else {
              this._setRoot(replacement);
            }

            if (temp) {
              this._rebalance(temp);
            }
          }

          node.dispose();
        }
        /**
         * Rotate the tree to the left
         */

      }, {
        key: "_rotateLeft",
        value: function _rotateLeft(node) {
          var parent = node.parent;
          var isLeftChild = node.isLeftChild(); // Make node.right the new root of this sub tree (instead of node)

          var pivotNode = node.right;

          if (pivotNode) {
            node.right = pivotNode.left;
            pivotNode.left = node;
          }

          if (parent !== null) {
            if (isLeftChild) {
              parent.left = pivotNode;
            } else {
              parent.right = pivotNode;
            }
          } else {
            this._setRoot(pivotNode);
          }
        }
        /**
         * Rotate the tree to the right
         */

      }, {
        key: "_rotateRight",
        value: function _rotateRight(node) {
          var parent = node.parent;
          var isLeftChild = node.isLeftChild(); // Make node.left the new root of this sub tree (instead of node)

          var pivotNode = node.left;

          if (pivotNode) {
            node.left = pivotNode.right;
            pivotNode.right = node;
          }

          if (parent !== null) {
            if (isLeftChild) {
              parent.left = pivotNode;
            } else {
              parent.right = pivotNode;
            }
          } else {
            this._setRoot(pivotNode);
          }
        }
        /**
         * Balance the BST
         */

      }, {
        key: "_rebalance",
        value: function _rebalance(node) {
          var balance = node.getBalance();

          if (balance > 1 && node.left) {
            if (node.left.getBalance() < 0) {
              this._rotateLeft(node.left);
            } else {
              this._rotateRight(node);
            }
          } else if (balance < -1 && node.right) {
            if (node.right.getBalance() > 0) {
              this._rotateRight(node.right);
            } else {
              this._rotateLeft(node);
            }
          }
        }
        /**
         * Get an event whose time and duration span the give time. Will
         * return the match whose "time" value is closest to the given time.
         * @return  The event which spans the desired time
         */

      }, {
        key: "get",
        value: function get(time) {
          if (this._root !== null) {
            var results = [];

            this._root.search(time, results);

            if (results.length > 0) {
              var max = results[0];

              for (var i = 1; i < results.length; i++) {
                if (results[i].low > max.low) {
                  max = results[i];
                }
              }

              return max.event;
            }
          }

          return null;
        }
        /**
         * Iterate over everything in the timeline.
         * @param  callback The callback to invoke with every item
         */

      }, {
        key: "forEach",
        value: function forEach(callback) {
          if (this._root !== null) {
            var allNodes = [];

            this._root.traverse(function (node) {
              return allNodes.push(node);
            });

            allNodes.forEach(function (node) {
              if (node.event) {
                callback(node.event);
              }
            });
          }

          return this;
        }
        /**
         * Iterate over everything in the array in which the given time
         * overlaps with the time and duration time of the event.
         * @param  time The time to check if items are overlapping
         * @param  callback The callback to invoke with every item
         */

      }, {
        key: "forEachAtTime",
        value: function forEachAtTime(time, callback) {
          if (this._root !== null) {
            var results = [];

            this._root.search(time, results);

            results.forEach(function (node) {
              if (node.event) {
                callback(node.event);
              }
            });
          }

          return this;
        }
        /**
         * Iterate over everything in the array in which the time is greater
         * than or equal to the given time.
         * @param  time The time to check if items are before
         * @param  callback The callback to invoke with every item
         */

      }, {
        key: "forEachFrom",
        value: function forEachFrom(time, callback) {
          if (this._root !== null) {
            var results = [];

            this._root.searchAfter(time, results);

            results.forEach(function (node) {
              if (node.event) {
                callback(node.event);
              }
            });
          }

          return this;
        }
        /**
         * Clean up
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(IntervalTimeline.prototype), "dispose", this).call(this);

          if (this._root !== null) {
            this._root.traverse(function (node) {
              return node.dispose();
            });
          }

          this._root = null;
          return this;
        }
      }, {
        key: "length",
        get: function get() {
          return this._length;
        }
      }]);

      return IntervalTimeline;
    }(_Tone__WEBPACK_IMPORTED_MODULE_0__["Tone"]); //-------------------------------------
    // 	INTERVAL NODE HELPER
    //-------------------------------------

    /**
     * Represents a node in the binary search tree, with the addition
     * of a "high" value which keeps track of the highest value of
     * its children.
     * References:
     * https://brooknovak.wordpress.com/2013/12/07/augmented-interval-tree-in-c/
     * http://www.mif.vu.lt/~valdas/ALGORITMAI/LITERATURA/Cormen/Cormen.pdf
     * @param low
     * @param high
     */


    var IntervalNode = /*#__PURE__*/function () {
      function IntervalNode(low, high, event) {
        _classCallCheck2(this, IntervalNode);

        // the nodes to the left
        this._left = null; // the nodes to the right

        this._right = null; // the parent node

        this.parent = null; // the number of child nodes

        this.height = 0;
        this.event = event; // the low value

        this.low = low; // the high value

        this.high = high; // the high value for this and all child nodes

        this.max = this.high;
      }
      /**
       * Insert a node into the correct spot in the tree
       */


      _createClass2(IntervalNode, [{
        key: "insert",
        value: function insert(node) {
          if (node.low <= this.low) {
            if (this.left === null) {
              this.left = node;
            } else {
              this.left.insert(node);
            }
          } else if (this.right === null) {
            this.right = node;
          } else {
            this.right.insert(node);
          }
        }
        /**
         * Search the tree for nodes which overlap
         * with the given point
         * @param  point  The point to query
         * @param  results  The array to put the results
         */

      }, {
        key: "search",
        value: function search(point, results) {
          // If p is to the right of the rightmost point of any interval
          // in this node and all children, there won't be any matches.
          if (point > this.max) {
            return;
          } // Search left children


          if (this.left !== null) {
            this.left.search(point, results);
          } // Check this node


          if (this.low <= point && this.high > point) {
            results.push(this);
          } // If p is to the left of the time of this interval,
          // then it can't be in any child to the right.


          if (this.low > point) {
            return;
          } // Search right children


          if (this.right !== null) {
            this.right.search(point, results);
          }
        }
        /**
         * Search the tree for nodes which are less
         * than the given point
         * @param  point  The point to query
         * @param  results  The array to put the results
         */

      }, {
        key: "searchAfter",
        value: function searchAfter(point, results) {
          // Check this node
          if (this.low >= point) {
            results.push(this);

            if (this.left !== null) {
              this.left.searchAfter(point, results);
            }
          } // search the right side


          if (this.right !== null) {
            this.right.searchAfter(point, results);
          }
        }
        /**
         * Invoke the callback on this element and both it's branches
         * @param  {Function}  callback
         */

      }, {
        key: "traverse",
        value: function traverse(callback) {
          callback(this);

          if (this.left !== null) {
            this.left.traverse(callback);
          }

          if (this.right !== null) {
            this.right.traverse(callback);
          }
        }
        /**
         * Update the height of the node
         */

      }, {
        key: "updateHeight",
        value: function updateHeight() {
          if (this.left !== null && this.right !== null) {
            this.height = Math.max(this.left.height, this.right.height) + 1;
          } else if (this.right !== null) {
            this.height = this.right.height + 1;
          } else if (this.left !== null) {
            this.height = this.left.height + 1;
          } else {
            this.height = 0;
          }
        }
        /**
         * Update the height of the node
         */

      }, {
        key: "updateMax",
        value: function updateMax() {
          this.max = this.high;

          if (this.left !== null) {
            this.max = Math.max(this.max, this.left.max);
          }

          if (this.right !== null) {
            this.max = Math.max(this.max, this.right.max);
          }
        }
        /**
         * The balance is how the leafs are distributed on the node
         * @return  Negative numbers are balanced to the right
         */

      }, {
        key: "getBalance",
        value: function getBalance() {
          var balance = 0;

          if (this.left !== null && this.right !== null) {
            balance = this.left.height - this.right.height;
          } else if (this.left !== null) {
            balance = this.left.height + 1;
          } else if (this.right !== null) {
            balance = -(this.right.height + 1);
          }

          return balance;
        }
        /**
         * @returns true if this node is the left child of its parent
         */

      }, {
        key: "isLeftChild",
        value: function isLeftChild() {
          return this.parent !== null && this.parent.left === this;
        }
        /**
         * get/set the left node
         */

      }, {
        key: "dispose",

        /**
         * null out references.
         */
        value: function dispose() {
          this.parent = null;
          this._left = null;
          this._right = null;
          this.event = null;
        }
      }, {
        key: "left",
        get: function get() {
          return this._left;
        },
        set: function set(node) {
          this._left = node;

          if (node !== null) {
            node.parent = this;
          }

          this.updateHeight();
          this.updateMax();
        }
        /**
         * get/set the right node
         */

      }, {
        key: "right",
        get: function get() {
          return this._right;
        },
        set: function set(node) {
          this._right = node;

          if (node !== null) {
            node.parent = this;
          }

          this.updateHeight();
          this.updateMax();
        }
      }]);

      return IntervalNode;
    }(); //# sourceMappingURL=IntervalTimeline.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/util/Math.js":
  /*!*******************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/Math.js ***!
    \*******************************************************/

  /*! exports provided: GT, GTE, LT, EQ, clamp */

  /***/
  function node_modulesToneBuildEsmCoreUtilMathJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "GT", function () {
      return GT;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "GTE", function () {
      return GTE;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LT", function () {
      return LT;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "EQ", function () {
      return EQ;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "clamp", function () {
      return clamp;
    });
    /**
     * The threshold for correctness for operators. Less than one sample even
     * at very high sampling rates (e.g. `1e-6 < 1 / 192000`).
     */


    var EPSILON = 1e-6;
    /**
     * Test if A is greater than B
     */

    function GT(a, b) {
      return a > b + EPSILON;
    }
    /**
     * Test if A is greater than or equal to B
     */


    function GTE(a, b) {
      return GT(a, b) || EQ(a, b);
    }
    /**
     * Test if A is less than B
     */


    function LT(a, b) {
      return a + EPSILON < b;
    }
    /**
     * Test if A is less than B
     */


    function EQ(a, b) {
      return Math.abs(a - b) < EPSILON;
    }
    /**
     * Clamp the value within the given range
     */


    function clamp(value, min, max) {
      return Math.max(Math.min(value, max), min);
    } //# sourceMappingURL=Math.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/util/StateTimeline.js":
  /*!****************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/StateTimeline.js ***!
    \****************************************************************/

  /*! exports provided: StateTimeline */

  /***/
  function node_modulesToneBuildEsmCoreUtilStateTimelineJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StateTimeline", function () {
      return StateTimeline;
    });
    /* harmony import */


    var _Timeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Timeline */
    "./node_modules/tone/build/esm/core/util/Timeline.js");
    /* harmony import */


    var _Debug__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * A Timeline State. Provides the methods: `setStateAtTime("state", time)` and `getValueAtTime(time)`
     * @param initial The initial state of the StateTimeline.  Defaults to `undefined`
     */


    var StateTimeline = /*#__PURE__*/function (_Timeline__WEBPACK_IM) {
      _inherits(StateTimeline, _Timeline__WEBPACK_IM);

      var _super92 = _createSuper(StateTimeline);

      function StateTimeline() {
        var _this131;

        var initial = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "stopped";

        _classCallCheck2(this, StateTimeline);

        _this131 = _super92.call(this);
        _this131.name = "StateTimeline";
        _this131._initial = initial;

        _this131.setStateAtTime(_this131._initial, 0);

        return _this131;
      }
      /**
       * Returns the scheduled state scheduled before or at
       * the given time.
       * @param  time  The time to query.
       * @return  The name of the state input in setStateAtTime.
       */


      _createClass2(StateTimeline, [{
        key: "getValueAtTime",
        value: function getValueAtTime(time) {
          var event = this.get(time);

          if (event !== null) {
            return event.state;
          } else {
            return this._initial;
          }
        }
        /**
         * Add a state to the timeline.
         * @param  state The name of the state to set.
         * @param  time  The time to query.
         * @param options Any additional options that are needed in the timeline.
         */

      }, {
        key: "setStateAtTime",
        value: function setStateAtTime(state, time, options) {
          Object(_Debug__WEBPACK_IMPORTED_MODULE_1__["assertRange"])(time, 0);
          this.add(Object.assign({}, options, {
            state: state,
            time: time
          }));
          return this;
        }
        /**
         * Return the event before the time with the given state
         * @param  state The state to look for
         * @param  time  When to check before
         * @return  The event with the given state before the time
         */

      }, {
        key: "getLastState",
        value: function getLastState(state, time) {
          // time = this.toSeconds(time);
          var index = this._search(time);

          for (var i = index; i >= 0; i--) {
            var event = this._timeline[i];

            if (event.state === state) {
              return event;
            }
          }
        }
        /**
         * Return the event after the time with the given state
         * @param  state The state to look for
         * @param  time  When to check from
         * @return  The event with the given state after the time
         */

      }, {
        key: "getNextState",
        value: function getNextState(state, time) {
          // time = this.toSeconds(time);
          var index = this._search(time);

          if (index !== -1) {
            for (var i = index; i < this._timeline.length; i++) {
              var event = this._timeline[i];

              if (event.state === state) {
                return event;
              }
            }
          }
        }
      }]);

      return StateTimeline;
    }(_Timeline__WEBPACK_IMPORTED_MODULE_0__["Timeline"]); //# sourceMappingURL=StateTimeline.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/util/Timeline.js":
  /*!***********************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/Timeline.js ***!
    \***********************************************************/

  /*! exports provided: Timeline */

  /***/
  function node_modulesToneBuildEsmCoreUtilTimelineJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Timeline", function () {
      return Timeline;
    });
    /* harmony import */


    var _Tone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Tone */
    "./node_modules/tone/build/esm/core/Tone.js");
    /* harmony import */


    var _Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./Math */
    "./node_modules/tone/build/esm/core/util/Math.js");
    /**
     * A Timeline class for scheduling and maintaining state
     * along a timeline. All events must have a "time" property.
     * Internally, events are stored in time order for fast
     * retrieval.
     */


    var Timeline = /*#__PURE__*/function (_Tone__WEBPACK_IMPORT7) {
      _inherits(Timeline, _Tone__WEBPACK_IMPORT7);

      var _super93 = _createSuper(Timeline);

      function Timeline() {
        var _this132;

        _classCallCheck2(this, Timeline);

        _this132 = _super93.call(this);
        _this132.name = "Timeline";
        /**
         * The array of scheduled timeline events
         */

        _this132._timeline = [];
        var options = Object(_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Timeline.getDefaults(), arguments, ["memory"]);
        _this132.memory = options.memory;
        _this132.increasing = options.increasing;
        return _this132;
      }

      _createClass2(Timeline, [{
        key: "add",

        /**
         * Insert an event object onto the timeline. Events must have a "time" attribute.
         * @param event  The event object to insert into the timeline.
         */
        value: function add(event) {
          // the event needs to have a time attribute
          Object(_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(Reflect.has(event, "time"), "Timeline: events must have a time attribute");
          event.time = event.time.valueOf();

          if (this.increasing && this.length) {
            var lastValue = this._timeline[this.length - 1];
            Object(_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(Object(_Math__WEBPACK_IMPORTED_MODULE_3__["GTE"])(event.time, lastValue.time), "The time must be greater than or equal to the last scheduled time");

            this._timeline.push(event);
          } else {
            var index = this._search(event.time);

            this._timeline.splice(index + 1, 0, event);
          } // if the length is more than the memory, remove the previous ones


          if (this.length > this.memory) {
            var diff = this.length - this.memory;

            this._timeline.splice(0, diff);
          }

          return this;
        }
        /**
         * Remove an event from the timeline.
         * @param  {Object}  event  The event object to remove from the list.
         * @returns {Timeline} this
         */

      }, {
        key: "remove",
        value: function remove(event) {
          var index = this._timeline.indexOf(event);

          if (index !== -1) {
            this._timeline.splice(index, 1);
          }

          return this;
        }
        /**
         * Get the nearest event whose time is less than or equal to the given time.
         * @param  time  The time to query.
         */

      }, {
        key: "get",
        value: function get(time) {
          var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "time";

          var index = this._search(time, param);

          if (index !== -1) {
            return this._timeline[index];
          } else {
            return null;
          }
        }
        /**
         * Return the first event in the timeline without removing it
         * @returns {Object} The first event object
         */

      }, {
        key: "peek",
        value: function peek() {
          return this._timeline[0];
        }
        /**
         * Return the first event in the timeline and remove it
         */

      }, {
        key: "shift",
        value: function shift() {
          return this._timeline.shift();
        }
        /**
         * Get the event which is scheduled after the given time.
         * @param  time  The time to query.
         */

      }, {
        key: "getAfter",
        value: function getAfter(time) {
          var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "time";

          var index = this._search(time, param);

          if (index + 1 < this._timeline.length) {
            return this._timeline[index + 1];
          } else {
            return null;
          }
        }
        /**
         * Get the event before the event at the given time.
         * @param  time  The time to query.
         */

      }, {
        key: "getBefore",
        value: function getBefore(time) {
          var len = this._timeline.length; // if it's after the last item, return the last item

          if (len > 0 && this._timeline[len - 1].time < time) {
            return this._timeline[len - 1];
          }

          var index = this._search(time);

          if (index - 1 >= 0) {
            return this._timeline[index - 1];
          } else {
            return null;
          }
        }
        /**
         * Cancel events at and after the given time
         * @param  after  The time to query.
         */

      }, {
        key: "cancel",
        value: function cancel(after) {
          if (this._timeline.length > 1) {
            var index = this._search(after);

            if (index >= 0) {
              if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(this._timeline[index].time, after)) {
                // get the first item with that time
                for (var i = index; i >= 0; i--) {
                  if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(this._timeline[i].time, after)) {
                    index = i;
                  } else {
                    break;
                  }
                }

                this._timeline = this._timeline.slice(0, index);
              } else {
                this._timeline = this._timeline.slice(0, index + 1);
              }
            } else {
              this._timeline = [];
            }
          } else if (this._timeline.length === 1) {
            // the first item's time
            if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["GTE"])(this._timeline[0].time, after)) {
              this._timeline = [];
            }
          }

          return this;
        }
        /**
         * Cancel events before or equal to the given time.
         * @param  time  The time to cancel before.
         */

      }, {
        key: "cancelBefore",
        value: function cancelBefore(time) {
          var index = this._search(time);

          if (index >= 0) {
            this._timeline = this._timeline.slice(index + 1);
          }

          return this;
        }
        /**
         * Returns the previous event if there is one. null otherwise
         * @param  event The event to find the previous one of
         * @return The event right before the given event
         */

      }, {
        key: "previousEvent",
        value: function previousEvent(event) {
          var index = this._timeline.indexOf(event);

          if (index > 0) {
            return this._timeline[index - 1];
          } else {
            return null;
          }
        }
        /**
         * Does a binary search on the timeline array and returns the
         * nearest event index whose time is after or equal to the given time.
         * If a time is searched before the first index in the timeline, -1 is returned.
         * If the time is after the end, the index of the last item is returned.
         */

      }, {
        key: "_search",
        value: function _search(time) {
          var param = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "time";

          if (this._timeline.length === 0) {
            return -1;
          }

          var beginning = 0;
          var len = this._timeline.length;
          var end = len;

          if (len > 0 && this._timeline[len - 1][param] <= time) {
            return len - 1;
          }

          while (beginning < end) {
            // calculate the midpoint for roughly equal partition
            var midPoint = Math.floor(beginning + (end - beginning) / 2);
            var event = this._timeline[midPoint];
            var nextEvent = this._timeline[midPoint + 1];

            if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(event[param], time)) {
              // choose the last one that has the same time
              for (var i = midPoint; i < this._timeline.length; i++) {
                var testEvent = this._timeline[i];

                if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(testEvent[param], time)) {
                  midPoint = i;
                } else {
                  break;
                }
              }

              return midPoint;
            } else if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["LT"])(event[param], time) && Object(_Math__WEBPACK_IMPORTED_MODULE_3__["GT"])(nextEvent[param], time)) {
              return midPoint;
            } else if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["GT"])(event[param], time)) {
              // search lower
              end = midPoint;
            } else {
              // search upper
              beginning = midPoint + 1;
            }
          }

          return -1;
        }
        /**
         * Internal iterator. Applies extra safety checks for
         * removing items from the array.
         */

      }, {
        key: "_iterate",
        value: function _iterate(callback) {
          var lowerBound = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var upperBound = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this._timeline.length - 1;

          this._timeline.slice(lowerBound, upperBound + 1).forEach(callback);
        }
        /**
         * Iterate over everything in the array
         * @param  callback The callback to invoke with every item
         */

      }, {
        key: "forEach",
        value: function forEach(callback) {
          this._iterate(callback);

          return this;
        }
        /**
         * Iterate over everything in the array at or before the given time.
         * @param  time The time to check if items are before
         * @param  callback The callback to invoke with every item
         */

      }, {
        key: "forEachBefore",
        value: function forEachBefore(time, callback) {
          // iterate over the items in reverse so that removing an item doesn't break things
          var upperBound = this._search(time);

          if (upperBound !== -1) {
            this._iterate(callback, 0, upperBound);
          }

          return this;
        }
        /**
         * Iterate over everything in the array after the given time.
         * @param  time The time to check if items are before
         * @param  callback The callback to invoke with every item
         */

      }, {
        key: "forEachAfter",
        value: function forEachAfter(time, callback) {
          // iterate over the items in reverse so that removing an item doesn't break things
          var lowerBound = this._search(time);

          this._iterate(callback, lowerBound + 1);

          return this;
        }
        /**
         * Iterate over everything in the array between the startTime and endTime.
         * The timerange is inclusive of the startTime, but exclusive of the endTime.
         * range = [startTime, endTime).
         * @param  startTime The time to check if items are before
         * @param  endTime The end of the test interval.
         * @param  callback The callback to invoke with every item
         */

      }, {
        key: "forEachBetween",
        value: function forEachBetween(startTime, endTime, callback) {
          var lowerBound = this._search(startTime);

          var upperBound = this._search(endTime);

          if (lowerBound !== -1 && upperBound !== -1) {
            if (this._timeline[lowerBound].time !== startTime) {
              lowerBound += 1;
            } // exclusive of the end time


            if (this._timeline[upperBound].time === endTime) {
              upperBound -= 1;
            }

            this._iterate(callback, lowerBound, upperBound);
          } else if (lowerBound === -1) {
            this._iterate(callback, 0, upperBound);
          }

          return this;
        }
        /**
         * Iterate over everything in the array at or after the given time. Similar to
         * forEachAfter, but includes the item(s) at the given time.
         * @param  time The time to check if items are before
         * @param  callback The callback to invoke with every item
         */

      }, {
        key: "forEachFrom",
        value: function forEachFrom(time, callback) {
          // iterate over the items in reverse so that removing an item doesn't break things
          var lowerBound = this._search(time); // work backwards until the event time is less than time


          while (lowerBound >= 0 && this._timeline[lowerBound].time >= time) {
            lowerBound--;
          }

          this._iterate(callback, lowerBound + 1);

          return this;
        }
        /**
         * Iterate over everything in the array at the given time
         * @param  time The time to check if items are before
         * @param  callback The callback to invoke with every item
         */

      }, {
        key: "forEachAtTime",
        value: function forEachAtTime(time, callback) {
          // iterate over the items in reverse so that removing an item doesn't break things
          var upperBound = this._search(time);

          if (upperBound !== -1 && Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(this._timeline[upperBound].time, time)) {
            var lowerBound = upperBound;

            for (var i = upperBound; i >= 0; i--) {
              if (Object(_Math__WEBPACK_IMPORTED_MODULE_3__["EQ"])(this._timeline[i].time, time)) {
                lowerBound = i;
              } else {
                break;
              }
            }

            this._iterate(function (event) {
              callback(event);
            }, lowerBound, upperBound);
          }

          return this;
        }
        /**
         * Clean up.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Timeline.prototype), "dispose", this).call(this);

          this._timeline = [];
          return this;
        }
      }, {
        key: "length",

        /**
         * The number of items in the timeline.
         */
        get: function get() {
          return this._timeline.length;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return {
            memory: Infinity,
            increasing: false
          };
        }
      }]);

      return Timeline;
    }(_Tone__WEBPACK_IMPORTED_MODULE_0__["Tone"]); //# sourceMappingURL=Timeline.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/util/TimelineValue.js":
  /*!****************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/TimelineValue.js ***!
    \****************************************************************/

  /*! exports provided: TimelineValue */

  /***/
  function node_modulesToneBuildEsmCoreUtilTimelineValueJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "TimelineValue", function () {
      return TimelineValue;
    });
    /* harmony import */


    var _Timeline__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Timeline */
    "./node_modules/tone/build/esm/core/util/Timeline.js");
    /* harmony import */


    var _Tone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../Tone */
    "./node_modules/tone/build/esm/core/Tone.js");
    /**
     * Represents a single value which is gettable and settable in a timed way
     */


    var TimelineValue = /*#__PURE__*/function (_Tone__WEBPACK_IMPORT8) {
      _inherits(TimelineValue, _Tone__WEBPACK_IMPORT8);

      var _super94 = _createSuper(TimelineValue);

      /**
       * @param initialValue The value to return if there is no scheduled values
       */
      function TimelineValue(initialValue) {
        var _this133;

        _classCallCheck2(this, TimelineValue);

        _this133 = _super94.call(this);
        _this133.name = "TimelineValue";
        /**
         * The timeline which stores the values
         */

        _this133._timeline = new _Timeline__WEBPACK_IMPORTED_MODULE_0__["Timeline"]({
          memory: 10
        });
        _this133._initialValue = initialValue;
        return _this133;
      }
      /**
       * Set the value at the given time
       */


      _createClass2(TimelineValue, [{
        key: "set",
        value: function set(value, time) {
          this._timeline.add({
            value: value,
            time: time
          });

          return this;
        }
        /**
         * Get the value at the given time
         */

      }, {
        key: "get",
        value: function get(time) {
          var event = this._timeline.get(time);

          if (event) {
            return event.value;
          } else {
            return this._initialValue;
          }
        }
      }]);

      return TimelineValue;
    }(_Tone__WEBPACK_IMPORTED_MODULE_1__["Tone"]); //# sourceMappingURL=TimelineValue.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/util/TypeCheck.js":
  /*!************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/util/TypeCheck.js ***!
    \************************************************************/

  /*! exports provided: isUndef, isDefined, isFunction, isNumber, isObject, isBoolean, isArray, isString, isNote */

  /***/
  function node_modulesToneBuildEsmCoreUtilTypeCheckJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isUndef", function () {
      return isUndef;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isDefined", function () {
      return isDefined;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isFunction", function () {
      return isFunction;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isNumber", function () {
      return isNumber;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isObject", function () {
      return isObject;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isBoolean", function () {
      return isBoolean;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isArray", function () {
      return isArray;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isString", function () {
      return isString;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "isNote", function () {
      return isNote;
    });
    /**
     * Test if the arg is undefined
     */


    function isUndef(arg) {
      return typeof arg === "undefined";
    }
    /**
     * Test if the arg is not undefined
     */


    function isDefined(arg) {
      return !isUndef(arg);
    }
    /**
     * Test if the arg is a function
     */


    function isFunction(arg) {
      return typeof arg === "function";
    }
    /**
     * Test if the argument is a number.
     */


    function isNumber(arg) {
      return typeof arg === "number";
    }
    /**
     * Test if the given argument is an object literal (i.e. `{}`);
     */


    function isObject(arg) {
      return Object.prototype.toString.call(arg) === "[object Object]" && arg.constructor === Object;
    }
    /**
     * Test if the argument is a boolean.
     */


    function isBoolean(arg) {
      return typeof arg === "boolean";
    }
    /**
     * Test if the argument is an Array
     */


    function isArray(arg) {
      return Array.isArray(arg);
    }
    /**
     * Test if the argument is a string.
     */


    function isString(arg) {
      return typeof arg === "string";
    }
    /**
     * Test if the argument is in the form of a note in scientific pitch notation.
     * e.g. "C4"
     */


    function isNote(arg) {
      return isString(arg) && /^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(arg);
    } //# sourceMappingURL=TypeCheck.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/worklet/DelayLine.worklet.js ***!
    \***********************************************************************/

  /*! no exports provided */

  /***/
  function node_modulesToneBuildEsmCoreWorkletDelayLineWorkletJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./WorkletGlobalScope */
    "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");

    var delayLine =
    /* javascript */
    "\n\t/**\n\t * A multichannel buffer for use within an AudioWorkletProcessor as a delay line\n\t */\n\tclass DelayLine {\n\t\t\n\t\tconstructor(size, channels) {\n\t\t\tthis.buffer = [];\n\t\t\tthis.writeHead = []\n\t\t\tthis.size = size;\n\n\t\t\t// create the empty channels\n\t\t\tfor (let i = 0; i < channels; i++) {\n\t\t\t\tthis.buffer[i] = new Float32Array(this.size);\n\t\t\t\tthis.writeHead[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Push a value onto the end\n\t\t * @param channel number\n\t\t * @param value number\n\t\t */\n\t\tpush(channel, value) {\n\t\t\tthis.writeHead[channel] += 1;\n\t\t\tif (this.writeHead[channel] > this.size) {\n\t\t\t\tthis.writeHead[channel] = 0;\n\t\t\t}\n\t\t\tthis.buffer[channel][this.writeHead[channel]] = value;\n\t\t}\n\n\t\t/**\n\t\t * Get the recorded value of the channel given the delay\n\t\t * @param channel number\n\t\t * @param delay number delay samples\n\t\t */\n\t\tget(channel, delay) {\n\t\t\tlet readHead = this.writeHead[channel] - Math.floor(delay);\n\t\t\tif (readHead < 0) {\n\t\t\t\treadHead += this.size;\n\t\t\t}\n\t\t\treturn this.buffer[channel][readHead];\n\t\t}\n\t}\n";
    Object(_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__["addToWorklet"])(delayLine); //# sourceMappingURL=DelayLine.worklet.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js":
  /*!*******************************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js ***!
    \*******************************************************************************/

  /*! exports provided: singleIOProcess */

  /***/
  function node_modulesToneBuildEsmCoreWorkletSingleIOProcessorWorkletJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "singleIOProcess", function () {
      return singleIOProcess;
    });
    /* harmony import */


    var _ToneAudioWorkletProcessor_worklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./ToneAudioWorkletProcessor.worklet */
    "./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js");
    /* harmony import */


    var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./WorkletGlobalScope */
    "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");

    var singleIOProcess =
    /* javascript */
    "\n\t/**\n\t * Abstract class for a single input/output processor. \n\t * has a 'generate' function which processes one sample at a time\n\t */\n\tclass SingleIOProcessor extends ToneAudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\tsuper(Object.assign(options, {\n\t\t\t\tnumberOfInputs: 1,\n\t\t\t\tnumberOfOutputs: 1\n\t\t\t}));\n\t\t\t/**\n\t\t\t * Holds the name of the parameter and a single value of that\n\t\t\t * parameter at the current sample\n\t\t\t * @type { [name: string]: number }\n\t\t\t */\n\t\t\tthis.params = {}\n\t\t}\n\n\t\t/**\n\t\t * Generate an output sample from the input sample and parameters\n\t\t * @abstract\n\t\t * @param input number\n\t\t * @param channel number\n\t\t * @param parameters { [name: string]: number }\n\t\t * @returns number\n\t\t */\n\t\tgenerate(){}\n\n\t\t/**\n\t\t * Update the private params object with the \n\t\t * values of the parameters at the given index\n\t\t * @param parameters { [name: string]: Float32Array },\n\t\t * @param index number\n\t\t */\n\t\tupdateParams(parameters, index) {\n\t\t\tfor (const paramName in parameters) {\n\t\t\t\tconst param = parameters[paramName];\n\t\t\t\tif (param.length > 1) {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][index];\n\t\t\t\t} else {\n\t\t\t\t\tthis.params[paramName] = parameters[paramName][0];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Process a single frame of the audio\n\t\t * @param inputs Float32Array[][]\n\t\t * @param outputs Float32Array[][]\n\t\t */\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\tconst input = inputs[0];\n\t\t\tconst output = outputs[0];\n\t\t\t// get the parameter values\n\t\t\tconst channelCount = Math.max(input && input.length || 0, output.length);\n\t\t\tfor (let sample = 0; sample < this.blockSize; sample++) {\n\t\t\t\tthis.updateParams(parameters, sample);\n\t\t\t\tfor (let channel = 0; channel < channelCount; channel++) {\n\t\t\t\t\tconst inputSample = input && input.length ? input[channel][sample] : 0;\n\t\t\t\t\toutput[channel][sample] = this.generate(inputSample, channel, this.params);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn !this.disposed;\n\t\t}\n\t};\n";
    Object(_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__["addToWorklet"])(singleIOProcess); //# sourceMappingURL=SingleIOProcessor.worklet.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js":
  /*!**********************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js ***!
    \**********************************************************************/

  /*! exports provided: ToneAudioWorklet */

  /***/
  function node_modulesToneBuildEsmCoreWorkletToneAudioWorkletJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioWorklet", function () {
      return ToneAudioWorklet;
    });
    /* harmony import */


    var _context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./WorkletGlobalScope */
    "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");

    var ToneAudioWorklet = /*#__PURE__*/function (_context_ToneAudioNod) {
      _inherits(ToneAudioWorklet, _context_ToneAudioNod);

      var _super95 = _createSuper(ToneAudioWorklet);

      function ToneAudioWorklet(options) {
        var _this134;

        _classCallCheck2(this, ToneAudioWorklet);

        _this134 = _super95.call(this, options);
        _this134.name = "ToneAudioWorklet";
        /**
         * The constructor options for the node
         */

        _this134.workletOptions = {};
        /**
         * Callback which is invoked when there is an error in the processing
         */

        _this134.onprocessorerror = _util_Interface__WEBPACK_IMPORTED_MODULE_1__["noOp"];
        var blobUrl = URL.createObjectURL(new Blob([Object(_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_2__["getWorkletGlobalScope"])()], {
          type: "text/javascript"
        }));

        var name = _this134._audioWorkletName();

        _this134._dummyGain = _this134.context.createGain();
        _this134._dummyParam = _this134._dummyGain.gain; // Register the processor

        _this134.context.addAudioWorkletModule(blobUrl, name).then(function () {
          // create the worklet when it's read
          if (!_this134.disposed) {
            _this134._worklet = _this134.context.createAudioWorkletNode(name, _this134.workletOptions);
            _this134._worklet.onprocessorerror = _this134.onprocessorerror.bind(_assertThisInitialized(_this134));

            _this134.onReady(_this134._worklet);
          }
        });

        return _this134;
      }

      _createClass2(ToneAudioWorklet, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(ToneAudioWorklet.prototype), "dispose", this).call(this);

          this._dummyGain.disconnect();

          if (this._worklet) {
            this._worklet.port.postMessage("dispose");

            this._worklet.disconnect();
          }

          return this;
        }
      }]);

      return ToneAudioWorklet;
    }(_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=ToneAudioWorklet.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js":
  /*!***************************************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/worklet/ToneAudioWorkletProcessor.worklet.js ***!
    \***************************************************************************************/

  /*! no exports provided */

  /***/
  function node_modulesToneBuildEsmCoreWorkletToneAudioWorkletProcessorWorkletJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./WorkletGlobalScope */
    "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");

    var toneAudioWorkletProcessor =
    /* javascript */
    "\n\t/**\n\t * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. \n\t */\n\tclass ToneAudioWorkletProcessor extends AudioWorkletProcessor {\n\n\t\tconstructor(options) {\n\t\t\t\n\t\t\tsuper(options);\n\t\t\t/**\n\t\t\t * If the processor was disposed or not. Keep alive until it's disposed.\n\t\t\t */\n\t\t\tthis.disposed = false;\n\t\t   \t/** \n\t\t\t * The number of samples in the processing block\n\t\t\t */\n\t\t\tthis.blockSize = 128;\n\t\t\t/**\n\t\t\t * the sample rate\n\t\t\t */\n\t\t\tthis.sampleRate = sampleRate;\n\n\t\t\tthis.port.onmessage = (event) => {\n\t\t\t\t// when it receives a dispose \n\t\t\t\tif (event.data === \"dispose\") {\n\t\t\t\t\tthis.disposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}\n";
    Object(_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_0__["addToWorklet"])(toneAudioWorkletProcessor); //# sourceMappingURL=ToneAudioWorkletProcessor.worklet.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js":
  /*!************************************************************************!*\
    !*** ./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js ***!
    \************************************************************************/

  /*! exports provided: addToWorklet, registerProcessor, getWorkletGlobalScope */

  /***/
  function node_modulesToneBuildEsmCoreWorkletWorkletGlobalScopeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "addToWorklet", function () {
      return addToWorklet;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "registerProcessor", function () {
      return registerProcessor;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "getWorkletGlobalScope", function () {
      return getWorkletGlobalScope;
    });
    /**
     * All of the classes or functions which are loaded into the AudioWorkletGlobalScope
     */


    var workletContext = new Set();
    /**
     * Add a class to the AudioWorkletGlobalScope
     */

    function addToWorklet(classOrFunction) {
      workletContext.add(classOrFunction);
    }
    /**
     * Register a processor in the AudioWorkletGlobalScope with the given name
     */


    function registerProcessor(name, classDesc) {
      var processor =
      /* javascript */
      "registerProcessor(\"".concat(name, "\", ").concat(classDesc, ")");
      workletContext.add(processor);
    }
    /**
     * Get all of the modules which have been registered to the AudioWorkletGlobalScope
     */


    function getWorkletGlobalScope() {
      return Array.from(workletContext).join("\n");
    } //# sourceMappingURL=WorkletGlobalScope.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/AutoFilter.js":
  /*!**********************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/AutoFilter.js ***!
    \**********************************************************/

  /*! exports provided: AutoFilter */

  /***/
  function node_modulesToneBuildEsmEffectAutoFilterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AutoFilter", function () {
      return AutoFilter;
    });
    /* harmony import */


    var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../component/filter/Filter */
    "./node_modules/tone/build/esm/component/filter/Filter.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _LFOEffect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./LFOEffect */
    "./node_modules/tone/build/esm/effect/LFOEffect.js");
    /**
     * AutoFilter is a Tone.Filter with a Tone.LFO connected to the filter cutoff frequency.
     * Setting the LFO rate and depth allows for control over the filter modulation rate
     * and depth.
     *
     * @example
     * // create an autofilter and start it's LFO
     * const autoFilter = new Tone.AutoFilter("4n").toDestination().start();
     * // route an oscillator through the filter and start it
     * const oscillator = new Tone.Oscillator().connect(autoFilter).start();
     * @category Effect
     */


    var AutoFilter = /*#__PURE__*/function (_LFOEffect__WEBPACK_I) {
      _inherits(AutoFilter, _LFOEffect__WEBPACK_I);

      var _super96 = _createSuper(AutoFilter);

      function AutoFilter() {
        var _this135;

        _classCallCheck2(this, AutoFilter);

        _this135 = _super96.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AutoFilter.getDefaults(), arguments, ["frequency", "baseFrequency", "octaves"]));
        _this135.name = "AutoFilter";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AutoFilter.getDefaults(), arguments, ["frequency", "baseFrequency", "octaves"]);
        _this135.filter = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_0__["Filter"](Object.assign(options.filter, {
          context: _this135.context
        })); // connections

        _this135.connectEffect(_this135.filter);

        _this135._lfo.connect(_this135.filter.frequency);

        _this135.octaves = options.octaves;
        _this135.baseFrequency = options.baseFrequency;
        return _this135;
      }

      _createClass2(AutoFilter, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(AutoFilter.prototype), "dispose", this).call(this);

          this.filter.dispose();
          return this;
        }
      }, {
        key: "baseFrequency",

        /**
         * The minimum value of the filter's cutoff frequency.
         */
        get: function get() {
          return this._lfo.min;
        },
        set: function set(freq) {
          this._lfo.min = this.toFrequency(freq); // and set the max

          this.octaves = this._octaves;
        }
        /**
         * The maximum value of the filter's cutoff frequency.
         */

      }, {
        key: "octaves",
        get: function get() {
          return this._octaves;
        },
        set: function set(oct) {
          this._octaves = oct;
          this._lfo.max = this._lfo.min * Math.pow(2, oct);
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_LFOEffect__WEBPACK_IMPORTED_MODULE_2__["LFOEffect"].getDefaults(), {
            baseFrequency: 200,
            octaves: 2.6,
            filter: {
              type: "lowpass",
              rolloff: -12,
              Q: 1
            }
          });
        }
      }]);

      return AutoFilter;
    }(_LFOEffect__WEBPACK_IMPORTED_MODULE_2__["LFOEffect"]); //# sourceMappingURL=AutoFilter.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/AutoPanner.js":
  /*!**********************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/AutoPanner.js ***!
    \**********************************************************/

  /*! exports provided: AutoPanner */

  /***/
  function node_modulesToneBuildEsmEffectAutoPannerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AutoPanner", function () {
      return AutoPanner;
    });
    /* harmony import */


    var _component_channel_Panner__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../component/channel/Panner */
    "./node_modules/tone/build/esm/component/channel/Panner.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _LFOEffect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./LFOEffect */
    "./node_modules/tone/build/esm/effect/LFOEffect.js");
    /**
     * AutoPanner is a [[Panner]] with an [[LFO]] connected to the pan amount.
     * [Related Reading](https://www.ableton.com/en/blog/autopan-chopper-effect-and-more-liveschool/).
     *
     * @example
     * // create an autopanner and start it
     * const autoPanner = new Tone.AutoPanner("4n").toDestination().start();
     * // route an oscillator through the panner and start it
     * const oscillator = new Tone.Oscillator().connect(autoPanner).start();
     * @category Effect
     */


    var AutoPanner = /*#__PURE__*/function (_LFOEffect__WEBPACK_I2) {
      _inherits(AutoPanner, _LFOEffect__WEBPACK_I2);

      var _super97 = _createSuper(AutoPanner);

      function AutoPanner() {
        var _this136;

        _classCallCheck2(this, AutoPanner);

        _this136 = _super97.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AutoPanner.getDefaults(), arguments, ["frequency"]));
        _this136.name = "AutoPanner";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AutoPanner.getDefaults(), arguments, ["frequency"]);
        _this136._panner = new _component_channel_Panner__WEBPACK_IMPORTED_MODULE_0__["Panner"]({
          context: _this136.context,
          channelCount: options.channelCount
        }); // connections

        _this136.connectEffect(_this136._panner);

        _this136._lfo.connect(_this136._panner.pan);

        _this136._lfo.min = -1;
        _this136._lfo.max = 1;
        return _this136;
      }

      _createClass2(AutoPanner, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(AutoPanner.prototype), "dispose", this).call(this);

          this._panner.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_LFOEffect__WEBPACK_IMPORTED_MODULE_2__["LFOEffect"].getDefaults(), {
            channelCount: 1
          });
        }
      }]);

      return AutoPanner;
    }(_LFOEffect__WEBPACK_IMPORTED_MODULE_2__["LFOEffect"]); //# sourceMappingURL=AutoPanner.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/AutoWah.js":
  /*!*******************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/AutoWah.js ***!
    \*******************************************************/

  /*! exports provided: AutoWah */

  /***/
  function node_modulesToneBuildEsmEffectAutoWahJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AutoWah", function () {
      return AutoWah;
    });
    /* harmony import */


    var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Effect */
    "./node_modules/tone/build/esm/effect/Effect.js");
    /* harmony import */


    var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../component/filter/Filter */
    "./node_modules/tone/build/esm/component/filter/Filter.js");
    /* harmony import */


    var _component_analysis_Follower__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../component/analysis/Follower */
    "./node_modules/tone/build/esm/component/analysis/Follower.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/type/Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /* harmony import */


    var _signal_ScaleExp__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../signal/ScaleExp */
    "./node_modules/tone/build/esm/signal/ScaleExp.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * AutoWah connects a [[Follower]] to a [[Filter]].
     * The frequency of the filter, follows the input amplitude curve.
     * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna).
     *
     * @example
     * const autoWah = new Tone.AutoWah(50, 6, -30).toDestination();
     * // initialize the synth and connect to autowah
     * const synth = new Tone.Synth().connect(autoWah);
     * // Q value influences the effect of the wah - default is 2
     * autoWah.Q.value = 6;
     * // more audible on higher notes
     * synth.triggerAttackRelease("C4", "8n");
     * @category Effect
     */


    var AutoWah = /*#__PURE__*/function (_Effect__WEBPACK_IMPO) {
      _inherits(AutoWah, _Effect__WEBPACK_IMPO);

      var _super98 = _createSuper(AutoWah);

      function AutoWah() {
        var _this137;

        _classCallCheck2(this, AutoWah);

        _this137 = _super98.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(AutoWah.getDefaults(), arguments, ["baseFrequency", "octaves", "sensitivity"]));
        _this137.name = "AutoWah";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(AutoWah.getDefaults(), arguments, ["baseFrequency", "octaves", "sensitivity"]);
        _this137._follower = new _component_analysis_Follower__WEBPACK_IMPORTED_MODULE_2__["Follower"]({
          context: _this137.context,
          smoothing: options.follower
        });
        _this137._sweepRange = new _signal_ScaleExp__WEBPACK_IMPORTED_MODULE_6__["ScaleExp"]({
          context: _this137.context,
          min: 0,
          max: 1,
          exponent: 0.5
        });
        _this137._baseFrequency = _this137.toFrequency(options.baseFrequency);
        _this137._octaves = options.octaves;
        _this137._inputBoost = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_4__["Gain"]({
          context: _this137.context
        });
        _this137._bandpass = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]({
          context: _this137.context,
          rolloff: -48,
          frequency: 0,
          Q: options.Q
        });
        _this137._peaking = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]({
          context: _this137.context,
          type: "peaking"
        });
        _this137._peaking.gain.value = options.gain;
        _this137.gain = _this137._peaking.gain;
        _this137.Q = _this137._bandpass.Q; // the control signal path

        _this137.effectSend.chain(_this137._inputBoost, _this137._follower, _this137._sweepRange);

        _this137._sweepRange.connect(_this137._bandpass.frequency);

        _this137._sweepRange.connect(_this137._peaking.frequency); // the filtered path


        _this137.effectSend.chain(_this137._bandpass, _this137._peaking, _this137.effectReturn); // set the initial value


        _this137._setSweepRange();

        _this137.sensitivity = options.sensitivity;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_7__["readOnly"])(_assertThisInitialized(_this137), ["gain", "Q"]);
        return _this137;
      }

      _createClass2(AutoWah, [{
        key: "_setSweepRange",

        /**
         * sets the sweep range of the scaler
         */
        value: function _setSweepRange() {
          this._sweepRange.min = this._baseFrequency;
          this._sweepRange.max = Math.min(this._baseFrequency * Math.pow(2, this._octaves), this.context.sampleRate / 2);
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(AutoWah.prototype), "dispose", this).call(this);

          this._follower.dispose();

          this._sweepRange.dispose();

          this._bandpass.dispose();

          this._peaking.dispose();

          this._inputBoost.dispose();

          return this;
        }
      }, {
        key: "octaves",

        /**
         * The number of octaves that the filter will sweep above the baseFrequency.
         */
        get: function get() {
          return this._octaves;
        },
        set: function set(octaves) {
          this._octaves = octaves;

          this._setSweepRange();
        }
        /**
         * The follower's smoothing time
         */

      }, {
        key: "follower",
        get: function get() {
          return this._follower.smoothing;
        },
        set: function set(follower) {
          this._follower.smoothing = follower;
        }
        /**
         * The base frequency from which the sweep will start from.
         */

      }, {
        key: "baseFrequency",
        get: function get() {
          return this._baseFrequency;
        },
        set: function set(baseFreq) {
          this._baseFrequency = this.toFrequency(baseFreq);

          this._setSweepRange();
        }
        /**
         * The sensitivity to control how responsive to the input signal the filter is.
         */

      }, {
        key: "sensitivity",
        get: function get() {
          return Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__["gainToDb"])(1 / this._inputBoost.gain.value);
        },
        set: function set(sensitivity) {
          this._inputBoost.gain.value = 1 / Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_5__["dbToGain"])(sensitivity);
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"].getDefaults(), {
            baseFrequency: 100,
            octaves: 6,
            sensitivity: 0,
            Q: 2,
            gain: 2,
            follower: 0.2
          });
        }
      }]);

      return AutoWah;
    }(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"]); //# sourceMappingURL=AutoWah.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/BitCrusher.js":
  /*!**********************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/BitCrusher.js ***!
    \**********************************************************/

  /*! exports provided: BitCrusher */

  /***/
  function node_modulesToneBuildEsmEffectBitCrusherJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BitCrusher", function () {
      return BitCrusher;
    });
    /* harmony import */


    var _core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/worklet/ToneAudioWorklet */
    "./node_modules/tone/build/esm/core/worklet/ToneAudioWorklet.js");
    /* harmony import */


    var _Effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Effect */
    "./node_modules/tone/build/esm/effect/Effect.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_context_Param__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _BitCrusher_worklet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./BitCrusher.worklet */
    "./node_modules/tone/build/esm/effect/BitCrusher.worklet.js");
    /**
     * BitCrusher down-samples the incoming signal to a different bit depth.
     * Lowering the bit depth of the signal creates distortion. Read more about BitCrushing
     * on [Wikipedia](https://en.wikipedia.org/wiki/Bitcrusher).
     * @example
     * // initialize crusher and route a synth through it
     * const crusher = new Tone.BitCrusher(4).toDestination();
     * const synth = new Tone.Synth().connect(crusher);
     * synth.triggerAttackRelease("C2", 2);
     *
     * @category Effect
     */


    var BitCrusher = /*#__PURE__*/function (_Effect__WEBPACK_IMPO2) {
      _inherits(BitCrusher, _Effect__WEBPACK_IMPO2);

      var _super99 = _createSuper(BitCrusher);

      function BitCrusher() {
        var _this138;

        _classCallCheck2(this, BitCrusher);

        _this138 = _super99.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(BitCrusher.getDefaults(), arguments, ["bits"]));
        _this138.name = "BitCrusher";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(BitCrusher.getDefaults(), arguments, ["bits"]);
        _this138._bitCrusherWorklet = new BitCrusherWorklet({
          context: _this138.context,
          bits: options.bits
        }); // connect it up

        _this138.connectEffect(_this138._bitCrusherWorklet);

        _this138.bits = _this138._bitCrusherWorklet.bits;
        return _this138;
      }

      _createClass2(BitCrusher, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(BitCrusher.prototype), "dispose", this).call(this);

          this._bitCrusherWorklet.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_1__["Effect"].getDefaults(), {
            bits: 4
          });
        }
      }]);

      return BitCrusher;
    }(_Effect__WEBPACK_IMPORTED_MODULE_1__["Effect"]);
    /**
     * Internal class which creates an AudioWorklet to do the bit crushing
     */


    var BitCrusherWorklet = /*#__PURE__*/function (_core_worklet_ToneAud2) {
      _inherits(BitCrusherWorklet, _core_worklet_ToneAud2);

      var _super100 = _createSuper(BitCrusherWorklet);

      function BitCrusherWorklet() {
        var _this139;

        _classCallCheck2(this, BitCrusherWorklet);

        _this139 = _super100.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(BitCrusherWorklet.getDefaults(), arguments));
        _this139.name = "BitCrusherWorklet";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(BitCrusherWorklet.getDefaults(), arguments);
        _this139.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this139.context
        });
        _this139.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this139.context
        });
        _this139.bits = new _core_context_Param__WEBPACK_IMPORTED_MODULE_5__["Param"]({
          context: _this139.context,
          value: options.bits,
          units: "positive",
          minValue: 1,
          maxValue: 16,
          param: _this139._dummyParam,
          swappable: true
        });
        return _this139;
      }

      _createClass2(BitCrusherWorklet, [{
        key: "_audioWorkletName",
        value: function _audioWorkletName() {
          return _BitCrusher_worklet__WEBPACK_IMPORTED_MODULE_6__["workletName"];
        }
      }, {
        key: "onReady",
        value: function onReady(node) {
          Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["connectSeries"])(this.input, node, this.output);
          var bits = node.parameters.get("bits");
          this.bits.setParam(bits);
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(BitCrusherWorklet.prototype), "dispose", this).call(this);

          this.input.dispose();
          this.output.dispose();
          this.bits.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_0__["ToneAudioWorklet"].getDefaults(), {
            bits: 12
          });
        }
      }]);

      return BitCrusherWorklet;
    }(_core_worklet_ToneAudioWorklet__WEBPACK_IMPORTED_MODULE_0__["ToneAudioWorklet"]); //# sourceMappingURL=BitCrusher.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/BitCrusher.worklet.js":
  /*!******************************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/BitCrusher.worklet.js ***!
    \******************************************************************/

  /*! exports provided: workletName, bitCrusherWorklet */

  /***/
  function node_modulesToneBuildEsmEffectBitCrusherWorkletJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "workletName", function () {
      return workletName;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "bitCrusherWorklet", function () {
      return bitCrusherWorklet;
    });
    /* harmony import */


    var _core_worklet_SingleIOProcessor_worklet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/worklet/SingleIOProcessor.worklet */
    "./node_modules/tone/build/esm/core/worklet/SingleIOProcessor.worklet.js");
    /* harmony import */


    var _core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/worklet/WorkletGlobalScope */
    "./node_modules/tone/build/esm/core/worklet/WorkletGlobalScope.js");

    var workletName = "bit-crusher";
    var bitCrusherWorklet =
    /* javascript */
    "\n\tclass BitCrusherWorklet extends SingleIOProcessor {\n\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [{\n\t\t\t\tname: \"bits\",\n\t\t\t\tdefaultValue: 12,\n\t\t\t\tminValue: 1,\n\t\t\t\tmaxValue: 16\n\t\t\t}];\n\t\t}\n\n\t\tgenerate(input, _channel, parameters) {\n\t\t\tconst step = Math.pow(0.5, parameters.bits - 1);\n\t\t\tconst val = step * Math.floor(input / step + 0.5);\n\t\t\treturn val;\n\t\t}\n\t}\n";
    Object(_core_worklet_WorkletGlobalScope__WEBPACK_IMPORTED_MODULE_1__["registerProcessor"])(workletName, bitCrusherWorklet); //# sourceMappingURL=BitCrusher.worklet.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/effect/Chebyshev.js":
  /*!*********************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/Chebyshev.js ***!
    \*********************************************************/

  /*! exports provided: Chebyshev */

  /***/
  function node_modulesToneBuildEsmEffectChebyshevJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Chebyshev", function () {
      return Chebyshev;
    });
    /* harmony import */


    var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Effect */
    "./node_modules/tone/build/esm/effect/Effect.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../signal/WaveShaper */
    "./node_modules/tone/build/esm/signal/WaveShaper.js");
    /**
     * Chebyshev is a waveshaper which is good
     * for making different types of distortion sounds.
     * Note that odd orders sound very different from even ones,
     * and order = 1 is no change.
     * Read more at [music.columbia.edu](http://music.columbia.edu/cmc/musicandcomputers/chapter4/04_06.php).
     * @example
     * // create a new cheby
     * const cheby = new Tone.Chebyshev(50).toDestination();
     * // create a monosynth connected to our cheby
     * const synth = new Tone.MonoSynth().connect(cheby);
     * synth.triggerAttackRelease("C2", 0.4);
     * @category Effect
     */


    var Chebyshev = /*#__PURE__*/function (_Effect__WEBPACK_IMPO3) {
      _inherits(Chebyshev, _Effect__WEBPACK_IMPO3);

      var _super101 = _createSuper(Chebyshev);

      function Chebyshev() {
        var _this140;

        _classCallCheck2(this, Chebyshev);

        _this140 = _super101.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Chebyshev.getDefaults(), arguments, ["order"]));
        _this140.name = "Chebyshev";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Chebyshev.getDefaults(), arguments, ["order"]);
        _this140._shaper = new _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_2__["WaveShaper"]({
          context: _this140.context,
          length: 4096
        });
        _this140._order = options.order;

        _this140.connectEffect(_this140._shaper);

        _this140.order = options.order;
        _this140.oversample = options.oversample;
        return _this140;
      }

      _createClass2(Chebyshev, [{
        key: "_getCoefficient",

        /**
         * get the coefficient for that degree
         * @param  x the x value
         * @param  degree
         * @param  memo memoize the computed value. this speeds up computation greatly.
         */
        value: function _getCoefficient(x, degree, memo) {
          if (memo.has(degree)) {
            return memo.get(degree);
          } else if (degree === 0) {
            memo.set(degree, 0);
          } else if (degree === 1) {
            memo.set(degree, x);
          } else {
            memo.set(degree, 2 * x * this._getCoefficient(x, degree - 1, memo) - this._getCoefficient(x, degree - 2, memo));
          }

          return memo.get(degree);
        }
        /**
         * The order of the Chebyshev polynomial which creates the equation which is applied to the incoming
         * signal through a Tone.WaveShaper. The equations are in the form:
         * ```
         * order 2: 2x^2 + 1
         * order 3: 4x^3 + 3x
         * ```
         * @min 1
         * @max 100
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Chebyshev.prototype), "dispose", this).call(this);

          this._shaper.dispose();

          return this;
        }
      }, {
        key: "order",
        get: function get() {
          return this._order;
        },
        set: function set(order) {
          var _this141 = this;

          this._order = order;

          this._shaper.setMap(function (x) {
            return _this141._getCoefficient(x, order, new Map());
          });
        }
        /**
         * The oversampling of the effect. Can either be "none", "2x" or "4x".
         */

      }, {
        key: "oversample",
        get: function get() {
          return this._shaper.oversample;
        },
        set: function set(oversampling) {
          this._shaper.oversample = oversampling;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"].getDefaults(), {
            order: 1,
            oversample: "none"
          });
        }
      }]);

      return Chebyshev;
    }(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"]); //# sourceMappingURL=Chebyshev.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/Chorus.js":
  /*!******************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/Chorus.js ***!
    \******************************************************/

  /*! exports provided: Chorus */

  /***/
  function node_modulesToneBuildEsmEffectChorusJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Chorus", function () {
      return Chorus;
    });
    /* harmony import */


    var _effect_StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../effect/StereoFeedbackEffect */
    "./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../source/oscillator/LFO */
    "./node_modules/tone/build/esm/source/oscillator/LFO.js");
    /* harmony import */


    var _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/context/Delay */
    "./node_modules/tone/build/esm/core/context/Delay.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Chorus is a stereo chorus effect composed of a left and right delay with an [[LFO]] applied to the delayTime of each channel.
     * When [[feedback]] is set to a value larger than 0, you also get Flanger-type effects.
     * Inspiration from [Tuna.js](https://github.com/Dinahmoe/tuna/blob/master/tuna.js).
     * Read more on the chorus effect on [SoundOnSound](http://www.soundonsound.com/sos/jun04/articles/synthsecrets.htm).
     *
     * @example
     * const chorus = new Tone.Chorus(4, 2.5, 0.5);
     * const synth = new Tone.PolySynth().connect(chorus);
     * synth.triggerAttackRelease(["C3", "E3", "G3"], "8n");
     *
     * @category Effect
     */


    var Chorus = /*#__PURE__*/function (_effect_StereoFeedbac) {
      _inherits(Chorus, _effect_StereoFeedbac);

      var _super102 = _createSuper(Chorus);

      function Chorus() {
        var _this142;

        _classCallCheck2(this, Chorus);

        _this142 = _super102.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Chorus.getDefaults(), arguments, ["frequency", "delayTime", "depth"]));
        _this142.name = "Chorus";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Chorus.getDefaults(), arguments, ["frequency", "delayTime", "depth"]);
        _this142._depth = options.depth;
        _this142._delayTime = options.delayTime / 1000;
        _this142._lfoL = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
          context: _this142.context,
          frequency: options.frequency,
          min: 0,
          max: 1
        });
        _this142._lfoR = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
          context: _this142.context,
          frequency: options.frequency,
          min: 0,
          max: 1,
          phase: 180
        });
        _this142._delayNodeL = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
          context: _this142.context
        });
        _this142._delayNodeR = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
          context: _this142.context
        });
        _this142.frequency = _this142._lfoL.frequency;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this142), ["frequency"]); // have one LFO frequency control the other

        _this142._lfoL.frequency.connect(_this142._lfoR.frequency); // connections


        _this142.connectEffectLeft(_this142._delayNodeL);

        _this142.connectEffectRight(_this142._delayNodeR); // lfo setup


        _this142._lfoL.connect(_this142._delayNodeL.delayTime);

        _this142._lfoR.connect(_this142._delayNodeR.delayTime); // set the initial values


        _this142.depth = _this142._depth;
        _this142.type = options.type;
        _this142.spread = options.spread;
        return _this142;
      }

      _createClass2(Chorus, [{
        key: "start",

        /**
         * Start the effect.
         */
        value: function start(time) {
          this._lfoL.start(time);

          this._lfoR.start(time);

          return this;
        }
        /**
         * Stop the lfo
         */

      }, {
        key: "stop",
        value: function stop(time) {
          this._lfoL.stop(time);

          this._lfoR.stop(time);

          return this;
        }
        /**
         * Sync the filter to the transport. See [[LFO.sync]]
         */

      }, {
        key: "sync",
        value: function sync() {
          this._lfoL.sync();

          this._lfoR.sync();

          return this;
        }
        /**
         * Unsync the filter from the transport.
         */

      }, {
        key: "unsync",
        value: function unsync() {
          this._lfoL.unsync();

          this._lfoR.unsync();

          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Chorus.prototype), "dispose", this).call(this);

          this._lfoL.dispose();

          this._lfoR.dispose();

          this._delayNodeL.dispose();

          this._delayNodeR.dispose();

          this.frequency.dispose();
          return this;
        }
      }, {
        key: "depth",

        /**
         * The depth of the effect. A depth of 1 makes the delayTime
         * modulate between 0 and 2*delayTime (centered around the delayTime).
         */
        get: function get() {
          return this._depth;
        },
        set: function set(depth) {
          this._depth = depth;
          var deviation = this._delayTime * depth;
          this._lfoL.min = Math.max(this._delayTime - deviation, 0);
          this._lfoL.max = this._delayTime + deviation;
          this._lfoR.min = Math.max(this._delayTime - deviation, 0);
          this._lfoR.max = this._delayTime + deviation;
        }
        /**
         * The delayTime in milliseconds of the chorus. A larger delayTime
         * will give a more pronounced effect. Nominal range a delayTime
         * is between 2 and 20ms.
         */

      }, {
        key: "delayTime",
        get: function get() {
          return this._delayTime * 1000;
        },
        set: function set(delayTime) {
          this._delayTime = delayTime / 1000;
          this.depth = this._depth;
        }
        /**
         * The oscillator type of the LFO.
         */

      }, {
        key: "type",
        get: function get() {
          return this._lfoL.type;
        },
        set: function set(type) {
          this._lfoL.type = type;
          this._lfoR.type = type;
        }
        /**
         * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.
         * When set to 180, LFO's will be panned hard left and right respectively.
         */

      }, {
        key: "spread",
        get: function get() {
          return this._lfoR.phase - this._lfoL.phase;
        },
        set: function set(spread) {
          this._lfoL.phase = 90 - spread / 2;
          this._lfoR.phase = spread / 2 + 90;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_effect_StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["StereoFeedbackEffect"].getDefaults(), {
            frequency: 1.5,
            delayTime: 3.5,
            depth: 0.7,
            type: "sine",
            spread: 180,
            feedback: 0,
            wet: 0.5
          });
        }
      }]);

      return Chorus;
    }(_effect_StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["StereoFeedbackEffect"]); //# sourceMappingURL=Chorus.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/Distortion.js":
  /*!**********************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/Distortion.js ***!
    \**********************************************************/

  /*! exports provided: Distortion */

  /***/
  function node_modulesToneBuildEsmEffectDistortionJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Distortion", function () {
      return Distortion;
    });
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../signal/WaveShaper */
    "./node_modules/tone/build/esm/signal/WaveShaper.js");
    /* harmony import */


    var _Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Effect */
    "./node_modules/tone/build/esm/effect/Effect.js");
    /**
     * A simple distortion effect using Tone.WaveShaper.
     * Algorithm from [this stackoverflow answer](http://stackoverflow.com/a/22313408).
     *
     * @example
     * const dist = new Tone.Distortion(0.8).toDestination();
     * const fm = new Tone.FMSynth().connect(dist);
     * fm.triggerAttackRelease("A1", "8n");
     * @category Effect
     */


    var Distortion = /*#__PURE__*/function (_Effect__WEBPACK_IMPO4) {
      _inherits(Distortion, _Effect__WEBPACK_IMPO4);

      var _super103 = _createSuper(Distortion);

      function Distortion() {
        var _this143;

        _classCallCheck2(this, Distortion);

        _this143 = _super103.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Distortion.getDefaults(), arguments, ["distortion"]));
        _this143.name = "Distortion";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Distortion.getDefaults(), arguments, ["distortion"]);
        _this143._shaper = new _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_1__["WaveShaper"]({
          context: _this143.context,
          length: 4096
        });
        _this143._distortion = options.distortion;

        _this143.connectEffect(_this143._shaper);

        _this143.distortion = options.distortion;
        _this143.oversample = options.oversample;
        return _this143;
      }

      _createClass2(Distortion, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Distortion.prototype), "dispose", this).call(this);

          this._shaper.dispose();

          return this;
        }
      }, {
        key: "distortion",

        /**
         * The amount of distortion. Nominal range is between 0 and 1.
         */
        get: function get() {
          return this._distortion;
        },
        set: function set(amount) {
          this._distortion = amount;
          var k = amount * 100;
          var deg = Math.PI / 180;

          this._shaper.setMap(function (x) {
            if (Math.abs(x) < 0.001) {
              // should output 0 when input is 0
              return 0;
            } else {
              return (3 + k) * x * 20 * deg / (Math.PI + k * Math.abs(x));
            }
          });
        }
        /**
         * The oversampling of the effect. Can either be "none", "2x" or "4x".
         */

      }, {
        key: "oversample",
        get: function get() {
          return this._shaper.oversample;
        },
        set: function set(oversampling) {
          this._shaper.oversample = oversampling;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"].getDefaults(), {
            distortion: 0.4,
            oversample: "none"
          });
        }
      }]);

      return Distortion;
    }(_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"]); //# sourceMappingURL=Distortion.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/Effect.js":
  /*!******************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/Effect.js ***!
    \******************************************************/

  /*! exports provided: Effect */

  /***/
  function node_modulesToneBuildEsmEffectEffectJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Effect", function () {
      return Effect;
    });
    /* harmony import */


    var _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../component/channel/CrossFade */
    "./node_modules/tone/build/esm/component/channel/CrossFade.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Effect is the base class for effects. Connect the effect between
     * the effectSend and effectReturn GainNodes, then control the amount of
     * effect which goes to the output using the wet control.
     */


    var Effect = /*#__PURE__*/function (_core_context_ToneAud29) {
      _inherits(Effect, _core_context_ToneAud29);

      var _super104 = _createSuper(Effect);

      function Effect(options) {
        var _this144;

        _classCallCheck2(this, Effect);

        _this144 = _super104.call(this, options);
        _this144.name = "Effect";
        /**
         * the drywet knob to control the amount of effect
         */

        _this144._dryWet = new _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_0__["CrossFade"]({
          context: _this144.context
        });
        /**
         * The wet control is how much of the effected
         * will pass through to the output. 1 = 100% effected
         * signal, 0 = 100% dry signal.
         */

        _this144.wet = _this144._dryWet.fade;
        /**
         * connect the effectSend to the input of hte effect
         */

        _this144.effectSend = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
          context: _this144.context
        });
        /**
         * connect the output of the effect to the effectReturn
         */

        _this144.effectReturn = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
          context: _this144.context
        });
        /**
         * The effect input node
         */

        _this144.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
          context: _this144.context
        });
        /**
         * The effect output
         */

        _this144.output = _this144._dryWet; // connections

        _this144.input.fan(_this144._dryWet.a, _this144.effectSend);

        _this144.effectReturn.connect(_this144._dryWet.b);

        _this144.wet.setValueAtTime(options.wet, 0);

        _this144._internalChannels = [_this144.effectReturn, _this144.effectSend];
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this144), "wet");
        return _this144;
      }

      _createClass2(Effect, [{
        key: "connectEffect",

        /**
         * chains the effect in between the effectSend and effectReturn
         */
        value: function connectEffect(effect) {
          // add it to the internal channels
          this._internalChannels.push(effect);

          this.effectSend.chain(effect, this.effectReturn);
          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Effect.prototype), "dispose", this).call(this);

          this._dryWet.dispose();

          this.effectSend.dispose();
          this.effectReturn.dispose();
          this.wet.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"].getDefaults(), {
            wet: 1
          });
        }
      }]);

      return Effect;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"]); //# sourceMappingURL=Effect.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/FeedbackDelay.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/FeedbackDelay.js ***!
    \*************************************************************/

  /*! exports provided: FeedbackDelay */

  /***/
  function node_modulesToneBuildEsmEffectFeedbackDelayJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FeedbackDelay", function () {
      return FeedbackDelay;
    });
    /* harmony import */


    var _core_context_Delay__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/context/Delay */
    "./node_modules/tone/build/esm/core/context/Delay.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _FeedbackEffect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./FeedbackEffect */
    "./node_modules/tone/build/esm/effect/FeedbackEffect.js");
    /**
     * FeedbackDelay is a DelayNode in which part of output signal is fed back into the delay.
     *
     * @param delayTime The delay applied to the incoming signal.
     * @param feedback The amount of the effected signal which is fed back through the delay.
     * @example
     * const feedbackDelay = new Tone.FeedbackDelay("8n", 0.5).toDestination();
     * const tom = new Tone.MembraneSynth({
     * 	octaves: 4,
     * 	pitchDecay: 0.1
     * }).connect(feedbackDelay);
     * tom.triggerAttackRelease("A2", "32n");
     * @category Effect
     */


    var FeedbackDelay = /*#__PURE__*/function (_FeedbackEffect__WEBP) {
      _inherits(FeedbackDelay, _FeedbackEffect__WEBP);

      var _super105 = _createSuper(FeedbackDelay);

      function FeedbackDelay() {
        var _this145;

        _classCallCheck2(this, FeedbackDelay);

        _this145 = _super105.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(FeedbackDelay.getDefaults(), arguments, ["delayTime", "feedback"]));
        _this145.name = "FeedbackDelay";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(FeedbackDelay.getDefaults(), arguments, ["delayTime", "feedback"]);
        _this145._delayNode = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_0__["Delay"]({
          context: _this145.context,
          delayTime: options.delayTime,
          maxDelay: options.maxDelay
        });
        _this145.delayTime = _this145._delayNode.delayTime; // connect it up

        _this145.connectEffect(_this145._delayNode);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this145), "delayTime");
        return _this145;
      }

      _createClass2(FeedbackDelay, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(FeedbackDelay.prototype), "dispose", this).call(this);

          this._delayNode.dispose();

          this.delayTime.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_FeedbackEffect__WEBPACK_IMPORTED_MODULE_3__["FeedbackEffect"].getDefaults(), {
            delayTime: 0.25,
            maxDelay: 1
          });
        }
      }]);

      return FeedbackDelay;
    }(_FeedbackEffect__WEBPACK_IMPORTED_MODULE_3__["FeedbackEffect"]); //# sourceMappingURL=FeedbackDelay.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/FeedbackEffect.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/FeedbackEffect.js ***!
    \**************************************************************/

  /*! exports provided: FeedbackEffect */

  /***/
  function node_modulesToneBuildEsmEffectFeedbackEffectJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FeedbackEffect", function () {
      return FeedbackEffect;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Effect */
    "./node_modules/tone/build/esm/effect/Effect.js");
    /**
     * FeedbackEffect provides a loop between an audio source and its own output.
     * This is a base-class for feedback effects.
     */


    var FeedbackEffect = /*#__PURE__*/function (_Effect__WEBPACK_IMPO5) {
      _inherits(FeedbackEffect, _Effect__WEBPACK_IMPO5);

      var _super106 = _createSuper(FeedbackEffect);

      function FeedbackEffect(options) {
        var _this146;

        _classCallCheck2(this, FeedbackEffect);

        _this146 = _super106.call(this, options);
        _this146.name = "FeedbackEffect";
        _this146._feedbackGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this146.context,
          gain: options.feedback,
          units: "normalRange"
        });
        _this146.feedback = _this146._feedbackGain.gain;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_1__["readOnly"])(_assertThisInitialized(_this146), "feedback"); // the feedback loop

        _this146.effectReturn.chain(_this146._feedbackGain, _this146.effectSend);

        return _this146;
      }

      _createClass2(FeedbackEffect, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(FeedbackEffect.prototype), "dispose", this).call(this);

          this._feedbackGain.dispose();

          this.feedback.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"].getDefaults(), {
            feedback: 0.125
          });
        }
      }]);

      return FeedbackEffect;
    }(_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"]); //# sourceMappingURL=FeedbackEffect.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/Freeverb.js":
  /*!********************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/Freeverb.js ***!
    \********************************************************/

  /*! exports provided: Freeverb */

  /***/
  function node_modulesToneBuildEsmEffectFreeverbJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Freeverb", function () {
      return Freeverb;
    });
    /* harmony import */


    var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./StereoEffect */
    "./node_modules/tone/build/esm/effect/StereoEffect.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../component/filter/LowpassCombFilter */
    "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js");
    /**
     * An array of comb filter delay values from Freeverb implementation
     */


    var combFilterTunings = [1557 / 44100, 1617 / 44100, 1491 / 44100, 1422 / 44100, 1277 / 44100, 1356 / 44100, 1188 / 44100, 1116 / 44100];
    /**
     * An array of allpass filter frequency values from Freeverb implementation
     */

    var allpassFilterFrequencies = [225, 556, 441, 341];
    /**
     * Freeverb is a reverb based on [Freeverb](https://ccrma.stanford.edu/~jos/pasp/Freeverb.html).
     * Read more on reverb on [Sound On Sound](https://web.archive.org/web/20160404083902/http://www.soundonsound.com:80/sos/feb01/articles/synthsecrets.asp).
     * Freeverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms
     * @example
     * const freeverb = new Tone.Freeverb().toDestination();
     * freeverb.dampening = 1000;
     * // routing synth through the reverb
     * const synth = new Tone.NoiseSynth().connect(freeverb);
     * synth.triggerAttackRelease(0.05);
     * @category Effect
     */

    var Freeverb = /*#__PURE__*/function (_StereoEffect__WEBPAC) {
      _inherits(Freeverb, _StereoEffect__WEBPAC);

      var _super107 = _createSuper(Freeverb);

      function Freeverb() {
        var _this147;

        _classCallCheck2(this, Freeverb);

        _this147 = _super107.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Freeverb.getDefaults(), arguments, ["roomSize", "dampening"]));
        _this147.name = "Freeverb";
        /**
         * the comb filters
         */

        _this147._combFilters = [];
        /**
         * the allpass filters on the left
         */

        _this147._allpassFiltersL = [];
        /**
         * the allpass filters on the right
         */

        _this147._allpassFiltersR = [];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Freeverb.getDefaults(), arguments, ["roomSize", "dampening"]);
        _this147.roomSize = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
          context: _this147.context,
          value: options.roomSize,
          units: "normalRange"
        }); // make the allpass filters on the right

        _this147._allpassFiltersL = allpassFilterFrequencies.map(function (freq) {
          var allpassL = _this147.context.createBiquadFilter();

          allpassL.type = "allpass";
          allpassL.frequency.value = freq;
          return allpassL;
        }); // make the allpass filters on the left

        _this147._allpassFiltersR = allpassFilterFrequencies.map(function (freq) {
          var allpassR = _this147.context.createBiquadFilter();

          allpassR.type = "allpass";
          allpassR.frequency.value = freq;
          return allpassR;
        }); // make the comb filters

        _this147._combFilters = combFilterTunings.map(function (delayTime, index) {
          var lfpf = new _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_4__["LowpassCombFilter"]({
            context: _this147.context,
            dampening: options.dampening,
            delayTime: delayTime
          });

          if (index < combFilterTunings.length / 2) {
            var _this148;

            (_this148 = _this147).connectEffectLeft.apply(_this148, [lfpf].concat(_toConsumableArray(_this147._allpassFiltersL)));
          } else {
            var _this149;

            (_this149 = _this147).connectEffectRight.apply(_this149, [lfpf].concat(_toConsumableArray(_this147._allpassFiltersR)));
          }

          _this147.roomSize.connect(lfpf.resonance);

          return lfpf;
        });
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this147), ["roomSize"]);
        return _this147;
      }

      _createClass2(Freeverb, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Freeverb.prototype), "dispose", this).call(this);

          this._allpassFiltersL.forEach(function (al) {
            return al.disconnect();
          });

          this._allpassFiltersR.forEach(function (ar) {
            return ar.disconnect();
          });

          this._combFilters.forEach(function (cf) {
            return cf.dispose();
          });

          this.roomSize.dispose();
          return this;
        }
      }, {
        key: "dampening",

        /**
         * The amount of dampening of the reverberant signal.
         */
        get: function get() {
          return this._combFilters[0].dampening;
        },
        set: function set(d) {
          this._combFilters.forEach(function (c) {
            return c.dampening = d;
          });
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"].getDefaults(), {
            roomSize: 0.7,
            dampening: 3000
          });
        }
      }]);

      return Freeverb;
    }(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"]); //# sourceMappingURL=Freeverb.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/FrequencyShifter.js":
  /*!****************************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/FrequencyShifter.js ***!
    \****************************************************************/

  /*! exports provided: FrequencyShifter */

  /***/
  function node_modulesToneBuildEsmEffectFrequencyShifterJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FrequencyShifter", function () {
      return FrequencyShifter;
    });
    /* harmony import */


    var _component_filter_PhaseShiftAllpass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../component/filter/PhaseShiftAllpass */
    "./node_modules/tone/build/esm/component/filter/PhaseShiftAllpass.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _effect_Effect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../effect/Effect */
    "./node_modules/tone/build/esm/effect/Effect.js");
    /* harmony import */


    var _signal_Add__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../signal/Add */
    "./node_modules/tone/build/esm/signal/Add.js");
    /* harmony import */


    var _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../signal/Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _signal_Negate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../signal/Negate */
    "./node_modules/tone/build/esm/signal/Negate.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _source_oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../source/oscillator/Oscillator */
    "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
    /* harmony import */


    var _source_oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../source/oscillator/ToneOscillatorNode */
    "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js");
    /**
     * FrequencyShifter can be used to shift all frequencies of a signal by a fixed amount.
     * The amount can be changed at audio rate and the effect is applied in real time.
     * The frequency shifting is implemented with a technique called single side band modulation using a ring modulator.
     * Note: Contrary to pitch shifting, all frequencies are shifted by the same amount,
     * destroying the harmonic relationship between them. This leads to the classic ring modulator timbre distortion.
     * The algorithm will produces some aliasing towards the high end, especially if your source material
     * contains a lot of high frequencies. Unfortunatelly the webaudio API does not support resampling
     * buffers in real time, so it is not possible to fix it properly. Depending on the use case it might
     * be an option to low pass filter your input before frequency shifting it to get ride of the aliasing.
     * You can find a very detailed description of the algorithm here: https://larzeitlin.github.io/RMFS/
     *
     * @example
     * const input = new Tone.Oscillator(230, "sawtooth").start();
     * const shift = new Tone.FrequencyShifter(42).toDestination();
     * input.connect(shift);
     * @category Effect
     */


    var FrequencyShifter = /*#__PURE__*/function (_effect_Effect__WEBPA) {
      _inherits(FrequencyShifter, _effect_Effect__WEBPA);

      var _super108 = _createSuper(FrequencyShifter);

      function FrequencyShifter() {
        var _this150;

        _classCallCheck2(this, FrequencyShifter);

        _this150 = _super108.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(FrequencyShifter.getDefaults(), arguments, ["frequency"]));
        _this150.name = "FrequencyShifter";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(FrequencyShifter.getDefaults(), arguments, ["frequency"]);
        _this150.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_6__["Signal"]({
          context: _this150.context,
          units: "frequency",
          value: options.frequency,
          minValue: -_this150.context.sampleRate / 2,
          maxValue: _this150.context.sampleRate / 2
        });
        _this150._sine = new _source_oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_8__["ToneOscillatorNode"]({
          context: _this150.context,
          type: "sine"
        });
        _this150._cosine = new _source_oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_7__["Oscillator"]({
          context: _this150.context,
          phase: -90,
          type: "sine"
        });
        _this150._sineMultiply = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__["Multiply"]({
          context: _this150.context
        });
        _this150._cosineMultiply = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__["Multiply"]({
          context: _this150.context
        });
        _this150._negate = new _signal_Negate__WEBPACK_IMPORTED_MODULE_5__["Negate"]({
          context: _this150.context
        });
        _this150._add = new _signal_Add__WEBPACK_IMPORTED_MODULE_3__["Add"]({
          context: _this150.context
        });
        _this150._phaseShifter = new _component_filter_PhaseShiftAllpass__WEBPACK_IMPORTED_MODULE_0__["PhaseShiftAllpass"]({
          context: _this150.context
        });

        _this150.effectSend.connect(_this150._phaseShifter); // connect the carrier frequency signal to the two oscillators


        _this150.frequency.fan(_this150._sine.frequency, _this150._cosine.frequency);

        _this150._phaseShifter.offset90.connect(_this150._cosineMultiply);

        _this150._cosine.connect(_this150._cosineMultiply.factor);

        _this150._phaseShifter.connect(_this150._sineMultiply);

        _this150._sine.connect(_this150._sineMultiply.factor);

        _this150._sineMultiply.connect(_this150._negate);

        _this150._cosineMultiply.connect(_this150._add);

        _this150._negate.connect(_this150._add.addend);

        _this150._add.connect(_this150.effectReturn); // start the oscillators at the same time


        var now = _this150.immediate();

        _this150._sine.start(now);

        _this150._cosine.start(now);

        return _this150;
      }

      _createClass2(FrequencyShifter, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(FrequencyShifter.prototype), "dispose", this).call(this);

          this.frequency.dispose();

          this._add.dispose();

          this._cosine.dispose();

          this._cosineMultiply.dispose();

          this._negate.dispose();

          this._phaseShifter.dispose();

          this._sine.dispose();

          this._sineMultiply.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_effect_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"].getDefaults(), {
            frequency: 0
          });
        }
      }]);

      return FrequencyShifter;
    }(_effect_Effect__WEBPACK_IMPORTED_MODULE_2__["Effect"]); //# sourceMappingURL=FrequencyShifter.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/JCReverb.js":
  /*!********************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/JCReverb.js ***!
    \********************************************************/

  /*! exports provided: JCReverb */

  /***/
  function node_modulesToneBuildEsmEffectJCReverbJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "JCReverb", function () {
      return JCReverb;
    });
    /* harmony import */


    var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./StereoEffect */
    "./node_modules/tone/build/esm/effect/StereoEffect.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _signal_Scale__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../signal/Scale */
    "./node_modules/tone/build/esm/signal/Scale.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _component_filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../component/filter/FeedbackCombFilter */
    "./node_modules/tone/build/esm/component/filter/FeedbackCombFilter.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * an array of the comb filter delay time values
     */


    var combFilterDelayTimes = [1687 / 25000, 1601 / 25000, 2053 / 25000, 2251 / 25000];
    /**
     * the resonances of each of the comb filters
     */

    var combFilterResonances = [0.773, 0.802, 0.753, 0.733];
    /**
     * the allpass filter frequencies
     */

    var allpassFilterFreqs = [347, 113, 37];
    /**
     * JCReverb is a simple [Schroeder Reverberator](https://ccrma.stanford.edu/~jos/pasp/Schroeder_Reverberators.html)
     * tuned by John Chowning in 1970.
     * It is made up of three allpass filters and four [[FeedbackCombFilter]].
     * JCReverb is now implemented with an AudioWorkletNode which may result on performance degradation on some platforms
     *
     * @example
     * const reverb = new Tone.JCReverb(0.4).toDestination();
     * const delay = new Tone.FeedbackDelay(0.5);
     * // connecting the synth to reverb through delay
     * const synth = new Tone.DuoSynth().chain(delay, reverb);
     * synth.triggerAttackRelease("A4", "8n");
     *
     * @category Effect
     */

    var JCReverb = /*#__PURE__*/function (_StereoEffect__WEBPAC2) {
      _inherits(JCReverb, _StereoEffect__WEBPAC2);

      var _super109 = _createSuper(JCReverb);

      function JCReverb() {
        var _this151;

        _classCallCheck2(this, JCReverb);

        _this151 = _super109.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(JCReverb.getDefaults(), arguments, ["roomSize"]));
        _this151.name = "JCReverb";
        /**
         * a series of allpass filters
         */

        _this151._allpassFilters = [];
        /**
         * parallel feedback comb filters
         */

        _this151._feedbackCombFilters = [];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(JCReverb.getDefaults(), arguments, ["roomSize"]);
        _this151.roomSize = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
          context: _this151.context,
          value: options.roomSize,
          units: "normalRange"
        });
        _this151._scaleRoomSize = new _signal_Scale__WEBPACK_IMPORTED_MODULE_2__["Scale"]({
          context: _this151.context,
          min: -0.733,
          max: 0.197
        }); // make the allpass filters

        _this151._allpassFilters = allpassFilterFreqs.map(function (freq) {
          var allpass = _this151.context.createBiquadFilter();

          allpass.type = "allpass";
          allpass.frequency.value = freq;
          return allpass;
        }); // and the comb filters

        _this151._feedbackCombFilters = combFilterDelayTimes.map(function (delayTime, index) {
          var fbcf = new _component_filter_FeedbackCombFilter__WEBPACK_IMPORTED_MODULE_4__["FeedbackCombFilter"]({
            context: _this151.context,
            delayTime: delayTime
          });

          _this151._scaleRoomSize.connect(fbcf.resonance);

          fbcf.resonance.value = combFilterResonances[index];

          if (index < combFilterDelayTimes.length / 2) {
            var _this152;

            (_this152 = _this151).connectEffectLeft.apply(_this152, _toConsumableArray(_this151._allpassFilters).concat([fbcf]));
          } else {
            var _this153;

            (_this153 = _this151).connectEffectRight.apply(_this153, _toConsumableArray(_this151._allpassFilters).concat([fbcf]));
          }

          return fbcf;
        }); // chain the allpass filters together

        _this151.roomSize.connect(_this151._scaleRoomSize);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this151), ["roomSize"]);
        return _this151;
      }

      _createClass2(JCReverb, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(JCReverb.prototype), "dispose", this).call(this);

          this._allpassFilters.forEach(function (apf) {
            return apf.disconnect();
          });

          this._feedbackCombFilters.forEach(function (fbcf) {
            return fbcf.dispose();
          });

          this.roomSize.dispose();

          this._scaleRoomSize.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"].getDefaults(), {
            roomSize: 0.5
          });
        }
      }]);

      return JCReverb;
    }(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"]); //# sourceMappingURL=JCReverb.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/LFOEffect.js":
  /*!*********************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/LFOEffect.js ***!
    \*********************************************************/

  /*! exports provided: LFOEffect */

  /***/
  function node_modulesToneBuildEsmEffectLFOEffectJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LFOEffect", function () {
      return LFOEffect;
    });
    /* harmony import */


    var _effect_Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../effect/Effect */
    "./node_modules/tone/build/esm/effect/Effect.js");
    /* harmony import */


    var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../source/oscillator/LFO */
    "./node_modules/tone/build/esm/source/oscillator/LFO.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Base class for LFO-based effects.
     */


    var LFOEffect = /*#__PURE__*/function (_effect_Effect__WEBPA2) {
      _inherits(LFOEffect, _effect_Effect__WEBPA2);

      var _super110 = _createSuper(LFOEffect);

      function LFOEffect(options) {
        var _this154;

        _classCallCheck2(this, LFOEffect);

        _this154 = _super110.call(this, options);
        _this154.name = "LFOEffect";
        _this154._lfo = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__["LFO"]({
          context: _this154.context,
          frequency: options.frequency,
          amplitude: options.depth
        });
        _this154.depth = _this154._lfo.amplitude;
        _this154.frequency = _this154._lfo.frequency;
        _this154.type = options.type;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this154), ["frequency", "depth"]);
        return _this154;
      }

      _createClass2(LFOEffect, [{
        key: "start",

        /**
         * Start the effect.
         */
        value: function start(time) {
          this._lfo.start(time);

          return this;
        }
        /**
         * Stop the lfo
         */

      }, {
        key: "stop",
        value: function stop(time) {
          this._lfo.stop(time);

          return this;
        }
        /**
         * Sync the filter to the transport. See [[LFO.sync]]
         */

      }, {
        key: "sync",
        value: function sync() {
          this._lfo.sync();

          return this;
        }
        /**
         * Unsync the filter from the transport.
         */

      }, {
        key: "unsync",
        value: function unsync() {
          this._lfo.unsync();

          return this;
        }
        /**
         * The type of the LFO's oscillator: See [[Oscillator.type]]
         * @example
         * const autoFilter = new Tone.AutoFilter().start().toDestination();
         * const noise = new Tone.Noise().start().connect(autoFilter);
         * autoFilter.type = "square";
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(LFOEffect.prototype), "dispose", this).call(this);

          this._lfo.dispose();

          this.frequency.dispose();
          this.depth.dispose();
          return this;
        }
      }, {
        key: "type",
        get: function get() {
          return this._lfo.type;
        },
        set: function set(type) {
          this._lfo.type = type;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_effect_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"].getDefaults(), {
            frequency: 1,
            type: "sine",
            depth: 1
          });
        }
      }]);

      return LFOEffect;
    }(_effect_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"]); //# sourceMappingURL=LFOEffect.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/MidSideEffect.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/MidSideEffect.js ***!
    \*************************************************************/

  /*! exports provided: MidSideEffect */

  /***/
  function node_modulesToneBuildEsmEffectMidSideEffectJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MidSideEffect", function () {
      return MidSideEffect;
    });
    /* harmony import */


    var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Effect */
    "./node_modules/tone/build/esm/effect/Effect.js");
    /* harmony import */


    var _component_channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../component/channel/MidSideSplit */
    "./node_modules/tone/build/esm/component/channel/MidSideSplit.js");
    /* harmony import */


    var _component_channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../component/channel/MidSideMerge */
    "./node_modules/tone/build/esm/component/channel/MidSideMerge.js");
    /**
     * Mid/Side processing separates the the 'mid' signal
     * (which comes out of both the left and the right channel)
     * and the 'side' (which only comes out of the the side channels)
     * and effects them separately before being recombined.
     * Applies a Mid/Side seperation and recombination.
     * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).
     * This is a base-class for Mid/Side Effects.
     */


    var MidSideEffect = /*#__PURE__*/function (_Effect__WEBPACK_IMPO6) {
      _inherits(MidSideEffect, _Effect__WEBPACK_IMPO6);

      var _super111 = _createSuper(MidSideEffect);

      function MidSideEffect(options) {
        var _this155;

        _classCallCheck2(this, MidSideEffect);

        _this155 = _super111.call(this, options);
        _this155.name = "MidSideEffect";
        _this155._midSideMerge = new _component_channel_MidSideMerge__WEBPACK_IMPORTED_MODULE_2__["MidSideMerge"]({
          context: _this155.context
        });
        _this155._midSideSplit = new _component_channel_MidSideSplit__WEBPACK_IMPORTED_MODULE_1__["MidSideSplit"]({
          context: _this155.context
        });
        _this155._midSend = _this155._midSideSplit.mid;
        _this155._sideSend = _this155._midSideSplit.side;
        _this155._midReturn = _this155._midSideMerge.mid;
        _this155._sideReturn = _this155._midSideMerge.side; // the connections

        _this155.effectSend.connect(_this155._midSideSplit);

        _this155._midSideMerge.connect(_this155.effectReturn);

        return _this155;
      }
      /**
       * Connect the mid chain of the effect
       */


      _createClass2(MidSideEffect, [{
        key: "connectEffectMid",
        value: function connectEffectMid() {
          var _this$_midSend;

          for (var _len12 = arguments.length, nodes = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {
            nodes[_key12] = arguments[_key12];
          }

          (_this$_midSend = this._midSend).chain.apply(_this$_midSend, nodes.concat([this._midReturn]));
        }
        /**
         * Connect the side chain of the effect
         */

      }, {
        key: "connectEffectSide",
        value: function connectEffectSide() {
          var _this$_sideSend;

          for (var _len13 = arguments.length, nodes = new Array(_len13), _key13 = 0; _key13 < _len13; _key13++) {
            nodes[_key13] = arguments[_key13];
          }

          (_this$_sideSend = this._sideSend).chain.apply(_this$_sideSend, nodes.concat([this._sideReturn]));
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(MidSideEffect.prototype), "dispose", this).call(this);

          this._midSideSplit.dispose();

          this._midSideMerge.dispose();

          this._midSend.dispose();

          this._sideSend.dispose();

          this._midReturn.dispose();

          this._sideReturn.dispose();

          return this;
        }
      }]);

      return MidSideEffect;
    }(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"]); //# sourceMappingURL=MidSideEffect.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/Phaser.js":
  /*!******************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/Phaser.js ***!
    \******************************************************/

  /*! exports provided: Phaser */

  /***/
  function node_modulesToneBuildEsmEffectPhaserJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Phaser", function () {
      return Phaser;
    });
    /* harmony import */


    var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./StereoEffect */
    "./node_modules/tone/build/esm/effect/StereoEffect.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../source/oscillator/LFO */
    "./node_modules/tone/build/esm/source/oscillator/LFO.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Phaser is a phaser effect. Phasers work by changing the phase
     * of different frequency components of an incoming signal. Read more on
     * [Wikipedia](https://en.wikipedia.org/wiki/Phaser_(effect)).
     * Inspiration for this phaser comes from [Tuna.js](https://github.com/Dinahmoe/tuna/).
     * @example
     * const phaser = new Tone.Phaser({
     * 	frequency: 15,
     * 	octaves: 5,
     * 	baseFrequency: 1000
     * }).toDestination();
     * const synth = new Tone.FMSynth().connect(phaser);
     * synth.triggerAttackRelease("E3", "2n");
     * @category Effect
     */


    var Phaser = /*#__PURE__*/function (_StereoEffect__WEBPAC3) {
      _inherits(Phaser, _StereoEffect__WEBPAC3);

      var _super112 = _createSuper(Phaser);

      function Phaser() {
        var _this157, _this158;

        var _this156;

        _classCallCheck2(this, Phaser);

        _this156 = _super112.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Phaser.getDefaults(), arguments, ["frequency", "octaves", "baseFrequency"]));
        _this156.name = "Phaser";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Phaser.getDefaults(), arguments, ["frequency", "octaves", "baseFrequency"]);
        _this156._lfoL = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
          context: _this156.context,
          frequency: options.frequency,
          min: 0,
          max: 1
        });
        _this156._lfoR = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
          context: _this156.context,
          frequency: options.frequency,
          min: 0,
          max: 1,
          phase: 180
        });
        _this156._baseFrequency = _this156.toFrequency(options.baseFrequency);
        _this156._octaves = options.octaves;
        _this156.Q = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
          context: _this156.context,
          value: options.Q,
          units: "positive"
        });
        _this156._filtersL = _this156._makeFilters(options.stages, _this156._lfoL);
        _this156._filtersR = _this156._makeFilters(options.stages, _this156._lfoR);
        _this156.frequency = _this156._lfoL.frequency;
        _this156.frequency.value = options.frequency; // connect them up

        (_this157 = _this156).connectEffectLeft.apply(_this157, _toConsumableArray(_this156._filtersL));

        (_this158 = _this156).connectEffectRight.apply(_this158, _toConsumableArray(_this156._filtersR)); // control the frequency with one LFO


        _this156._lfoL.frequency.connect(_this156._lfoR.frequency); // set the options


        _this156.baseFrequency = options.baseFrequency;
        _this156.octaves = options.octaves; // start the lfo

        _this156._lfoL.start();

        _this156._lfoR.start();

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this156), ["frequency", "Q"]);
        return _this156;
      }

      _createClass2(Phaser, [{
        key: "_makeFilters",
        value: function _makeFilters(stages, connectToFreq) {
          var filters = []; // make all the filters

          for (var i = 0; i < stages; i++) {
            var filter = this.context.createBiquadFilter();
            filter.type = "allpass";
            this.Q.connect(filter.Q);
            connectToFreq.connect(filter.frequency);
            filters.push(filter);
          }

          return filters;
        }
        /**
         * The number of octaves the phase goes above the baseFrequency
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Phaser.prototype), "dispose", this).call(this);

          this.Q.dispose();

          this._lfoL.dispose();

          this._lfoR.dispose();

          this._filtersL.forEach(function (f) {
            return f.disconnect();
          });

          this._filtersR.forEach(function (f) {
            return f.disconnect();
          });

          this.frequency.dispose();
          return this;
        }
      }, {
        key: "octaves",
        get: function get() {
          return this._octaves;
        },
        set: function set(octaves) {
          this._octaves = octaves;
          var max = this._baseFrequency * Math.pow(2, octaves);
          this._lfoL.max = max;
          this._lfoR.max = max;
        }
        /**
         * The the base frequency of the filters.
         */

      }, {
        key: "baseFrequency",
        get: function get() {
          return this._baseFrequency;
        },
        set: function set(freq) {
          this._baseFrequency = this.toFrequency(freq);
          this._lfoL.min = this._baseFrequency;
          this._lfoR.min = this._baseFrequency;
          this.octaves = this._octaves;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"].getDefaults(), {
            frequency: 0.5,
            octaves: 3,
            stages: 10,
            Q: 10,
            baseFrequency: 350
          });
        }
      }]);

      return Phaser;
    }(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"]); //# sourceMappingURL=Phaser.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/PingPongDelay.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/PingPongDelay.js ***!
    \*************************************************************/

  /*! exports provided: PingPongDelay */

  /***/
  function node_modulesToneBuildEsmEffectPingPongDelayJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PingPongDelay", function () {
      return PingPongDelay;
    });
    /* harmony import */


    var _StereoXFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./StereoXFeedbackEffect */
    "./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/context/Delay */
    "./node_modules/tone/build/esm/core/context/Delay.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * PingPongDelay is a feedback delay effect where the echo is heard
     * first in one channel and next in the opposite channel. In a stereo
     * system these are the right and left channels.
     * PingPongDelay in more simplified terms is two Tone.FeedbackDelays
     * with independent delay values. Each delay is routed to one channel
     * (left or right), and the channel triggered second will always
     * trigger at the same interval after the first.
     * @example
     * const pingPong = new Tone.PingPongDelay("4n", 0.2).toDestination();
     * const drum = new Tone.MembraneSynth().connect(pingPong);
     * drum.triggerAttackRelease("C4", "32n");
     * @category Effect
     */


    var PingPongDelay = /*#__PURE__*/function (_StereoXFeedbackEffec) {
      _inherits(PingPongDelay, _StereoXFeedbackEffec);

      var _super113 = _createSuper(PingPongDelay);

      function PingPongDelay() {
        var _this159;

        _classCallCheck2(this, PingPongDelay);

        _this159 = _super113.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PingPongDelay.getDefaults(), arguments, ["delayTime", "feedback"]));
        _this159.name = "PingPongDelay";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PingPongDelay.getDefaults(), arguments, ["delayTime", "feedback"]);
        _this159._leftDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__["Delay"]({
          context: _this159.context,
          maxDelay: options.maxDelay
        });
        _this159._rightDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__["Delay"]({
          context: _this159.context,
          maxDelay: options.maxDelay
        });
        _this159._rightPreDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_2__["Delay"]({
          context: _this159.context,
          maxDelay: options.maxDelay
        });
        _this159.delayTime = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
          context: _this159.context,
          units: "time",
          value: options.delayTime
        }); // connect it up

        _this159.connectEffectLeft(_this159._leftDelay);

        _this159.connectEffectRight(_this159._rightPreDelay, _this159._rightDelay);

        _this159.delayTime.fan(_this159._leftDelay.delayTime, _this159._rightDelay.delayTime, _this159._rightPreDelay.delayTime); // rearranged the feedback to be after the rightPreDelay


        _this159._feedbackL.disconnect();

        _this159._feedbackL.connect(_this159._rightDelay);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this159), ["delayTime"]);
        return _this159;
      }

      _createClass2(PingPongDelay, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(PingPongDelay.prototype), "dispose", this).call(this);

          this._leftDelay.dispose();

          this._rightDelay.dispose();

          this._rightPreDelay.dispose();

          this.delayTime.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_StereoXFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["StereoXFeedbackEffect"].getDefaults(), {
            delayTime: 0.25,
            maxDelay: 1
          });
        }
      }]);

      return PingPongDelay;
    }(_StereoXFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["StereoXFeedbackEffect"]); //# sourceMappingURL=PingPongDelay.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/PitchShift.js":
  /*!**********************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/PitchShift.js ***!
    \**********************************************************/

  /*! exports provided: PitchShift */

  /***/
  function node_modulesToneBuildEsmEffectPitchShiftJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PitchShift", function () {
      return PitchShift;
    });
    /* harmony import */


    var _FeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./FeedbackEffect */
    "./node_modules/tone/build/esm/effect/FeedbackEffect.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../source/oscillator/LFO */
    "./node_modules/tone/build/esm/source/oscillator/LFO.js");
    /* harmony import */


    var _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/context/Delay */
    "./node_modules/tone/build/esm/core/context/Delay.js");
    /* harmony import */


    var _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../component/channel/CrossFade */
    "./node_modules/tone/build/esm/component/channel/CrossFade.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../core/type/Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /**
     * PitchShift does near-realtime pitch shifting to the incoming signal.
     * The effect is achieved by speeding up or slowing down the delayTime
     * of a DelayNode using a sawtooth wave.
     * Algorithm found in [this pdf](http://dsp-book.narod.ru/soundproc.pdf).
     * Additional reference by [Miller Pucket](http://msp.ucsd.edu/techniques/v0.11/book-html/node115.html).
     * @category Effect
     */


    var PitchShift = /*#__PURE__*/function (_FeedbackEffect__WEBP2) {
      _inherits(PitchShift, _FeedbackEffect__WEBP2);

      var _super114 = _createSuper(PitchShift);

      function PitchShift() {
        var _this160;

        _classCallCheck2(this, PitchShift);

        _this160 = _super114.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PitchShift.getDefaults(), arguments, ["pitch"]));
        _this160.name = "PitchShift";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PitchShift.getDefaults(), arguments, ["pitch"]);
        _this160._frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
          context: _this160.context
        });
        _this160._delayA = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
          maxDelay: 1,
          context: _this160.context
        });
        _this160._lfoA = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
          context: _this160.context,
          min: 0,
          max: 0.1,
          type: "sawtooth"
        }).connect(_this160._delayA.delayTime);
        _this160._delayB = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
          maxDelay: 1,
          context: _this160.context
        });
        _this160._lfoB = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
          context: _this160.context,
          min: 0,
          max: 0.1,
          type: "sawtooth",
          phase: 180
        }).connect(_this160._delayB.delayTime);
        _this160._crossFade = new _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_4__["CrossFade"]({
          context: _this160.context
        });
        _this160._crossFadeLFO = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
          context: _this160.context,
          min: 0,
          max: 1,
          type: "triangle",
          phase: 90
        }).connect(_this160._crossFade.fade);
        _this160._feedbackDelay = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
          delayTime: options.delayTime,
          context: _this160.context
        });
        _this160.delayTime = _this160._feedbackDelay.delayTime;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_6__["readOnly"])(_assertThisInitialized(_this160), "delayTime");
        _this160._pitch = options.pitch;
        _this160._windowSize = options.windowSize; // connect the two delay lines up

        _this160._delayA.connect(_this160._crossFade.a);

        _this160._delayB.connect(_this160._crossFade.b); // connect the frequency


        _this160._frequency.fan(_this160._lfoA.frequency, _this160._lfoB.frequency, _this160._crossFadeLFO.frequency); // route the input


        _this160.effectSend.fan(_this160._delayA, _this160._delayB);

        _this160._crossFade.chain(_this160._feedbackDelay, _this160.effectReturn); // start the LFOs at the same time


        var now = _this160.now();

        _this160._lfoA.start(now);

        _this160._lfoB.start(now);

        _this160._crossFadeLFO.start(now); // set the initial value


        _this160.windowSize = _this160._windowSize;
        return _this160;
      }

      _createClass2(PitchShift, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(PitchShift.prototype), "dispose", this).call(this);

          this._frequency.dispose();

          this._delayA.dispose();

          this._delayB.dispose();

          this._lfoA.dispose();

          this._lfoB.dispose();

          this._crossFade.dispose();

          this._crossFadeLFO.dispose();

          this._feedbackDelay.dispose();

          return this;
        }
      }, {
        key: "pitch",

        /**
         * Repitch the incoming signal by some interval (measured in semi-tones).
         * @example
         * const pitchShift = new Tone.PitchShift().toDestination();
         * const osc = new Tone.Oscillator().connect(pitchShift).start().toDestination();
         * pitchShift.pitch = -12; // down one octave
         * pitchShift.pitch = 7; // up a fifth
         */
        get: function get() {
          return this._pitch;
        },
        set: function set(interval) {
          this._pitch = interval;
          var factor = 0;

          if (interval < 0) {
            this._lfoA.min = 0;
            this._lfoA.max = this._windowSize;
            this._lfoB.min = 0;
            this._lfoB.max = this._windowSize;
            factor = Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_7__["intervalToFrequencyRatio"])(interval - 1) + 1;
          } else {
            this._lfoA.min = this._windowSize;
            this._lfoA.max = 0;
            this._lfoB.min = this._windowSize;
            this._lfoB.max = 0;
            factor = Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_7__["intervalToFrequencyRatio"])(interval) - 1;
          }

          this._frequency.value = factor * (1.2 / this._windowSize);
        }
        /**
         * The window size corresponds roughly to the sample length in a looping sampler.
         * Smaller values are desirable for a less noticeable delay time of the pitch shifted
         * signal, but larger values will result in smoother pitch shifting for larger intervals.
         * A nominal range of 0.03 to 0.1 is recommended.
         */

      }, {
        key: "windowSize",
        get: function get() {
          return this._windowSize;
        },
        set: function set(size) {
          this._windowSize = this.toSeconds(size);
          this.pitch = this._pitch;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_FeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["FeedbackEffect"].getDefaults(), {
            pitch: 0,
            windowSize: 0.1,
            delayTime: 0,
            feedback: 0
          });
        }
      }]);

      return PitchShift;
    }(_FeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["FeedbackEffect"]); //# sourceMappingURL=PitchShift.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/Reverb.js":
  /*!******************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/Reverb.js ***!
    \******************************************************/

  /*! exports provided: Reverb */

  /***/
  function node_modulesToneBuildEsmEffectReverbJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Reverb", function () {
      return Reverb;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _component_channel_Merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../component/channel/Merge */
    "./node_modules/tone/build/esm/component/channel/Merge.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _source_Noise__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../source/Noise */
    "./node_modules/tone/build/esm/source/Noise.js");
    /* harmony import */


    var _Effect__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./Effect */
    "./node_modules/tone/build/esm/effect/Effect.js");
    /* harmony import */


    var _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../core/context/OfflineContext */
    "./node_modules/tone/build/esm/core/context/OfflineContext.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * Simple convolution created with decaying noise.
     * Generates an Impulse Response Buffer
     * with Tone.Offline then feeds the IR into ConvolverNode.
     * The impulse response generation is async, so you have
     * to wait until [[ready]] resolves before it will make a sound.
     *
     * Inspiration from [ReverbGen](https://github.com/adelespinasse/reverbGen).
     * Copyright (c) 2014 Alan deLespinasse Apache 2.0 License.
     *
     * @category Effect
     */


    var Reverb = /*#__PURE__*/function (_Effect__WEBPACK_IMPO7) {
      _inherits(Reverb, _Effect__WEBPACK_IMPO7);

      var _super115 = _createSuper(Reverb);

      function Reverb() {
        var _this161;

        _classCallCheck2(this, Reverb);

        _this161 = _super115.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Reverb.getDefaults(), arguments, ["decay"]));
        _this161.name = "Reverb";
        /**
         * Convolver node
         */

        _this161._convolver = _this161.context.createConvolver();
        /**
         * Resolves when the reverb buffer is generated. Whenever either [[decay]]
         * or [[preDelay]] are set, you have to wait until [[ready]] resolves
         * before the IR is generated with the latest values.
         */

        _this161.ready = Promise.resolve();
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Reverb.getDefaults(), arguments, ["decay"]);
        _this161._decay = options.decay;
        _this161._preDelay = options.preDelay;

        _this161.generate();

        _this161.connectEffect(_this161._convolver);

        return _this161;
      }

      _createClass2(Reverb, [{
        key: "generate",

        /**
         * Generate the Impulse Response. Returns a promise while the IR is being generated.
         * @return Promise which returns this object.
         */
        value: function generate() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee48() {
            var previousReady, context, noiseL, noiseR, merge, gainNode, renderPromise;
            return regeneratorRuntime.wrap(function _callee48$(_context48) {
              while (1) {
                switch (_context48.prev = _context48.next) {
                  case 0:
                    previousReady = this.ready; // create a noise burst which decays over the duration in each channel

                    context = new _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_6__["OfflineContext"](2, this._decay + this._preDelay, this.context.sampleRate);
                    noiseL = new _source_Noise__WEBPACK_IMPORTED_MODULE_4__["Noise"]({
                      context: context
                    });
                    noiseR = new _source_Noise__WEBPACK_IMPORTED_MODULE_4__["Noise"]({
                      context: context
                    });
                    merge = new _component_channel_Merge__WEBPACK_IMPORTED_MODULE_1__["Merge"]({
                      context: context
                    });
                    noiseL.connect(merge, 0, 0);
                    noiseR.connect(merge, 0, 1);
                    gainNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
                      context: context
                    }).toDestination();
                    merge.connect(gainNode);
                    noiseL.start(0);
                    noiseR.start(0); // predelay

                    gainNode.gain.setValueAtTime(0, 0);
                    gainNode.gain.setValueAtTime(1, this._preDelay); // decay

                    gainNode.gain.exponentialApproachValueAtTime(0, this._preDelay, this.decay); // render the buffer

                    renderPromise = context.render();
                    this.ready = renderPromise.then(_core_util_Interface__WEBPACK_IMPORTED_MODULE_7__["noOp"]); // wait for the previous `ready` to resolve

                    _context48.next = 18;
                    return previousReady;

                  case 18:
                    _context48.next = 20;
                    return renderPromise;

                  case 20:
                    this._convolver.buffer = _context48.sent.get();
                    return _context48.abrupt("return", this);

                  case 22:
                  case "end":
                    return _context48.stop();
                }
              }
            }, _callee48, this);
          }));
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Reverb.prototype), "dispose", this).call(this);

          this._convolver.disconnect();

          return this;
        }
      }, {
        key: "decay",

        /**
         * The duration of the reverb.
         */
        get: function get() {
          return this._decay;
        },
        set: function set(time) {
          time = this.toSeconds(time);
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__["assertRange"])(time, 0.001);
          this._decay = time;
          this.generate();
        }
        /**
         * The amount of time before the reverb is fully ramped in.
         */

      }, {
        key: "preDelay",
        get: function get() {
          return this._preDelay;
        },
        set: function set(time) {
          time = this.toSeconds(time);
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__["assertRange"])(time, 0);
          this._preDelay = time;
          this.generate();
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_5__["Effect"].getDefaults(), {
            decay: 1.5,
            preDelay: 0.01
          });
        }
      }]);

      return Reverb;
    }(_Effect__WEBPACK_IMPORTED_MODULE_5__["Effect"]); //# sourceMappingURL=Reverb.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/StereoEffect.js":
  /*!************************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/StereoEffect.js ***!
    \************************************************************/

  /*! exports provided: StereoEffect */

  /***/
  function node_modulesToneBuildEsmEffectStereoEffectJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StereoEffect", function () {
      return StereoEffect;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../component/channel/CrossFade */
    "./node_modules/tone/build/esm/component/channel/CrossFade.js");
    /* harmony import */


    var _component_channel_Split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../component/channel/Split */
    "./node_modules/tone/build/esm/component/channel/Split.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _component_channel_Merge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../component/channel/Merge */
    "./node_modules/tone/build/esm/component/channel/Merge.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Base class for Stereo effects.
     */


    var StereoEffect = /*#__PURE__*/function (_core_context_ToneAud30) {
      _inherits(StereoEffect, _core_context_ToneAud30);

      var _super116 = _createSuper(StereoEffect);

      function StereoEffect(options) {
        var _this162;

        _classCallCheck2(this, StereoEffect);

        _this162 = _super116.call(this, options);
        _this162.name = "StereoEffect";
        _this162.input = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_3__["Gain"]({
          context: _this162.context
        }); // force mono sources to be stereo

        _this162.input.channelCount = 2;
        _this162.input.channelCountMode = "explicit";
        _this162._dryWet = _this162.output = new _component_channel_CrossFade__WEBPACK_IMPORTED_MODULE_1__["CrossFade"]({
          context: _this162.context,
          fade: options.wet
        });
        _this162.wet = _this162._dryWet.fade;
        _this162._split = new _component_channel_Split__WEBPACK_IMPORTED_MODULE_2__["Split"]({
          context: _this162.context,
          channels: 2
        });
        _this162._merge = new _component_channel_Merge__WEBPACK_IMPORTED_MODULE_4__["Merge"]({
          context: _this162.context,
          channels: 2
        }); // connections

        _this162.input.connect(_this162._split); // dry wet connections


        _this162.input.connect(_this162._dryWet.a);

        _this162._merge.connect(_this162._dryWet.b);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this162), ["wet"]);
        return _this162;
      }
      /**
       * Connect the left part of the effect
       */


      _createClass2(StereoEffect, [{
        key: "connectEffectLeft",
        value: function connectEffectLeft() {
          var _ref70;

          this._split.connect(arguments.length <= 0 ? undefined : arguments[0], 0, 0);

          Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connectSeries"]).apply(void 0, arguments);
          Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connect"])((_ref70 = arguments.length - 1, _ref70 < 0 || arguments.length <= _ref70 ? undefined : arguments[_ref70]), this._merge, 0, 0);
        }
        /**
         * Connect the right part of the effect
         */

      }, {
        key: "connectEffectRight",
        value: function connectEffectRight() {
          var _ref71;

          this._split.connect(arguments.length <= 0 ? undefined : arguments[0], 1, 0);

          Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connectSeries"]).apply(void 0, arguments);
          Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connect"])((_ref71 = arguments.length - 1, _ref71 < 0 || arguments.length <= _ref71 ? undefined : arguments[_ref71]), this._merge, 0, 1);
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(StereoEffect.prototype), "dispose", this).call(this);

          this._dryWet.dispose();

          this._split.dispose();

          this._merge.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"].getDefaults(), {
            wet: 1
          });
        }
      }]);

      return StereoEffect;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["ToneAudioNode"]); //# sourceMappingURL=StereoEffect.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js":
  /*!********************************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js ***!
    \********************************************************************/

  /*! exports provided: StereoFeedbackEffect */

  /***/
  function node_modulesToneBuildEsmEffectStereoFeedbackEffectJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StereoFeedbackEffect", function () {
      return StereoFeedbackEffect;
    });
    /* harmony import */


    var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./StereoEffect */
    "./node_modules/tone/build/esm/effect/StereoEffect.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _component_channel_Split__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../component/channel/Split */
    "./node_modules/tone/build/esm/component/channel/Split.js");
    /* harmony import */


    var _component_channel_Merge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../component/channel/Merge */
    "./node_modules/tone/build/esm/component/channel/Merge.js");
    /**
     * Just like a stereo feedback effect, but the feedback is routed from left to right
     * and right to left instead of on the same channel.
     * ```
     * +--------------------------------+ feedbackL <-----------------------------------+
     * |                                                                                |
     * +-->                          +----->        +---->                          +---+
     *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit
     * +-->                          +----->        +---->                          +---+
     * |                                                                                |
     * +--------------------------------+ feedbackR <-----------------------------------+
     * ```
     */


    var StereoFeedbackEffect = /*#__PURE__*/function (_StereoEffect__WEBPAC4) {
      _inherits(StereoFeedbackEffect, _StereoEffect__WEBPAC4);

      var _super117 = _createSuper(StereoFeedbackEffect);

      function StereoFeedbackEffect(options) {
        var _this163;

        _classCallCheck2(this, StereoFeedbackEffect);

        _this163 = _super117.call(this, options);
        _this163.feedback = new _signal_Signal__WEBPACK_IMPORTED_MODULE_1__["Signal"]({
          context: _this163.context,
          value: options.feedback,
          units: "normalRange"
        });
        _this163._feedbackL = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this163.context
        });
        _this163._feedbackR = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this163.context
        });
        _this163._feedbackSplit = new _component_channel_Split__WEBPACK_IMPORTED_MODULE_4__["Split"]({
          context: _this163.context,
          channels: 2
        });
        _this163._feedbackMerge = new _component_channel_Merge__WEBPACK_IMPORTED_MODULE_5__["Merge"]({
          context: _this163.context,
          channels: 2
        });

        _this163._merge.connect(_this163._feedbackSplit);

        _this163._feedbackMerge.connect(_this163._split); // the left output connected to the left input


        _this163._feedbackSplit.connect(_this163._feedbackL, 0, 0);

        _this163._feedbackL.connect(_this163._feedbackMerge, 0, 0); // the right output connected to the right input


        _this163._feedbackSplit.connect(_this163._feedbackR, 1, 0);

        _this163._feedbackR.connect(_this163._feedbackMerge, 0, 1); // the feedback control


        _this163.feedback.fan(_this163._feedbackL.gain, _this163._feedbackR.gain);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this163), ["feedback"]);
        return _this163;
      }

      _createClass2(StereoFeedbackEffect, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(StereoFeedbackEffect.prototype), "dispose", this).call(this);

          this.feedback.dispose();

          this._feedbackL.dispose();

          this._feedbackR.dispose();

          this._feedbackSplit.dispose();

          this._feedbackMerge.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"].getDefaults(), {
            feedback: 0.5
          });
        }
      }]);

      return StereoFeedbackEffect;
    }(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"]); //# sourceMappingURL=StereoFeedbackEffect.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/StereoWidener.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/StereoWidener.js ***!
    \*************************************************************/

  /*! exports provided: StereoWidener */

  /***/
  function node_modulesToneBuildEsmEffectStereoWidenerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StereoWidener", function () {
      return StereoWidener;
    });
    /* harmony import */


    var _effect_MidSideEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../effect/MidSideEffect */
    "./node_modules/tone/build/esm/effect/MidSideEffect.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../signal/Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _signal_Subtract__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../signal/Subtract */
    "./node_modules/tone/build/esm/signal/Subtract.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /**
     * Applies a width factor to the mid/side seperation.
     * 0 is all mid and 1 is all side.
     * Algorithm found in [kvraudio forums](http://www.kvraudio.com/forum/viewtopic.php?t=212587).
     * ```
     * Mid *= 2*(1-width)<br>
     * Side *= 2*width
     * ```
     * @category Effect
     */


    var StereoWidener = /*#__PURE__*/function (_effect_MidSideEffect) {
      _inherits(StereoWidener, _effect_MidSideEffect);

      var _super118 = _createSuper(StereoWidener);

      function StereoWidener() {
        var _this164;

        _classCallCheck2(this, StereoWidener);

        _this164 = _super118.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(StereoWidener.getDefaults(), arguments, ["width"]));
        _this164.name = "StereoWidener";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(StereoWidener.getDefaults(), arguments, ["width"]);
        _this164.width = new _signal_Signal__WEBPACK_IMPORTED_MODULE_1__["Signal"]({
          context: _this164.context,
          value: options.width,
          units: "normalRange"
        });
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this164), ["width"]);
        _this164._twoTimesWidthMid = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__["Multiply"]({
          context: _this164.context,
          value: 2
        });
        _this164._twoTimesWidthSide = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__["Multiply"]({
          context: _this164.context,
          value: 2
        });
        _this164._midMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__["Multiply"]({
          context: _this164.context
        });

        _this164._twoTimesWidthMid.connect(_this164._midMult.factor);

        _this164.connectEffectMid(_this164._midMult);

        _this164._oneMinusWidth = new _signal_Subtract__WEBPACK_IMPORTED_MODULE_3__["Subtract"]({
          context: _this164.context
        });

        _this164._oneMinusWidth.connect(_this164._twoTimesWidthMid);

        Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_6__["connect"])(_this164.context.getConstant(1), _this164._oneMinusWidth);

        _this164.width.connect(_this164._oneMinusWidth.subtrahend);

        _this164._sideMult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_2__["Multiply"]({
          context: _this164.context
        });

        _this164.width.connect(_this164._twoTimesWidthSide);

        _this164._twoTimesWidthSide.connect(_this164._sideMult.factor);

        _this164.connectEffectSide(_this164._sideMult);

        return _this164;
      }

      _createClass2(StereoWidener, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(StereoWidener.prototype), "dispose", this).call(this);

          this.width.dispose();

          this._midMult.dispose();

          this._sideMult.dispose();

          this._twoTimesWidthMid.dispose();

          this._twoTimesWidthSide.dispose();

          this._oneMinusWidth.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_effect_MidSideEffect__WEBPACK_IMPORTED_MODULE_0__["MidSideEffect"].getDefaults(), {
            width: 0.5
          });
        }
      }]);

      return StereoWidener;
    }(_effect_MidSideEffect__WEBPACK_IMPORTED_MODULE_0__["MidSideEffect"]); //# sourceMappingURL=StereoWidener.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/StereoXFeedbackEffect.js ***!
    \*********************************************************************/

  /*! exports provided: StereoXFeedbackEffect */

  /***/
  function node_modulesToneBuildEsmEffectStereoXFeedbackEffectJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "StereoXFeedbackEffect", function () {
      return StereoXFeedbackEffect;
    });
    /* harmony import */


    var _StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./StereoFeedbackEffect */
    "./node_modules/tone/build/esm/effect/StereoFeedbackEffect.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Just like a [[StereoFeedbackEffect]], but the feedback is routed from left to right
     * and right to left instead of on the same channel.
     * ```
     * +--------------------------------+ feedbackL <-----------------------------------+
     * |                                                                                |
     * +-->                          +----->        +---->                          +-----+
     *      feedbackMerge +--> split        (EFFECT)       merge +--> feedbackSplit     | |
     * +-->                          +----->        +---->                          +---+ |
     * |                                                                                  |
     * +--------------------------------+ feedbackR <-------------------------------------+
     * ```
     */


    var StereoXFeedbackEffect = /*#__PURE__*/function (_StereoFeedbackEffect) {
      _inherits(StereoXFeedbackEffect, _StereoFeedbackEffect);

      var _super119 = _createSuper(StereoXFeedbackEffect);

      function StereoXFeedbackEffect(options) {
        var _this165;

        _classCallCheck2(this, StereoXFeedbackEffect);

        _this165 = _super119.call(this, options); // the left output connected to the right input

        _this165._feedbackL.disconnect();

        _this165._feedbackL.connect(_this165._feedbackMerge, 0, 1); // the left output connected to the right input


        _this165._feedbackR.disconnect();

        _this165._feedbackR.connect(_this165._feedbackMerge, 0, 0);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_1__["readOnly"])(_assertThisInitialized(_this165), ["feedback"]);
        return _this165;
      }

      return StereoXFeedbackEffect;
    }(_StereoFeedbackEffect__WEBPACK_IMPORTED_MODULE_0__["StereoFeedbackEffect"]); //# sourceMappingURL=StereoXFeedbackEffect.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/Tremolo.js":
  /*!*******************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/Tremolo.js ***!
    \*******************************************************/

  /*! exports provided: Tremolo */

  /***/
  function node_modulesToneBuildEsmEffectTremoloJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Tremolo", function () {
      return Tremolo;
    });
    /* harmony import */


    var _StereoEffect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./StereoEffect */
    "./node_modules/tone/build/esm/effect/StereoEffect.js");
    /* harmony import */


    var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../source/oscillator/LFO */
    "./node_modules/tone/build/esm/source/oscillator/LFO.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Tremolo modulates the amplitude of an incoming signal using an [[LFO]].
     * The effect is a stereo effect where the modulation phase is inverted in each channel.
     *
     * @example
     * // create a tremolo and start it's LFO
     * const tremolo = new Tone.Tremolo(9, 0.75).toDestination().start();
     * // route an oscillator through the tremolo and start it
     * const oscillator = new Tone.Oscillator().connect(tremolo).start();
     *
     * @category Effect
     */


    var Tremolo = /*#__PURE__*/function (_StereoEffect__WEBPAC5) {
      _inherits(Tremolo, _StereoEffect__WEBPAC5);

      var _super120 = _createSuper(Tremolo);

      function Tremolo() {
        var _this166;

        _classCallCheck2(this, Tremolo);

        _this166 = _super120.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Tremolo.getDefaults(), arguments, ["frequency", "depth"]));
        _this166.name = "Tremolo";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Tremolo.getDefaults(), arguments, ["frequency", "depth"]);
        _this166._lfoL = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__["LFO"]({
          context: _this166.context,
          type: options.type,
          min: 1,
          max: 0
        });
        _this166._lfoR = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_1__["LFO"]({
          context: _this166.context,
          type: options.type,
          min: 1,
          max: 0
        });
        _this166._amplitudeL = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this166.context
        });
        _this166._amplitudeR = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this166.context
        });
        _this166.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
          context: _this166.context,
          value: options.frequency,
          units: "frequency"
        });
        _this166.depth = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
          context: _this166.context,
          value: options.depth,
          units: "normalRange"
        });
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this166), ["frequency", "depth"]);

        _this166.connectEffectLeft(_this166._amplitudeL);

        _this166.connectEffectRight(_this166._amplitudeR);

        _this166._lfoL.connect(_this166._amplitudeL.gain);

        _this166._lfoR.connect(_this166._amplitudeR.gain);

        _this166.frequency.fan(_this166._lfoL.frequency, _this166._lfoR.frequency);

        _this166.depth.fan(_this166._lfoR.amplitude, _this166._lfoL.amplitude);

        _this166.spread = options.spread;
        return _this166;
      }

      _createClass2(Tremolo, [{
        key: "start",

        /**
         * Start the tremolo.
         */
        value: function start(time) {
          this._lfoL.start(time);

          this._lfoR.start(time);

          return this;
        }
        /**
         * Stop the tremolo.
         */

      }, {
        key: "stop",
        value: function stop(time) {
          this._lfoL.stop(time);

          this._lfoR.stop(time);

          return this;
        }
        /**
         * Sync the effect to the transport.
         */

      }, {
        key: "sync",
        value: function sync() {
          this._lfoL.sync();

          this._lfoR.sync();

          this.context.transport.syncSignal(this.frequency);
          return this;
        }
        /**
         * Unsync the filter from the transport
         */

      }, {
        key: "unsync",
        value: function unsync() {
          this._lfoL.unsync();

          this._lfoR.unsync();

          this.context.transport.unsyncSignal(this.frequency);
          return this;
        }
        /**
         * The oscillator type.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Tremolo.prototype), "dispose", this).call(this);

          this._lfoL.dispose();

          this._lfoR.dispose();

          this._amplitudeL.dispose();

          this._amplitudeR.dispose();

          this.frequency.dispose();
          this.depth.dispose();
          return this;
        }
      }, {
        key: "type",
        get: function get() {
          return this._lfoL.type;
        },
        set: function set(type) {
          this._lfoL.type = type;
          this._lfoR.type = type;
        }
        /**
         * Amount of stereo spread. When set to 0, both LFO's will be panned centrally.
         * When set to 180, LFO's will be panned hard left and right respectively.
         */

      }, {
        key: "spread",
        get: function get() {
          return this._lfoR.phase - this._lfoL.phase; // 180
        },
        set: function set(spread) {
          this._lfoL.phase = 90 - spread / 2;
          this._lfoR.phase = spread / 2 + 90;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"].getDefaults(), {
            frequency: 10,
            type: "sine",
            depth: 0.5,
            spread: 180
          });
        }
      }]);

      return Tremolo;
    }(_StereoEffect__WEBPACK_IMPORTED_MODULE_0__["StereoEffect"]); //# sourceMappingURL=Tremolo.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/Vibrato.js":
  /*!*******************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/Vibrato.js ***!
    \*******************************************************/

  /*! exports provided: Vibrato */

  /***/
  function node_modulesToneBuildEsmEffectVibratoJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Vibrato", function () {
      return Vibrato;
    });
    /* harmony import */


    var _Effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Effect */
    "./node_modules/tone/build/esm/effect/Effect.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../source/oscillator/LFO */
    "./node_modules/tone/build/esm/source/oscillator/LFO.js");
    /* harmony import */


    var _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/context/Delay */
    "./node_modules/tone/build/esm/core/context/Delay.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * A Vibrato effect composed of a Tone.Delay and a Tone.LFO. The LFO
     * modulates the delayTime of the delay, causing the pitch to rise and fall.
     * @category Effect
     */


    var Vibrato = /*#__PURE__*/function (_Effect__WEBPACK_IMPO8) {
      _inherits(Vibrato, _Effect__WEBPACK_IMPO8);

      var _super121 = _createSuper(Vibrato);

      function Vibrato() {
        var _this167;

        _classCallCheck2(this, Vibrato);

        _this167 = _super121.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Vibrato.getDefaults(), arguments, ["frequency", "depth"]));
        _this167.name = "Vibrato";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Vibrato.getDefaults(), arguments, ["frequency", "depth"]);
        _this167._delayNode = new _core_context_Delay__WEBPACK_IMPORTED_MODULE_3__["Delay"]({
          context: _this167.context,
          delayTime: 0,
          maxDelay: options.maxDelay
        });
        _this167._lfo = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_2__["LFO"]({
          context: _this167.context,
          type: options.type,
          min: 0,
          max: options.maxDelay,
          frequency: options.frequency,
          phase: -90 // offse the phase so the resting position is in the center

        }).start().connect(_this167._delayNode.delayTime);
        _this167.frequency = _this167._lfo.frequency;
        _this167.depth = _this167._lfo.amplitude;
        _this167.depth.value = options.depth;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this167), ["frequency", "depth"]);

        _this167.effectSend.chain(_this167._delayNode, _this167.effectReturn);

        return _this167;
      }

      _createClass2(Vibrato, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Vibrato.prototype), "dispose", this).call(this);

          this._delayNode.dispose();

          this._lfo.dispose();

          this.frequency.dispose();
          this.depth.dispose();
          return this;
        }
      }, {
        key: "type",

        /**
         * Type of oscillator attached to the Vibrato.
         */
        get: function get() {
          return this._lfo.type;
        },
        set: function set(type) {
          this._lfo.type = type;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"].getDefaults(), {
            maxDelay: 0.005,
            frequency: 5,
            depth: 0.1,
            type: "sine"
          });
        }
      }]);

      return Vibrato;
    }(_Effect__WEBPACK_IMPORTED_MODULE_0__["Effect"]); //# sourceMappingURL=Vibrato.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/effect/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/tone/build/esm/effect/index.js ***!
    \*****************************************************/

  /*! exports provided: AutoFilter, AutoPanner, AutoWah, BitCrusher, Chebyshev, Chorus, Distortion, FeedbackDelay, FrequencyShifter, Freeverb, JCReverb, PingPongDelay, PitchShift, Phaser, Reverb, StereoWidener, Tremolo, Vibrato */

  /***/
  function node_modulesToneBuildEsmEffectIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _AutoFilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./AutoFilter */
    "./node_modules/tone/build/esm/effect/AutoFilter.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AutoFilter", function () {
      return _AutoFilter__WEBPACK_IMPORTED_MODULE_0__["AutoFilter"];
    });
    /* harmony import */


    var _AutoPanner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./AutoPanner */
    "./node_modules/tone/build/esm/effect/AutoPanner.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AutoPanner", function () {
      return _AutoPanner__WEBPACK_IMPORTED_MODULE_1__["AutoPanner"];
    });
    /* harmony import */


    var _AutoWah__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./AutoWah */
    "./node_modules/tone/build/esm/effect/AutoWah.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AutoWah", function () {
      return _AutoWah__WEBPACK_IMPORTED_MODULE_2__["AutoWah"];
    });
    /* harmony import */


    var _BitCrusher__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./BitCrusher */
    "./node_modules/tone/build/esm/effect/BitCrusher.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BitCrusher", function () {
      return _BitCrusher__WEBPACK_IMPORTED_MODULE_3__["BitCrusher"];
    });
    /* harmony import */


    var _Chebyshev__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./Chebyshev */
    "./node_modules/tone/build/esm/effect/Chebyshev.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Chebyshev", function () {
      return _Chebyshev__WEBPACK_IMPORTED_MODULE_4__["Chebyshev"];
    });
    /* harmony import */


    var _Chorus__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./Chorus */
    "./node_modules/tone/build/esm/effect/Chorus.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Chorus", function () {
      return _Chorus__WEBPACK_IMPORTED_MODULE_5__["Chorus"];
    });
    /* harmony import */


    var _Distortion__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./Distortion */
    "./node_modules/tone/build/esm/effect/Distortion.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Distortion", function () {
      return _Distortion__WEBPACK_IMPORTED_MODULE_6__["Distortion"];
    });
    /* harmony import */


    var _FeedbackDelay__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./FeedbackDelay */
    "./node_modules/tone/build/esm/effect/FeedbackDelay.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FeedbackDelay", function () {
      return _FeedbackDelay__WEBPACK_IMPORTED_MODULE_7__["FeedbackDelay"];
    });
    /* harmony import */


    var _FrequencyShifter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./FrequencyShifter */
    "./node_modules/tone/build/esm/effect/FrequencyShifter.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FrequencyShifter", function () {
      return _FrequencyShifter__WEBPACK_IMPORTED_MODULE_8__["FrequencyShifter"];
    });
    /* harmony import */


    var _Freeverb__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./Freeverb */
    "./node_modules/tone/build/esm/effect/Freeverb.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Freeverb", function () {
      return _Freeverb__WEBPACK_IMPORTED_MODULE_9__["Freeverb"];
    });
    /* harmony import */


    var _JCReverb__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./JCReverb */
    "./node_modules/tone/build/esm/effect/JCReverb.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "JCReverb", function () {
      return _JCReverb__WEBPACK_IMPORTED_MODULE_10__["JCReverb"];
    });
    /* harmony import */


    var _PingPongDelay__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./PingPongDelay */
    "./node_modules/tone/build/esm/effect/PingPongDelay.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PingPongDelay", function () {
      return _PingPongDelay__WEBPACK_IMPORTED_MODULE_11__["PingPongDelay"];
    });
    /* harmony import */


    var _PitchShift__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./PitchShift */
    "./node_modules/tone/build/esm/effect/PitchShift.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PitchShift", function () {
      return _PitchShift__WEBPACK_IMPORTED_MODULE_12__["PitchShift"];
    });
    /* harmony import */


    var _Phaser__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./Phaser */
    "./node_modules/tone/build/esm/effect/Phaser.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Phaser", function () {
      return _Phaser__WEBPACK_IMPORTED_MODULE_13__["Phaser"];
    });
    /* harmony import */


    var _Reverb__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./Reverb */
    "./node_modules/tone/build/esm/effect/Reverb.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Reverb", function () {
      return _Reverb__WEBPACK_IMPORTED_MODULE_14__["Reverb"];
    });
    /* harmony import */


    var _StereoWidener__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./StereoWidener */
    "./node_modules/tone/build/esm/effect/StereoWidener.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StereoWidener", function () {
      return _StereoWidener__WEBPACK_IMPORTED_MODULE_15__["StereoWidener"];
    });
    /* harmony import */


    var _Tremolo__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
    /*! ./Tremolo */
    "./node_modules/tone/build/esm/effect/Tremolo.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Tremolo", function () {
      return _Tremolo__WEBPACK_IMPORTED_MODULE_16__["Tremolo"];
    });
    /* harmony import */


    var _Vibrato__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
    /*! ./Vibrato */
    "./node_modules/tone/build/esm/effect/Vibrato.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Vibrato", function () {
      return _Vibrato__WEBPACK_IMPORTED_MODULE_17__["Vibrato"];
    }); //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/event/Loop.js":
  /*!***************************************************!*\
    !*** ./node_modules/tone/build/esm/event/Loop.js ***!
    \***************************************************/

  /*! exports provided: Loop */

  /***/
  function node_modulesToneBuildEsmEventLoopJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Loop", function () {
      return Loop;
    });
    /* harmony import */


    var _ToneEvent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./ToneEvent */
    "./node_modules/tone/build/esm/event/ToneEvent.js");
    /* harmony import */


    var _core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/ToneWithContext */
    "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Loop creates a looped callback at the
     * specified interval. The callback can be
     * started, stopped and scheduled along
     * the Transport's timeline.
     * @example
     * const loop = new Tone.Loop((time) => {
     * 	// triggered every eighth note.
     * 	console.log(time);
     * }, "8n").start(0);
     * Tone.Transport.start();
     * @category Event
     */


    var Loop = /*#__PURE__*/function (_core_context_ToneWit) {
      _inherits(Loop, _core_context_ToneWit);

      var _super122 = _createSuper(Loop);

      function Loop() {
        var _this168;

        _classCallCheck2(this, Loop);

        _this168 = _super122.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Loop.getDefaults(), arguments, ["callback", "interval"]));
        _this168.name = "Loop";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Loop.getDefaults(), arguments, ["callback", "interval"]);
        _this168._event = new _ToneEvent__WEBPACK_IMPORTED_MODULE_0__["ToneEvent"]({
          context: _this168.context,
          callback: _this168._tick.bind(_assertThisInitialized(_this168)),
          loop: true,
          loopEnd: options.interval,
          playbackRate: options.playbackRate,
          probability: options.probability
        });
        _this168.callback = options.callback; // set the iterations

        _this168.iterations = options.iterations;
        return _this168;
      }

      _createClass2(Loop, [{
        key: "start",

        /**
         * Start the loop at the specified time along the Transport's timeline.
         * @param  time  When to start the Loop.
         */
        value: function start(time) {
          this._event.start(time);

          return this;
        }
        /**
         * Stop the loop at the given time.
         * @param  time  When to stop the Loop.
         */

      }, {
        key: "stop",
        value: function stop(time) {
          this._event.stop(time);

          return this;
        }
        /**
         * Cancel all scheduled events greater than or equal to the given time
         * @param  time  The time after which events will be cancel.
         */

      }, {
        key: "cancel",
        value: function cancel(time) {
          this._event.cancel(time);

          return this;
        }
        /**
         * Internal function called when the notes should be called
         * @param time  The time the event occurs
         */

      }, {
        key: "_tick",
        value: function _tick(time) {
          this.callback(time);
        }
        /**
         * The state of the Loop, either started or stopped.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Loop.prototype), "dispose", this).call(this);

          this._event.dispose();

          return this;
        }
      }, {
        key: "state",
        get: function get() {
          return this._event.state;
        }
        /**
         * The progress of the loop as a value between 0-1. 0, when the loop is stopped or done iterating.
         */

      }, {
        key: "progress",
        get: function get() {
          return this._event.progress;
        }
        /**
         * The time between successive callbacks.
         * @example
         * const loop = new Tone.Loop();
         * loop.interval = "8n"; // loop every 8n
         */

      }, {
        key: "interval",
        get: function get() {
          return this._event.loopEnd;
        },
        set: function set(interval) {
          this._event.loopEnd = interval;
        }
        /**
         * The playback rate of the loop. The normal playback rate is 1 (no change).
         * A `playbackRate` of 2 would be twice as fast.
         */

      }, {
        key: "playbackRate",
        get: function get() {
          return this._event.playbackRate;
        },
        set: function set(rate) {
          this._event.playbackRate = rate;
        }
        /**
         * Random variation +/-0.01s to the scheduled time.
         * Or give it a time value which it will randomize by.
         */

      }, {
        key: "humanize",
        get: function get() {
          return this._event.humanize;
        },
        set: function set(variation) {
          this._event.humanize = variation;
        }
        /**
         * The probably of the callback being invoked.
         */

      }, {
        key: "probability",
        get: function get() {
          return this._event.probability;
        },
        set: function set(prob) {
          this._event.probability = prob;
        }
        /**
         * Muting the Loop means that no callbacks are invoked.
         */

      }, {
        key: "mute",
        get: function get() {
          return this._event.mute;
        },
        set: function set(mute) {
          this._event.mute = mute;
        }
        /**
         * The number of iterations of the loop. The default value is `Infinity` (loop forever).
         */

      }, {
        key: "iterations",
        get: function get() {
          if (this._event.loop === true) {
            return Infinity;
          } else {
            return this._event.loop;
          }
        },
        set: function set(iters) {
          if (iters === Infinity) {
            this._event.loop = true;
          } else {
            this._event.loop = iters;
          }
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__["ToneWithContext"].getDefaults(), {
            interval: "4n",
            callback: _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"],
            playbackRate: 1,
            iterations: Infinity,
            probability: 1,
            mute: false,
            humanize: false
          });
        }
      }]);

      return Loop;
    }(_core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__["ToneWithContext"]); //# sourceMappingURL=Loop.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/event/Part.js":
  /*!***************************************************!*\
    !*** ./node_modules/tone/build/esm/event/Part.js ***!
    \***************************************************/

  /*! exports provided: Part */

  /***/
  function node_modulesToneBuildEsmEventPartJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Part", function () {
      return Part;
    });
    /* harmony import */


    var _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/type/Ticks */
    "./node_modules/tone/build/esm/core/type/Ticks.js");
    /* harmony import */


    var _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/type/TransportTime */
    "./node_modules/tone/build/esm/core/type/TransportTime.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/StateTimeline */
    "./node_modules/tone/build/esm/core/util/StateTimeline.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _ToneEvent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./ToneEvent */
    "./node_modules/tone/build/esm/event/ToneEvent.js");
    /**
     * Part is a collection ToneEvents which can be started/stopped and looped as a single unit.
     *
     * @example
     * const synth = new Tone.Synth().toDestination();
     * const part = new Tone.Part(((time, note) => {
     * 	// the notes given as the second element in the array
     * 	// will be passed in as the second argument
     * 	synth.triggerAttackRelease(note, "8n", time);
     * }), [[0, "C2"], ["0:2", "C3"], ["0:3:2", "G2"]]);
     * @example
     * const synth = new Tone.Synth().toDestination();
     * // use an array of objects as long as the object has a "time" attribute
     * const part = new Tone.Part(((time, value) => {
     * 	// the value is an object which contains both the note and the velocity
     * 	synth.triggerAttackRelease(value.note, "8n", time, value.velocity);
     * }), [{ time: 0, note: "C3", velocity: 0.9 },
     * 	{ time: "0:2", note: "C4", velocity: 0.5 }
     * ]).start(0);
     * @category Event
     */


    var Part = /*#__PURE__*/function (_ToneEvent__WEBPACK_I) {
      _inherits(Part, _ToneEvent__WEBPACK_I);

      var _super123 = _createSuper(Part);

      function Part() {
        var _this169;

        _classCallCheck2(this, Part);

        _this169 = _super123.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Part.getDefaults(), arguments, ["callback", "events"]));
        _this169.name = "Part";
        /**
         * Tracks the scheduled events
         */

        _this169._state = new _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_3__["StateTimeline"]("stopped");
        /**
         * The events that belong to this part
         */

        _this169._events = new Set();
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Part.getDefaults(), arguments, ["callback", "events"]); // make sure things are assigned in the right order

        _this169._state.increasing = true; // add the events

        options.events.forEach(function (event) {
          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isArray"])(event)) {
            _this169.add(event[0], event[1]);
          } else {
            _this169.add(event);
          }
        });
        return _this169;
      }

      _createClass2(Part, [{
        key: "start",

        /**
         * Start the part at the given time.
         * @param  time    When to start the part.
         * @param  offset  The offset from the start of the part to begin playing at.
         */
        value: function start(time, offset) {
          var _this170 = this;

          var ticks = this.toTicks(time);

          if (this._state.getValueAtTime(ticks) !== "started") {
            offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["defaultArg"])(offset, this._loop ? this._loopStart : 0);

            if (this._loop) {
              offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["defaultArg"])(offset, this._loopStart);
            } else {
              offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["defaultArg"])(offset, 0);
            }

            var computedOffset = this.toTicks(offset);

            this._state.add({
              id: -1,
              offset: computedOffset,
              state: "started",
              time: ticks
            });

            this._forEach(function (event) {
              _this170._startNote(event, ticks, computedOffset);
            });
          }

          return this;
        }
        /**
         * Start the event in the given event at the correct time given
         * the ticks and offset and looping.
         * @param  event
         * @param  ticks
         * @param  offset
         */

      }, {
        key: "_startNote",
        value: function _startNote(event, ticks, offset) {
          ticks -= offset;

          if (this._loop) {
            if (event.startOffset >= this._loopStart && event.startOffset < this._loopEnd) {
              if (event.startOffset < offset) {
                // start it on the next loop
                ticks += this._getLoopDuration();
              }

              event.start(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, ticks));
            } else if (event.startOffset < this._loopStart && event.startOffset >= offset) {
              event.loop = false;
              event.start(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, ticks));
            }
          } else if (event.startOffset >= offset) {
            event.start(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, ticks));
          }
        }
      }, {
        key: "stop",

        /**
         * Stop the part at the given time.
         * @param  time  When to stop the part.
         */
        value: function stop(time) {
          var ticks = this.toTicks(time);

          this._state.cancel(ticks);

          this._state.setStateAtTime("stopped", ticks);

          this._forEach(function (event) {
            event.stop(time);
          });

          return this;
        }
        /**
         * Get/Set an Event's value at the given time.
         * If a value is passed in and no event exists at
         * the given time, one will be created with that value.
         * If two events are at the same time, the first one will
         * be returned.
         * @example
         * const part = new Tone.Part();
         * part.at("1m"); // returns the part at the first measure
         * part.at("2m", "C2"); // set the value at "2m" to C2.
         * // if an event didn't exist at that time, it will be created.
         * @param time The time of the event to get or set.
         * @param value If a value is passed in, the value of the event at the given time will be set to it.
         */

      }, {
        key: "at",
        value: function at(time, value) {
          var timeInTicks = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_1__["TransportTimeClass"](this.context, time).toTicks();
          var tickTime = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, 1).toSeconds();

          var iterator = this._events.values();

          var result = iterator.next();

          while (!result.done) {
            var event = result.value;

            if (Math.abs(timeInTicks - event.startOffset) < tickTime) {
              if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(value)) {
                event.value = value;
              }

              return event;
            }

            result = iterator.next();
          } // if there was no event at that time, create one


          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(value)) {
            this.add(time, value); // return the new event

            return this.at(time);
          } else {
            return null;
          }
        }
      }, {
        key: "add",
        value: function add(time, value) {
          // extract the parameters
          if (time instanceof Object && Reflect.has(time, "time")) {
            value = time;
            time = value.time;
          }

          var ticks = this.toTicks(time);
          var event;

          if (value instanceof _ToneEvent__WEBPACK_IMPORTED_MODULE_5__["ToneEvent"]) {
            event = value;
            event.callback = this._tick.bind(this);
          } else {
            event = new _ToneEvent__WEBPACK_IMPORTED_MODULE_5__["ToneEvent"]({
              callback: this._tick.bind(this),
              context: this.context,
              value: value
            });
          } // the start offset


          event.startOffset = ticks; // initialize the values

          event.set({
            humanize: this.humanize,
            loop: this.loop,
            loopEnd: this.loopEnd,
            loopStart: this.loopStart,
            playbackRate: this.playbackRate,
            probability: this.probability
          });

          this._events.add(event); // start the note if it should be played right now


          this._restartEvent(event);

          return this;
        }
        /**
         * Restart the given event
         */

      }, {
        key: "_restartEvent",
        value: function _restartEvent(event) {
          var _this171 = this;

          this._state.forEach(function (stateEvent) {
            if (stateEvent.state === "started") {
              _this171._startNote(event, stateEvent.time, stateEvent.offset);
            } else {
              // stop the note
              event.stop(new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](_this171.context, stateEvent.time));
            }
          });
        }
      }, {
        key: "remove",
        value: function remove(time, value) {
          var _this172 = this;

          // extract the parameters
          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isObject"])(time) && time.hasOwnProperty("time")) {
            value = time;
            time = value.time;
          }

          time = this.toTicks(time);

          this._events.forEach(function (event) {
            if (event.startOffset === time) {
              if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isUndef"])(value) || Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isDefined"])(value) && event.value === value) {
                _this172._events["delete"](event);

                event.dispose();
              }
            }
          });

          return this;
        }
        /**
         * Remove all of the notes from the group.
         */

      }, {
        key: "clear",
        value: function clear() {
          this._forEach(function (event) {
            return event.dispose();
          });

          this._events.clear();

          return this;
        }
        /**
         * Cancel scheduled state change events: i.e. "start" and "stop".
         * @param after The time after which to cancel the scheduled events.
         */

      }, {
        key: "cancel",
        value: function cancel(after) {
          this._forEach(function (event) {
            return event.cancel(after);
          });

          this._state.cancel(this.toTicks(after));

          return this;
        }
        /**
         * Iterate over all of the events
         */

      }, {
        key: "_forEach",
        value: function _forEach(callback) {
          if (this._events) {
            this._events.forEach(function (event) {
              if (event instanceof Part) {
                event._forEach(callback);
              } else {
                callback(event);
              }
            });
          }

          return this;
        }
        /**
         * Set the attribute of all of the events
         * @param  attr  the attribute to set
         * @param  value      The value to set it to
         */

      }, {
        key: "_setAll",
        value: function _setAll(attr, value) {
          this._forEach(function (event) {
            event[attr] = value;
          });
        }
        /**
         * Internal tick method
         * @param  time  The time of the event in seconds
         */

      }, {
        key: "_tick",
        value: function _tick(time, value) {
          if (!this.mute) {
            this.callback(time, value);
          }
        }
        /**
         * Determine if the event should be currently looping
         * given the loop boundries of this Part.
         * @param  event  The event to test
         */

      }, {
        key: "_testLoopBoundries",
        value: function _testLoopBoundries(event) {
          if (this._loop && (event.startOffset < this._loopStart || event.startOffset >= this._loopEnd)) {
            event.cancel(0);
          } else if (event.state === "stopped") {
            // reschedule it if it's stopped
            this._restartEvent(event);
          }
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Part.prototype), "dispose", this).call(this);

          this.clear();
          return this;
        }
      }, {
        key: "startOffset",
        get: function get() {
          return this._startOffset;
        },
        set: function set(offset) {
          var _this173 = this;

          this._startOffset = offset;

          this._forEach(function (event) {
            event.startOffset += _this173._startOffset;
          });
        }
      }, {
        key: "probability",
        get: function get() {
          return this._probability;
        },
        set: function set(prob) {
          this._probability = prob;

          this._setAll("probability", prob);
        }
      }, {
        key: "humanize",
        get: function get() {
          return this._humanize;
        },
        set: function set(variation) {
          this._humanize = variation;

          this._setAll("humanize", variation);
        }
        /**
         * If the part should loop or not
         * between Part.loopStart and
         * Part.loopEnd. If set to true,
         * the part will loop indefinitely,
         * if set to a number greater than 1
         * it will play a specific number of
         * times, if set to false, 0 or 1, the
         * part will only play once.
         * @example
         * const part = new Tone.Part();
         * // loop the part 8 times
         * part.loop = 8;
         */

      }, {
        key: "loop",
        get: function get() {
          return this._loop;
        },
        set: function set(loop) {
          var _this174 = this;

          this._loop = loop;

          this._forEach(function (event) {
            event.loopStart = _this174.loopStart;
            event.loopEnd = _this174.loopEnd;
            event.loop = loop;

            _this174._testLoopBoundries(event);
          });
        }
        /**
         * The loopEnd point determines when it will
         * loop if Part.loop is true.
         */

      }, {
        key: "loopEnd",
        get: function get() {
          return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._loopEnd).toSeconds();
        },
        set: function set(loopEnd) {
          var _this175 = this;

          this._loopEnd = this.toTicks(loopEnd);

          if (this._loop) {
            this._forEach(function (event) {
              event.loopEnd = loopEnd;

              _this175._testLoopBoundries(event);
            });
          }
        }
        /**
         * The loopStart point determines when it will
         * loop if Part.loop is true.
         */

      }, {
        key: "loopStart",
        get: function get() {
          return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._loopStart).toSeconds();
        },
        set: function set(loopStart) {
          var _this176 = this;

          this._loopStart = this.toTicks(loopStart);

          if (this._loop) {
            this._forEach(function (event) {
              event.loopStart = _this176.loopStart;

              _this176._testLoopBoundries(event);
            });
          }
        }
        /**
         * The playback rate of the part
         */

      }, {
        key: "playbackRate",
        get: function get() {
          return this._playbackRate;
        },
        set: function set(rate) {
          this._playbackRate = rate;

          this._setAll("playbackRate", rate);
        }
        /**
         * The number of scheduled notes in the part.
         */

      }, {
        key: "length",
        get: function get() {
          return this._events.size;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_ToneEvent__WEBPACK_IMPORTED_MODULE_5__["ToneEvent"].getDefaults(), {
            events: []
          });
        }
      }]);

      return Part;
    }(_ToneEvent__WEBPACK_IMPORTED_MODULE_5__["ToneEvent"]); //# sourceMappingURL=Part.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/event/Pattern.js":
  /*!******************************************************!*\
    !*** ./node_modules/tone/build/esm/event/Pattern.js ***!
    \******************************************************/

  /*! exports provided: Pattern */

  /***/
  function node_modulesToneBuildEsmEventPatternJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Pattern", function () {
      return Pattern;
    });
    /* harmony import */


    var _Loop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Loop */
    "./node_modules/tone/build/esm/event/Loop.js");
    /* harmony import */


    var _PatternGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./PatternGenerator */
    "./node_modules/tone/build/esm/event/PatternGenerator.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Pattern arpeggiates between the given notes
     * in a number of patterns.
     * @example
     * const pattern = new Tone.Pattern((time, note) => {
     * 	// the order of the notes passed in depends on the pattern
     * }, ["C2", "D4", "E5", "A6"], "upDown");
     * @category Event
     */


    var Pattern = /*#__PURE__*/function (_Loop__WEBPACK_IMPORT) {
      _inherits(Pattern, _Loop__WEBPACK_IMPORT);

      var _super124 = _createSuper(Pattern);

      function Pattern() {
        var _this177;

        _classCallCheck2(this, Pattern);

        _this177 = _super124.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Pattern.getDefaults(), arguments, ["callback", "values", "pattern"]));
        _this177.name = "Pattern";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Pattern.getDefaults(), arguments, ["callback", "values", "pattern"]);
        _this177.callback = options.callback;
        _this177._values = options.values;
        _this177._pattern = Object(_PatternGenerator__WEBPACK_IMPORTED_MODULE_1__["PatternGenerator"])(options.values, options.pattern);
        _this177._type = options.pattern;
        return _this177;
      }

      _createClass2(Pattern, [{
        key: "_tick",

        /**
         * Internal function called when the notes should be called
         */
        value: function _tick(time) {
          var value = this._pattern.next();

          this._value = value.value;
          this.callback(time, this._value);
        }
        /**
         * The array of events.
         */

      }, {
        key: "values",
        get: function get() {
          return this._values;
        },
        set: function set(val) {
          this._values = val; // reset the pattern

          this.pattern = this._type;
        }
        /**
         * The current value of the pattern.
         */

      }, {
        key: "value",
        get: function get() {
          return this._value;
        }
        /**
         * The pattern type. See Tone.CtrlPattern for the full list of patterns.
         */

      }, {
        key: "pattern",
        get: function get() {
          return this._type;
        },
        set: function set(pattern) {
          this._type = pattern;
          this._pattern = Object(_PatternGenerator__WEBPACK_IMPORTED_MODULE_1__["PatternGenerator"])(this._values, this._type);
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Loop__WEBPACK_IMPORTED_MODULE_0__["Loop"].getDefaults(), {
            pattern: "up",
            values: [],
            callback: _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"]
          });
        }
      }]);

      return Pattern;
    }(_Loop__WEBPACK_IMPORTED_MODULE_0__["Loop"]); //# sourceMappingURL=Pattern.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/event/PatternGenerator.js":
  /*!***************************************************************!*\
    !*** ./node_modules/tone/build/esm/event/PatternGenerator.js ***!
    \***************************************************************/

  /*! exports provided: PatternGenerator */

  /***/
  function node_modulesToneBuildEsmEventPatternGeneratorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    var _marked = /*#__PURE__*/regeneratorRuntime.mark(upPatternGen),
        _marked2 = /*#__PURE__*/regeneratorRuntime.mark(downPatternGen),
        _marked3 = /*#__PURE__*/regeneratorRuntime.mark(infiniteGen),
        _marked4 = /*#__PURE__*/regeneratorRuntime.mark(alternatingGenerator),
        _marked5 = /*#__PURE__*/regeneratorRuntime.mark(jumpUp),
        _marked6 = /*#__PURE__*/regeneratorRuntime.mark(jumpDown),
        _marked7 = /*#__PURE__*/regeneratorRuntime.mark(randomGen),
        _marked8 = /*#__PURE__*/regeneratorRuntime.mark(randomOnce),
        _marked9 = /*#__PURE__*/regeneratorRuntime.mark(randomWalk),
        _marked10 = /*#__PURE__*/regeneratorRuntime.mark(PatternGenerator);

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PatternGenerator", function () {
      return PatternGenerator;
    });
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _core_util_Math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Math */
    "./node_modules/tone/build/esm/core/util/Math.js");
    /**
     * Start at the first value and go up to the last
     */


    function upPatternGen(values) {
      var index;
      return regeneratorRuntime.wrap(function upPatternGen$(_context49) {
        while (1) {
          switch (_context49.prev = _context49.next) {
            case 0:
              index = 0;

            case 1:
              if (!(index < values.length)) {
                _context49.next = 8;
                break;
              }

              index = clampToArraySize(index, values);
              _context49.next = 5;
              return values[index];

            case 5:
              index++;
              _context49.next = 1;
              break;

            case 8:
            case "end":
              return _context49.stop();
          }
        }
      }, _marked);
    }
    /**
     * Start at the last value and go down to 0
     */


    function downPatternGen(values) {
      var index;
      return regeneratorRuntime.wrap(function downPatternGen$(_context50) {
        while (1) {
          switch (_context50.prev = _context50.next) {
            case 0:
              index = values.length - 1;

            case 1:
              if (!(index >= 0)) {
                _context50.next = 8;
                break;
              }

              index = clampToArraySize(index, values);
              _context50.next = 5;
              return values[index];

            case 5:
              index--;
              _context50.next = 1;
              break;

            case 8:
            case "end":
              return _context50.stop();
          }
        }
      }, _marked2);
    }
    /**
     * Infinitely yield the generator
     */


    function infiniteGen(values, gen) {
      return regeneratorRuntime.wrap(function infiniteGen$(_context51) {
        while (1) {
          switch (_context51.prev = _context51.next) {
            case 0:
              if (!true) {
                _context51.next = 4;
                break;
              }

              return _context51.delegateYield(gen(values), "t0", 2);

            case 2:
              _context51.next = 0;
              break;

            case 4:
            case "end":
              return _context51.stop();
          }
        }
      }, _marked3);
    }
    /**
     * Make sure that the index is in the given range
     */


    function clampToArraySize(index, values) {
      return Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_1__["clamp"])(index, 0, values.length - 1);
    }
    /**
     * Alternate between two generators
     */


    function alternatingGenerator(values, directionUp) {
      var index;
      return regeneratorRuntime.wrap(function alternatingGenerator$(_context52) {
        while (1) {
          switch (_context52.prev = _context52.next) {
            case 0:
              index = directionUp ? 0 : values.length - 1;

            case 1:
              if (!true) {
                _context52.next = 8;
                break;
              }

              index = clampToArraySize(index, values);
              _context52.next = 5;
              return values[index];

            case 5:
              if (directionUp) {
                index++;

                if (index >= values.length - 1) {
                  directionUp = false;
                }
              } else {
                index--;

                if (index <= 0) {
                  directionUp = true;
                }
              }

              _context52.next = 1;
              break;

            case 8:
            case "end":
              return _context52.stop();
          }
        }
      }, _marked4);
    }
    /**
     * Starting from the bottom move up 2, down 1
     */


    function jumpUp(values) {
      var index, stepIndex;
      return regeneratorRuntime.wrap(function jumpUp$(_context53) {
        while (1) {
          switch (_context53.prev = _context53.next) {
            case 0:
              index = 0;
              stepIndex = 0;

            case 2:
              if (!(index < values.length)) {
                _context53.next = 10;
                break;
              }

              index = clampToArraySize(index, values);
              _context53.next = 6;
              return values[index];

            case 6:
              stepIndex++;
              index += stepIndex % 2 ? 2 : -1;
              _context53.next = 2;
              break;

            case 10:
            case "end":
              return _context53.stop();
          }
        }
      }, _marked5);
    }
    /**
     * Starting from the top move down 2, up 1
     */


    function jumpDown(values) {
      var index, stepIndex;
      return regeneratorRuntime.wrap(function jumpDown$(_context54) {
        while (1) {
          switch (_context54.prev = _context54.next) {
            case 0:
              index = values.length - 1;
              stepIndex = 0;

            case 2:
              if (!(index >= 0)) {
                _context54.next = 10;
                break;
              }

              index = clampToArraySize(index, values);
              _context54.next = 6;
              return values[index];

            case 6:
              stepIndex++;
              index += stepIndex % 2 ? -2 : 1;
              _context54.next = 2;
              break;

            case 10:
            case "end":
              return _context54.stop();
          }
        }
      }, _marked6);
    }
    /**
     * Choose a random index each time
     */


    function randomGen(values) {
      var randomIndex;
      return regeneratorRuntime.wrap(function randomGen$(_context55) {
        while (1) {
          switch (_context55.prev = _context55.next) {
            case 0:
              if (!true) {
                _context55.next = 6;
                break;
              }

              randomIndex = Math.floor(Math.random() * values.length);
              _context55.next = 4;
              return values[randomIndex];

            case 4:
              _context55.next = 0;
              break;

            case 6:
            case "end":
              return _context55.stop();
          }
        }
      }, _marked7);
    }
    /**
     * Randomly go through all of the values once before choosing a new random order
     */


    function randomOnce(values) {
      var copy, i, randVal, index;
      return regeneratorRuntime.wrap(function randomOnce$(_context56) {
        while (1) {
          switch (_context56.prev = _context56.next) {
            case 0:
              // create an array of indices
              copy = [];

              for (i = 0; i < values.length; i++) {
                copy.push(i);
              }

            case 2:
              if (!(copy.length > 0)) {
                _context56.next = 9;
                break;
              }

              // random choose an index, and then remove it so it's not chosen again
              randVal = copy.splice(Math.floor(copy.length * Math.random()), 1);
              index = clampToArraySize(randVal[0], values);
              _context56.next = 7;
              return values[index];

            case 7:
              _context56.next = 2;
              break;

            case 9:
            case "end":
              return _context56.stop();
          }
        }
      }, _marked8);
    }
    /**
     * Randomly choose to walk up or down 1 index in the values array
     */


    function randomWalk(values) {
      var index;
      return regeneratorRuntime.wrap(function randomWalk$(_context57) {
        while (1) {
          switch (_context57.prev = _context57.next) {
            case 0:
              // randomly choose a starting index in the values array
              index = Math.floor(Math.random() * values.length);

            case 1:
              if (!true) {
                _context57.next = 7;
                break;
              }

              if (index === 0) {
                index++; // at bottom of array, so force upward step
              } else if (index === values.length - 1) {
                index--; // at top of array, so force downward step
              } else if (Math.random() < 0.5) {
                // else choose random downward or upward step
                index--;
              } else {
                index++;
              }

              _context57.next = 5;
              return values[index];

            case 5:
              _context57.next = 1;
              break;

            case 7:
            case "end":
              return _context57.stop();
          }
        }
      }, _marked9);
    }
    /**
     * PatternGenerator returns a generator which will iterate over the given array
     * of values and yield the items according to the passed in pattern
     * @param values An array of values to iterate over
     * @param pattern The name of the pattern use when iterating over
     * @param index Where to start in the offset of the values array
     */


    function PatternGenerator(values) {
      var pattern,
          index,
          _args58 = arguments;
      return regeneratorRuntime.wrap(function PatternGenerator$(_context58) {
        while (1) {
          switch (_context58.prev = _context58.next) {
            case 0:
              pattern = _args58.length > 1 && _args58[1] !== undefined ? _args58[1] : "up";
              index = _args58.length > 2 && _args58[2] !== undefined ? _args58[2] : 0;
              // safeguards
              Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_0__["assert"])(values.length > 0, "The array must have more than one value in it");
              _context58.t0 = pattern;
              _context58.next = _context58.t0 === "up" ? 6 : _context58.t0 === "down" ? 7 : _context58.t0 === "upDown" ? 8 : _context58.t0 === "downUp" ? 9 : _context58.t0 === "alternateUp" ? 10 : _context58.t0 === "alternateDown" ? 11 : _context58.t0 === "random" ? 12 : _context58.t0 === "randomOnce" ? 13 : _context58.t0 === "randomWalk" ? 14 : 15;
              break;

            case 6:
              return _context58.delegateYield(infiniteGen(values, upPatternGen), "t1", 7);

            case 7:
              return _context58.delegateYield(infiniteGen(values, downPatternGen), "t2", 8);

            case 8:
              return _context58.delegateYield(alternatingGenerator(values, true), "t3", 9);

            case 9:
              return _context58.delegateYield(alternatingGenerator(values, false), "t4", 10);

            case 10:
              return _context58.delegateYield(infiniteGen(values, jumpUp), "t5", 11);

            case 11:
              return _context58.delegateYield(infiniteGen(values, jumpDown), "t6", 12);

            case 12:
              return _context58.delegateYield(randomGen(values), "t7", 13);

            case 13:
              return _context58.delegateYield(infiniteGen(values, randomOnce), "t8", 14);

            case 14:
              return _context58.delegateYield(randomWalk(values), "t9", 15);

            case 15:
            case "end":
              return _context58.stop();
          }
        }
      }, _marked10);
    } //# sourceMappingURL=PatternGenerator.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/event/Sequence.js":
  /*!*******************************************************!*\
    !*** ./node_modules/tone/build/esm/event/Sequence.js ***!
    \*******************************************************/

  /*! exports provided: Sequence */

  /***/
  function node_modulesToneBuildEsmEventSequenceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Sequence", function () {
      return Sequence;
    });
    /* harmony import */


    var _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/type/Ticks */
    "./node_modules/tone/build/esm/core/type/Ticks.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _Part__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./Part */
    "./node_modules/tone/build/esm/event/Part.js");
    /* harmony import */


    var _ToneEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./ToneEvent */
    "./node_modules/tone/build/esm/event/ToneEvent.js");
    /**
     * A sequence is an alternate notation of a part. Instead
     * of passing in an array of [time, event] pairs, pass
     * in an array of events which will be spaced at the
     * given subdivision. Sub-arrays will subdivide that beat
     * by the number of items are in the array.
     * Sequence notation inspiration from [Tidal](http://yaxu.org/tidal/)
     * @example
     * const synth = new Tone.Synth().toDestination();
     * const seq = new Tone.Sequence((time, note) => {
     * 	synth.triggerAttackRelease(note, 0.1, time);
     * 	// subdivisions are given as subarrays
     * }, ["C4", ["E4", "D4", "E4"], "G4", ["A4", "G4"]]).start(0);
     * Tone.Transport.start();
     * @category Event
     */


    var Sequence = /*#__PURE__*/function (_ToneEvent__WEBPACK_I2) {
      _inherits(Sequence, _ToneEvent__WEBPACK_I2);

      var _super125 = _createSuper(Sequence);

      function Sequence() {
        var _this178;

        _classCallCheck2(this, Sequence);

        _this178 = _super125.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Sequence.getDefaults(), arguments, ["callback", "events", "subdivision"]));
        _this178.name = "Sequence";
        /**
         * The object responsible for scheduling all of the events
         */

        _this178._part = new _Part__WEBPACK_IMPORTED_MODULE_3__["Part"]({
          callback: _this178._seqCallback.bind(_assertThisInitialized(_this178)),
          context: _this178.context
        });
        /**
         * private reference to all of the sequence proxies
         */

        _this178._events = [];
        /**
         * The proxied array
         */

        _this178._eventsArray = [];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Sequence.getDefaults(), arguments, ["callback", "events", "subdivision"]);
        _this178._subdivision = _this178.toTicks(options.subdivision);
        _this178.events = options.events; // set all of the values

        _this178.loop = options.loop;
        _this178.loopStart = options.loopStart;
        _this178.loopEnd = options.loopEnd;
        _this178.playbackRate = options.playbackRate;
        _this178.probability = options.probability;
        _this178.humanize = options.humanize;
        _this178.mute = options.mute;
        _this178.playbackRate = options.playbackRate;
        return _this178;
      }

      _createClass2(Sequence, [{
        key: "_seqCallback",

        /**
         * The internal callback for when an event is invoked
         */
        value: function _seqCallback(time, value) {
          if (value !== null) {
            this.callback(time, value);
          }
        }
        /**
         * The sequence
         */

      }, {
        key: "start",

        /**
         * Start the part at the given time.
         * @param  time    When to start the part.
         * @param  offset  The offset index to start at
         */
        value: function start(time, offset) {
          this._part.start(time, offset ? this._indexTime(offset) : offset);

          return this;
        }
        /**
         * Stop the part at the given time.
         * @param  time  When to stop the part.
         */

      }, {
        key: "stop",
        value: function stop(time) {
          this._part.stop(time);

          return this;
        }
        /**
         * The subdivision of the sequence. This can only be
         * set in the constructor. The subdivision is the
         * interval between successive steps.
         */

      }, {
        key: "_createSequence",

        /**
         * Create a sequence proxy which can be monitored to create subsequences
         */
        value: function _createSequence(array) {
          var _this179 = this;

          return new Proxy(array, {
            get: function get(target, property) {
              // property is index in this case
              return target[property];
            },
            set: function set(target, property, value) {
              if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isString"])(property) && isFinite(parseInt(property, 10))) {
                if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
                  target[property] = _this179._createSequence(value);
                } else {
                  target[property] = value;
                }
              } else {
                target[property] = value;
              }

              _this179._eventsUpdated(); // return true to accept the changes


              return true;
            }
          });
        }
        /**
         * When the sequence has changed, all of the events need to be recreated
         */

      }, {
        key: "_eventsUpdated",
        value: function _eventsUpdated() {
          this._part.clear();

          this._rescheduleSequence(this._eventsArray, this._subdivision, this.startOffset); // update the loopEnd


          this.loopEnd = this.loopEnd;
        }
        /**
         * reschedule all of the events that need to be rescheduled
         */

      }, {
        key: "_rescheduleSequence",
        value: function _rescheduleSequence(sequence, subdivision, startOffset) {
          var _this180 = this;

          sequence.forEach(function (value, index) {
            var eventOffset = index * subdivision + startOffset;

            if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isArray"])(value)) {
              _this180._rescheduleSequence(value, subdivision / value.length, eventOffset);
            } else {
              var startTime = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](_this180.context, eventOffset, "i").toSeconds();

              _this180._part.add(startTime, value);
            }
          });
        }
        /**
         * Get the time of the index given the Sequence's subdivision
         * @param  index
         * @return The time of that index
         */

      }, {
        key: "_indexTime",
        value: function _indexTime(index) {
          return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, index * this._subdivision + this.startOffset).toSeconds();
        }
        /**
         * Clear all of the events
         */

      }, {
        key: "clear",
        value: function clear() {
          this._part.clear();

          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Sequence.prototype), "dispose", this).call(this);

          this._part.dispose();

          return this;
        } //-------------------------------------
        // PROXY CALLS
        //-------------------------------------

      }, {
        key: "events",
        get: function get() {
          return this._events;
        },
        set: function set(s) {
          this.clear();
          this._eventsArray = s;
          this._events = this._createSequence(this._eventsArray);

          this._eventsUpdated();
        }
      }, {
        key: "subdivision",
        get: function get() {
          return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_0__["TicksClass"](this.context, this._subdivision).toSeconds();
        }
      }, {
        key: "loop",
        get: function get() {
          return this._part.loop;
        },
        set: function set(l) {
          this._part.loop = l;
        }
        /**
         * The index at which the sequence should start looping
         */

      }, {
        key: "loopStart",
        get: function get() {
          return this._loopStart;
        },
        set: function set(index) {
          this._loopStart = index;
          this._part.loopStart = this._indexTime(index);
        }
        /**
         * The index at which the sequence should end looping
         */

      }, {
        key: "loopEnd",
        get: function get() {
          return this._loopEnd;
        },
        set: function set(index) {
          this._loopEnd = index;

          if (index === 0) {
            this._part.loopEnd = this._indexTime(this._eventsArray.length);
          } else {
            this._part.loopEnd = this._indexTime(index);
          }
        }
      }, {
        key: "startOffset",
        get: function get() {
          return this._part.startOffset;
        },
        set: function set(start) {
          this._part.startOffset = start;
        }
      }, {
        key: "playbackRate",
        get: function get() {
          return this._part.playbackRate;
        },
        set: function set(rate) {
          this._part.playbackRate = rate;
        }
      }, {
        key: "probability",
        get: function get() {
          return this._part.probability;
        },
        set: function set(prob) {
          this._part.probability = prob;
        }
      }, {
        key: "progress",
        get: function get() {
          return this._part.progress;
        }
      }, {
        key: "humanize",
        get: function get() {
          return this._part.humanize;
        },
        set: function set(variation) {
          this._part.humanize = variation;
        }
        /**
         * The number of scheduled events
         */

      }, {
        key: "length",
        get: function get() {
          return this._part.length;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["omitFromObject"])(_ToneEvent__WEBPACK_IMPORTED_MODULE_4__["ToneEvent"].getDefaults(), ["value"]), {
            events: [],
            loop: true,
            loopEnd: 0,
            loopStart: 0,
            subdivision: "8n"
          });
        }
      }]);

      return Sequence;
    }(_ToneEvent__WEBPACK_IMPORTED_MODULE_4__["ToneEvent"]); //# sourceMappingURL=Sequence.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/event/ToneEvent.js":
  /*!********************************************************!*\
    !*** ./node_modules/tone/build/esm/event/ToneEvent.js ***!
    \********************************************************/

  /*! exports provided: ToneEvent */

  /***/
  function node_modulesToneBuildEsmEventToneEventJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ToneEvent", function () {
      return ToneEvent;
    });
    /* harmony import */


    var _core_clock_Transport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/clock/Transport */
    "./node_modules/tone/build/esm/core/clock/Transport.js");
    /* harmony import */


    var _core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/ToneWithContext */
    "./node_modules/tone/build/esm/core/context/ToneWithContext.js");
    /* harmony import */


    var _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/type/Ticks */
    "./node_modules/tone/build/esm/core/type/Ticks.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/util/StateTimeline */
    "./node_modules/tone/build/esm/core/util/StateTimeline.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /**
     * ToneEvent abstracts away this.context.transport.schedule and provides a schedulable
     * callback for a single or repeatable events along the timeline.
     *
     * @example
     * const synth = new Tone.PolySynth().toDestination();
     * const chordEvent = new Tone.ToneEvent(((time, chord) => {
     * 	// the chord as well as the exact time of the event
     * 	// are passed in as arguments to the callback function
     * 	synth.triggerAttackRelease(chord, 0.5, time);
     * }), ["D4", "E4", "F4"]);
     * // start the chord at the beginning of the transport timeline
     * chordEvent.start();
     * // loop it every measure for 8 measures
     * chordEvent.loop = 8;
     * chordEvent.loopEnd = "1m";
     * @category Event
     */


    var ToneEvent = /*#__PURE__*/function (_core_context_ToneWit2) {
      _inherits(ToneEvent, _core_context_ToneWit2);

      var _super126 = _createSuper(ToneEvent);

      function ToneEvent() {
        var _this181;

        _classCallCheck2(this, ToneEvent);

        _this181 = _super126.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(ToneEvent.getDefaults(), arguments, ["callback", "value"]));
        _this181.name = "ToneEvent";
        /**
         * Tracks the scheduled events
         */

        _this181._state = new _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_5__["StateTimeline"]("stopped");
        /**
         * A delay time from when the event is scheduled to start
         */

        _this181._startOffset = 0;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(ToneEvent.getDefaults(), arguments, ["callback", "value"]);
        _this181._loop = options.loop;
        _this181.callback = options.callback;
        _this181.value = options.value;
        _this181._loopStart = _this181.toTicks(options.loopStart);
        _this181._loopEnd = _this181.toTicks(options.loopEnd);
        _this181._playbackRate = options.playbackRate;
        _this181._probability = options.probability;
        _this181._humanize = options.humanize;
        _this181.mute = options.mute;
        _this181._playbackRate = options.playbackRate;
        _this181._state.increasing = true; // schedule the events for the first time

        _this181._rescheduleEvents();

        return _this181;
      }

      _createClass2(ToneEvent, [{
        key: "_rescheduleEvents",

        /**
         * Reschedule all of the events along the timeline
         * with the updated values.
         * @param after Only reschedules events after the given time.
         */
        value: function _rescheduleEvents() {
          var _this182 = this;

          var after = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : -1;

          // if no argument is given, schedules all of the events
          this._state.forEachFrom(after, function (event) {
            var duration;

            if (event.state === "started") {
              if (event.id !== -1) {
                _this182.context.transport.clear(event.id);
              }

              var startTick = event.time + Math.round(_this182.startOffset / _this182._playbackRate);

              if (_this182._loop === true || Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(_this182._loop) && _this182._loop > 1) {
                duration = Infinity;

                if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(_this182._loop)) {
                  duration = _this182._loop * _this182._getLoopDuration();
                }

                var nextEvent = _this182._state.getAfter(startTick);

                if (nextEvent !== null) {
                  duration = Math.min(duration, nextEvent.time - startTick);
                }

                if (duration !== Infinity) {
                  // schedule a stop since it's finite duration
                  _this182._state.setStateAtTime("stopped", startTick + duration + 1, {
                    id: -1
                  });

                  duration = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](_this182.context, duration);
                }

                var interval = new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](_this182.context, _this182._getLoopDuration());
                event.id = _this182.context.transport.scheduleRepeat(_this182._tick.bind(_this182), interval, new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](_this182.context, startTick), duration);
              } else {
                event.id = _this182.context.transport.schedule(_this182._tick.bind(_this182), new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](_this182.context, startTick));
              }
            }
          });
        }
        /**
         * Returns the playback state of the note, either "started" or "stopped".
         */

      }, {
        key: "start",

        /**
         * Start the note at the given time.
         * @param  time  When the event should start.
         */
        value: function start(time) {
          var ticks = this.toTicks(time);

          if (this._state.getValueAtTime(ticks) === "stopped") {
            this._state.add({
              id: -1,
              state: "started",
              time: ticks
            });

            this._rescheduleEvents(ticks);
          }

          return this;
        }
        /**
         * Stop the Event at the given time.
         * @param  time  When the event should stop.
         */

      }, {
        key: "stop",
        value: function stop(time) {
          this.cancel(time);
          var ticks = this.toTicks(time);

          if (this._state.getValueAtTime(ticks) === "started") {
            this._state.setStateAtTime("stopped", ticks, {
              id: -1
            });

            var previousEvent = this._state.getBefore(ticks);

            var reschedulTime = ticks;

            if (previousEvent !== null) {
              reschedulTime = previousEvent.time;
            }

            this._rescheduleEvents(reschedulTime);
          }

          return this;
        }
        /**
         * Cancel all scheduled events greater than or equal to the given time
         * @param  time  The time after which events will be cancel.
         */

      }, {
        key: "cancel",
        value: function cancel(time) {
          var _this183 = this;

          time = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["defaultArg"])(time, -Infinity);
          var ticks = this.toTicks(time);

          this._state.forEachFrom(ticks, function (event) {
            _this183.context.transport.clear(event.id);
          });

          this._state.cancel(ticks);

          return this;
        }
        /**
         * The callback function invoker. Also
         * checks if the Event is done playing
         * @param  time  The time of the event in seconds
         */

      }, {
        key: "_tick",
        value: function _tick(time) {
          var ticks = this.context.transport.getTicksAtTime(time);

          if (!this.mute && this._state.getValueAtTime(ticks) === "started") {
            if (this.probability < 1 && Math.random() > this.probability) {
              return;
            }

            if (this.humanize) {
              var variation = 0.02;

              if (!Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isBoolean"])(this.humanize)) {
                variation = this.toSeconds(this.humanize);
              }

              time += (Math.random() * 2 - 1) * variation;
            }

            this.callback(time, this.value);
          }
        }
        /**
         * Get the duration of the loop.
         */

      }, {
        key: "_getLoopDuration",
        value: function _getLoopDuration() {
          return Math.round((this._loopEnd - this._loopStart) / this._playbackRate);
        }
        /**
         * If the note should loop or not
         * between ToneEvent.loopStart and
         * ToneEvent.loopEnd. If set to true,
         * the event will loop indefinitely,
         * if set to a number greater than 1
         * it will play a specific number of
         * times, if set to false, 0 or 1, the
         * part will only play once.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(ToneEvent.prototype), "dispose", this).call(this);

          this.cancel();

          this._state.dispose();

          return this;
        }
      }, {
        key: "state",
        get: function get() {
          return this._state.getValueAtTime(this.context.transport.ticks);
        }
        /**
         * The start from the scheduled start time.
         */

      }, {
        key: "startOffset",
        get: function get() {
          return this._startOffset;
        },
        set: function set(offset) {
          this._startOffset = offset;
        }
        /**
         * The probability of the notes being triggered.
         */

      }, {
        key: "probability",
        get: function get() {
          return this._probability;
        },
        set: function set(prob) {
          this._probability = prob;
        }
        /**
         * If set to true, will apply small random variation
         * to the callback time. If the value is given as a time, it will randomize
         * by that amount.
         * @example
         * const event = new Tone.ToneEvent();
         * event.humanize = true;
         */

      }, {
        key: "humanize",
        get: function get() {
          return this._humanize;
        },
        set: function set(variation) {
          this._humanize = variation;
        }
      }, {
        key: "loop",
        get: function get() {
          return this._loop;
        },
        set: function set(loop) {
          this._loop = loop;

          this._rescheduleEvents();
        }
        /**
         * The playback rate of the note. Defaults to 1.
         * @example
         * const note = new Tone.ToneEvent();
         * note.loop = true;
         * // repeat the note twice as fast
         * note.playbackRate = 2;
         */

      }, {
        key: "playbackRate",
        get: function get() {
          return this._playbackRate;
        },
        set: function set(rate) {
          this._playbackRate = rate;

          this._rescheduleEvents();
        }
        /**
         * The loopEnd point is the time the event will loop
         * if ToneEvent.loop is true.
         */

      }, {
        key: "loopEnd",
        get: function get() {
          return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](this.context, this._loopEnd).toSeconds();
        },
        set: function set(loopEnd) {
          this._loopEnd = this.toTicks(loopEnd);

          if (this._loop) {
            this._rescheduleEvents();
          }
        }
        /**
         * The time when the loop should start.
         */

      }, {
        key: "loopStart",
        get: function get() {
          return new _core_type_Ticks__WEBPACK_IMPORTED_MODULE_2__["TicksClass"](this.context, this._loopStart).toSeconds();
        },
        set: function set(loopStart) {
          this._loopStart = this.toTicks(loopStart);

          if (this._loop) {
            this._rescheduleEvents();
          }
        }
        /**
         * The current progress of the loop interval.
         * Returns 0 if the event is not started yet or
         * it is not set to loop.
         */

      }, {
        key: "progress",
        get: function get() {
          if (this._loop) {
            var ticks = this.context.transport.ticks;

            var lastEvent = this._state.get(ticks);

            if (lastEvent !== null && lastEvent.state === "started") {
              var loopDuration = this._getLoopDuration();

              var progress = (ticks - lastEvent.time) % loopDuration;
              return progress / loopDuration;
            } else {
              return 0;
            }
          } else {
            return 0;
          }
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__["ToneWithContext"].getDefaults(), {
            callback: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["noOp"],
            humanize: false,
            loop: false,
            loopEnd: "1m",
            loopStart: 0,
            mute: false,
            playbackRate: 1,
            probability: 1,
            value: null
          });
        }
      }]);

      return ToneEvent;
    }(_core_context_ToneWithContext__WEBPACK_IMPORTED_MODULE_1__["ToneWithContext"]); //# sourceMappingURL=ToneEvent.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/event/index.js":
  /*!****************************************************!*\
    !*** ./node_modules/tone/build/esm/event/index.js ***!
    \****************************************************/

  /*! exports provided: Loop, Part, Pattern, Sequence, ToneEvent */

  /***/
  function node_modulesToneBuildEsmEventIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _Loop__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Loop */
    "./node_modules/tone/build/esm/event/Loop.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Loop", function () {
      return _Loop__WEBPACK_IMPORTED_MODULE_0__["Loop"];
    });
    /* harmony import */


    var _Part__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Part */
    "./node_modules/tone/build/esm/event/Part.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Part", function () {
      return _Part__WEBPACK_IMPORTED_MODULE_1__["Part"];
    });
    /* harmony import */


    var _Pattern__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Pattern */
    "./node_modules/tone/build/esm/event/Pattern.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Pattern", function () {
      return _Pattern__WEBPACK_IMPORTED_MODULE_2__["Pattern"];
    });
    /* harmony import */


    var _Sequence__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./Sequence */
    "./node_modules/tone/build/esm/event/Sequence.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Sequence", function () {
      return _Sequence__WEBPACK_IMPORTED_MODULE_3__["Sequence"];
    });
    /* harmony import */


    var _ToneEvent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./ToneEvent */
    "./node_modules/tone/build/esm/event/ToneEvent.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneEvent", function () {
      return _ToneEvent__WEBPACK_IMPORTED_MODULE_4__["ToneEvent"];
    }); //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/index.js":
  /*!**********************************************!*\
    !*** ./node_modules/tone/build/esm/index.js ***!
    \**********************************************/

  /*! exports provided: getContext, setContext, Clock, Context, BaseContext, Delay, Gain, Offline, OfflineContext, Param, ToneAudioBuffer, ToneAudioBuffers, ToneAudioNode, connectSeries, connect, disconnect, FrequencyClass, Frequency, MidiClass, Midi, TimeClass, Time, TicksClass, Ticks, TransportTimeClass, TransportTime, Emitter, IntervalTimeline, StateTimeline, Timeline, isUndef, isDefined, isFunction, isNumber, isObject, isBoolean, isArray, isString, isNote, dbToGain, gainToDb, intervalToFrequencyRatio, ftom, mtof, optionsFromArguments, defaultArg, Unit, debug, Noise, UserMedia, Oscillator, AMOscillator, FMOscillator, PulseOscillator, FatOscillator, PWMOscillator, OmniOscillator, ToneOscillatorNode, LFO, ToneBufferSource, Player, Players, GrainPlayer, Add, Abs, AudioToGain, GainToAudio, GreaterThan, GreaterThanZero, Multiply, Negate, Pow, Signal, connectSignal, Scale, ScaleExp, Subtract, SyncedSignal, WaveShaper, Zero, AMSynth, DuoSynth, FMSynth, MetalSynth, MembraneSynth, MonoSynth, NoiseSynth, PluckSynth, PolySynth, Sampler, Synth, Loop, Part, Pattern, Sequence, ToneEvent, AutoFilter, AutoPanner, AutoWah, BitCrusher, Chebyshev, Chorus, Distortion, FeedbackDelay, FrequencyShifter, Freeverb, JCReverb, PingPongDelay, PitchShift, Phaser, Reverb, StereoWidener, Tremolo, Vibrato, Analyser, Meter, FFT, DCMeter, Waveform, Follower, Channel, CrossFade, Merge, MidSideMerge, MidSideSplit, MultibandSplit, Panner, Panner3D, PanVol, Recorder, Solo, Split, Volume, Compressor, Gate, Limiter, MidSideCompressor, MultibandCompressor, AmplitudeEnvelope, Envelope, FrequencyEnvelope, EQ3, Filter, OnePoleFilter, FeedbackCombFilter, LowpassCombFilter, Convolver, version, start, supported, now, immediate, Transport, Destination, Listener, Draw, context, loaded, Buffer, Buffers, BufferSource */

  /***/
  function node_modulesToneBuildEsmIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "now", function () {
      return now;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "immediate", function () {
      return immediate;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Transport", function () {
      return Transport;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Destination", function () {
      return Destination;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Listener", function () {
      return Listener;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Draw", function () {
      return Draw;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "context", function () {
      return context;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "loaded", function () {
      return loaded;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Buffer", function () {
      return Buffer;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Buffers", function () {
      return Buffers;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "BufferSource", function () {
      return BufferSource;
    });
    /* harmony import */


    var _core_Global__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./core/Global */
    "./node_modules/tone/build/esm/core/Global.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "getContext", function () {
      return _core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "setContext", function () {
      return _core_Global__WEBPACK_IMPORTED_MODULE_0__["setContext"];
    });
    /* harmony import */


    var _classes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./classes */
    "./node_modules/tone/build/esm/classes.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Clock", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Clock"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Context", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Context"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BaseContext", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["BaseContext"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Delay", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Delay"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Gain", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Gain"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Offline", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Offline"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "OfflineContext", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["OfflineContext"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Param", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Param"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioBuffer", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneAudioBuffer"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioBuffers", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneAudioBuffers"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneAudioNode", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "connectSeries", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["connectSeries"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "connect", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["connect"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "disconnect", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["disconnect"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FrequencyClass", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["FrequencyClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Frequency", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Frequency"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidiClass", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["MidiClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Midi", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Midi"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TimeClass", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["TimeClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Time", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Time"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TicksClass", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["TicksClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Ticks", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Ticks"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TransportTimeClass", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["TransportTimeClass"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "TransportTime", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["TransportTime"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Emitter", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Emitter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "IntervalTimeline", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["IntervalTimeline"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StateTimeline", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["StateTimeline"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Timeline", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Timeline"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isUndef", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["isUndef"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isDefined", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["isDefined"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isFunction", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["isFunction"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isNumber", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["isNumber"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isObject", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["isObject"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isBoolean", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["isBoolean"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isArray", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["isArray"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isString", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["isString"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "isNote", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["isNote"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "dbToGain", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["dbToGain"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "gainToDb", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["gainToDb"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "intervalToFrequencyRatio", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["intervalToFrequencyRatio"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ftom", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["ftom"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "mtof", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["mtof"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "optionsFromArguments", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "defaultArg", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["defaultArg"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Unit", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Unit"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "debug", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["debug"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Noise", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Noise"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "UserMedia", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["UserMedia"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Oscillator", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Oscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AMOscillator", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["AMOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FMOscillator", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["FMOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PulseOscillator", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["PulseOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FatOscillator", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["FatOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PWMOscillator", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["PWMOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "OmniOscillator", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["OmniOscillator"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneOscillatorNode", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneOscillatorNode"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "LFO", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["LFO"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneBufferSource", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneBufferSource"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Player", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Player"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Players", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Players"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GrainPlayer", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["GrainPlayer"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Add", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Add"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Abs", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Abs"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AudioToGain", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["AudioToGain"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GainToAudio", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["GainToAudio"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GreaterThan", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["GreaterThan"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GreaterThanZero", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["GreaterThanZero"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Multiply", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Multiply"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Negate", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Negate"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Pow", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Pow"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Signal", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Signal"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "connectSignal", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["connectSignal"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Scale", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Scale"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ScaleExp", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["ScaleExp"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Subtract", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Subtract"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "SyncedSignal", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["SyncedSignal"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "WaveShaper", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["WaveShaper"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Zero", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Zero"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AMSynth", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["AMSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DuoSynth", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["DuoSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FMSynth", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["FMSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MetalSynth", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["MetalSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MembraneSynth", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["MembraneSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MonoSynth", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["MonoSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "NoiseSynth", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["NoiseSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PluckSynth", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["PluckSynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PolySynth", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["PolySynth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Sampler", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Sampler"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Synth", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Synth"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Loop", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Loop"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Part", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Part"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Pattern", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Pattern"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Sequence", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Sequence"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneEvent", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["ToneEvent"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AutoFilter", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["AutoFilter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AutoPanner", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["AutoPanner"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AutoWah", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["AutoWah"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "BitCrusher", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["BitCrusher"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Chebyshev", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Chebyshev"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Chorus", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Chorus"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Distortion", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Distortion"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FeedbackDelay", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["FeedbackDelay"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FrequencyShifter", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["FrequencyShifter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Freeverb", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Freeverb"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "JCReverb", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["JCReverb"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PingPongDelay", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["PingPongDelay"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PitchShift", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["PitchShift"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Phaser", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Phaser"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Reverb", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Reverb"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "StereoWidener", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["StereoWidener"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Tremolo", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Tremolo"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Vibrato", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Vibrato"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Analyser", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Analyser"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Meter", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Meter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FFT", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["FFT"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DCMeter", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["DCMeter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Waveform", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Waveform"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Follower", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Follower"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Channel", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Channel"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "CrossFade", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["CrossFade"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Merge", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Merge"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidSideMerge", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["MidSideMerge"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidSideSplit", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["MidSideSplit"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MultibandSplit", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["MultibandSplit"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Panner", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Panner"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Panner3D", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Panner3D"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PanVol", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["PanVol"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Recorder", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Recorder"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Solo", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Solo"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Split", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Split"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Volume", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Volume"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Compressor", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Compressor"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Gate", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Gate"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Limiter", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Limiter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MidSideCompressor", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["MidSideCompressor"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MultibandCompressor", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["MultibandCompressor"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AmplitudeEnvelope", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["AmplitudeEnvelope"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Envelope", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Envelope"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FrequencyEnvelope", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["FrequencyEnvelope"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "EQ3", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["EQ3"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Filter", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Filter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "OnePoleFilter", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["OnePoleFilter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FeedbackCombFilter", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["FeedbackCombFilter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "LowpassCombFilter", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["LowpassCombFilter"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Convolver", function () {
      return _classes__WEBPACK_IMPORTED_MODULE_1__["Convolver"];
    });
    /* harmony import */


    var _version__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./version */
    "./node_modules/tone/build/esm/version.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "version", function () {
      return _version__WEBPACK_IMPORTED_MODULE_2__["version"];
    });
    /* harmony import */


    var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./core/context/ToneAudioBuffer */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "start", function () {
      return _core_Global__WEBPACK_IMPORTED_MODULE_0__["start"];
    });
    /* harmony import */


    var _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./core/context/AudioContext */
    "./node_modules/tone/build/esm/core/context/AudioContext.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "supported", function () {
      return _core_context_AudioContext__WEBPACK_IMPORTED_MODULE_4__["supported"];
    });
    /* harmony import */


    var _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./core/context/ToneAudioBuffers */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
    /* harmony import */


    var _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./source/buffer/ToneBufferSource */
    "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
    /**
     * The current audio context time of the global [[Context]].
     * See [[Context.now]]
     * @category Core
     */


    var now = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().now.bind(Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])());
    /**
     * The current audio context time of the global [[Context]] without the [[Context.lookAhead]]
     * See [[Context.immediate]]
     * @category Core
     */

    var immediate = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().immediate.bind(Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])());
    /**
     * The Transport object belonging to the global Tone.js Context.
     * See [[Transport]]
     * @category Core
     */

    var Transport = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().transport;
    /**
     * The Destination (output) belonging to the global Tone.js Context.
     * See [[Destination]]
     * @category Core
     */

    var Destination = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().destination;
    /**
     * The [[Listener]] belonging to the global Tone.js Context.
     * @category Core
     */

    var Listener = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().listener;
    /**
     * Draw is used to synchronize the draw frame with the Transport's callbacks.
     * See [[Draw]]
     * @category Core
     */

    var Draw = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])().draw;
    /**
     * A reference to the global context
     * See [[Context]]
     * @category Core
     */

    var context = Object(_core_Global__WEBPACK_IMPORTED_MODULE_0__["getContext"])();
    /**
     * Promise which resolves when all of the loading promises are resolved.
     * Alias for static [[ToneAudioBuffer.loaded]] method.
     * @category Core
     */

    var loaded = _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__["ToneAudioBuffer"].loaded.bind(_core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__["ToneAudioBuffer"]); // this fills in name changes from 13.x to 14.x


    var Buffer = _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_3__["ToneAudioBuffer"];
    var Buffers = _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_5__["ToneAudioBuffers"];
    var BufferSource = _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_6__["ToneBufferSource"]; //# sourceMappingURL=index.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/instrument/AMSynth.js":
  /*!***********************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/AMSynth.js ***!
    \***********************************************************/

  /*! exports provided: AMSynth */

  /***/
  function node_modulesToneBuildEsmInstrumentAMSynthJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AMSynth", function () {
      return AMSynth;
    });
    /* harmony import */


    var _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../signal/AudioToGain */
    "./node_modules/tone/build/esm/signal/AudioToGain.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _ModulationSynth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./ModulationSynth */
    "./node_modules/tone/build/esm/instrument/ModulationSynth.js");
    /**
     * AMSynth uses the output of one Tone.Synth to modulate the
     * amplitude of another Tone.Synth. The harmonicity (the ratio between
     * the two signals) affects the timbre of the output signal greatly.
     * Read more about Amplitude Modulation Synthesis on
     * [SoundOnSound](https://web.archive.org/web/20160404103653/http://www.soundonsound.com:80/sos/mar00/articles/synthsecrets.htm).
     *
     * @example
     * const synth = new Tone.AMSynth().toDestination();
     * synth.triggerAttackRelease("C4", "4n");
     *
     * @category Instrument
     */


    var AMSynth = /*#__PURE__*/function (_ModulationSynth__WEB) {
      _inherits(AMSynth, _ModulationSynth__WEB);

      var _super127 = _createSuper(AMSynth);

      function AMSynth() {
        var _this184;

        _classCallCheck2(this, AMSynth);

        _this184 = _super127.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(AMSynth.getDefaults(), arguments));
        _this184.name = "AMSynth";
        _this184._modulationScale = new _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_0__["AudioToGain"]({
          context: _this184.context
        }); // control the two voices frequency

        _this184.frequency.connect(_this184._carrier.frequency);

        _this184.frequency.chain(_this184.harmonicity, _this184._modulator.frequency);

        _this184.detune.fan(_this184._carrier.detune, _this184._modulator.detune);

        _this184._modulator.chain(_this184._modulationScale, _this184._modulationNode.gain);

        _this184._carrier.chain(_this184._modulationNode, _this184.output);

        return _this184;
      }

      _createClass2(AMSynth, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(AMSynth.prototype), "dispose", this).call(this);

          this._modulationScale.dispose();

          return this;
        }
      }]);

      return AMSynth;
    }(_ModulationSynth__WEBPACK_IMPORTED_MODULE_2__["ModulationSynth"]); //# sourceMappingURL=AMSynth.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/instrument/DuoSynth.js":
  /*!************************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/DuoSynth.js ***!
    \************************************************************/

  /*! exports provided: DuoSynth */

  /***/
  function node_modulesToneBuildEsmInstrumentDuoSynthJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "DuoSynth", function () {
      return DuoSynth;
    });
    /* harmony import */


    var _Monophonic__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Monophonic */
    "./node_modules/tone/build/esm/instrument/Monophonic.js");
    /* harmony import */


    var _MonoSynth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./MonoSynth */
    "./node_modules/tone/build/esm/instrument/MonoSynth.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../source/oscillator/LFO */
    "./node_modules/tone/build/esm/source/oscillator/LFO.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../signal/Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /**
     * DuoSynth is a monophonic synth composed of two [[MonoSynths]] run in parallel with control over the
     * frequency ratio between the two voices and vibrato effect.
     * @example
     * const duoSynth = new Tone.DuoSynth().toDestination();
     * duoSynth.triggerAttackRelease("C4", "2n");
     * @category Instrument
     */


    var DuoSynth = /*#__PURE__*/function (_Monophonic__WEBPACK_) {
      _inherits(DuoSynth, _Monophonic__WEBPACK_);

      var _super128 = _createSuper(DuoSynth);

      function DuoSynth() {
        var _this185;

        _classCallCheck2(this, DuoSynth);

        _this185 = _super128.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["optionsFromArguments"])(DuoSynth.getDefaults(), arguments));
        _this185.name = "DuoSynth";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["optionsFromArguments"])(DuoSynth.getDefaults(), arguments);
        _this185.voice0 = new _MonoSynth__WEBPACK_IMPORTED_MODULE_1__["MonoSynth"](Object.assign(options.voice0, {
          context: _this185.context,
          onsilence: function onsilence() {
            return _this185.onsilence(_assertThisInitialized(_this185));
          }
        }));
        _this185.voice1 = new _MonoSynth__WEBPACK_IMPORTED_MODULE_1__["MonoSynth"](Object.assign(options.voice1, {
          context: _this185.context
        }));
        _this185.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__["Multiply"]({
          context: _this185.context,
          units: "positive",
          value: options.harmonicity
        });
        _this185._vibrato = new _source_oscillator_LFO__WEBPACK_IMPORTED_MODULE_4__["LFO"]({
          frequency: options.vibratoRate,
          context: _this185.context,
          min: -50,
          max: 50
        }); // start the vibrato immediately

        _this185._vibrato.start();

        _this185.vibratoRate = _this185._vibrato.frequency;
        _this185._vibratoGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_5__["Gain"]({
          context: _this185.context,
          units: "normalRange",
          gain: options.vibratoAmount
        });
        _this185.vibratoAmount = _this185._vibratoGain.gain;
        _this185.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"]({
          context: _this185.context,
          units: "frequency",
          value: 440
        });
        _this185.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"]({
          context: _this185.context,
          units: "cents",
          value: options.detune
        }); // control the two voices frequency

        _this185.frequency.connect(_this185.voice0.frequency);

        _this185.frequency.chain(_this185.harmonicity, _this185.voice1.frequency);

        _this185._vibrato.connect(_this185._vibratoGain);

        _this185._vibratoGain.fan(_this185.voice0.detune, _this185.voice1.detune);

        _this185.detune.fan(_this185.voice0.detune, _this185.voice1.detune);

        _this185.voice0.connect(_this185.output);

        _this185.voice1.connect(_this185.output);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this185), ["voice0", "voice1", "frequency", "vibratoAmount", "vibratoRate"]);
        return _this185;
      }

      _createClass2(DuoSynth, [{
        key: "getLevelAtTime",
        value: function getLevelAtTime(time) {
          time = this.toSeconds(time);
          return this.voice0.envelope.getValueAtTime(time) + this.voice1.envelope.getValueAtTime(time);
        }
      }, {
        key: "_triggerEnvelopeAttack",

        /**
         * Trigger the attack portion of the note
         */
        value: function _triggerEnvelopeAttack(time, velocity) {
          // @ts-ignore
          this.voice0._triggerEnvelopeAttack(time, velocity); // @ts-ignore


          this.voice1._triggerEnvelopeAttack(time, velocity);
        }
        /**
         * Trigger the release portion of the note
         */

      }, {
        key: "_triggerEnvelopeRelease",
        value: function _triggerEnvelopeRelease(time) {
          // @ts-ignore
          this.voice0._triggerEnvelopeRelease(time); // @ts-ignore


          this.voice1._triggerEnvelopeRelease(time);

          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(DuoSynth.prototype), "dispose", this).call(this);

          this.voice0.dispose();
          this.voice1.dispose();
          this.frequency.dispose();
          this.detune.dispose();

          this._vibrato.dispose();

          this.vibratoRate.dispose();

          this._vibratoGain.dispose();

          this.harmonicity.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["deepMerge"])(_Monophonic__WEBPACK_IMPORTED_MODULE_0__["Monophonic"].getDefaults(), {
            vibratoAmount: 0.5,
            vibratoRate: 5,
            harmonicity: 1.5,
            voice0: Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["deepMerge"])(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["omitFromObject"])(_MonoSynth__WEBPACK_IMPORTED_MODULE_1__["MonoSynth"].getDefaults(), Object.keys(_Monophonic__WEBPACK_IMPORTED_MODULE_0__["Monophonic"].getDefaults())), {
              filterEnvelope: {
                attack: 0.01,
                decay: 0.0,
                sustain: 1,
                release: 0.5
              },
              envelope: {
                attack: 0.01,
                decay: 0.0,
                sustain: 1,
                release: 0.5
              }
            }),
            voice1: Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["deepMerge"])(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_7__["omitFromObject"])(_MonoSynth__WEBPACK_IMPORTED_MODULE_1__["MonoSynth"].getDefaults(), Object.keys(_Monophonic__WEBPACK_IMPORTED_MODULE_0__["Monophonic"].getDefaults())), {
              filterEnvelope: {
                attack: 0.01,
                decay: 0.0,
                sustain: 1,
                release: 0.5
              },
              envelope: {
                attack: 0.01,
                decay: 0.0,
                sustain: 1,
                release: 0.5
              }
            })
          });
        }
      }]);

      return DuoSynth;
    }(_Monophonic__WEBPACK_IMPORTED_MODULE_0__["Monophonic"]); //# sourceMappingURL=DuoSynth.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/instrument/FMSynth.js":
  /*!***********************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/FMSynth.js ***!
    \***********************************************************/

  /*! exports provided: FMSynth */

  /***/
  function node_modulesToneBuildEsmInstrumentFMSynthJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FMSynth", function () {
      return FMSynth;
    });
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../signal/Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _ModulationSynth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./ModulationSynth */
    "./node_modules/tone/build/esm/instrument/ModulationSynth.js");
    /**
     * FMSynth is composed of two Tone.Synths where one Tone.Synth modulates
     * the frequency of a second Tone.Synth. A lot of spectral content
     * can be explored using the modulationIndex parameter. Read more about
     * frequency modulation synthesis on Sound On Sound: [Part 1](https://web.archive.org/web/20160403123704/http://www.soundonsound.com/sos/apr00/articles/synthsecrets.htm), [Part 2](https://web.archive.org/web/20160403115835/http://www.soundonsound.com/sos/may00/articles/synth.htm).
     *
     * @example
     * const fmSynth = new Tone.FMSynth().toDestination();
     * fmSynth.triggerAttackRelease("C5", "4n");
     *
     * @category Instrument
     */


    var FMSynth = /*#__PURE__*/function (_ModulationSynth__WEB2) {
      _inherits(FMSynth, _ModulationSynth__WEB2);

      var _super129 = _createSuper(FMSynth);

      function FMSynth() {
        var _this186;

        _classCallCheck2(this, FMSynth);

        _this186 = _super129.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(FMSynth.getDefaults(), arguments));
        _this186.name = "FMSynth";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(FMSynth.getDefaults(), arguments);
        _this186.modulationIndex = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__["Multiply"]({
          context: _this186.context,
          value: options.modulationIndex
        }); // control the two voices frequency

        _this186.frequency.connect(_this186._carrier.frequency);

        _this186.frequency.chain(_this186.harmonicity, _this186._modulator.frequency);

        _this186.frequency.chain(_this186.modulationIndex, _this186._modulationNode);

        _this186.detune.fan(_this186._carrier.detune, _this186._modulator.detune);

        _this186._modulator.connect(_this186._modulationNode.gain);

        _this186._modulationNode.connect(_this186._carrier.frequency);

        _this186._carrier.connect(_this186.output);

        return _this186;
      }

      _createClass2(FMSynth, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(FMSynth.prototype), "dispose", this).call(this);

          this.modulationIndex.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_ModulationSynth__WEBPACK_IMPORTED_MODULE_2__["ModulationSynth"].getDefaults(), {
            modulationIndex: 10
          });
        }
      }]);

      return FMSynth;
    }(_ModulationSynth__WEBPACK_IMPORTED_MODULE_2__["ModulationSynth"]); //# sourceMappingURL=FMSynth.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/instrument/Instrument.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/Instrument.js ***!
    \**************************************************************/

  /*! exports provided: Instrument */

  /***/
  function node_modulesToneBuildEsmInstrumentInstrumentJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Instrument", function () {
      return Instrument;
    });
    /* harmony import */


    var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../component/channel/Volume */
    "./node_modules/tone/build/esm/component/channel/Volume.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Base-class for all instruments
     */


    var Instrument = /*#__PURE__*/function (_core_context_ToneAud31) {
      _inherits(Instrument, _core_context_ToneAud31);

      var _super130 = _createSuper(Instrument);

      function Instrument() {
        var _this187;

        _classCallCheck2(this, Instrument);

        _this187 = _super130.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Instrument.getDefaults(), arguments));
        /**
         * Keep track of all events scheduled to the transport
         * when the instrument is 'synced'
         */

        _this187._scheduledEvents = [];
        /**
         * If the instrument is currently synced
         */

        _this187._synced = false;
        _this187._original_triggerAttack = _this187.triggerAttack;
        _this187._original_triggerRelease = _this187.triggerRelease;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Instrument.getDefaults(), arguments);
        _this187._volume = _this187.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__["Volume"]({
          context: _this187.context,
          volume: options.volume
        });
        _this187.volume = _this187._volume.volume;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this187), "volume");
        return _this187;
      }

      _createClass2(Instrument, [{
        key: "sync",

        /**
         * Sync the instrument to the Transport. All subsequent calls of
         * [[triggerAttack]] and [[triggerRelease]] will be scheduled along the transport.
         * @example
         * const fmSynth = new Tone.FMSynth().toDestination();
         * fmSynth.volume.value = -6;
         * fmSynth.sync();
         * // schedule 3 notes when the transport first starts
         * fmSynth.triggerAttackRelease("C4", "8n", 0);
         * fmSynth.triggerAttackRelease("E4", "8n", "8n");
         * fmSynth.triggerAttackRelease("G4", "8n", "4n");
         * // start the transport to hear the notes
         * Tone.Transport.start();
         */
        value: function sync() {
          if (!this._synced) {
            this._synced = true;

            this._syncMethod("triggerAttack", 1);

            this._syncMethod("triggerRelease", 0);
          }

          return this;
        }
        /**
         * Wrap the given method so that it can be synchronized
         * @param method Which method to wrap and sync
         * @param  timePosition What position the time argument appears in
         */

      }, {
        key: "_syncMethod",
        value: function _syncMethod(method, timePosition) {
          var _this188 = this;

          var originalMethod = this["_original_" + method] = this[method];

          this[method] = function () {
            for (var _len14 = arguments.length, args = new Array(_len14), _key14 = 0; _key14 < _len14; _key14++) {
              args[_key14] = arguments[_key14];
            }

            var time = args[timePosition];

            var id = _this188.context.transport.schedule(function (t) {
              args[timePosition] = t;
              originalMethod.apply(_this188, args);
            }, time);

            _this188._scheduledEvents.push(id);
          };
        }
        /**
         * Unsync the instrument from the Transport
         */

      }, {
        key: "unsync",
        value: function unsync() {
          var _this189 = this;

          this._scheduledEvents.forEach(function (id) {
            return _this189.context.transport.clear(id);
          });

          this._scheduledEvents = [];

          if (this._synced) {
            this._synced = false;
            this.triggerAttack = this._original_triggerAttack;
            this.triggerRelease = this._original_triggerRelease;
          }

          return this;
        }
        /**
         * Trigger the attack and then the release after the duration.
         * @param  note     The note to trigger.
         * @param  duration How long the note should be held for before
         *                         triggering the release. This value must be greater than 0.
         * @param time  When the note should be triggered.
         * @param  velocity The velocity the note should be triggered at.
         * @example
         * const synth = new Tone.Synth().toDestination();
         * // trigger "C4" for the duration of an 8th note
         * synth.triggerAttackRelease("C4", "8n");
         */

      }, {
        key: "triggerAttackRelease",
        value: function triggerAttackRelease(note, duration, time, velocity) {
          var computedTime = this.toSeconds(time);
          var computedDuration = this.toSeconds(duration);
          this.triggerAttack(note, computedTime, velocity);
          this.triggerRelease(computedTime + computedDuration);
          return this;
        }
        /**
         * clean up
         * @returns {Instrument} this
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Instrument.prototype), "dispose", this).call(this);

          this._volume.dispose();

          this.unsync();
          this._scheduledEvents = [];
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            volume: 0
          });
        }
      }]);

      return Instrument;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=Instrument.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/instrument/MembraneSynth.js":
  /*!*****************************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/MembraneSynth.js ***!
    \*****************************************************************/

  /*! exports provided: MembraneSynth */

  /***/
  function node_modulesToneBuildEsmInstrumentMembraneSynthJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MembraneSynth", function () {
      return MembraneSynth;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_type_Frequency__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/type/Frequency */
    "./node_modules/tone/build/esm/core/type/Frequency.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _Monophonic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./Monophonic */
    "./node_modules/tone/build/esm/instrument/Monophonic.js");
    /* harmony import */


    var _Synth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./Synth */
    "./node_modules/tone/build/esm/instrument/Synth.js");
    /* harmony import */


    var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../core/util/Decorator */
    "./node_modules/tone/build/esm/core/util/Decorator.js");
    /**
     * MembraneSynth makes kick and tom sounds using a single oscillator
     * with an amplitude envelope and frequency ramp. A Tone.OmniOscillator
     * is routed through a Tone.AmplitudeEnvelope to the output. The drum
     * quality of the sound comes from the frequency envelope applied
     * during MembraneSynth.triggerAttack(note). The frequency envelope
     * starts at <code>note * .octaves</code> and ramps to <code>note</code>
     * over the duration of <code>.pitchDecay</code>.
     * @example
     * const synth = new Tone.MembraneSynth().toDestination();
     * synth.triggerAttackRelease("C2", "8n");
     * @category Instrument
     */


    var MembraneSynth = /*#__PURE__*/function (_Synth__WEBPACK_IMPOR) {
      _inherits(MembraneSynth, _Synth__WEBPACK_IMPOR);

      var _super131 = _createSuper(MembraneSynth);

      function MembraneSynth() {
        var _this190;

        _classCallCheck2(this, MembraneSynth);

        _this190 = _super131.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MembraneSynth.getDefaults(), arguments));
        _this190.name = "MembraneSynth";
        /**
         * Portamento is ignored in this synth. use pitch decay instead.
         */

        _this190.portamento = 0;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(MembraneSynth.getDefaults(), arguments);
        _this190.pitchDecay = options.pitchDecay;
        _this190.octaves = options.octaves;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this190), ["oscillator", "envelope"]);
        return _this190;
      }

      _createClass2(MembraneSynth, [{
        key: "setNote",
        value: function setNote(note, time) {
          var seconds = this.toSeconds(time);
          var hertz = this.toFrequency(note instanceof _core_type_Frequency__WEBPACK_IMPORTED_MODULE_1__["FrequencyClass"] ? note.toFrequency() : note);
          var maxNote = hertz * this.octaves;
          this.oscillator.frequency.setValueAtTime(maxNote, seconds);
          this.oscillator.frequency.exponentialRampToValueAtTime(hertz, seconds + this.toSeconds(this.pitchDecay));
          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(MembraneSynth.prototype), "dispose", this).call(this);

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["deepMerge"])(_Monophonic__WEBPACK_IMPORTED_MODULE_4__["Monophonic"].getDefaults(), _Synth__WEBPACK_IMPORTED_MODULE_5__["Synth"].getDefaults(), {
            envelope: {
              attack: 0.001,
              attackCurve: "exponential",
              decay: 0.4,
              release: 1.4,
              sustain: 0.01
            },
            octaves: 10,
            oscillator: {
              type: "sine"
            },
            pitchDecay: 0.05
          });
        }
      }]);

      return MembraneSynth;
    }(_Synth__WEBPACK_IMPORTED_MODULE_5__["Synth"]);

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_6__["range"])(0)], MembraneSynth.prototype, "octaves", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_6__["timeRange"])(0)], MembraneSynth.prototype, "pitchDecay", void 0); //# sourceMappingURL=MembraneSynth.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/instrument/MetalSynth.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/MetalSynth.js ***!
    \**************************************************************/

  /*! exports provided: MetalSynth */

  /***/
  function node_modulesToneBuildEsmInstrumentMetalSynthJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MetalSynth", function () {
      return MetalSynth;
    });
    /* harmony import */


    var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../component/envelope/Envelope */
    "./node_modules/tone/build/esm/component/envelope/Envelope.js");
    /* harmony import */


    var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../component/filter/Filter */
    "./node_modules/tone/build/esm/component/filter/Filter.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../signal/Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _signal_Scale__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../signal/Scale */
    "./node_modules/tone/build/esm/signal/Scale.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _source_oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../source/oscillator/FMOscillator */
    "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js");
    /* harmony import */


    var _Monophonic__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./Monophonic */
    "./node_modules/tone/build/esm/instrument/Monophonic.js");
    /**
     * Inharmonic ratio of frequencies based on the Roland TR-808
     * Taken from https://ccrma.stanford.edu/papers/tr-808-cymbal-physically-informed-circuit-bendable-digital-model
     */


    var inharmRatios = [1.0, 1.483, 1.932, 2.546, 2.630, 3.897];
    /**
     * A highly inharmonic and spectrally complex source with a highpass filter
     * and amplitude envelope which is good for making metallophone sounds.
     * Based on CymbalSynth by [@polyrhythmatic](https://github.com/polyrhythmatic).
     * Inspiration from [Sound on Sound](https://shorturl.at/rSZ12).
     * @category Instrument
     */

    var MetalSynth = /*#__PURE__*/function (_Monophonic__WEBPACK_2) {
      _inherits(MetalSynth, _Monophonic__WEBPACK_2);

      var _super132 = _createSuper(MetalSynth);

      function MetalSynth() {
        var _this191;

        _classCallCheck2(this, MetalSynth);

        _this191 = _super132.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(MetalSynth.getDefaults(), arguments));
        _this191.name = "MetalSynth";
        /**
         * The array of FMOscillators
         */

        _this191._oscillators = [];
        /**
         * The frequency multipliers
         */

        _this191._freqMultipliers = [];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(MetalSynth.getDefaults(), arguments);
        _this191.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_8__["Signal"]({
          context: _this191.context,
          units: "cents",
          value: options.detune
        });
        _this191.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_8__["Signal"]({
          context: _this191.context,
          units: "frequency"
        });
        _this191._amplitude = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this191.context,
          gain: 0
        }).connect(_this191.output);
        _this191._highpass = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_1__["Filter"]({
          // Q: -3.0102999566398125,
          Q: 0,
          context: _this191.context,
          type: "highpass"
        }).connect(_this191._amplitude);

        for (var i = 0; i < inharmRatios.length; i++) {
          var osc = new _source_oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_9__["FMOscillator"]({
            context: _this191.context,
            harmonicity: options.harmonicity,
            modulationIndex: options.modulationIndex,
            modulationType: "square",
            onstop: i === 0 ? function () {
              return _this191.onsilence(_assertThisInitialized(_this191));
            } : _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
            type: "square"
          });
          osc.connect(_this191._highpass);
          _this191._oscillators[i] = osc;
          var mult = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_6__["Multiply"]({
            context: _this191.context,
            value: inharmRatios[i]
          });
          _this191._freqMultipliers[i] = mult;

          _this191.frequency.chain(mult, osc.frequency);

          _this191.detune.connect(osc.detune);
        }

        _this191._filterFreqScaler = new _signal_Scale__WEBPACK_IMPORTED_MODULE_7__["Scale"]({
          context: _this191.context,
          max: 7000,
          min: _this191.toFrequency(options.resonance)
        });
        _this191.envelope = new _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_0__["Envelope"]({
          attack: options.envelope.attack,
          attackCurve: "linear",
          context: _this191.context,
          decay: options.envelope.decay,
          release: options.envelope.release,
          sustain: 0
        });

        _this191.envelope.chain(_this191._filterFreqScaler, _this191._highpass.frequency);

        _this191.envelope.connect(_this191._amplitude.gain); // set the octaves


        _this191._octaves = options.octaves;
        _this191.octaves = options.octaves;
        return _this191;
      }

      _createClass2(MetalSynth, [{
        key: "_triggerEnvelopeAttack",

        /**
         * Trigger the attack.
         * @param time When the attack should be triggered.
         * @param velocity The velocity that the envelope should be triggered at.
         */
        value: function _triggerEnvelopeAttack(time) {
          var _this192 = this;

          var velocity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
          this.envelope.triggerAttack(time, velocity);

          this._oscillators.forEach(function (osc) {
            return osc.start(time);
          });

          if (this.envelope.sustain === 0) {
            this._oscillators.forEach(function (osc) {
              osc.stop(time + _this192.toSeconds(_this192.envelope.attack) + _this192.toSeconds(_this192.envelope.decay));
            });
          }

          return this;
        }
        /**
         * Trigger the release of the envelope.
         * @param time When the release should be triggered.
         */

      }, {
        key: "_triggerEnvelopeRelease",
        value: function _triggerEnvelopeRelease(time) {
          var _this193 = this;

          this.envelope.triggerRelease(time);

          this._oscillators.forEach(function (osc) {
            return osc.stop(time + _this193.toSeconds(_this193.envelope.release));
          });

          return this;
        }
      }, {
        key: "getLevelAtTime",
        value: function getLevelAtTime(time) {
          time = this.toSeconds(time);
          return this.envelope.getValueAtTime(time);
        }
        /**
         * The modulationIndex of the oscillators which make up the source.
         * see [[FMOscillator.modulationIndex]]
         * @min 1
         * @max 100
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(MetalSynth.prototype), "dispose", this).call(this);

          this._oscillators.forEach(function (osc) {
            return osc.dispose();
          });

          this._freqMultipliers.forEach(function (freqMult) {
            return freqMult.dispose();
          });

          this.frequency.dispose();
          this.detune.dispose();

          this._filterFreqScaler.dispose();

          this._amplitude.dispose();

          this.envelope.dispose();

          this._highpass.dispose();

          return this;
        }
      }, {
        key: "modulationIndex",
        get: function get() {
          return this._oscillators[0].modulationIndex.value;
        },
        set: function set(val) {
          this._oscillators.forEach(function (osc) {
            return osc.modulationIndex.value = val;
          });
        }
        /**
         * The harmonicity of the oscillators which make up the source.
         * see Tone.FMOscillator.harmonicity
         * @min 0.1
         * @max 10
         */

      }, {
        key: "harmonicity",
        get: function get() {
          return this._oscillators[0].harmonicity.value;
        },
        set: function set(val) {
          this._oscillators.forEach(function (osc) {
            return osc.harmonicity.value = val;
          });
        }
        /**
         * The lower level of the highpass filter which is attached to the envelope.
         * This value should be between [0, 7000]
         * @min 0
         * @max 7000
         */

      }, {
        key: "resonance",
        get: function get() {
          return this._filterFreqScaler.min;
        },
        set: function set(val) {
          this._filterFreqScaler.min = this.toFrequency(val);
          this.octaves = this._octaves;
        }
        /**
         * The number of octaves above the "resonance" frequency
         * that the filter ramps during the attack/decay envelope
         * @min 0
         * @max 8
         */

      }, {
        key: "octaves",
        get: function get() {
          return this._octaves;
        },
        set: function set(val) {
          this._octaves = val;
          this._filterFreqScaler.max = this._filterFreqScaler.min * Math.pow(2, val);
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["deepMerge"])(_Monophonic__WEBPACK_IMPORTED_MODULE_10__["Monophonic"].getDefaults(), {
            envelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_0__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"].getDefaults())), {
              attack: 0.001,
              decay: 1.4,
              release: 0.2
            }),
            harmonicity: 5.1,
            modulationIndex: 32,
            octaves: 1.5,
            resonance: 4000
          });
        }
      }]);

      return MetalSynth;
    }(_Monophonic__WEBPACK_IMPORTED_MODULE_10__["Monophonic"]); //# sourceMappingURL=MetalSynth.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/instrument/ModulationSynth.js":
  /*!*******************************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/ModulationSynth.js ***!
    \*******************************************************************/

  /*! exports provided: ModulationSynth */

  /***/
  function node_modulesToneBuildEsmInstrumentModulationSynthJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ModulationSynth", function () {
      return ModulationSynth;
    });
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../signal/Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../component/envelope/Envelope */
    "./node_modules/tone/build/esm/component/envelope/Envelope.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _Monophonic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./Monophonic */
    "./node_modules/tone/build/esm/instrument/Monophonic.js");
    /* harmony import */


    var _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../source/oscillator/OmniOscillator */
    "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
    /* harmony import */


    var _source_Source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../source/Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _Synth__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./Synth */
    "./node_modules/tone/build/esm/instrument/Synth.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /**
     * Base class for both AM and FM synths
     */


    var ModulationSynth = /*#__PURE__*/function (_Monophonic__WEBPACK_3) {
      _inherits(ModulationSynth, _Monophonic__WEBPACK_3);

      var _super133 = _createSuper(ModulationSynth);

      function ModulationSynth() {
        var _this194;

        _classCallCheck2(this, ModulationSynth);

        _this194 = _super133.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["optionsFromArguments"])(ModulationSynth.getDefaults(), arguments));
        _this194.name = "ModulationSynth";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["optionsFromArguments"])(ModulationSynth.getDefaults(), arguments);
        _this194._carrier = new _Synth__WEBPACK_IMPORTED_MODULE_8__["Synth"]({
          context: _this194.context,
          oscillator: options.oscillator,
          envelope: options.envelope,
          onsilence: function onsilence() {
            return _this194.onsilence(_assertThisInitialized(_this194));
          },
          volume: -10
        });
        _this194._modulator = new _Synth__WEBPACK_IMPORTED_MODULE_8__["Synth"]({
          context: _this194.context,
          oscillator: options.modulation,
          envelope: options.modulationEnvelope,
          volume: -10
        });
        _this194.oscillator = _this194._carrier.oscillator;
        _this194.envelope = _this194._carrier.envelope;
        _this194.modulation = _this194._modulator.oscillator;
        _this194.modulationEnvelope = _this194._modulator.envelope;
        _this194.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"]({
          context: _this194.context,
          units: "frequency"
        });
        _this194.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"]({
          context: _this194.context,
          value: options.detune,
          units: "cents"
        });
        _this194.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_1__["Multiply"]({
          context: _this194.context,
          value: options.harmonicity,
          minValue: 0
        });
        _this194._modulationNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_2__["Gain"]({
          context: _this194.context,
          gain: 0
        });
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_9__["readOnly"])(_assertThisInitialized(_this194), ["frequency", "harmonicity", "oscillator", "envelope", "modulation", "modulationEnvelope", "detune"]);
        return _this194;
      }

      _createClass2(ModulationSynth, [{
        key: "_triggerEnvelopeAttack",

        /**
         * Trigger the attack portion of the note
         */
        value: function _triggerEnvelopeAttack(time, velocity) {
          // @ts-ignore
          this._carrier._triggerEnvelopeAttack(time, velocity); // @ts-ignore


          this._modulator._triggerEnvelopeAttack(time, velocity);
        }
        /**
         * Trigger the release portion of the note
         */

      }, {
        key: "_triggerEnvelopeRelease",
        value: function _triggerEnvelopeRelease(time) {
          // @ts-ignore
          this._carrier._triggerEnvelopeRelease(time); // @ts-ignore


          this._modulator._triggerEnvelopeRelease(time);

          return this;
        }
      }, {
        key: "getLevelAtTime",
        value: function getLevelAtTime(time) {
          time = this.toSeconds(time);
          return this.envelope.getValueAtTime(time);
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(ModulationSynth.prototype), "dispose", this).call(this);

          this._carrier.dispose();

          this._modulator.dispose();

          this.frequency.dispose();
          this.detune.dispose();
          this.harmonicity.dispose();

          this._modulationNode.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Monophonic__WEBPACK_IMPORTED_MODULE_5__["Monophonic"].getDefaults(), {
            harmonicity: 3,
            oscillator: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["omitFromObject"])(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__["OmniOscillator"].getDefaults(), [].concat(_toConsumableArray(Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_7__["Source"].getDefaults())), ["frequency", "detune"])), {
              type: "sine"
            }),
            envelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_3__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["ToneAudioNode"].getDefaults())), {
              attack: 0.01,
              decay: 0.01,
              sustain: 1,
              release: 0.5
            }),
            modulation: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["omitFromObject"])(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__["OmniOscillator"].getDefaults(), [].concat(_toConsumableArray(Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_7__["Source"].getDefaults())), ["frequency", "detune"])), {
              type: "square"
            }),
            modulationEnvelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_10__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_3__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["ToneAudioNode"].getDefaults())), {
              attack: 0.5,
              decay: 0.0,
              sustain: 1,
              release: 0.5
            })
          });
        }
      }]);

      return ModulationSynth;
    }(_Monophonic__WEBPACK_IMPORTED_MODULE_5__["Monophonic"]); //# sourceMappingURL=ModulationSynth.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/instrument/MonoSynth.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/MonoSynth.js ***!
    \*************************************************************/

  /*! exports provided: MonoSynth */

  /***/
  function node_modulesToneBuildEsmInstrumentMonoSynthJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "MonoSynth", function () {
      return MonoSynth;
    });
    /* harmony import */


    var _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../component/envelope/AmplitudeEnvelope */
    "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
    /* harmony import */


    var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../component/envelope/Envelope */
    "./node_modules/tone/build/esm/component/envelope/Envelope.js");
    /* harmony import */


    var _component_filter_Filter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../component/filter/Filter */
    "./node_modules/tone/build/esm/component/filter/Filter.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _instrument_Monophonic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../instrument/Monophonic */
    "./node_modules/tone/build/esm/instrument/Monophonic.js");
    /* harmony import */


    var _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../source/oscillator/OmniOscillator */
    "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
    /* harmony import */


    var _source_Source__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../source/Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _component_envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../component/envelope/FrequencyEnvelope */
    "./node_modules/tone/build/esm/component/envelope/FrequencyEnvelope.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /**
     * MonoSynth is composed of one `oscillator`, one `filter`, and two `envelopes`.
     * The amplitude of the Oscillator and the cutoff frequency of the
     * Filter are controlled by Envelopes.
     * <img src="https://docs.google.com/drawings/d/1gaY1DF9_Hzkodqf8JI1Cg2VZfwSElpFQfI94IQwad38/pub?w=924&h=240">
     * @example
     * const synth = new Tone.MonoSynth({
     * 	oscillator: {
     * 		type: "square"
     * 	},
     * 	envelope: {
     * 		attack: 0.1
     * 	}
     * }).toDestination();
     * synth.triggerAttackRelease("C4", "8n");
     * @category Instrument
     */


    var MonoSynth = /*#__PURE__*/function (_instrument_Monophoni) {
      _inherits(MonoSynth, _instrument_Monophoni);

      var _super134 = _createSuper(MonoSynth);

      function MonoSynth() {
        var _this195;

        _classCallCheck2(this, MonoSynth);

        _this195 = _super134.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(MonoSynth.getDefaults(), arguments));
        _this195.name = "MonoSynth";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(MonoSynth.getDefaults(), arguments);
        _this195.oscillator = new _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__["OmniOscillator"](Object.assign(options.oscillator, {
          context: _this195.context,
          detune: options.detune,
          onstop: function onstop() {
            return _this195.onsilence(_assertThisInitialized(_this195));
          }
        }));
        _this195.frequency = _this195.oscillator.frequency;
        _this195.detune = _this195.oscillator.detune;
        _this195.filter = new _component_filter_Filter__WEBPACK_IMPORTED_MODULE_2__["Filter"](Object.assign(options.filter, {
          context: _this195.context
        }));
        _this195.filterEnvelope = new _component_envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_8__["FrequencyEnvelope"](Object.assign(options.filterEnvelope, {
          context: _this195.context
        }));
        _this195.envelope = new _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__["AmplitudeEnvelope"](Object.assign(options.envelope, {
          context: _this195.context
        })); // connect the oscillators to the output

        _this195.oscillator.chain(_this195.filter, _this195.envelope, _this195.output); // connect the filter envelope


        _this195.filterEnvelope.connect(_this195.filter.frequency);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this195), ["oscillator", "frequency", "detune", "filter", "filterEnvelope", "envelope"]);
        return _this195;
      }

      _createClass2(MonoSynth, [{
        key: "_triggerEnvelopeAttack",

        /**
         * start the attack portion of the envelope
         * @param time the time the attack should start
         * @param velocity the velocity of the note (0-1)
         */
        value: function _triggerEnvelopeAttack(time) {
          var velocity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
          this.envelope.triggerAttack(time, velocity);
          this.filterEnvelope.triggerAttack(time);
          this.oscillator.start(time);

          if (this.envelope.sustain === 0) {
            var computedAttack = this.toSeconds(this.envelope.attack);
            var computedDecay = this.toSeconds(this.envelope.decay);
            this.oscillator.stop(time + computedAttack + computedDecay);
          }
        }
        /**
         * start the release portion of the envelope
         * @param time the time the release should start
         */

      }, {
        key: "_triggerEnvelopeRelease",
        value: function _triggerEnvelopeRelease(time) {
          this.envelope.triggerRelease(time);
          this.filterEnvelope.triggerRelease(time);
          this.oscillator.stop(time + this.toSeconds(this.envelope.release));
        }
      }, {
        key: "getLevelAtTime",
        value: function getLevelAtTime(time) {
          time = this.toSeconds(time);
          return this.envelope.getValueAtTime(time);
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(MonoSynth.prototype), "dispose", this).call(this);

          this.oscillator.dispose();
          this.envelope.dispose();
          this.filterEnvelope.dispose();
          this.filter.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_instrument_Monophonic__WEBPACK_IMPORTED_MODULE_5__["Monophonic"].getDefaults(), {
            envelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__["ToneAudioNode"].getDefaults())), {
              attack: 0.005,
              decay: 0.1,
              release: 1,
              sustain: 0.9
            }),
            filter: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_component_filter_Filter__WEBPACK_IMPORTED_MODULE_2__["Filter"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__["ToneAudioNode"].getDefaults())), {
              Q: 1,
              rolloff: -12,
              type: "lowpass"
            }),
            filterEnvelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_component_envelope_FrequencyEnvelope__WEBPACK_IMPORTED_MODULE_8__["FrequencyEnvelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_9__["ToneAudioNode"].getDefaults())), {
              attack: 0.6,
              baseFrequency: 200,
              decay: 0.2,
              exponent: 2,
              octaves: 3,
              release: 2,
              sustain: 0.5
            }),
            oscillator: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_6__["OmniOscillator"].getDefaults(), Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_7__["Source"].getDefaults())), {
              type: "sawtooth"
            })
          });
        }
      }]);

      return MonoSynth;
    }(_instrument_Monophonic__WEBPACK_IMPORTED_MODULE_5__["Monophonic"]); //# sourceMappingURL=MonoSynth.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/instrument/Monophonic.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/Monophonic.js ***!
    \**************************************************************/

  /*! exports provided: Monophonic */

  /***/
  function node_modulesToneBuildEsmInstrumentMonophonicJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Monophonic", function () {
      return Monophonic;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_type_Frequency__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/type/Frequency */
    "./node_modules/tone/build/esm/core/type/Frequency.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _instrument_Instrument__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../instrument/Instrument */
    "./node_modules/tone/build/esm/instrument/Instrument.js");
    /* harmony import */


    var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/util/Decorator */
    "./node_modules/tone/build/esm/core/util/Decorator.js");
    /**
     * Abstract base class for other monophonic instruments to extend.
     */


    var Monophonic = /*#__PURE__*/function (_instrument_Instrumen) {
      _inherits(Monophonic, _instrument_Instrumen);

      var _super135 = _createSuper(Monophonic);

      function Monophonic() {
        var _this196;

        _classCallCheck2(this, Monophonic);

        _this196 = _super135.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Monophonic.getDefaults(), arguments));
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Monophonic.getDefaults(), arguments);
        _this196.portamento = options.portamento;
        _this196.onsilence = options.onsilence;
        return _this196;
      }

      _createClass2(Monophonic, [{
        key: "triggerAttack",

        /**
         * Trigger the attack of the note optionally with a given velocity.
         * @param  note The note to trigger.
         * @param  time When the note should start.
         * @param  velocity The velocity scaler determines how "loud" the note will be triggered.
         * @example
         * const synth = new Tone.Synth().toDestination();
         * // trigger the note a half second from now at half velocity
         * synth.triggerAttack("C4", "+0.5", 0.5);
         */
        value: function triggerAttack(note, time) {
          var velocity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
          this.log("triggerAttack", note, time, velocity);
          var seconds = this.toSeconds(time);

          this._triggerEnvelopeAttack(seconds, velocity);

          this.setNote(note, seconds);
          return this;
        }
        /**
         * Trigger the release portion of the envelope
         * @param  time If no time is given, the release happens immediatly
         * @example
         * const synth = new Tone.Synth().toDestination();
         * synth.triggerAttack("C4");
         * // trigger the release a second from now
         * synth.triggerRelease("+1");
         */

      }, {
        key: "triggerRelease",
        value: function triggerRelease(time) {
          this.log("triggerRelease", time);
          var seconds = this.toSeconds(time);

          this._triggerEnvelopeRelease(seconds);

          return this;
        }
        /**
         * Set the note at the given time. If no time is given, the note
         * will set immediately.
         * @param note The note to change to.
         * @param  time The time when the note should be set.
         * @example
         * const synth = new Tone.Synth().toDestination();
         * synth.triggerAttack("C4");
         * // change to F#6 in one quarter note from now.
         * synth.setNote("F#6", "+4n");
         */

      }, {
        key: "setNote",
        value: function setNote(note, time) {
          var computedTime = this.toSeconds(time);
          var computedFrequency = note instanceof _core_type_Frequency__WEBPACK_IMPORTED_MODULE_1__["FrequencyClass"] ? note.toFrequency() : note;

          if (this.portamento > 0 && this.getLevelAtTime(computedTime) > 0.05) {
            var portTime = this.toSeconds(this.portamento);
            this.frequency.exponentialRampTo(computedFrequency, portTime, computedTime);
          } else {
            this.frequency.setValueAtTime(computedFrequency, computedTime);
          }

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_instrument_Instrument__WEBPACK_IMPORTED_MODULE_4__["Instrument"].getDefaults(), {
            detune: 0,
            onsilence: _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"],
            portamento: 0
          });
        }
      }]);

      return Monophonic;
    }(_instrument_Instrument__WEBPACK_IMPORTED_MODULE_4__["Instrument"]);

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_5__["timeRange"])(0)], Monophonic.prototype, "portamento", void 0); //# sourceMappingURL=Monophonic.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/instrument/NoiseSynth.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/NoiseSynth.js ***!
    \**************************************************************/

  /*! exports provided: NoiseSynth */

  /***/
  function node_modulesToneBuildEsmInstrumentNoiseSynthJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "NoiseSynth", function () {
      return NoiseSynth;
    });
    /* harmony import */


    var _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../component/envelope/AmplitudeEnvelope */
    "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _source_Noise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../source/Noise */
    "./node_modules/tone/build/esm/source/Noise.js");
    /* harmony import */


    var _Instrument__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./Instrument */
    "./node_modules/tone/build/esm/instrument/Instrument.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../component/envelope/Envelope */
    "./node_modules/tone/build/esm/component/envelope/Envelope.js");
    /* harmony import */


    var _source_Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../source/Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /**
     * Tone.NoiseSynth is composed of [[Noise]] through an [[AmplitudeEnvelope]].
     * ```
     * +-------+   +-------------------+
     * | Noise +>--> AmplitudeEnvelope +>--> Output
     * +-------+   +-------------------+
     * ```
     * @example
     * const noiseSynth = new Tone.NoiseSynth().toDestination();
     * noiseSynth.triggerAttackRelease("8n", 0.05);
     * @category Instrument
     */


    var NoiseSynth = /*#__PURE__*/function (_Instrument__WEBPACK_) {
      _inherits(NoiseSynth, _Instrument__WEBPACK_);

      var _super136 = _createSuper(NoiseSynth);

      function NoiseSynth() {
        var _this197;

        _classCallCheck2(this, NoiseSynth);

        _this197 = _super136.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(NoiseSynth.getDefaults(), arguments));
        _this197.name = "NoiseSynth";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(NoiseSynth.getDefaults(), arguments);
        _this197.noise = new _source_Noise__WEBPACK_IMPORTED_MODULE_2__["Noise"](Object.assign({
          context: _this197.context
        }, options.noise));
        _this197.envelope = new _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__["AmplitudeEnvelope"](Object.assign({
          context: _this197.context
        }, options.envelope)); // connect the noise to the output

        _this197.noise.chain(_this197.envelope, _this197.output);

        return _this197;
      }

      _createClass2(NoiseSynth, [{
        key: "triggerAttack",

        /**
         * Start the attack portion of the envelopes. Unlike other
         * instruments, Tone.NoiseSynth doesn't have a note.
         * @example
         * const noiseSynth = new Tone.NoiseSynth().toDestination();
         * noiseSynth.triggerAttack();
         */
        value: function triggerAttack(time) {
          var velocity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
          time = this.toSeconds(time); // the envelopes

          this.envelope.triggerAttack(time, velocity); // start the noise

          this.noise.start(time);

          if (this.envelope.sustain === 0) {
            this.noise.stop(time + this.toSeconds(this.envelope.attack) + this.toSeconds(this.envelope.decay));
          }

          return this;
        }
        /**
         * Start the release portion of the envelopes.
         */

      }, {
        key: "triggerRelease",
        value: function triggerRelease(time) {
          time = this.toSeconds(time);
          this.envelope.triggerRelease(time);
          this.noise.stop(time + this.toSeconds(this.envelope.release));
          return this;
        }
      }, {
        key: "sync",
        value: function sync() {
          this._syncMethod("triggerAttack", 0);

          this._syncMethod("triggerRelease", 0);

          return this;
        }
      }, {
        key: "triggerAttackRelease",
        value: function triggerAttackRelease(duration, time) {
          var velocity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
          time = this.toSeconds(time);
          duration = this.toSeconds(duration);
          this.triggerAttack(time, velocity);
          this.triggerRelease(time + duration);
          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(NoiseSynth.prototype), "dispose", this).call(this);

          this.noise.dispose();
          this.envelope.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"].getDefaults(), {
            envelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_5__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_4__["ToneAudioNode"].getDefaults())), {
              decay: 0.1,
              sustain: 0.0
            }),
            noise: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["omitFromObject"])(_source_Noise__WEBPACK_IMPORTED_MODULE_2__["Noise"].getDefaults(), Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_6__["Source"].getDefaults())), {
              type: "white"
            })
          });
        }
      }]);

      return NoiseSynth;
    }(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"]); //# sourceMappingURL=NoiseSynth.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/instrument/PluckSynth.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/PluckSynth.js ***!
    \**************************************************************/

  /*! exports provided: PluckSynth */

  /***/
  function node_modulesToneBuildEsmInstrumentPluckSynthJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PluckSynth", function () {
      return PluckSynth;
    });
    /* harmony import */


    var _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../component/filter/LowpassCombFilter */
    "./node_modules/tone/build/esm/component/filter/LowpassCombFilter.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _source_Noise__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../source/Noise */
    "./node_modules/tone/build/esm/source/Noise.js");
    /* harmony import */


    var _Instrument__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./Instrument */
    "./node_modules/tone/build/esm/instrument/Instrument.js");
    /**
     * Karplus-String string synthesis.
     * @example
     * const plucky = new Tone.PluckSynth().toDestination();
     * plucky.triggerAttack("C4", "+0.5");
     * plucky.triggerAttack("C3", "+1");
     * plucky.triggerAttack("C2", "+1.5");
     * plucky.triggerAttack("C1", "+2");
     * @category Instrument
     */


    var PluckSynth = /*#__PURE__*/function (_Instrument__WEBPACK_2) {
      _inherits(PluckSynth, _Instrument__WEBPACK_2);

      var _super137 = _createSuper(PluckSynth);

      function PluckSynth() {
        var _this198;

        _classCallCheck2(this, PluckSynth);

        _this198 = _super137.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PluckSynth.getDefaults(), arguments));
        _this198.name = "PluckSynth";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PluckSynth.getDefaults(), arguments);
        _this198._noise = new _source_Noise__WEBPACK_IMPORTED_MODULE_2__["Noise"]({
          context: _this198.context,
          type: "pink"
        });
        _this198.attackNoise = options.attackNoise;
        _this198._lfcf = new _component_filter_LowpassCombFilter__WEBPACK_IMPORTED_MODULE_0__["LowpassCombFilter"]({
          context: _this198.context,
          dampening: options.dampening,
          resonance: options.resonance
        });
        _this198.resonance = options.resonance;
        _this198.release = options.release;

        _this198._noise.connect(_this198._lfcf);

        _this198._lfcf.connect(_this198.output);

        return _this198;
      }

      _createClass2(PluckSynth, [{
        key: "triggerAttack",
        value: function triggerAttack(note, time) {
          var freq = this.toFrequency(note);
          time = this.toSeconds(time);
          var delayAmount = 1 / freq;

          this._lfcf.delayTime.setValueAtTime(delayAmount, time);

          this._noise.start(time);

          this._noise.stop(time + delayAmount * this.attackNoise);

          this._lfcf.resonance.cancelScheduledValues(time);

          this._lfcf.resonance.setValueAtTime(this.resonance, time);

          return this;
        }
        /**
         * Ramp down the [[resonance]] to 0 over the duration of the release time.
         */

      }, {
        key: "triggerRelease",
        value: function triggerRelease(time) {
          this._lfcf.resonance.linearRampTo(0, this.release, time);

          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(PluckSynth.prototype), "dispose", this).call(this);

          this._noise.dispose();

          this._lfcf.dispose();

          return this;
        }
      }, {
        key: "dampening",

        /**
         * The dampening control. i.e. the lowpass filter frequency of the comb filter
         * @min 0
         * @max 7000
         */
        get: function get() {
          return this._lfcf.dampening;
        },
        set: function set(fq) {
          this._lfcf.dampening = fq;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["deepMerge"])(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"].getDefaults(), {
            attackNoise: 1,
            dampening: 4000,
            resonance: 0.7,
            release: 1
          });
        }
      }]);

      return PluckSynth;
    }(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"]); //# sourceMappingURL=PluckSynth.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/instrument/PolySynth.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/PolySynth.js ***!
    \*************************************************************/

  /*! exports provided: PolySynth */

  /***/
  function node_modulesToneBuildEsmInstrumentPolySynthJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PolySynth", function () {
      return PolySynth;
    });
    /* harmony import */


    var _core_type_Midi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/type/Midi */
    "./node_modules/tone/build/esm/core/type/Midi.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _Instrument__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./Instrument */
    "./node_modules/tone/build/esm/instrument/Instrument.js");
    /* harmony import */


    var _Synth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./Synth */
    "./node_modules/tone/build/esm/instrument/Synth.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * PolySynth handles voice creation and allocation for any
     * instruments passed in as the second paramter. PolySynth is
     * not a synthesizer by itself, it merely manages voices of
     * one of the other types of synths, allowing any of the
     * monophonic synthesizers to be polyphonic.
     *
     * @example
     * const synth = new Tone.PolySynth().toDestination();
     * // set the attributes across all the voices using 'set'
     * synth.set({ detune: -1200 });
     * // play a chord
     * synth.triggerAttackRelease(["C4", "E4", "A4"], 1);
     * @category Instrument
     */


    var PolySynth = /*#__PURE__*/function (_Instrument__WEBPACK_3) {
      _inherits(PolySynth, _Instrument__WEBPACK_3);

      var _super138 = _createSuper(PolySynth);

      function PolySynth() {
        var _this199;

        _classCallCheck2(this, PolySynth);

        _this199 = _super138.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PolySynth.getDefaults(), arguments, ["voice", "options"]));
        _this199.name = "PolySynth";
        /**
         * The voices which are not currently in use
         */

        _this199._availableVoices = [];
        /**
         * The currently active voices
         */

        _this199._activeVoices = [];
        /**
         * All of the allocated voices for this synth.
         */

        _this199._voices = [];
        /**
         * The GC timeout. Held so that it could be cancelled when the node is disposed.
         */

        _this199._gcTimeout = -1;
        /**
         * A moving average of the number of active voices
         */

        _this199._averageActiveVoices = 0;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PolySynth.getDefaults(), arguments, ["voice", "options"]); // check against the old API (pre 14.3.0)

        Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(!Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isNumber"])(options.voice), "DEPRECATED: The polyphony count is no longer the first argument.");
        var defaults = options.voice.getDefaults();
        _this199.options = Object.assign(defaults, options.options);
        _this199.voice = options.voice;
        _this199.maxPolyphony = options.maxPolyphony; // create the first voice

        _this199._dummyVoice = _this199._getNextAvailableVoice(); // remove it from the voices list

        var index = _this199._voices.indexOf(_this199._dummyVoice);

        _this199._voices.splice(index, 1); // kick off the GC interval


        _this199._gcTimeout = _this199.context.setInterval(_this199._collectGarbage.bind(_assertThisInitialized(_this199)), 1);
        return _this199;
      }

      _createClass2(PolySynth, [{
        key: "_makeVoiceAvailable",

        /**
         * Invoked when the source is done making sound, so that it can be
         * readded to the pool of available voices
         */
        value: function _makeVoiceAvailable(voice) {
          this._availableVoices.push(voice); // remove the midi note from 'active voices'


          var activeVoiceIndex = this._activeVoices.findIndex(function (e) {
            return e.voice === voice;
          });

          this._activeVoices.splice(activeVoiceIndex, 1);
        }
        /**
         * Get an available voice from the pool of available voices.
         * If one is not available and the maxPolyphony limit is reached,
         * steal a voice, otherwise return null.
         */

      }, {
        key: "_getNextAvailableVoice",
        value: function _getNextAvailableVoice() {
          // if there are available voices, return the first one
          if (this._availableVoices.length) {
            return this._availableVoices.shift();
          } else if (this._voices.length < this.maxPolyphony) {
            // otherwise if there is still more maxPolyphony, make a new voice
            var voice = new this.voice(Object.assign(this.options, {
              context: this.context,
              onsilence: this._makeVoiceAvailable.bind(this)
            }));
            voice.connect(this.output);

            this._voices.push(voice);

            return voice;
          } else {
            Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["warn"])("Max polyphony exceeded. Note dropped.");
          }
        }
        /**
         * Occasionally check if there are any allocated voices which can be cleaned up.
         */

      }, {
        key: "_collectGarbage",
        value: function _collectGarbage() {
          this._averageActiveVoices = Math.max(this._averageActiveVoices * 0.95, this.activeVoices);

          if (this._availableVoices.length && this._voices.length > Math.ceil(this._averageActiveVoices + 1)) {
            // take off an available note
            var firstAvail = this._availableVoices.shift();

            var index = this._voices.indexOf(firstAvail);

            this._voices.splice(index, 1);

            if (!this.context.isOffline) {
              firstAvail.dispose();
            }
          }
        }
        /**
         * Internal method which triggers the attack
         */

      }, {
        key: "_triggerAttack",
        value: function _triggerAttack(notes, time, velocity) {
          var _this200 = this;

          notes.forEach(function (note) {
            var midiNote = new _core_type_Midi__WEBPACK_IMPORTED_MODULE_0__["MidiClass"](_this200.context, note).toMidi();

            var voice = _this200._getNextAvailableVoice();

            if (voice) {
              voice.triggerAttack(note, time, velocity);

              _this200._activeVoices.push({
                midi: midiNote,
                voice: voice,
                released: false
              });

              _this200.log("triggerAttack", note, time);
            }
          });
        }
        /**
         * Internal method which triggers the release
         */

      }, {
        key: "_triggerRelease",
        value: function _triggerRelease(notes, time) {
          var _this201 = this;

          notes.forEach(function (note) {
            var midiNote = new _core_type_Midi__WEBPACK_IMPORTED_MODULE_0__["MidiClass"](_this201.context, note).toMidi();

            var event = _this201._activeVoices.find(function (_ref72) {
              var midi = _ref72.midi,
                  released = _ref72.released;
              return midi === midiNote && !released;
            });

            if (event) {
              // trigger release on that note
              event.voice.triggerRelease(time); // mark it as released

              event.released = true;

              _this201.log("triggerRelease", note, time);
            }
          });
        }
        /**
         * Schedule the attack/release events. If the time is in the future, then it should set a timeout
         * to wait for just-in-time scheduling
         */

      }, {
        key: "_scheduleEvent",
        value: function _scheduleEvent(type, notes, time, velocity) {
          var _this202 = this;

          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(!this.disposed, "Synth was already disposed"); // if the notes are greater than this amount of time in the future, they should be scheduled with setTimeout

          if (time <= this.now()) {
            // do it immediately
            if (type === "attack") {
              this._triggerAttack(notes, time, velocity);
            } else {
              this._triggerRelease(notes, time);
            }
          } else {
            // schedule it to start in the future
            this.context.setTimeout(function () {
              _this202._scheduleEvent(type, notes, time, velocity);
            }, time - this.now());
          }
        }
        /**
         * Trigger the attack portion of the note
         * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.
         * @param  time  The start time of the note.
         * @param velocity The velocity of the note.
         * @example
         * const synth = new Tone.PolySynth(Tone.FMSynth).toDestination();
         * // trigger a chord immediately with a velocity of 0.2
         * synth.triggerAttack(["Ab3", "C4", "F5"], Tone.now(), 0.2);
         */

      }, {
        key: "triggerAttack",
        value: function triggerAttack(notes, time, velocity) {
          if (!Array.isArray(notes)) {
            notes = [notes];
          }

          var computedTime = this.toSeconds(time);

          this._scheduleEvent("attack", notes, computedTime, velocity);

          return this;
        }
        /**
         * Trigger the release of the note. Unlike monophonic instruments,
         * a note (or array of notes) needs to be passed in as the first argument.
         * @param  notes The notes to play. Accepts a single Frequency or an array of frequencies.
         * @param  time  When the release will be triggered.
         * @example
         * @example
         * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();
         * poly.triggerAttack(["Ab3", "C4", "F5"]);
         * // trigger the release of the given notes.
         * poly.triggerRelease(["Ab3", "C4"], "+1");
         * poly.triggerRelease("F5", "+3");
         */

      }, {
        key: "triggerRelease",
        value: function triggerRelease(notes, time) {
          if (!Array.isArray(notes)) {
            notes = [notes];
          }

          var computedTime = this.toSeconds(time);

          this._scheduleEvent("release", notes, computedTime);

          return this;
        }
        /**
         * Trigger the attack and release after the specified duration
         * @param  notes The notes to play. Accepts a single  Frequency or an array of frequencies.
         * @param  duration the duration of the note
         * @param  time  if no time is given, defaults to now
         * @param  velocity the velocity of the attack (0-1)
         * @example
         * const poly = new Tone.PolySynth(Tone.AMSynth).toDestination();
         * // can pass in an array of durations as well
         * poly.triggerAttackRelease(["Eb3", "G4", "Bb4", "D5"], [4, 3, 2, 1]);
         */

      }, {
        key: "triggerAttackRelease",
        value: function triggerAttackRelease(notes, duration, time, velocity) {
          var computedTime = this.toSeconds(time);
          this.triggerAttack(notes, computedTime, velocity);

          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isArray"])(duration)) {
            Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_2__["isArray"])(notes), "If the duration is an array, the notes must also be an array");
            notes = notes;

            for (var i = 0; i < notes.length; i++) {
              var d = duration[Math.min(i, duration.length - 1)];
              var durationSeconds = this.toSeconds(d);
              Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(durationSeconds > 0, "The duration must be greater than 0");
              this.triggerRelease(notes[i], computedTime + durationSeconds);
            }
          } else {
            var _durationSeconds = this.toSeconds(duration);

            Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_5__["assert"])(_durationSeconds > 0, "The duration must be greater than 0");
            this.triggerRelease(notes, computedTime + _durationSeconds);
          }

          return this;
        }
      }, {
        key: "sync",
        value: function sync() {
          this._syncMethod("triggerAttack", 1);

          this._syncMethod("triggerRelease", 1);

          return this;
        }
        /**
         * Set a member/attribute of the voices
         * @example
         * const poly = new Tone.PolySynth().toDestination();
         * // set all of the voices using an options object for the synth type
         * poly.set({
         * 	envelope: {
         * 		attack: 0.25
         * 	}
         * });
         * poly.triggerAttackRelease("Bb3", 0.2);
         */

      }, {
        key: "set",
        value: function set(options) {
          // remove options which are controlled by the PolySynth
          var sanitizedOptions = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["omitFromObject"])(options, ["onsilence", "context"]); // store all of the options

          this.options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["deepMerge"])(this.options, sanitizedOptions);

          this._voices.forEach(function (voice) {
            return voice.set(sanitizedOptions);
          });

          this._dummyVoice.set(sanitizedOptions);

          return this;
        }
      }, {
        key: "get",
        value: function get() {
          return this._dummyVoice.get();
        }
        /**
         * Trigger the release portion of all the currently active voices immediately.
         * Useful for silencing the synth.
         */

      }, {
        key: "releaseAll",
        value: function releaseAll() {
          var now = this.now();

          this._activeVoices.forEach(function (_ref73) {
            var voice = _ref73.voice;
            voice.triggerRelease(now);
          });

          this._activeVoices = [];
          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(PolySynth.prototype), "dispose", this).call(this);

          this._dummyVoice.dispose();

          this._voices.forEach(function (v) {
            return v.dispose();
          });

          this._activeVoices = [];
          this._availableVoices = [];
          this.context.clearInterval(this._gcTimeout);
          return this;
        }
      }, {
        key: "activeVoices",

        /**
         * The number of active voices.
         */
        get: function get() {
          return this._activeVoices.length;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"].getDefaults(), {
            maxPolyphony: 32,
            options: {},
            voice: _Synth__WEBPACK_IMPORTED_MODULE_4__["Synth"]
          });
        }
      }]);

      return PolySynth;
    }(_Instrument__WEBPACK_IMPORTED_MODULE_3__["Instrument"]); //# sourceMappingURL=PolySynth.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/instrument/Sampler.js":
  /*!***********************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/Sampler.js ***!
    \***********************************************************/

  /*! exports provided: Sampler */

  /***/
  function node_modulesToneBuildEsmInstrumentSamplerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Sampler", function () {
      return Sampler;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/ToneAudioBuffers */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
    /* harmony import */


    var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/type/Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /* harmony import */


    var _core_type_Frequency__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/type/Frequency */
    "./node_modules/tone/build/esm/core/type/Frequency.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _instrument_Instrument__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../instrument/Instrument */
    "./node_modules/tone/build/esm/instrument/Instrument.js");
    /* harmony import */


    var _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../source/buffer/ToneBufferSource */
    "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
    /* harmony import */


    var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../core/util/Decorator */
    "./node_modules/tone/build/esm/core/util/Decorator.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * Pass in an object which maps the note's pitch or midi value to the url,
     * then you can trigger the attack and release of that note like other instruments.
     * By automatically repitching the samples, it is possible to play pitches which
     * were not explicitly included which can save loading time.
     *
     * For sample or buffer playback where repitching is not necessary,
     * use [[Player]].
     * @example
     * const sampler = new Tone.Sampler({
     * 	urls: {
     * 		C1: "C1.mp3",
     * 		C2: "C2.mp3",
     * 	},
     * 	baseUrl: "https://tonejs.github.io/examples/audio/casio/",
     * 	onload: () => {
     * 		sampler.triggerAttackRelease(["C1", "E1", "G1", "B1"], 0.5);
     * 	},
     * });
     * @category Instrument
     */


    var Sampler = /*#__PURE__*/function (_instrument_Instrumen2) {
      _inherits(Sampler, _instrument_Instrumen2);

      var _super139 = _createSuper(Sampler);

      function Sampler() {
        var _this203;

        _classCallCheck2(this, Sampler);

        _this203 = _super139.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Sampler.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls"));
        _this203.name = "Sampler";
        /**
         * The object of all currently playing BufferSources
         */

        _this203._activeSources = new Map();
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["optionsFromArguments"])(Sampler.getDefaults(), arguments, ["urls", "onload", "baseUrl"], "urls");
        var urlMap = {};
        Object.keys(options.urls).forEach(function (note) {
          var noteNumber = parseInt(note, 10);
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNote"])(note) || Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(noteNumber) && isFinite(noteNumber), "url key is neither a note or midi pitch: ".concat(note));

          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNote"])(note)) {
            // convert the note name to MIDI
            var mid = new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_3__["FrequencyClass"](_this203.context, note).toMidi();
            urlMap[mid] = options.urls[note];
          } else if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(noteNumber) && isFinite(noteNumber)) {
            // otherwise if it's numbers assume it's midi
            urlMap[noteNumber] = options.urls[noteNumber];
          }
        });
        _this203._buffers = new _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_1__["ToneAudioBuffers"]({
          urls: urlMap,
          onload: options.onload,
          baseUrl: options.baseUrl,
          onerror: options.onerror
        });
        _this203.attack = options.attack;
        _this203.release = options.release;
        _this203.curve = options.curve; // invoke the callback if it's already loaded

        if (_this203._buffers.loaded) {
          // invoke onload deferred
          Promise.resolve().then(options.onload);
        }

        return _this203;
      }

      _createClass2(Sampler, [{
        key: "_findClosest",

        /**
         * Returns the difference in steps between the given midi note at the closets sample.
         */
        value: function _findClosest(midi) {
          // searches within 8 octaves of the given midi note
          var MAX_INTERVAL = 96;
          var interval = 0;

          while (interval < MAX_INTERVAL) {
            // check above and below
            if (this._buffers.has(midi + interval)) {
              return -interval;
            } else if (this._buffers.has(midi - interval)) {
              return interval;
            }

            interval++;
          }

          throw new Error("No available buffers for note: ".concat(midi));
        }
        /**
         * @param  notes	The note to play, or an array of notes.
         * @param  time     When to play the note
         * @param  velocity The velocity to play the sample back.
         */

      }, {
        key: "triggerAttack",
        value: function triggerAttack(notes, time) {
          var _this204 = this;

          var velocity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
          this.log("triggerAttack", notes, time, velocity);

          if (!Array.isArray(notes)) {
            notes = [notes];
          }

          notes.forEach(function (note) {
            var midi = new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_3__["FrequencyClass"](_this204.context, note).toMidi(); // find the closest note pitch

            var difference = _this204._findClosest(midi);

            var closestNote = midi - difference;

            var buffer = _this204._buffers.get(closestNote);

            var playbackRate = Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_2__["intervalToFrequencyRatio"])(difference); // play that note

            var source = new _source_buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_8__["ToneBufferSource"]({
              url: buffer,
              context: _this204.context,
              curve: _this204.curve,
              fadeIn: _this204.attack,
              fadeOut: _this204.release,
              playbackRate: playbackRate
            }).connect(_this204.output);
            source.start(time, 0, buffer.duration / playbackRate, velocity); // add it to the active sources

            if (!Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isArray"])(_this204._activeSources.get(midi))) {
              _this204._activeSources.set(midi, []);
            }

            _this204._activeSources.get(midi).push(source); // remove it when it's done


            source.onended = function () {
              if (_this204._activeSources && _this204._activeSources.has(midi)) {
                var sources = _this204._activeSources.get(midi);

                var index = sources.indexOf(source);

                if (index !== -1) {
                  sources.splice(index, 1);
                }
              }
            };
          });
          return this;
        }
        /**
         * @param  notes	The note to release, or an array of notes.
         * @param  time     	When to release the note.
         */

      }, {
        key: "triggerRelease",
        value: function triggerRelease(notes, time) {
          var _this205 = this;

          this.log("triggerRelease", notes, time);

          if (!Array.isArray(notes)) {
            notes = [notes];
          }

          notes.forEach(function (note) {
            var midi = new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_3__["FrequencyClass"](_this205.context, note).toMidi(); // find the note

            if (_this205._activeSources.has(midi) && _this205._activeSources.get(midi).length) {
              var sources = _this205._activeSources.get(midi);

              time = _this205.toSeconds(time);
              sources.forEach(function (source) {
                source.stop(time);
              });

              _this205._activeSources.set(midi, []);
            }
          });
          return this;
        }
        /**
         * Release all currently active notes.
         * @param  time     	When to release the notes.
         */

      }, {
        key: "releaseAll",
        value: function releaseAll(time) {
          var computedTime = this.toSeconds(time);

          this._activeSources.forEach(function (sources) {
            while (sources.length) {
              var source = sources.shift();
              source.stop(computedTime);
            }
          });

          return this;
        }
      }, {
        key: "sync",
        value: function sync() {
          this._syncMethod("triggerAttack", 1);

          this._syncMethod("triggerRelease", 1);

          return this;
        }
        /**
         * Invoke the attack phase, then after the duration, invoke the release.
         * @param  notes	The note to play and release, or an array of notes.
         * @param  duration The time the note should be held
         * @param  time     When to start the attack
         * @param  velocity The velocity of the attack
         */

      }, {
        key: "triggerAttackRelease",
        value: function triggerAttackRelease(notes, duration, time) {
          var _this206 = this;

          var velocity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
          var computedTime = this.toSeconds(time);
          this.triggerAttack(notes, computedTime, velocity);

          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isArray"])(duration)) {
            Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isArray"])(notes), "notes must be an array when duration is array");
            notes.forEach(function (note, index) {
              var d = duration[Math.min(index, duration.length - 1)];

              _this206.triggerRelease(note, computedTime + _this206.toSeconds(d));
            });
          } else {
            this.triggerRelease(notes, computedTime + this.toSeconds(duration));
          }

          return this;
        }
        /**
         * Add a note to the sampler.
         * @param  note      The buffer's pitch.
         * @param  url  Either the url of the buffer, or a buffer which will be added with the given name.
         * @param  callback  The callback to invoke when the url is loaded.
         */

      }, {
        key: "add",
        value: function add(note, url, callback) {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_10__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNote"])(note) || isFinite(note), "note must be a pitch or midi: ".concat(note));

          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNote"])(note)) {
            // convert the note name to MIDI
            var mid = new _core_type_Frequency__WEBPACK_IMPORTED_MODULE_3__["FrequencyClass"](this.context, note).toMidi();

            this._buffers.add(mid, url, callback);
          } else {
            // otherwise if it's numbers assume it's midi
            this._buffers.add(note, url, callback);
          }

          return this;
        }
        /**
         * If the buffers are loaded or not
         */

      }, {
        key: "dispose",

        /**
         * Clean up
         */
        value: function dispose() {
          _get(_getPrototypeOf(Sampler.prototype), "dispose", this).call(this);

          this._buffers.dispose();

          this._activeSources.forEach(function (sources) {
            sources.forEach(function (source) {
              return source.dispose();
            });
          });

          this._activeSources.clear();

          return this;
        }
      }, {
        key: "loaded",
        get: function get() {
          return this._buffers.loaded;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_instrument_Instrument__WEBPACK_IMPORTED_MODULE_7__["Instrument"].getDefaults(), {
            attack: 0,
            baseUrl: "",
            curve: "exponential",
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
            onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
            release: 0.1,
            urls: {}
          });
        }
      }]);

      return Sampler;
    }(_instrument_Instrument__WEBPACK_IMPORTED_MODULE_7__["Instrument"]);

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_9__["timeRange"])(0)], Sampler.prototype, "attack", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_9__["timeRange"])(0)], Sampler.prototype, "release", void 0); //# sourceMappingURL=Sampler.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/instrument/Synth.js":
  /*!*********************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/Synth.js ***!
    \*********************************************************/

  /*! exports provided: Synth */

  /***/
  function node_modulesToneBuildEsmInstrumentSynthJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Synth", function () {
      return Synth;
    });
    /* harmony import */


    var _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../component/envelope/AmplitudeEnvelope */
    "./node_modules/tone/build/esm/component/envelope/AmplitudeEnvelope.js");
    /* harmony import */


    var _component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../component/envelope/Envelope */
    "./node_modules/tone/build/esm/component/envelope/Envelope.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../source/oscillator/OmniOscillator */
    "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
    /* harmony import */


    var _source_Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../source/Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _Monophonic__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./Monophonic */
    "./node_modules/tone/build/esm/instrument/Monophonic.js");
    /**
     * Synth is composed simply of a [[OmniOscillator]] routed through an [[AmplitudeEnvelope]].
     * ```
     * +----------------+   +-------------------+
     * | OmniOscillator +>--> AmplitudeEnvelope +>--> Output
     * +----------------+   +-------------------+
     * ```
     * @example
     * const synth = new Tone.Synth().toDestination();
     * synth.triggerAttackRelease("C4", "8n");
     * @category Instrument
     */


    var Synth = /*#__PURE__*/function (_Monophonic__WEBPACK_4) {
      _inherits(Synth, _Monophonic__WEBPACK_4);

      var _super140 = _createSuper(Synth);

      function Synth() {
        var _this207;

        _classCallCheck2(this, Synth);

        _this207 = _super140.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Synth.getDefaults(), arguments));
        _this207.name = "Synth";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Synth.getDefaults(), arguments);
        _this207.oscillator = new _source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_5__["OmniOscillator"](Object.assign({
          context: _this207.context,
          detune: options.detune,
          onstop: function onstop() {
            return _this207.onsilence(_assertThisInitialized(_this207));
          }
        }, options.oscillator));
        _this207.frequency = _this207.oscillator.frequency;
        _this207.detune = _this207.oscillator.detune;
        _this207.envelope = new _component_envelope_AmplitudeEnvelope__WEBPACK_IMPORTED_MODULE_0__["AmplitudeEnvelope"](Object.assign({
          context: _this207.context
        }, options.envelope)); // connect the oscillators to the output

        _this207.oscillator.chain(_this207.envelope, _this207.output);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this207), ["oscillator", "frequency", "detune", "envelope"]);
        return _this207;
      }

      _createClass2(Synth, [{
        key: "_triggerEnvelopeAttack",

        /**
         * start the attack portion of the envelope
         * @param time the time the attack should start
         * @param velocity the velocity of the note (0-1)
         */
        value: function _triggerEnvelopeAttack(time, velocity) {
          // the envelopes
          this.envelope.triggerAttack(time, velocity);
          this.oscillator.start(time); // if there is no release portion, stop the oscillator

          if (this.envelope.sustain === 0) {
            var computedAttack = this.toSeconds(this.envelope.attack);
            var computedDecay = this.toSeconds(this.envelope.decay);
            this.oscillator.stop(time + computedAttack + computedDecay);
          }
        }
        /**
         * start the release portion of the envelope
         * @param time the time the release should start
         */

      }, {
        key: "_triggerEnvelopeRelease",
        value: function _triggerEnvelopeRelease(time) {
          this.envelope.triggerRelease(time);
          this.oscillator.stop(time + this.toSeconds(this.envelope.release));
        }
      }, {
        key: "getLevelAtTime",
        value: function getLevelAtTime(time) {
          time = this.toSeconds(time);
          return this.envelope.getValueAtTime(time);
        }
        /**
         * clean up
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Synth.prototype), "dispose", this).call(this);

          this.oscillator.dispose();
          this.envelope.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Monophonic__WEBPACK_IMPORTED_MODULE_7__["Monophonic"].getDefaults(), {
            envelope: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_component_envelope_Envelope__WEBPACK_IMPORTED_MODULE_1__["Envelope"].getDefaults(), Object.keys(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"].getDefaults())), {
              attack: 0.005,
              decay: 0.1,
              release: 1,
              sustain: 0.3
            }),
            oscillator: Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["omitFromObject"])(_source_oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_5__["OmniOscillator"].getDefaults(), [].concat(_toConsumableArray(Object.keys(_source_Source__WEBPACK_IMPORTED_MODULE_6__["Source"].getDefaults())), ["frequency", "detune"])), {
              type: "triangle"
            })
          });
        }
      }]);

      return Synth;
    }(_Monophonic__WEBPACK_IMPORTED_MODULE_7__["Monophonic"]); //# sourceMappingURL=Synth.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/instrument/index.js":
  /*!*********************************************************!*\
    !*** ./node_modules/tone/build/esm/instrument/index.js ***!
    \*********************************************************/

  /*! exports provided: AMSynth, DuoSynth, FMSynth, MetalSynth, MembraneSynth, MonoSynth, NoiseSynth, PluckSynth, PolySynth, Sampler, Synth */

  /***/
  function node_modulesToneBuildEsmInstrumentIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _AMSynth__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./AMSynth */
    "./node_modules/tone/build/esm/instrument/AMSynth.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AMSynth", function () {
      return _AMSynth__WEBPACK_IMPORTED_MODULE_0__["AMSynth"];
    });
    /* harmony import */


    var _DuoSynth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./DuoSynth */
    "./node_modules/tone/build/esm/instrument/DuoSynth.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "DuoSynth", function () {
      return _DuoSynth__WEBPACK_IMPORTED_MODULE_1__["DuoSynth"];
    });
    /* harmony import */


    var _FMSynth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./FMSynth */
    "./node_modules/tone/build/esm/instrument/FMSynth.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FMSynth", function () {
      return _FMSynth__WEBPACK_IMPORTED_MODULE_2__["FMSynth"];
    });
    /* harmony import */


    var _MetalSynth__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./MetalSynth */
    "./node_modules/tone/build/esm/instrument/MetalSynth.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MetalSynth", function () {
      return _MetalSynth__WEBPACK_IMPORTED_MODULE_3__["MetalSynth"];
    });
    /* harmony import */


    var _MembraneSynth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./MembraneSynth */
    "./node_modules/tone/build/esm/instrument/MembraneSynth.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MembraneSynth", function () {
      return _MembraneSynth__WEBPACK_IMPORTED_MODULE_4__["MembraneSynth"];
    });
    /* harmony import */


    var _MonoSynth__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./MonoSynth */
    "./node_modules/tone/build/esm/instrument/MonoSynth.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "MonoSynth", function () {
      return _MonoSynth__WEBPACK_IMPORTED_MODULE_5__["MonoSynth"];
    });
    /* harmony import */


    var _NoiseSynth__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./NoiseSynth */
    "./node_modules/tone/build/esm/instrument/NoiseSynth.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "NoiseSynth", function () {
      return _NoiseSynth__WEBPACK_IMPORTED_MODULE_6__["NoiseSynth"];
    });
    /* harmony import */


    var _PluckSynth__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./PluckSynth */
    "./node_modules/tone/build/esm/instrument/PluckSynth.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PluckSynth", function () {
      return _PluckSynth__WEBPACK_IMPORTED_MODULE_7__["PluckSynth"];
    });
    /* harmony import */


    var _PolySynth__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./PolySynth */
    "./node_modules/tone/build/esm/instrument/PolySynth.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PolySynth", function () {
      return _PolySynth__WEBPACK_IMPORTED_MODULE_8__["PolySynth"];
    });
    /* harmony import */


    var _Sampler__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./Sampler */
    "./node_modules/tone/build/esm/instrument/Sampler.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Sampler", function () {
      return _Sampler__WEBPACK_IMPORTED_MODULE_9__["Sampler"];
    });
    /* harmony import */


    var _Synth__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./Synth */
    "./node_modules/tone/build/esm/instrument/Synth.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Synth", function () {
      return _Synth__WEBPACK_IMPORTED_MODULE_10__["Synth"];
    }); //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/Abs.js":
  /*!***************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/Abs.js ***!
    \***************************************************/

  /*! exports provided: Abs */

  /***/
  function node_modulesToneBuildEsmSignalAbsJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Abs", function () {
      return Abs;
    });
    /* harmony import */


    var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./SignalOperator */
    "./node_modules/tone/build/esm/signal/SignalOperator.js");
    /* harmony import */


    var _WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./WaveShaper */
    "./node_modules/tone/build/esm/signal/WaveShaper.js");
    /**
     * Return the absolute value of an incoming signal.
     *
     * @offline 0.5 1
     * @example
     * const abs = new Tone.Abs().toDestination();
     * const signal = new Tone.Signal(1);
     * signal.rampTo(-1, 0.5);
     * signal.connect(abs);
     * @category Signal
     */


    var Abs = /*#__PURE__*/function (_SignalOperator__WEBP) {
      _inherits(Abs, _SignalOperator__WEBP);

      var _super141 = _createSuper(Abs);

      function Abs() {
        var _this208;

        _classCallCheck2(this, Abs);

        _this208 = _super141.apply(this, arguments);
        _this208.name = "Abs";
        /**
         * The node which converts the audio ranges
         */

        _this208._abs = new _WaveShaper__WEBPACK_IMPORTED_MODULE_1__["WaveShaper"]({
          context: _this208.context,
          mapping: function mapping(val) {
            if (Math.abs(val) < 0.001) {
              return 0;
            } else {
              return Math.abs(val);
            }
          }
        });
        /**
         * The AudioRange input [-1, 1]
         */

        _this208.input = _this208._abs;
        /**
         * The output range [0, 1]
         */

        _this208.output = _this208._abs;
        return _this208;
      }
      /**
       * clean up
       */


      _createClass2(Abs, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Abs.prototype), "dispose", this).call(this);

          this._abs.dispose();

          return this;
        }
      }]);

      return Abs;
    }(_SignalOperator__WEBPACK_IMPORTED_MODULE_0__["SignalOperator"]); //# sourceMappingURL=Abs.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/Add.js":
  /*!***************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/Add.js ***!
    \***************************************************/

  /*! exports provided: Add */

  /***/
  function node_modulesToneBuildEsmSignalAddJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Add", function () {
      return Add;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /**
     * Add a signal and a number or two signals. When no value is
     * passed into the constructor, Tone.Add will sum input and `addend`
     * If a value is passed into the constructor, the it will be added to the input.
     *
     * @offline 0.5 1
     * @example
     * const add = new Tone.Add(2).toDestination();
     * add.addend.setValueAtTime(1, 0.2);
     * const signal = new Tone.Signal(2);
     * // add a signal and a scalar
     * signal.connect(add);
     * signal.setValueAtTime(1, 0.1);
     * @category Signal
     */


    var Add = /*#__PURE__*/function (_Signal__WEBPACK_IMPO) {
      _inherits(Add, _Signal__WEBPACK_IMPO);

      var _super142 = _createSuper(Add);

      function Add() {
        var _this209;

        _classCallCheck2(this, Add);

        _this209 = _super142.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Add.getDefaults(), arguments, ["value"])));
        _this209.override = false;
        _this209.name = "Add";
        /**
         * the summing node
         */

        _this209._sum = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
          context: _this209.context
        });
        _this209.input = _this209._sum;
        _this209.output = _this209._sum;
        /**
         * The value which is added to the input signal
         */

        _this209.addend = _this209._param;
        Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connectSeries"])(_this209._constantSource, _this209._sum);
        return _this209;
      }

      _createClass2(Add, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Add.prototype), "dispose", this).call(this);

          this._sum.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"].getDefaults(), {
            value: 0
          });
        }
      }]);

      return Add;
    }(_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]); //# sourceMappingURL=Add.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/AudioToGain.js":
  /*!***********************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/AudioToGain.js ***!
    \***********************************************************/

  /*! exports provided: AudioToGain */

  /***/
  function node_modulesToneBuildEsmSignalAudioToGainJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AudioToGain", function () {
      return AudioToGain;
    });
    /* harmony import */


    var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./SignalOperator */
    "./node_modules/tone/build/esm/signal/SignalOperator.js");
    /* harmony import */


    var _WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./WaveShaper */
    "./node_modules/tone/build/esm/signal/WaveShaper.js");
    /**
     * AudioToGain converts an input in AudioRange [-1,1] to NormalRange [0,1].
     * See [[GainToAudio]].
     * @category Signal
     */


    var AudioToGain = /*#__PURE__*/function (_SignalOperator__WEBP2) {
      _inherits(AudioToGain, _SignalOperator__WEBP2);

      var _super143 = _createSuper(AudioToGain);

      function AudioToGain() {
        var _this210;

        _classCallCheck2(this, AudioToGain);

        _this210 = _super143.apply(this, arguments);
        _this210.name = "AudioToGain";
        /**
         * The node which converts the audio ranges
         */

        _this210._norm = new _WaveShaper__WEBPACK_IMPORTED_MODULE_1__["WaveShaper"]({
          context: _this210.context,
          mapping: function mapping(x) {
            return (x + 1) / 2;
          }
        });
        /**
         * The AudioRange input [-1, 1]
         */

        _this210.input = _this210._norm;
        /**
         * The GainRange output [0, 1]
         */

        _this210.output = _this210._norm;
        return _this210;
      }
      /**
       * clean up
       */


      _createClass2(AudioToGain, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(AudioToGain.prototype), "dispose", this).call(this);

          this._norm.dispose();

          return this;
        }
      }]);

      return AudioToGain;
    }(_SignalOperator__WEBPACK_IMPORTED_MODULE_0__["SignalOperator"]); //# sourceMappingURL=AudioToGain.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/GainToAudio.js":
  /*!***********************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/GainToAudio.js ***!
    \***********************************************************/

  /*! exports provided: GainToAudio */

  /***/
  function node_modulesToneBuildEsmSignalGainToAudioJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "GainToAudio", function () {
      return GainToAudio;
    });
    /* harmony import */


    var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./SignalOperator */
    "./node_modules/tone/build/esm/signal/SignalOperator.js");
    /* harmony import */


    var _WaveShaper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./WaveShaper */
    "./node_modules/tone/build/esm/signal/WaveShaper.js");
    /**
     * GainToAudio converts an input in NormalRange [0,1] to AudioRange [-1,1].
     * See [[AudioToGain]].
     * @category Signal
     */


    var GainToAudio = /*#__PURE__*/function (_SignalOperator__WEBP3) {
      _inherits(GainToAudio, _SignalOperator__WEBP3);

      var _super144 = _createSuper(GainToAudio);

      function GainToAudio() {
        var _this211;

        _classCallCheck2(this, GainToAudio);

        _this211 = _super144.apply(this, arguments);
        _this211.name = "GainToAudio";
        /**
         * The node which converts the audio ranges
         */

        _this211._norm = new _WaveShaper__WEBPACK_IMPORTED_MODULE_1__["WaveShaper"]({
          context: _this211.context,
          mapping: function mapping(x) {
            return Math.abs(x) * 2 - 1;
          }
        });
        /**
         * The NormalRange input [0, 1]
         */

        _this211.input = _this211._norm;
        /**
         * The AudioRange output [-1, 1]
         */

        _this211.output = _this211._norm;
        return _this211;
      }
      /**
       * clean up
       */


      _createClass2(GainToAudio, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(GainToAudio.prototype), "dispose", this).call(this);

          this._norm.dispose();

          return this;
        }
      }]);

      return GainToAudio;
    }(_SignalOperator__WEBPACK_IMPORTED_MODULE_0__["SignalOperator"]); //# sourceMappingURL=GainToAudio.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/GreaterThan.js":
  /*!***********************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/GreaterThan.js ***!
    \***********************************************************/

  /*! exports provided: GreaterThan */

  /***/
  function node_modulesToneBuildEsmSignalGreaterThanJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "GreaterThan", function () {
      return GreaterThan;
    });
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Subtract__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Subtract */
    "./node_modules/tone/build/esm/signal/Subtract.js");
    /* harmony import */


    var _Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _GreaterThanZero__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./GreaterThanZero */
    "./node_modules/tone/build/esm/signal/GreaterThanZero.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Output 1 if the signal is greater than the value, otherwise outputs 0.
     * can compare two signals or a signal and a number.
     *
     * @offline 0.1 1
     * @example
     * const gt = new Tone.GreaterThan(2).toDestination();
     * const sig = new Tone.Signal(4).connect(gt);
     */


    var GreaterThan = /*#__PURE__*/function (_Signal__WEBPACK_IMPO2) {
      _inherits(GreaterThan, _Signal__WEBPACK_IMPO2);

      var _super145 = _createSuper(GreaterThan);

      function GreaterThan() {
        var _this212;

        _classCallCheck2(this, GreaterThan);

        _this212 = _super145.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(GreaterThan.getDefaults(), arguments, ["value"])));
        _this212.name = "GreaterThan";
        _this212.override = false;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(GreaterThan.getDefaults(), arguments, ["value"]);
        _this212._subtract = _this212.input = new _Subtract__WEBPACK_IMPORTED_MODULE_1__["Subtract"]({
          context: _this212.context,
          value: options.value
        });
        _this212._gtz = _this212.output = new _GreaterThanZero__WEBPACK_IMPORTED_MODULE_3__["GreaterThanZero"]({
          context: _this212.context
        });
        _this212.comparator = _this212._param = _this212._subtract.subtrahend;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this212), "comparator"); // connect

        _this212._subtract.connect(_this212._gtz);

        return _this212;
      }

      _createClass2(GreaterThan, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(GreaterThan.prototype), "dispose", this).call(this);

          this._gtz.dispose();

          this._subtract.dispose();

          this.comparator.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"].getDefaults(), {
            value: 0
          });
        }
      }]);

      return GreaterThan;
    }(_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"]); //# sourceMappingURL=GreaterThan.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/GreaterThanZero.js":
  /*!***************************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/GreaterThanZero.js ***!
    \***************************************************************/

  /*! exports provided: GreaterThanZero */

  /***/
  function node_modulesToneBuildEsmSignalGreaterThanZeroJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "GreaterThanZero", function () {
      return GreaterThanZero;
    });
    /* harmony import */


    var _SignalOperator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./SignalOperator */
    "./node_modules/tone/build/esm/signal/SignalOperator.js");
    /* harmony import */


    var _Multiply__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _WaveShaper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./WaveShaper */
    "./node_modules/tone/build/esm/signal/WaveShaper.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /**
     * GreaterThanZero outputs 1 when the input is strictly greater than zero
     * @offline 0.1 1
     * @example
     * const gt0 = new Tone.GreaterThanZero().toDestination();
     * const sig = new Tone.Signal(0.5).connect(gt0);
     * sig.setValueAtTime(-1, 0.05);
     */


    var GreaterThanZero = /*#__PURE__*/function (_SignalOperator__WEBP4) {
      _inherits(GreaterThanZero, _SignalOperator__WEBP4);

      var _super146 = _createSuper(GreaterThanZero);

      function GreaterThanZero() {
        var _this213;

        _classCallCheck2(this, GreaterThanZero);

        _this213 = _super146.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(GreaterThanZero.getDefaults(), arguments)));
        _this213.name = "GreaterThanZero";
        _this213._thresh = _this213.output = new _WaveShaper__WEBPACK_IMPORTED_MODULE_2__["WaveShaper"]({
          context: _this213.context,
          length: 127,
          mapping: function mapping(val) {
            if (val <= 0) {
              return 0;
            } else {
              return 1;
            }
          }
        });
        _this213._scale = _this213.input = new _Multiply__WEBPACK_IMPORTED_MODULE_1__["Multiply"]({
          context: _this213.context,
          value: 10000
        }); // connections

        _this213._scale.connect(_this213._thresh);

        return _this213;
      }

      _createClass2(GreaterThanZero, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(GreaterThanZero.prototype), "dispose", this).call(this);

          this._scale.dispose();

          this._thresh.dispose();

          return this;
        }
      }]);

      return GreaterThanZero;
    }(_SignalOperator__WEBPACK_IMPORTED_MODULE_0__["SignalOperator"]); //# sourceMappingURL=GreaterThanZero.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/Multiply.js":
  /*!********************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/Multiply.js ***!
    \********************************************************/

  /*! exports provided: Multiply */

  /***/
  function node_modulesToneBuildEsmSignalMultiplyJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Multiply", function () {
      return Multiply;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /**
     * Multiply two incoming signals. Or, if a number is given in the constructor,
     * multiplies the incoming signal by that value.
     *
     * @example
     * // multiply two signals
     * const mult = new Tone.Multiply();
     * const sigA = new Tone.Signal(3);
     * const sigB = new Tone.Signal(4);
     * sigA.connect(mult);
     * sigB.connect(mult.factor);
     * // output of mult is 12.
     * @example
     * // multiply a signal and a number
     * const mult = new Tone.Multiply(10);
     * const sig = new Tone.Signal(2).connect(mult);
     * // the output of mult is 20.
     * @category Signal
     */


    var Multiply = /*#__PURE__*/function (_Signal__WEBPACK_IMPO3) {
      _inherits(Multiply, _Signal__WEBPACK_IMPO3);

      var _super147 = _createSuper(Multiply);

      function Multiply() {
        var _this214;

        _classCallCheck2(this, Multiply);

        _this214 = _super147.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Multiply.getDefaults(), arguments, ["value"])));
        _this214.name = "Multiply";
        /**
         * Indicates if the value should be overridden on connection
         */

        _this214.override = false;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Multiply.getDefaults(), arguments, ["value"]);
        _this214._mult = _this214.input = _this214.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this214.context,
          minValue: options.minValue,
          maxValue: options.maxValue
        });
        _this214.factor = _this214._param = _this214._mult.gain;

        _this214.factor.setValueAtTime(options.value, 0);

        return _this214;
      }

      _createClass2(Multiply, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Multiply.prototype), "dispose", this).call(this);

          this._mult.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"].getDefaults(), {
            value: 0
          });
        }
      }]);

      return Multiply;
    }(_Signal__WEBPACK_IMPORTED_MODULE_2__["Signal"]); //# sourceMappingURL=Multiply.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/Negate.js":
  /*!******************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/Negate.js ***!
    \******************************************************/

  /*! exports provided: Negate */

  /***/
  function node_modulesToneBuildEsmSignalNegateJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Negate", function () {
      return Negate;
    });
    /* harmony import */


    var _Multiply__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _SignalOperator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./SignalOperator */
    "./node_modules/tone/build/esm/signal/SignalOperator.js");
    /**
     * Negate the incoming signal. i.e. an input signal of 10 will output -10
     *
     * @example
     * const neg = new Tone.Negate();
     * const sig = new Tone.Signal(-2).connect(neg);
     * // output of neg is positive 2.
     * @category Signal
     */


    var Negate = /*#__PURE__*/function (_SignalOperator__WEBP5) {
      _inherits(Negate, _SignalOperator__WEBP5);

      var _super148 = _createSuper(Negate);

      function Negate() {
        var _this215;

        _classCallCheck2(this, Negate);

        _this215 = _super148.apply(this, arguments);
        _this215.name = "Negate";
        /**
         * negation is done by multiplying by -1
         */

        _this215._multiply = new _Multiply__WEBPACK_IMPORTED_MODULE_0__["Multiply"]({
          context: _this215.context,
          value: -1
        });
        /**
         * The input and output are equal to the multiply node
         */

        _this215.input = _this215._multiply;
        _this215.output = _this215._multiply;
        return _this215;
      }
      /**
       * clean up
       * @returns {Negate} this
       */


      _createClass2(Negate, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Negate.prototype), "dispose", this).call(this);

          this._multiply.dispose();

          return this;
        }
      }]);

      return Negate;
    }(_SignalOperator__WEBPACK_IMPORTED_MODULE_1__["SignalOperator"]); //# sourceMappingURL=Negate.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/Pow.js":
  /*!***************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/Pow.js ***!
    \***************************************************/

  /*! exports provided: Pow */

  /***/
  function node_modulesToneBuildEsmSignalPowJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Pow", function () {
      return Pow;
    });
    /* harmony import */


    var _WaveShaper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./WaveShaper */
    "./node_modules/tone/build/esm/signal/WaveShaper.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _SignalOperator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./SignalOperator */
    "./node_modules/tone/build/esm/signal/SignalOperator.js");
    /**
     * Pow applies an exponent to the incoming signal. The incoming signal must be AudioRange [-1, 1]
     *
     * @example
     * const pow = new Tone.Pow(2);
     * const sig = new Tone.Signal(0.5).connect(pow);
     * // output of pow is 0.25.
     * @category Signal
     */


    var Pow = /*#__PURE__*/function (_SignalOperator__WEBP6) {
      _inherits(Pow, _SignalOperator__WEBP6);

      var _super149 = _createSuper(Pow);

      function Pow() {
        var _this216;

        _classCallCheck2(this, Pow);

        _this216 = _super149.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Pow.getDefaults(), arguments, ["value"])));
        _this216.name = "Pow";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Pow.getDefaults(), arguments, ["value"]);
        _this216._exponentScaler = _this216.input = _this216.output = new _WaveShaper__WEBPACK_IMPORTED_MODULE_0__["WaveShaper"]({
          context: _this216.context,
          mapping: _this216._expFunc(options.value),
          length: 8192
        });
        _this216._exponent = options.value;
        return _this216;
      }

      _createClass2(Pow, [{
        key: "_expFunc",

        /**
         * the function which maps the waveshaper
         * @param exponent exponent value
         */
        value: function _expFunc(exponent) {
          return function (val) {
            return Math.pow(Math.abs(val), exponent);
          };
        }
        /**
         * The value of the exponent.
         */

      }, {
        key: "dispose",

        /**
         * Clean up.
         */
        value: function dispose() {
          _get(_getPrototypeOf(Pow.prototype), "dispose", this).call(this);

          this._exponentScaler.dispose();

          return this;
        }
      }, {
        key: "value",
        get: function get() {
          return this._exponent;
        },
        set: function set(exponent) {
          this._exponent = exponent;

          this._exponentScaler.setMap(this._expFunc(this._exponent));
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_SignalOperator__WEBPACK_IMPORTED_MODULE_2__["SignalOperator"].getDefaults(), {
            value: 1
          });
        }
      }]);

      return Pow;
    }(_SignalOperator__WEBPACK_IMPORTED_MODULE_2__["SignalOperator"]); //# sourceMappingURL=Pow.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/Scale.js":
  /*!*****************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/Scale.js ***!
    \*****************************************************/

  /*! exports provided: Scale */

  /***/
  function node_modulesToneBuildEsmSignalScaleJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Scale", function () {
      return Scale;
    });
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Add__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Add */
    "./node_modules/tone/build/esm/signal/Add.js");
    /* harmony import */


    var _Multiply__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _SignalOperator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./SignalOperator */
    "./node_modules/tone/build/esm/signal/SignalOperator.js");
    /**
     * Performs a linear scaling on an input signal.
     * Scales a NormalRange input to between
     * outputMin and outputMax.
     *
     * @example
     * const scale = new Tone.Scale(50, 100);
     * const signal = new Tone.Signal(0.5).connect(scale);
     * // the output of scale equals 75
     * @category Signal
     */


    var Scale = /*#__PURE__*/function (_SignalOperator__WEBP7) {
      _inherits(Scale, _SignalOperator__WEBP7);

      var _super150 = _createSuper(Scale);

      function Scale() {
        var _this217;

        _classCallCheck2(this, Scale);

        _this217 = _super150.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Scale.getDefaults(), arguments, ["min", "max"])));
        _this217.name = "Scale";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(Scale.getDefaults(), arguments, ["min", "max"]);
        _this217._mult = _this217.input = new _Multiply__WEBPACK_IMPORTED_MODULE_2__["Multiply"]({
          context: _this217.context,
          value: options.max - options.min
        });
        _this217._add = _this217.output = new _Add__WEBPACK_IMPORTED_MODULE_1__["Add"]({
          context: _this217.context,
          value: options.min
        });
        _this217._min = options.min;
        _this217._max = options.max;

        _this217.input.connect(_this217.output);

        return _this217;
      }

      _createClass2(Scale, [{
        key: "_setRange",

        /**
         * set the values
         */
        value: function _setRange() {
          this._add.value = this._min;
          this._mult.value = this._max - this._min;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Scale.prototype), "dispose", this).call(this);

          this._add.dispose();

          this._mult.dispose();

          return this;
        }
      }, {
        key: "min",

        /**
         * The minimum output value. This number is output when the value input value is 0.
         */
        get: function get() {
          return this._min;
        },
        set: function set(min) {
          this._min = min;

          this._setRange();
        }
        /**
         * The maximum output value. This number is output when the value input value is 1.
         */

      }, {
        key: "max",
        get: function get() {
          return this._max;
        },
        set: function set(max) {
          this._max = max;

          this._setRange();
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_SignalOperator__WEBPACK_IMPORTED_MODULE_3__["SignalOperator"].getDefaults(), {
            max: 1,
            min: 0
          });
        }
      }]);

      return Scale;
    }(_SignalOperator__WEBPACK_IMPORTED_MODULE_3__["SignalOperator"]); //# sourceMappingURL=Scale.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/ScaleExp.js":
  /*!********************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/ScaleExp.js ***!
    \********************************************************/

  /*! exports provided: ScaleExp */

  /***/
  function node_modulesToneBuildEsmSignalScaleExpJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ScaleExp", function () {
      return ScaleExp;
    });
    /* harmony import */


    var _Scale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Scale */
    "./node_modules/tone/build/esm/signal/Scale.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _Pow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Pow */
    "./node_modules/tone/build/esm/signal/Pow.js");
    /**
     * Performs an exponential scaling on an input signal.
     * Scales a NormalRange value [0,1] exponentially
     * to the output range of outputMin to outputMax.
     * @example
     * const scaleExp = new Tone.ScaleExp(0, 100, 2);
     * const signal = new Tone.Signal(0.5).connect(scaleExp);
     */


    var ScaleExp = /*#__PURE__*/function (_Scale__WEBPACK_IMPOR) {
      _inherits(ScaleExp, _Scale__WEBPACK_IMPOR);

      var _super151 = _createSuper(ScaleExp);

      function ScaleExp() {
        var _this218;

        _classCallCheck2(this, ScaleExp);

        _this218 = _super151.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(ScaleExp.getDefaults(), arguments, ["min", "max", "exponent"])));
        _this218.name = "ScaleExp";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(ScaleExp.getDefaults(), arguments, ["min", "max", "exponent"]);
        _this218.input = _this218._exp = new _Pow__WEBPACK_IMPORTED_MODULE_2__["Pow"]({
          context: _this218.context,
          value: options.exponent
        });

        _this218._exp.connect(_this218._mult);

        return _this218;
      }

      _createClass2(ScaleExp, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(ScaleExp.prototype), "dispose", this).call(this);

          this._exp.dispose();

          return this;
        }
      }, {
        key: "exponent",

        /**
         * Instead of interpolating linearly between the [[min]] and
         * [[max]] values, setting the exponent will interpolate between
         * the two values with an exponential curve.
         */
        get: function get() {
          return this._exp.value;
        },
        set: function set(exp) {
          this._exp.value = exp;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Scale__WEBPACK_IMPORTED_MODULE_0__["Scale"].getDefaults(), {
            exponent: 1
          });
        }
      }]);

      return ScaleExp;
    }(_Scale__WEBPACK_IMPORTED_MODULE_0__["Scale"]); //# sourceMappingURL=ScaleExp.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/Signal.js":
  /*!******************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/Signal.js ***!
    \******************************************************/

  /*! exports provided: Signal, connectSignal */

  /***/
  function node_modulesToneBuildEsmSignalSignalJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Signal", function () {
      return Signal;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "connectSignal", function () {
      return connectSignal;
    });
    /* harmony import */


    var _core_context_Param__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/AdvancedTypeCheck */
    "./node_modules/tone/build/esm/core/util/AdvancedTypeCheck.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _ToneConstantSource__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./ToneConstantSource */
    "./node_modules/tone/build/esm/signal/ToneConstantSource.js");
    /**
     * A signal is an audio-rate value. Tone.Signal is a core component of the library.
     * Unlike a number, Signals can be scheduled with sample-level accuracy. Tone.Signal
     * has all of the methods available to native Web Audio
     * [AudioParam](http://webaudio.github.io/web-audio-api/#the-audioparam-interface)
     * as well as additional conveniences. Read more about working with signals
     * [here](https://github.com/Tonejs/Tone.js/wiki/Signals).
     *
     * @example
     * const osc = new Tone.Oscillator().toDestination().start();
     * // a scheduleable signal which can be connected to control an AudioParam or another Signal
     * const signal = new Tone.Signal({
     * 	value: "C4",
     * 	units: "frequency"
     * }).connect(osc.frequency);
     * // the scheduled ramp controls the connected signal
     * signal.rampTo("C2", 4, "+0.5");
     * @category Signal
     */


    var Signal = /*#__PURE__*/function (_core_context_ToneAud32) {
      _inherits(Signal, _core_context_ToneAud32);

      var _super152 = _createSuper(Signal);

      function Signal() {
        var _this219;

        _classCallCheck2(this, Signal);

        _this219 = _super152.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Signal.getDefaults(), arguments, ["value", "units"]));
        _this219.name = "Signal";
        /**
         * Indicates if the value should be overridden on connection.
         */

        _this219.override = true;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Signal.getDefaults(), arguments, ["value", "units"]);
        _this219.output = _this219._constantSource = new _ToneConstantSource__WEBPACK_IMPORTED_MODULE_4__["ToneConstantSource"]({
          context: _this219.context,
          convert: options.convert,
          offset: options.value,
          units: options.units,
          minValue: options.minValue,
          maxValue: options.maxValue
        });

        _this219._constantSource.start(0);

        _this219.input = _this219._param = _this219._constantSource.offset;
        return _this219;
      }

      _createClass2(Signal, [{
        key: "connect",
        value: function connect(destination) {
          var outputNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var inputNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
          // start it only when connected to something
          connectSignal(this, destination, outputNum, inputNum);
          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Signal.prototype), "dispose", this).call(this);

          this._param.dispose();

          this._constantSource.dispose();

          return this;
        } //-------------------------------------
        // ABSTRACT PARAM INTERFACE
        // just a proxy for the ConstantSourceNode's offset AudioParam
        // all docs are generated from AbstractParam.ts
        //-------------------------------------

      }, {
        key: "setValueAtTime",
        value: function setValueAtTime(value, time) {
          this._param.setValueAtTime(value, time);

          return this;
        }
      }, {
        key: "getValueAtTime",
        value: function getValueAtTime(time) {
          return this._param.getValueAtTime(time);
        }
      }, {
        key: "setRampPoint",
        value: function setRampPoint(time) {
          this._param.setRampPoint(time);

          return this;
        }
      }, {
        key: "linearRampToValueAtTime",
        value: function linearRampToValueAtTime(value, time) {
          this._param.linearRampToValueAtTime(value, time);

          return this;
        }
      }, {
        key: "exponentialRampToValueAtTime",
        value: function exponentialRampToValueAtTime(value, time) {
          this._param.exponentialRampToValueAtTime(value, time);

          return this;
        }
      }, {
        key: "exponentialRampTo",
        value: function exponentialRampTo(value, rampTime, startTime) {
          this._param.exponentialRampTo(value, rampTime, startTime);

          return this;
        }
      }, {
        key: "linearRampTo",
        value: function linearRampTo(value, rampTime, startTime) {
          this._param.linearRampTo(value, rampTime, startTime);

          return this;
        }
      }, {
        key: "targetRampTo",
        value: function targetRampTo(value, rampTime, startTime) {
          this._param.targetRampTo(value, rampTime, startTime);

          return this;
        }
      }, {
        key: "exponentialApproachValueAtTime",
        value: function exponentialApproachValueAtTime(value, time, rampTime) {
          this._param.exponentialApproachValueAtTime(value, time, rampTime);

          return this;
        }
      }, {
        key: "setTargetAtTime",
        value: function setTargetAtTime(value, startTime, timeConstant) {
          this._param.setTargetAtTime(value, startTime, timeConstant);

          return this;
        }
      }, {
        key: "setValueCurveAtTime",
        value: function setValueCurveAtTime(values, startTime, duration, scaling) {
          this._param.setValueCurveAtTime(values, startTime, duration, scaling);

          return this;
        }
      }, {
        key: "cancelScheduledValues",
        value: function cancelScheduledValues(time) {
          this._param.cancelScheduledValues(time);

          return this;
        }
      }, {
        key: "cancelAndHoldAtTime",
        value: function cancelAndHoldAtTime(time) {
          this._param.cancelAndHoldAtTime(time);

          return this;
        }
      }, {
        key: "rampTo",
        value: function rampTo(value, rampTime, startTime) {
          this._param.rampTo(value, rampTime, startTime);

          return this;
        }
      }, {
        key: "apply",

        /**
         * See [[Param.apply]].
         */
        value: function apply(param) {
          this._param.apply(param);

          return this;
        }
      }, {
        key: "value",
        get: function get() {
          return this._param.value;
        },
        set: function set(value) {
          this._param.value = value;
        }
      }, {
        key: "convert",
        get: function get() {
          return this._param.convert;
        },
        set: function set(convert) {
          this._param.convert = convert;
        }
      }, {
        key: "units",
        get: function get() {
          return this._param.units;
        }
      }, {
        key: "overridden",
        get: function get() {
          return this._param.overridden;
        },
        set: function set(overridden) {
          this._param.overridden = overridden;
        }
      }, {
        key: "maxValue",
        get: function get() {
          return this._param.maxValue;
        }
      }, {
        key: "minValue",
        get: function get() {
          return this._param.minValue;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            convert: true,
            units: "number",
            value: 0
          });
        }
      }]);

      return Signal;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]);
    /**
     * When connecting from a signal, it's necessary to zero out the node destination
     * node if that node is also a signal. If the destination is not 0, then the values
     * will be summed. This method insures that the output of the destination signal will
     * be the same as the source signal, making the destination signal a pass through node.
     * @param signal The output signal to connect from
     * @param destination the destination to connect to
     * @param outputNum the optional output number
     * @param inputNum the input number
     */


    function connectSignal(signal, destination, outputNum, inputNum) {
      if (destination instanceof _core_context_Param__WEBPACK_IMPORTED_MODULE_0__["Param"] || Object(_core_util_AdvancedTypeCheck__WEBPACK_IMPORTED_MODULE_2__["isAudioParam"])(destination) || destination instanceof Signal && destination.override) {
        // cancel changes
        destination.cancelScheduledValues(0); // reset the value

        destination.setValueAtTime(0, 0); // mark the value as overridden

        if (destination instanceof Signal) {
          destination.overridden = true;
        }
      }

      Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connect"])(signal, destination, outputNum, inputNum);
    } //# sourceMappingURL=Signal.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/SignalOperator.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/SignalOperator.js ***!
    \**************************************************************/

  /*! exports provided: SignalOperator */

  /***/
  function node_modulesToneBuildEsmSignalSignalOperatorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SignalOperator", function () {
      return SignalOperator;
    });
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _Signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /**
     * A signal operator has an input and output and modifies the signal.
     */


    var SignalOperator = /*#__PURE__*/function (_core_context_ToneAud33) {
      _inherits(SignalOperator, _core_context_ToneAud33);

      var _super153 = _createSuper(SignalOperator);

      function SignalOperator() {
        _classCallCheck2(this, SignalOperator);

        return _super153.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(SignalOperator.getDefaults(), arguments, ["context"])));
      }

      _createClass2(SignalOperator, [{
        key: "connect",
        value: function connect(destination) {
          var outputNum = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
          var inputNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
          Object(_Signal__WEBPACK_IMPORTED_MODULE_2__["connectSignal"])(this, destination, outputNum, inputNum);
          return this;
        }
      }]);

      return SignalOperator;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=SignalOperator.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/Subtract.js":
  /*!********************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/Subtract.js ***!
    \********************************************************/

  /*! exports provided: Subtract */

  /***/
  function node_modulesToneBuildEsmSignalSubtractJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Subtract", function () {
      return Subtract;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _signal_Negate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../signal/Negate */
    "./node_modules/tone/build/esm/signal/Negate.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /**
     * Subtract the signal connected to the input is subtracted from the signal connected
     * The subtrahend.
     *
     * @example
     * // subtract a scalar from a signal
     * const sub = new Tone.Subtract(1);
     * const sig = new Tone.Signal(4).connect(sub);
     * // the output of sub is 3.
     * @example
     * // subtract two signals
     * const sub = new Tone.Subtract();
     * const sigA = new Tone.Signal(10);
     * const sigB = new Tone.Signal(2.5);
     * sigA.connect(sub);
     * sigB.connect(sub.subtrahend);
     * // output of sub is 7.5
     * @category Signal
     */


    var Subtract = /*#__PURE__*/function (_signal_Signal__WEBPA2) {
      _inherits(Subtract, _signal_Signal__WEBPA2);

      var _super154 = _createSuper(Subtract);

      function Subtract() {
        var _this220;

        _classCallCheck2(this, Subtract);

        _this220 = _super154.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Subtract.getDefaults(), arguments, ["value"])));
        _this220.override = false;
        _this220.name = "Subtract";
        /**
         * the summing node
         */

        _this220._sum = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
          context: _this220.context
        });
        _this220.input = _this220._sum;
        _this220.output = _this220._sum;
        /**
         * Negate the input of the second input before connecting it to the summing node.
         */

        _this220._neg = new _signal_Negate__WEBPACK_IMPORTED_MODULE_3__["Negate"]({
          context: _this220.context
        });
        /**
         * The value which is subtracted from the main signal
         */

        _this220.subtrahend = _this220._param;
        Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connectSeries"])(_this220._constantSource, _this220._neg, _this220._sum);
        return _this220;
      }

      _createClass2(Subtract, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Subtract.prototype), "dispose", this).call(this);

          this._neg.dispose();

          this._sum.dispose();

          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"].getDefaults(), {
            value: 0
          });
        }
      }]);

      return Subtract;
    }(_signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]); //# sourceMappingURL=Subtract.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/SyncedSignal.js":
  /*!************************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/SyncedSignal.js ***!
    \************************************************************/

  /*! exports provided: SyncedSignal */

  /***/
  function node_modulesToneBuildEsmSignalSyncedSignalJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "SyncedSignal", function () {
      return SyncedSignal;
    });
    /* harmony import */


    var _Signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/type/TransportTime */
    "./node_modules/tone/build/esm/core/type/TransportTime.js");
    /* harmony import */


    var _ToneConstantSource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./ToneConstantSource */
    "./node_modules/tone/build/esm/signal/ToneConstantSource.js");
    /**
     * Adds the ability to synchronize the signal to the [[Transport]]
     */


    var SyncedSignal = /*#__PURE__*/function (_Signal__WEBPACK_IMPO4) {
      _inherits(SyncedSignal, _Signal__WEBPACK_IMPO4);

      var _super155 = _createSuper(SyncedSignal);

      function SyncedSignal() {
        var _this221;

        _classCallCheck2(this, SyncedSignal);

        _this221 = _super155.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"].getDefaults(), arguments, ["value", "units"]));
        _this221.name = "SyncedSignal";
        /**
         * Don't override when something is connected to the input
         */

        _this221.override = false;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"].getDefaults(), arguments, ["value", "units"]);
        _this221._lastVal = options.value;
        _this221._synced = _this221.context.transport.scheduleRepeat(_this221._onTick.bind(_assertThisInitialized(_this221)), "1i");
        _this221._syncedCallback = _this221._anchorValue.bind(_assertThisInitialized(_this221));

        _this221.context.transport.on("start", _this221._syncedCallback);

        _this221.context.transport.on("pause", _this221._syncedCallback);

        _this221.context.transport.on("stop", _this221._syncedCallback); // disconnect the constant source from the output and replace it with another one


        _this221._constantSource.disconnect();

        _this221._constantSource.stop(0); // create a new one


        _this221._constantSource = _this221.output = new _ToneConstantSource__WEBPACK_IMPORTED_MODULE_3__["ToneConstantSource"]({
          context: _this221.context,
          offset: options.value,
          units: options.units
        }).start(0);

        _this221.setValueAtTime(options.value, 0);

        return _this221;
      }
      /**
       * Callback which is invoked every tick.
       */


      _createClass2(SyncedSignal, [{
        key: "_onTick",
        value: function _onTick(time) {
          var val = _get(_getPrototypeOf(SyncedSignal.prototype), "getValueAtTime", this).call(this, this.context.transport.seconds); // approximate ramp curves with linear ramps


          if (this._lastVal !== val) {
            this._lastVal = val;

            this._constantSource.offset.setValueAtTime(val, time);
          }
        }
        /**
         * Anchor the value at the start and stop of the Transport
         */

      }, {
        key: "_anchorValue",
        value: function _anchorValue(time) {
          var val = _get(_getPrototypeOf(SyncedSignal.prototype), "getValueAtTime", this).call(this, this.context.transport.seconds);

          this._lastVal = val;

          this._constantSource.offset.cancelAndHoldAtTime(time);

          this._constantSource.offset.setValueAtTime(val, time);
        }
      }, {
        key: "getValueAtTime",
        value: function getValueAtTime(time) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();
          return _get(_getPrototypeOf(SyncedSignal.prototype), "getValueAtTime", this).call(this, computedTime);
        }
      }, {
        key: "setValueAtTime",
        value: function setValueAtTime(value, time) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();

          _get(_getPrototypeOf(SyncedSignal.prototype), "setValueAtTime", this).call(this, value, computedTime);

          return this;
        }
      }, {
        key: "linearRampToValueAtTime",
        value: function linearRampToValueAtTime(value, time) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();

          _get(_getPrototypeOf(SyncedSignal.prototype), "linearRampToValueAtTime", this).call(this, value, computedTime);

          return this;
        }
      }, {
        key: "exponentialRampToValueAtTime",
        value: function exponentialRampToValueAtTime(value, time) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();

          _get(_getPrototypeOf(SyncedSignal.prototype), "exponentialRampToValueAtTime", this).call(this, value, computedTime);

          return this;
        }
      }, {
        key: "setTargetAtTime",
        value: function setTargetAtTime(value, startTime, timeConstant) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();

          _get(_getPrototypeOf(SyncedSignal.prototype), "setTargetAtTime", this).call(this, value, computedTime, timeConstant);

          return this;
        }
      }, {
        key: "cancelScheduledValues",
        value: function cancelScheduledValues(startTime) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();

          _get(_getPrototypeOf(SyncedSignal.prototype), "cancelScheduledValues", this).call(this, computedTime);

          return this;
        }
      }, {
        key: "setValueCurveAtTime",
        value: function setValueCurveAtTime(values, startTime, duration, scaling) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();
          duration = this.toSeconds(duration);

          _get(_getPrototypeOf(SyncedSignal.prototype), "setValueCurveAtTime", this).call(this, values, computedTime, duration, scaling);

          return this;
        }
      }, {
        key: "cancelAndHoldAtTime",
        value: function cancelAndHoldAtTime(time) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();

          _get(_getPrototypeOf(SyncedSignal.prototype), "cancelAndHoldAtTime", this).call(this, computedTime);

          return this;
        }
      }, {
        key: "setRampPoint",
        value: function setRampPoint(time) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, time).toSeconds();

          _get(_getPrototypeOf(SyncedSignal.prototype), "setRampPoint", this).call(this, computedTime);

          return this;
        }
      }, {
        key: "exponentialRampTo",
        value: function exponentialRampTo(value, rampTime, startTime) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();

          _get(_getPrototypeOf(SyncedSignal.prototype), "exponentialRampTo", this).call(this, value, rampTime, computedTime);

          return this;
        }
      }, {
        key: "linearRampTo",
        value: function linearRampTo(value, rampTime, startTime) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();

          _get(_getPrototypeOf(SyncedSignal.prototype), "linearRampTo", this).call(this, value, rampTime, computedTime);

          return this;
        }
      }, {
        key: "targetRampTo",
        value: function targetRampTo(value, rampTime, startTime) {
          var computedTime = new _core_type_TransportTime__WEBPACK_IMPORTED_MODULE_2__["TransportTimeClass"](this.context, startTime).toSeconds();

          _get(_getPrototypeOf(SyncedSignal.prototype), "targetRampTo", this).call(this, value, rampTime, computedTime);

          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(SyncedSignal.prototype), "dispose", this).call(this);

          this.context.transport.clear(this._synced);
          this.context.transport.off("start", this._syncedCallback);
          this.context.transport.off("pause", this._syncedCallback);
          this.context.transport.off("stop", this._syncedCallback);

          this._constantSource.dispose();

          return this;
        }
      }]);

      return SyncedSignal;
    }(_Signal__WEBPACK_IMPORTED_MODULE_0__["Signal"]); //# sourceMappingURL=SyncedSignal.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/ToneConstantSource.js":
  /*!******************************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/ToneConstantSource.js ***!
    \******************************************************************/

  /*! exports provided: ToneConstantSource */

  /***/
  function node_modulesToneBuildEsmSignalToneConstantSourceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ToneConstantSource", function () {
      return ToneConstantSource;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _source_OneShotSource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../source/OneShotSource */
    "./node_modules/tone/build/esm/source/OneShotSource.js");
    /**
     * Wrapper around the native fire-and-forget ConstantSource.
     * Adds the ability to reschedule the stop method.
     * @category Signal
     */


    var ToneConstantSource = /*#__PURE__*/function (_source_OneShotSource) {
      _inherits(ToneConstantSource, _source_OneShotSource);

      var _super156 = _createSuper(ToneConstantSource);

      function ToneConstantSource() {
        var _this222;

        _classCallCheck2(this, ToneConstantSource);

        _this222 = _super156.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(ToneConstantSource.getDefaults(), arguments, ["offset"]));
        _this222.name = "ToneConstantSource";
        /**
         * The signal generator
         */

        _this222._source = _this222.context.createConstantSource();
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(ToneConstantSource.getDefaults(), arguments, ["offset"]);
        Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connect"])(_this222._source, _this222._gainNode);
        _this222.offset = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this222.context,
          convert: options.convert,
          param: _this222._source.offset,
          units: options.units,
          value: options.offset,
          minValue: options.minValue,
          maxValue: options.maxValue
        });
        return _this222;
      }

      _createClass2(ToneConstantSource, [{
        key: "start",

        /**
         * Start the source node at the given time
         * @param  time When to start the source
         */
        value: function start(time) {
          var computedTime = this.toSeconds(time);
          this.log("start", computedTime);

          this._startGain(computedTime);

          this._source.start(computedTime);

          return this;
        }
      }, {
        key: "_stopSource",
        value: function _stopSource(time) {
          this._source.stop(time);
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(ToneConstantSource.prototype), "dispose", this).call(this);

          if (this.state === "started") {
            this.stop();
          }

          this._source.disconnect();

          this.offset.dispose();
          return this;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_source_OneShotSource__WEBPACK_IMPORTED_MODULE_3__["OneShotSource"].getDefaults(), {
            convert: true,
            offset: 1,
            units: "number"
          });
        }
      }]);

      return ToneConstantSource;
    }(_source_OneShotSource__WEBPACK_IMPORTED_MODULE_3__["OneShotSource"]); //# sourceMappingURL=ToneConstantSource.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/WaveShaper.js":
  /*!**********************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/WaveShaper.js ***!
    \**********************************************************/

  /*! exports provided: WaveShaper */

  /***/
  function node_modulesToneBuildEsmSignalWaveShaperJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "WaveShaper", function () {
      return WaveShaper;
    });
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _SignalOperator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./SignalOperator */
    "./node_modules/tone/build/esm/signal/SignalOperator.js");
    /**
     * Wraps the native Web Audio API
     * [WaveShaperNode](http://webaudio.github.io/web-audio-api/#the-waveshapernode-interface).
     *
     * @example
     * const osc = new Tone.Oscillator().toDestination().start();
     * // multiply the output of the signal by 2 using the waveshaper's function
     * const timesTwo = new Tone.WaveShaper((val) => val * 2, 2048).connect(osc.frequency);
     * const signal = new Tone.Signal(440).connect(timesTwo);
     * @category Signal
     */


    var WaveShaper = /*#__PURE__*/function (_SignalOperator__WEBP8) {
      _inherits(WaveShaper, _SignalOperator__WEBP8);

      var _super157 = _createSuper(WaveShaper);

      function WaveShaper() {
        var _this223;

        _classCallCheck2(this, WaveShaper);

        _this223 = _super157.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(WaveShaper.getDefaults(), arguments, ["mapping", "length"])));
        _this223.name = "WaveShaper";
        /**
         * the waveshaper node
         */

        _this223._shaper = _this223.context.createWaveShaper();
        /**
         * The input to the waveshaper node.
         */

        _this223.input = _this223._shaper;
        /**
         * The output from the waveshaper node
         */

        _this223.output = _this223._shaper;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_0__["optionsFromArguments"])(WaveShaper.getDefaults(), arguments, ["mapping", "length"]);

        if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isArray"])(options.mapping) || options.mapping instanceof Float32Array) {
          _this223.curve = Float32Array.from(options.mapping);
        } else if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_1__["isFunction"])(options.mapping)) {
          _this223.setMap(options.mapping, options.length);
        }

        return _this223;
      }

      _createClass2(WaveShaper, [{
        key: "setMap",

        /**
         * Uses a mapping function to set the value of the curve.
         * @param mapping The function used to define the values.
         *                The mapping function take two arguments:
         *                the first is the value at the current position
         *                which goes from -1 to 1 over the number of elements
         *                in the curve array. The second argument is the array position.
         * @example
         * const shaper = new Tone.WaveShaper();
         * // map the input signal from [-1, 1] to [0, 10]
         * shaper.setMap((val, index) => (val + 1) * 5);
         */
        value: function setMap(mapping) {
          var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1024;
          var array = new Float32Array(length);

          for (var i = 0, len = length; i < len; i++) {
            var normalized = i / (len - 1) * 2 - 1;
            array[i] = mapping(normalized, i);
          }

          this.curve = array;
          return this;
        }
        /**
         * The array to set as the waveshaper curve. For linear curves
         * array length does not make much difference, but for complex curves
         * longer arrays will provide smoother interpolation.
         */

      }, {
        key: "dispose",

        /**
         * Clean up.
         */
        value: function dispose() {
          _get(_getPrototypeOf(WaveShaper.prototype), "dispose", this).call(this);

          this._shaper.disconnect();

          return this;
        }
      }, {
        key: "curve",
        get: function get() {
          return this._shaper.curve;
        },
        set: function set(mapping) {
          this._shaper.curve = mapping;
        }
        /**
         * Specifies what type of oversampling (if any) should be used when
         * applying the shaping curve. Can either be "none", "2x" or "4x".
         */

      }, {
        key: "oversample",
        get: function get() {
          return this._shaper.oversample;
        },
        set: function set(oversampling) {
          var isOverSampleType = ["none", "2x", "4x"].some(function (str) {
            return str.includes(oversampling);
          });
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(isOverSampleType, "oversampling must be either 'none', '2x', or '4x'");
          this._shaper.oversample = oversampling;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"].getDefaults(), {
            length: 1024
          });
        }
      }]);

      return WaveShaper;
    }(_SignalOperator__WEBPACK_IMPORTED_MODULE_4__["SignalOperator"]); //# sourceMappingURL=WaveShaper.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/Zero.js":
  /*!****************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/Zero.js ***!
    \****************************************************/

  /*! exports provided: Zero */

  /***/
  function node_modulesToneBuildEsmSignalZeroJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Zero", function () {
      return Zero;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _SignalOperator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./SignalOperator */
    "./node_modules/tone/build/esm/signal/SignalOperator.js");
    /**
     * Tone.Zero outputs 0's at audio-rate. The reason this has to be
     * it's own class is that many browsers optimize out Tone.Signal
     * with a value of 0 and will not process nodes further down the graph.
     * @category Signal
     */


    var Zero = /*#__PURE__*/function (_SignalOperator__WEBP9) {
      _inherits(Zero, _SignalOperator__WEBP9);

      var _super158 = _createSuper(Zero);

      function Zero() {
        var _this224;

        _classCallCheck2(this, Zero);

        _this224 = _super158.call(this, Object.assign(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Zero.getDefaults(), arguments)));
        _this224.name = "Zero";
        /**
         * The gain node which connects the constant source to the output
         */

        _this224._gain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this224.context
        });
        /**
         * Only outputs 0
         */

        _this224.output = _this224._gain;
        /**
         * no input node
         */

        _this224.input = undefined;
        Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connect"])(_this224.context.getConstant(0), _this224._gain);
        return _this224;
      }
      /**
       * clean up
       */


      _createClass2(Zero, [{
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Zero.prototype), "dispose", this).call(this);

          Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["disconnect"])(this.context.getConstant(0), this._gain);
          return this;
        }
      }]);

      return Zero;
    }(_SignalOperator__WEBPACK_IMPORTED_MODULE_3__["SignalOperator"]); //# sourceMappingURL=Zero.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/signal/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/tone/build/esm/signal/index.js ***!
    \*****************************************************/

  /*! exports provided: Add, Abs, AudioToGain, GainToAudio, GreaterThan, GreaterThanZero, Multiply, Negate, Pow, Signal, connectSignal, Scale, ScaleExp, Subtract, SyncedSignal, WaveShaper, Zero */

  /***/
  function node_modulesToneBuildEsmSignalIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _Add__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Add */
    "./node_modules/tone/build/esm/signal/Add.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Add", function () {
      return _Add__WEBPACK_IMPORTED_MODULE_0__["Add"];
    });
    /* harmony import */


    var _Abs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./Abs */
    "./node_modules/tone/build/esm/signal/Abs.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Abs", function () {
      return _Abs__WEBPACK_IMPORTED_MODULE_1__["Abs"];
    });
    /* harmony import */


    var _AudioToGain__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./AudioToGain */
    "./node_modules/tone/build/esm/signal/AudioToGain.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AudioToGain", function () {
      return _AudioToGain__WEBPACK_IMPORTED_MODULE_2__["AudioToGain"];
    });
    /* harmony import */


    var _GainToAudio__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./GainToAudio */
    "./node_modules/tone/build/esm/signal/GainToAudio.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GainToAudio", function () {
      return _GainToAudio__WEBPACK_IMPORTED_MODULE_3__["GainToAudio"];
    });
    /* harmony import */


    var _GreaterThan__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./GreaterThan */
    "./node_modules/tone/build/esm/signal/GreaterThan.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GreaterThan", function () {
      return _GreaterThan__WEBPACK_IMPORTED_MODULE_4__["GreaterThan"];
    });
    /* harmony import */


    var _GreaterThanZero__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./GreaterThanZero */
    "./node_modules/tone/build/esm/signal/GreaterThanZero.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GreaterThanZero", function () {
      return _GreaterThanZero__WEBPACK_IMPORTED_MODULE_5__["GreaterThanZero"];
    });
    /* harmony import */


    var _Multiply__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Multiply", function () {
      return _Multiply__WEBPACK_IMPORTED_MODULE_6__["Multiply"];
    });
    /* harmony import */


    var _Negate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./Negate */
    "./node_modules/tone/build/esm/signal/Negate.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Negate", function () {
      return _Negate__WEBPACK_IMPORTED_MODULE_7__["Negate"];
    });
    /* harmony import */


    var _Pow__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./Pow */
    "./node_modules/tone/build/esm/signal/Pow.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Pow", function () {
      return _Pow__WEBPACK_IMPORTED_MODULE_8__["Pow"];
    });
    /* harmony import */


    var _Signal__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Signal", function () {
      return _Signal__WEBPACK_IMPORTED_MODULE_9__["Signal"];
    });
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "connectSignal", function () {
      return _Signal__WEBPACK_IMPORTED_MODULE_9__["connectSignal"];
    });
    /* harmony import */


    var _Scale__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./Scale */
    "./node_modules/tone/build/esm/signal/Scale.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Scale", function () {
      return _Scale__WEBPACK_IMPORTED_MODULE_10__["Scale"];
    });
    /* harmony import */


    var _ScaleExp__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./ScaleExp */
    "./node_modules/tone/build/esm/signal/ScaleExp.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ScaleExp", function () {
      return _ScaleExp__WEBPACK_IMPORTED_MODULE_11__["ScaleExp"];
    });
    /* harmony import */


    var _Subtract__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./Subtract */
    "./node_modules/tone/build/esm/signal/Subtract.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Subtract", function () {
      return _Subtract__WEBPACK_IMPORTED_MODULE_12__["Subtract"];
    });
    /* harmony import */


    var _SyncedSignal__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./SyncedSignal */
    "./node_modules/tone/build/esm/signal/SyncedSignal.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "SyncedSignal", function () {
      return _SyncedSignal__WEBPACK_IMPORTED_MODULE_13__["SyncedSignal"];
    });
    /* harmony import */


    var _WaveShaper__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./WaveShaper */
    "./node_modules/tone/build/esm/signal/WaveShaper.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "WaveShaper", function () {
      return _WaveShaper__WEBPACK_IMPORTED_MODULE_14__["WaveShaper"];
    });
    /* harmony import */


    var _Zero__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
    /*! ./Zero */
    "./node_modules/tone/build/esm/signal/Zero.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Zero", function () {
      return _Zero__WEBPACK_IMPORTED_MODULE_15__["Zero"];
    }); //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/Noise.js":
  /*!*****************************************************!*\
    !*** ./node_modules/tone/build/esm/source/Noise.js ***!
    \*****************************************************/

  /*! exports provided: Noise */

  /***/
  function node_modulesToneBuildEsmSourceNoiseJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Noise", function () {
      return Noise;
    });
    /* harmony import */


    var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/context/ToneAudioBuffer */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _source_Source__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../source/Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./buffer/ToneBufferSource */
    "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
    /**
     * Noise is a noise generator. It uses looped noise buffers to save on performance.
     * Noise supports the noise types: "pink", "white", and "brown". Read more about
     * colors of noise on [Wikipedia](https://en.wikipedia.org/wiki/Colors_of_noise).
     *
     * @example
     * // initialize the noise and start
     * const noise = new Tone.Noise("pink").start();
     * // make an autofilter to shape the noise
     * const autoFilter = new Tone.AutoFilter({
     * 	frequency: "8n",
     * 	baseFrequency: 200,
     * 	octaves: 8
     * }).toDestination().start();
     * // connect the noise
     * noise.connect(autoFilter);
     * // start the autofilter LFO
     * autoFilter.start();
     * @category Source
     */


    var Noise = /*#__PURE__*/function (_source_Source__WEBPA) {
      _inherits(Noise, _source_Source__WEBPA);

      var _super159 = _createSuper(Noise);

      function Noise() {
        var _this225;

        _classCallCheck2(this, Noise);

        _this225 = _super159.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Noise.getDefaults(), arguments, ["type"]));
        _this225.name = "Noise";
        /**
         * Private reference to the source
         */

        _this225._source = null;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Noise.getDefaults(), arguments, ["type"]);
        _this225._playbackRate = options.playbackRate;
        _this225.type = options.type;
        _this225._fadeIn = options.fadeIn;
        _this225._fadeOut = options.fadeOut;
        return _this225;
      }

      _createClass2(Noise, [{
        key: "_start",

        /**
         * internal start method
         */
        value: function _start(time) {
          var _this226 = this;

          var buffer = _noiseBuffers[this._type];
          this._source = new _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_4__["ToneBufferSource"]({
            url: buffer,
            context: this.context,
            fadeIn: this._fadeIn,
            fadeOut: this._fadeOut,
            loop: true,
            onended: function onended() {
              return _this226.onstop(_this226);
            },
            playbackRate: this._playbackRate
          }).connect(this.output);

          this._source.start(this.toSeconds(time), Math.random() * (buffer.duration - 0.001));
        }
        /**
         * internal stop method
         */

      }, {
        key: "_stop",
        value: function _stop(time) {
          if (this._source) {
            this._source.stop(this.toSeconds(time));

            this._source = null;
          }
        }
        /**
         * The fadeIn time of the amplitude envelope.
         */

      }, {
        key: "_restart",
        value: function _restart(time) {
          // TODO could be optimized by cancelling the buffer source 'stop'
          this._stop(time);

          this._start(time);
        }
        /**
         * Clean up.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Noise.prototype), "dispose", this).call(this);

          if (this._source) {
            this._source.disconnect();
          }

          return this;
        }
      }, {
        key: "type",

        /**
         * The type of the noise. Can be "white", "brown", or "pink".
         * @example
         * const noise = new Tone.Noise().toDestination().start();
         * noise.type = "brown";
         */
        get: function get() {
          return this._type;
        },
        set: function set(type) {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_2__["assert"])(type in _noiseBuffers, "Noise: invalid type: " + type);

          if (this._type !== type) {
            this._type = type; // if it's playing, stop and restart it

            if (this.state === "started") {
              var now = this.now();

              this._stop(now);

              this._start(now);
            }
          }
        }
        /**
         * The playback rate of the noise. Affects
         * the "frequency" of the noise.
         */

      }, {
        key: "playbackRate",
        get: function get() {
          return this._playbackRate;
        },
        set: function set(rate) {
          this._playbackRate = rate;

          if (this._source) {
            this._source.playbackRate.value = rate;
          }
        }
      }, {
        key: "fadeIn",
        get: function get() {
          return this._fadeIn;
        },
        set: function set(time) {
          this._fadeIn = time;

          if (this._source) {
            this._source.fadeIn = this._fadeIn;
          }
        }
        /**
         * The fadeOut time of the amplitude envelope.
         */

      }, {
        key: "fadeOut",
        get: function get() {
          return this._fadeOut;
        },
        set: function set(time) {
          this._fadeOut = time;

          if (this._source) {
            this._source.fadeOut = this._fadeOut;
          }
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_source_Source__WEBPACK_IMPORTED_MODULE_3__["Source"].getDefaults(), {
            fadeIn: 0,
            fadeOut: 0,
            playbackRate: 1,
            type: "white"
          });
        }
      }]);

      return Noise;
    }(_source_Source__WEBPACK_IMPORTED_MODULE_3__["Source"]); //--------------------
    // THE NOISE BUFFERS
    //--------------------
    // Noise buffer stats


    var BUFFER_LENGTH = 44100 * 5;
    var NUM_CHANNELS = 2;
    /**
     * Cache the noise buffers
     */

    var _noiseCache = {
      brown: null,
      pink: null,
      white: null
    };
    /**
     * The noise arrays. Generated on initialization.
     * borrowed heavily from https://github.com/zacharydenton/noise.js
     * (c) 2013 Zach Denton (MIT)
     */

    var _noiseBuffers = {
      get brown() {
        if (!_noiseCache.brown) {
          var buffer = [];

          for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {
            var channel = new Float32Array(BUFFER_LENGTH);
            buffer[channelNum] = channel;
            var lastOut = 0.0;

            for (var i = 0; i < BUFFER_LENGTH; i++) {
              var white = Math.random() * 2 - 1;
              channel[i] = (lastOut + 0.02 * white) / 1.02;
              lastOut = channel[i];
              channel[i] *= 3.5; // (roughly) compensate for gain
            }
          }

          _noiseCache.brown = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__["ToneAudioBuffer"]().fromArray(buffer);
        }

        return _noiseCache.brown;
      },

      get pink() {
        if (!_noiseCache.pink) {
          var buffer = [];

          for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {
            var channel = new Float32Array(BUFFER_LENGTH);
            buffer[channelNum] = channel;
            var b0 = void 0,
                b1 = void 0,
                b2 = void 0,
                b3 = void 0,
                b4 = void 0,
                b5 = void 0,
                b6 = void 0;
            b0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;

            for (var i = 0; i < BUFFER_LENGTH; i++) {
              var white = Math.random() * 2 - 1;
              b0 = 0.99886 * b0 + white * 0.0555179;
              b1 = 0.99332 * b1 + white * 0.0750759;
              b2 = 0.96900 * b2 + white * 0.1538520;
              b3 = 0.86650 * b3 + white * 0.3104856;
              b4 = 0.55000 * b4 + white * 0.5329522;
              b5 = -0.7616 * b5 - white * 0.0168980;
              channel[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;
              channel[i] *= 0.11; // (roughly) compensate for gain

              b6 = white * 0.115926;
            }
          }

          _noiseCache.pink = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__["ToneAudioBuffer"]().fromArray(buffer);
        }

        return _noiseCache.pink;
      },

      get white() {
        if (!_noiseCache.white) {
          var buffer = [];

          for (var channelNum = 0; channelNum < NUM_CHANNELS; channelNum++) {
            var channel = new Float32Array(BUFFER_LENGTH);
            buffer[channelNum] = channel;

            for (var i = 0; i < BUFFER_LENGTH; i++) {
              channel[i] = Math.random() * 2 - 1;
            }
          }

          _noiseCache.white = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_0__["ToneAudioBuffer"]().fromArray(buffer);
        }

        return _noiseCache.white;
      }

    }; //# sourceMappingURL=Noise.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/source/OneShotSource.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/OneShotSource.js ***!
    \*************************************************************/

  /*! exports provided: OneShotSource */

  /***/
  function node_modulesToneBuildEsmSourceOneShotSourceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OneShotSource", function () {
      return OneShotSource;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * Base class for fire-and-forget nodes
     */


    var OneShotSource = /*#__PURE__*/function (_core_context_ToneAud34) {
      _inherits(OneShotSource, _core_context_ToneAud34);

      var _super160 = _createSuper(OneShotSource);

      function OneShotSource(options) {
        var _this227;

        _classCallCheck2(this, OneShotSource);

        _this227 = _super160.call(this, options);
        /**
         * The callback to invoke after the
         * source is done playing.
         */

        _this227.onended = _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"];
        /**
         * The start time
         */

        _this227._startTime = -1;
        /**
         * The stop time
         */

        _this227._stopTime = -1;
        /**
         * The id of the timeout
         */

        _this227._timeout = -1;
        /**
         * The public output node
         */

        _this227.output = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this227.context,
          gain: 0
        });
        /**
         * The output gain node.
         */

        _this227._gainNode = _this227.output;
        /**
         * Get the playback state at the given time
         */

        _this227.getStateAtTime = function (time) {
          var computedTime = this.toSeconds(time);

          if (this._startTime !== -1 && computedTime >= this._startTime && (this._stopTime === -1 || computedTime <= this._stopTime)) {
            return "started";
          } else {
            return "stopped";
          }
        };

        _this227._fadeIn = options.fadeIn;
        _this227._fadeOut = options.fadeOut;
        _this227._curve = options.curve;
        _this227.onended = options.onended;
        return _this227;
      }

      _createClass2(OneShotSource, [{
        key: "_startGain",

        /**
         * Start the source at the given time
         * @param  time When to start the source
         */
        value: function _startGain(time) {
          var gain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["assert"])(this._startTime === -1, "Source cannot be started more than once"); // apply a fade in envelope

          var fadeInTime = this.toSeconds(this._fadeIn); // record the start time

          this._startTime = time + fadeInTime;
          this._startTime = Math.max(this._startTime, this.context.currentTime); // schedule the envelope

          if (fadeInTime > 0) {
            this._gainNode.gain.setValueAtTime(0, time);

            if (this._curve === "linear") {
              this._gainNode.gain.linearRampToValueAtTime(gain, time + fadeInTime);
            } else {
              this._gainNode.gain.exponentialApproachValueAtTime(gain, time, fadeInTime);
            }
          } else {
            this._gainNode.gain.setValueAtTime(gain, time);
          }

          return this;
        }
        /**
         * Stop the source node at the given time.
         * @param time When to stop the source
         */

      }, {
        key: "stop",
        value: function stop(time) {
          this.log("stop", time);

          this._stopGain(this.toSeconds(time));

          return this;
        }
        /**
         * Stop the source at the given time
         * @param  time When to stop the source
         */

      }, {
        key: "_stopGain",
        value: function _stopGain(time) {
          var _this228 = this;

          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["assert"])(this._startTime !== -1, "'start' must be called before 'stop'"); // cancel the previous stop

          this.cancelStop(); // the fadeOut time

          var fadeOutTime = this.toSeconds(this._fadeOut); // schedule the stop callback

          this._stopTime = this.toSeconds(time) + fadeOutTime;
          this._stopTime = Math.max(this._stopTime, this.context.currentTime);

          if (fadeOutTime > 0) {
            // start the fade out curve at the given time
            if (this._curve === "linear") {
              this._gainNode.gain.linearRampTo(0, fadeOutTime, time);
            } else {
              this._gainNode.gain.targetRampTo(0, fadeOutTime, time);
            }
          } else {
            // stop any ongoing ramps, and set the value to 0
            this._gainNode.gain.cancelAndHoldAtTime(time);

            this._gainNode.gain.setValueAtTime(0, time);
          }

          this.context.clearTimeout(this._timeout);
          this._timeout = this.context.setTimeout(function () {
            // allow additional time for the exponential curve to fully decay
            var additionalTail = _this228._curve === "exponential" ? fadeOutTime * 2 : 0;

            _this228._stopSource(_this228.now() + additionalTail);

            _this228._onended();
          }, this._stopTime - this.context.currentTime);
          return this;
        }
        /**
         * Invoke the onended callback
         */

      }, {
        key: "_onended",
        value: function _onended() {
          var _this229 = this;

          if (this.onended !== _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"]) {
            this.onended(this); // overwrite onended to make sure it only is called once

            this.onended = _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"]; // dispose when it's ended to free up for garbage collection only in the online context

            if (!this.context.isOffline) {
              setTimeout(function () {
                return _this229.dispose();
              }, 1000);
            }
          }
        }
        /**
         * Get the playback state at the current time
         */

      }, {
        key: "cancelStop",

        /**
         * Cancel a scheduled stop event
         */
        value: function cancelStop() {
          this.log("cancelStop");
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_3__["assert"])(this._startTime !== -1, "Source is not started"); // cancel the stop envelope

          this._gainNode.gain.cancelScheduledValues(this._startTime + this.sampleTime);

          this.context.clearTimeout(this._timeout);
          this._stopTime = -1;
          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(OneShotSource.prototype), "dispose", this).call(this);

          this._gainNode.disconnect();

          return this;
        }
      }, {
        key: "state",
        get: function get() {
          return this.getStateAtTime(this.now());
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            curve: "linear",
            fadeIn: 0,
            fadeOut: 0,
            onended: _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"]
          });
        }
      }]);

      return OneShotSource;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=OneShotSource.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/Source.js":
  /*!******************************************************!*\
    !*** ./node_modules/tone/build/esm/source/Source.js ***!
    \******************************************************/

  /*! exports provided: Source */

  /***/
  function node_modulesToneBuildEsmSourceSourceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Source", function () {
      return Source;
    });
    /* harmony import */


    var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../component/channel/Volume */
    "./node_modules/tone/build/esm/component/channel/Volume.js");
    /* harmony import */


    var _core_context_Destination__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/Destination */
    "./node_modules/tone/build/esm/core/context/Destination.js");
    /* harmony import */


    var _core_clock_Transport__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../core/clock/Transport */
    "./node_modules/tone/build/esm/core/clock/Transport.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../core/util/StateTimeline */
    "./node_modules/tone/build/esm/core/util/StateTimeline.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _core_util_Math__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../core/util/Math */
    "./node_modules/tone/build/esm/core/util/Math.js");
    /**
     * Base class for sources.
     * start/stop of this.context.transport.
     *
     * ```
     * // Multiple state change events can be chained together,
     * // but must be set in the correct order and with ascending times
     * // OK
     * state.start().stop("+0.2");
     * // OK
     * state.start().stop("+0.2").start("+0.4").stop("+0.7")
     * // BAD
     * state.stop("+0.2").start();
     * // BAD
     * state.start("+0.3").stop("+0.2");
     * ```
     */


    var Source = /*#__PURE__*/function (_core_context_ToneAud35) {
      _inherits(Source, _core_context_ToneAud35);

      var _super161 = _createSuper(Source);

      function Source(options) {
        var _this230;

        _classCallCheck2(this, Source);

        _this230 = _super161.call(this, options);
        /**
         * Sources have no inputs
         */

        _this230.input = undefined;
        /**
         * Keep track of the scheduled state.
         */

        _this230._state = new _core_util_StateTimeline__WEBPACK_IMPORTED_MODULE_6__["StateTimeline"]("stopped");
        /**
         * The synced `start` callback function from the transport
         */

        _this230._synced = false;
        /**
         * Keep track of all of the scheduled event ids
         */

        _this230._scheduled = [];
        /**
         * Placeholder functions for syncing/unsyncing to transport
         */

        _this230._syncedStart = _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"];
        _this230._syncedStop = _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"];
        _this230._state.memory = 100;
        _this230._state.increasing = true;
        _this230._volume = _this230.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__["Volume"]({
          context: _this230.context,
          mute: options.mute,
          volume: options.volume
        });
        _this230.volume = _this230._volume.volume;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this230), "volume");
        _this230.onstop = options.onstop;
        return _this230;
      }

      _createClass2(Source, [{
        key: "_clampToCurrentTime",

        /**
         * Ensure that the scheduled time is not before the current time.
         * Should only be used when scheduled unsynced.
         */
        value: function _clampToCurrentTime(time) {
          if (this._synced) {
            return time;
          } else {
            return Math.max(time, this.context.currentTime);
          }
        }
        /**
         * Start the source at the specified time. If no time is given,
         * start the source now.
         * @param  time When the source should be started.
         * @example
         * const source = new Tone.Oscillator().toDestination();
         * source.start("+0.5"); // starts the source 0.5 seconds from now
         */

      }, {
        key: "start",
        value: function start(time, offset, duration) {
          var _this231 = this;

          var computedTime = Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isUndef"])(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);
          computedTime = this._clampToCurrentTime(computedTime); // if it's started, stop it and restart it

          if (!this._synced && this._state.getValueAtTime(computedTime) === "started") {
            // time should be strictly greater than the previous start time
            Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__["assert"])(Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_9__["GT"])(computedTime, this._state.get(computedTime).time), "Start time must be strictly greater than previous start time");

            this._state.cancel(computedTime);

            this._state.setStateAtTime("started", computedTime);

            this.log("restart", computedTime);
            this.restart(computedTime, offset, duration);
          } else {
            this.log("start", computedTime);

            this._state.setStateAtTime("started", computedTime);

            if (this._synced) {
              // add the offset time to the event
              var event = this._state.get(computedTime);

              if (event) {
                event.offset = this.toSeconds(Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_4__["defaultArg"])(offset, 0));
                event.duration = duration ? this.toSeconds(duration) : undefined;
              }

              var sched = this.context.transport.schedule(function (t) {
                _this231._start(t, offset, duration);
              }, computedTime);

              this._scheduled.push(sched); // if it's already started


              if (this.context.transport.state === "started") {
                this._syncedStart(this.now(), this.context.transport.seconds);
              }
            } else {
              Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__["assertContextRunning"])(this.context);

              this._start(computedTime, offset, duration);
            }
          }

          return this;
        }
        /**
         * Stop the source at the specified time. If no time is given,
         * stop the source now.
         * @param  time When the source should be stopped.
         * @example
         * const source = new Tone.Oscillator().toDestination();
         * source.start();
         * source.stop("+0.5"); // stops the source 0.5 seconds from now
         */

      }, {
        key: "stop",
        value: function stop(time) {
          var computedTime = Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isUndef"])(time) && this._synced ? this.context.transport.seconds : this.toSeconds(time);
          computedTime = this._clampToCurrentTime(computedTime);

          if (this._state.getValueAtTime(computedTime) === "started" || Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_7__["isDefined"])(this._state.getNextState("started", computedTime))) {
            this.log("stop", computedTime);

            if (!this._synced) {
              this._stop(computedTime);
            } else {
              var sched = this.context.transport.schedule(this._stop.bind(this), computedTime);

              this._scheduled.push(sched);
            }

            this._state.cancel(computedTime);

            this._state.setStateAtTime("stopped", computedTime);
          }

          return this;
        }
        /**
         * Restart the source.
         */

      }, {
        key: "restart",
        value: function restart(time, offset, duration) {
          time = this.toSeconds(time);

          if (this._state.getValueAtTime(time) === "started") {
            this._state.cancel(time);

            this._restart(time, offset, duration);
          }

          return this;
        }
        /**
         * Sync the source to the Transport so that all subsequent
         * calls to `start` and `stop` are synced to the TransportTime
         * instead of the AudioContext time.
         *
         * @example
         * const osc = new Tone.Oscillator().toDestination();
         * // sync the source so that it plays between 0 and 0.3 on the Transport's timeline
         * osc.sync().start(0).stop(0.3);
         * // start the transport.
         * Tone.Transport.start();
         * // set it to loop once a second
         * Tone.Transport.loop = true;
         * Tone.Transport.loopEnd = 1;
         */

      }, {
        key: "sync",
        value: function sync() {
          var _this232 = this;

          if (!this._synced) {
            this._synced = true;

            this._syncedStart = function (time, offset) {
              if (offset > 0) {
                // get the playback state at that time
                var stateEvent = _this232._state.get(offset); // listen for start events which may occur in the middle of the sync'ed time


                if (stateEvent && stateEvent.state === "started" && stateEvent.time !== offset) {
                  // get the offset
                  var startOffset = offset - _this232.toSeconds(stateEvent.time);

                  var duration;

                  if (stateEvent.duration) {
                    duration = _this232.toSeconds(stateEvent.duration) - startOffset;
                  }

                  _this232._start(time, _this232.toSeconds(stateEvent.offset) + startOffset, duration);
                }
              }
            };

            this._syncedStop = function (time) {
              var seconds = _this232.context.transport.getSecondsAtTime(Math.max(time - _this232.sampleTime, 0));

              if (_this232._state.getValueAtTime(seconds) === "started") {
                _this232._stop(time);
              }
            };

            this.context.transport.on("start", this._syncedStart);
            this.context.transport.on("loopStart", this._syncedStart);
            this.context.transport.on("stop", this._syncedStop);
            this.context.transport.on("pause", this._syncedStop);
            this.context.transport.on("loopEnd", this._syncedStop);
          }

          return this;
        }
        /**
         * Unsync the source to the Transport. See Source.sync
         */

      }, {
        key: "unsync",
        value: function unsync() {
          var _this233 = this;

          if (this._synced) {
            this.context.transport.off("stop", this._syncedStop);
            this.context.transport.off("pause", this._syncedStop);
            this.context.transport.off("loopEnd", this._syncedStop);
            this.context.transport.off("start", this._syncedStart);
            this.context.transport.off("loopStart", this._syncedStart);
          }

          this._synced = false; // clear all of the scheduled ids

          this._scheduled.forEach(function (id) {
            return _this233.context.transport.clear(id);
          });

          this._scheduled = [];

          this._state.cancel(0);

          return this;
        }
        /**
         * Clean up.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Source.prototype), "dispose", this).call(this);

          this.onstop = _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"];
          this.unsync();

          this._volume.dispose();

          this._state.dispose();

          return this;
        }
      }, {
        key: "state",

        /**
         * Returns the playback state of the source, either "started" or "stopped".
         * @example
         * const player = new Tone.Player("https://tonejs.github.io/examples/audio/FWDL.mp3", () => {
         * 	player.start();
         * 	console.log(player.state);
         * }).toDestination();
         */
        get: function get() {
          if (this._synced) {
            if (this.context.transport.state === "started") {
              return this._state.getValueAtTime(this.context.transport.seconds);
            } else {
              return "stopped";
            }
          } else {
            return this._state.getValueAtTime(this.now());
          }
        }
        /**
         * Mute the output.
         * @example
         * const osc = new Tone.Oscillator().toDestination().start();
         * // mute the output
         * osc.mute = true;
         */

      }, {
        key: "mute",
        get: function get() {
          return this._volume.mute;
        },
        set: function set(mute) {
          this._volume.mute = mute;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"].getDefaults(), {
            mute: false,
            onstop: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
            volume: 0
          });
        }
      }]);

      return Source;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_3__["ToneAudioNode"]); //# sourceMappingURL=Source.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/UserMedia.js":
  /*!*********************************************************!*\
    !*** ./node_modules/tone/build/esm/source/UserMedia.js ***!
    \*********************************************************/

  /*! exports provided: UserMedia */

  /***/
  function node_modulesToneBuildEsmSourceUserMediaJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "UserMedia", function () {
      return UserMedia;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../component/channel/Volume */
    "./node_modules/tone/build/esm/component/channel/Volume.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /**
     * UserMedia uses MediaDevices.getUserMedia to open up and external microphone or audio input.
     * Check [MediaDevices API Support](https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia)
     * to see which browsers are supported. Access to an external input
     * is limited to secure (HTTPS) connections.
     * @example
     * const mic = new Tone.UserMedia();
     * mic.open().then(() => {
     * 	// promise resolves when input is available
     * });
     * @category Source
     */


    var UserMedia = /*#__PURE__*/function (_core_context_ToneAud36) {
      _inherits(UserMedia, _core_context_ToneAud36);

      var _super162 = _createSuper(UserMedia);

      function UserMedia() {
        var _this234;

        _classCallCheck2(this, UserMedia);

        _this234 = _super162.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(UserMedia.getDefaults(), arguments, ["volume"]));
        _this234.name = "UserMedia";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(UserMedia.getDefaults(), arguments, ["volume"]);
        _this234._volume = _this234.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_2__["Volume"]({
          context: _this234.context,
          volume: options.volume
        });
        _this234.volume = _this234._volume.volume;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this234), "volume");
        _this234.mute = options.mute;
        return _this234;
      }

      _createClass2(UserMedia, [{
        key: "open",

        /**
         * Open the media stream. If a string is passed in, it is assumed
         * to be the label or id of the stream, if a number is passed in,
         * it is the input number of the stream.
         * @param  labelOrId The label or id of the audio input media device.
         *                   With no argument, the default stream is opened.
         * @return The promise is resolved when the stream is open.
         */
        value: function open(labelOrId) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee49() {
            var devices, constraints, stream, mediaStreamNode;
            return regeneratorRuntime.wrap(function _callee49$(_context59) {
              while (1) {
                switch (_context59.prev = _context59.next) {
                  case 0:
                    Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(UserMedia.supported, "UserMedia is not supported"); // close the previous stream

                    if (this.state === "started") {
                      this.close();
                    }

                    _context59.next = 4;
                    return UserMedia.enumerateDevices();

                  case 4:
                    devices = _context59.sent;

                    if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isNumber"])(labelOrId)) {
                      this._device = devices[labelOrId];
                    } else {
                      this._device = devices.find(function (device) {
                        return device.label === labelOrId || device.deviceId === labelOrId;
                      }); // didn't find a matching device

                      if (!this._device && devices.length > 0) {
                        this._device = devices[0];
                      }

                      Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(this._device), "No matching device ".concat(labelOrId));
                    } // do getUserMedia


                    constraints = {
                      audio: {
                        echoCancellation: false,
                        sampleRate: this.context.sampleRate,
                        noiseSuppression: false,
                        mozNoiseSuppression: false
                      }
                    };

                    if (this._device) {
                      // @ts-ignore
                      constraints.audio.deviceId = this._device.deviceId;
                    }

                    _context59.next = 10;
                    return navigator.mediaDevices.getUserMedia(constraints);

                  case 10:
                    stream = _context59.sent;

                    // start a new source only if the previous one is closed
                    if (!this._stream) {
                      this._stream = stream; // Wrap a MediaStreamSourceNode around the live input stream.

                      mediaStreamNode = this.context.createMediaStreamSource(stream); // Connect the MediaStreamSourceNode to a gate gain node

                      Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["connect"])(mediaStreamNode, this.output);
                      this._mediaStream = mediaStreamNode;
                    }

                    return _context59.abrupt("return", this);

                  case 13:
                  case "end":
                    return _context59.stop();
                }
              }
            }, _callee49, this);
          }));
        }
        /**
         * Close the media stream
         */

      }, {
        key: "close",
        value: function close() {
          if (this._stream && this._mediaStream) {
            this._stream.getAudioTracks().forEach(function (track) {
              track.stop();
            });

            this._stream = undefined; // remove the old media stream

            this._mediaStream.disconnect();

            this._mediaStream = undefined;
          }

          this._device = undefined;
          return this;
        }
        /**
         * Returns a promise which resolves with the list of audio input devices available.
         * @return The promise that is resolved with the devices
         * @example
         * Tone.UserMedia.enumerateDevices().then((devices) => {
         * 	// print the device labels
         * 	console.log(devices.map(device => device.label));
         * });
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(UserMedia.prototype), "dispose", this).call(this);

          this.close();

          this._volume.dispose();

          this.volume.dispose();
          return this;
        }
        /**
         * If getUserMedia is supported by the browser.
         */

      }, {
        key: "state",

        /**
         * Returns the playback state of the source, "started" when the microphone is open
         * and "stopped" when the mic is closed.
         */
        get: function get() {
          return this._stream && this._stream.active ? "started" : "stopped";
        }
        /**
         * Returns an identifier for the represented device that is
         * persisted across sessions. It is un-guessable by other applications and
         * unique to the origin of the calling application. It is reset when the
         * user clears cookies (for Private Browsing, a different identifier is
         * used that is not persisted across sessions). Returns undefined when the
         * device is not open.
         */

      }, {
        key: "deviceId",
        get: function get() {
          if (this._device) {
            return this._device.deviceId;
          } else {
            return undefined;
          }
        }
        /**
         * Returns a group identifier. Two devices have the
         * same group identifier if they belong to the same physical device.
         * Returns null  when the device is not open.
         */

      }, {
        key: "groupId",
        get: function get() {
          if (this._device) {
            return this._device.groupId;
          } else {
            return undefined;
          }
        }
        /**
         * Returns a label describing this device (for example "Built-in Microphone").
         * Returns undefined when the device is not open or label is not available
         * because of permissions.
         */

      }, {
        key: "label",
        get: function get() {
          if (this._device) {
            return this._device.label;
          } else {
            return undefined;
          }
        }
        /**
         * Mute the output.
         * @example
         * const mic = new Tone.UserMedia();
         * mic.open().then(() => {
         * 	// promise resolves when input is available
         * });
         * // mute the output
         * mic.mute = true;
         */

      }, {
        key: "mute",
        get: function get() {
          return this._volume.mute;
        },
        set: function set(mute) {
          this._volume.mute = mute;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"].getDefaults(), {
            mute: false,
            volume: 0
          });
        }
      }, {
        key: "enumerateDevices",
        value: function enumerateDevices() {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee50() {
            var allDevices;
            return regeneratorRuntime.wrap(function _callee50$(_context60) {
              while (1) {
                switch (_context60.prev = _context60.next) {
                  case 0:
                    _context60.next = 2;
                    return navigator.mediaDevices.enumerateDevices();

                  case 2:
                    allDevices = _context60.sent;
                    return _context60.abrupt("return", allDevices.filter(function (device) {
                      return device.kind === "audioinput";
                    }));

                  case 4:
                  case "end":
                    return _context60.stop();
                }
              }
            }, _callee50);
          }));
        }
      }, {
        key: "supported",
        get: function get() {
          return Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(navigator.mediaDevices) && Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_6__["isDefined"])(navigator.mediaDevices.getUserMedia);
        }
      }]);

      return UserMedia;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_1__["ToneAudioNode"]); //# sourceMappingURL=UserMedia.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/buffer/GrainPlayer.js":
  /*!******************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/buffer/GrainPlayer.js ***!
    \******************************************************************/

  /*! exports provided: GrainPlayer */

  /***/
  function node_modulesToneBuildEsmSourceBufferGrainPlayerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "GrainPlayer", function () {
      return GrainPlayer;
    });
    /* harmony import */


    var _Source__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/context/ToneAudioBuffer */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_clock_Clock__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/clock/Clock */
    "./node_modules/tone/build/esm/core/clock/Clock.js");
    /* harmony import */


    var _ToneBufferSource__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./ToneBufferSource */
    "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
    /* harmony import */


    var _core_type_Conversions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../core/type/Conversions */
    "./node_modules/tone/build/esm/core/type/Conversions.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * GrainPlayer implements [granular synthesis](https://en.wikipedia.org/wiki/Granular_synthesis).
     * Granular Synthesis enables you to adjust pitch and playback rate independently. The grainSize is the
     * amount of time each small chunk of audio is played for and the overlap is the
     * amount of crossfading transition time between successive grains.
     * @category Source
     */


    var GrainPlayer = /*#__PURE__*/function (_Source__WEBPACK_IMPO) {
      _inherits(GrainPlayer, _Source__WEBPACK_IMPO);

      var _super163 = _createSuper(GrainPlayer);

      function GrainPlayer() {
        var _this235;

        _classCallCheck2(this, GrainPlayer);

        _this235 = _super163.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(GrainPlayer.getDefaults(), arguments, ["url", "onload"]));
        _this235.name = "GrainPlayer";
        /**
         * Internal loopStart value
         */

        _this235._loopStart = 0;
        /**
         * Internal loopStart value
         */

        _this235._loopEnd = 0;
        /**
         * All of the currently playing BufferSources
         */

        _this235._activeSources = [];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(GrainPlayer.getDefaults(), arguments, ["url", "onload"]);
        _this235.buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__["ToneAudioBuffer"]({
          onload: options.onload,
          onerror: options.onerror,
          reverse: options.reverse,
          url: options.url
        });
        _this235._clock = new _core_clock_Clock__WEBPACK_IMPORTED_MODULE_4__["Clock"]({
          context: _this235.context,
          callback: _this235._tick.bind(_assertThisInitialized(_this235)),
          frequency: 1 / options.grainSize
        });
        _this235._playbackRate = options.playbackRate;
        _this235._grainSize = options.grainSize;
        _this235._overlap = options.overlap;
        _this235.detune = options.detune; // setup

        _this235.overlap = options.overlap;
        _this235.loop = options.loop;
        _this235.playbackRate = options.playbackRate;
        _this235.grainSize = options.grainSize;
        _this235.loopStart = options.loopStart;
        _this235.loopEnd = options.loopEnd;
        _this235.reverse = options.reverse;

        _this235._clock.on("stop", _this235._onstop.bind(_assertThisInitialized(_this235)));

        return _this235;
      }

      _createClass2(GrainPlayer, [{
        key: "_start",

        /**
         * Internal start method
         */
        value: function _start(time, offset, duration) {
          offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["defaultArg"])(offset, 0);
          offset = this.toSeconds(offset);
          time = this.toSeconds(time);

          var grainSize = 1 / this._clock.frequency.getValueAtTime(time);

          this._clock.start(time, offset / grainSize);

          if (duration) {
            this.stop(time + this.toSeconds(duration));
          }
        }
        /**
         * Stop and then restart the player from the beginning (or offset)
         * @param  time When the player should start.
         * @param  offset The offset from the beginning of the sample to start at.
         * @param  duration How long the sample should play. If no duration is given,
         * 					it will default to the full length of the sample (minus any offset)
         */

      }, {
        key: "restart",
        value: function restart(time, offset, duration) {
          _get(_getPrototypeOf(GrainPlayer.prototype), "restart", this).call(this, time, offset, duration);

          return this;
        }
      }, {
        key: "_restart",
        value: function _restart(time, offset, duration) {
          this._stop(time);

          this._start(time, offset, duration);
        }
        /**
         * Internal stop method
         */

      }, {
        key: "_stop",
        value: function _stop(time) {
          this._clock.stop(time);
        }
        /**
         * Invoked when the clock is stopped
         */

      }, {
        key: "_onstop",
        value: function _onstop(time) {
          // stop the players
          this._activeSources.forEach(function (source) {
            source.fadeOut = 0;
            source.stop(time);
          });

          this.onstop(this);
        }
        /**
         * Invoked on each clock tick. scheduled a new grain at this time.
         */

      }, {
        key: "_tick",
        value: function _tick(time) {
          var _this236 = this;

          // check if it should stop looping
          var ticks = this._clock.getTicksAtTime(time);

          var offset = ticks * this._grainSize;
          this.log("offset", offset);

          if (!this.loop && offset > this.buffer.duration) {
            this.stop(time);
            return;
          } // at the beginning of the file, the fade in should be 0


          var fadeIn = offset < this._overlap ? 0 : this._overlap; // create a buffer source

          var source = new _ToneBufferSource__WEBPACK_IMPORTED_MODULE_5__["ToneBufferSource"]({
            context: this.context,
            url: this.buffer,
            fadeIn: fadeIn,
            fadeOut: this._overlap,
            loop: this.loop,
            loopStart: this._loopStart,
            loopEnd: this._loopEnd,
            // compute the playbackRate based on the detune
            playbackRate: Object(_core_type_Conversions__WEBPACK_IMPORTED_MODULE_6__["intervalToFrequencyRatio"])(this.detune / 100)
          }).connect(this.output);
          source.start(time, this._grainSize * ticks);
          source.stop(time + this._grainSize / this.playbackRate); // add it to the active sources

          this._activeSources.push(source); // remove it when it's done


          source.onended = function () {
            var index = _this236._activeSources.indexOf(source);

            if (index !== -1) {
              _this236._activeSources.splice(index, 1);
            }
          };
        }
        /**
         * The playback rate of the sample
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(GrainPlayer.prototype), "dispose", this).call(this);

          this.buffer.dispose();

          this._clock.dispose();

          this._activeSources.forEach(function (source) {
            return source.dispose();
          });

          return this;
        }
      }, {
        key: "playbackRate",
        get: function get() {
          return this._playbackRate;
        },
        set: function set(rate) {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(rate, 0.001);
          this._playbackRate = rate;
          this.grainSize = this._grainSize;
        }
        /**
         * The loop start time.
         */

      }, {
        key: "loopStart",
        get: function get() {
          return this._loopStart;
        },
        set: function set(time) {
          if (this.buffer.loaded) {
            Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(this.toSeconds(time), 0, this.buffer.duration);
          }

          this._loopStart = this.toSeconds(time);
        }
        /**
         * The loop end time.
         */

      }, {
        key: "loopEnd",
        get: function get() {
          return this._loopEnd;
        },
        set: function set(time) {
          if (this.buffer.loaded) {
            Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(this.toSeconds(time), 0, this.buffer.duration);
          }

          this._loopEnd = this.toSeconds(time);
        }
        /**
         * The direction the buffer should play in
         */

      }, {
        key: "reverse",
        get: function get() {
          return this.buffer.reverse;
        },
        set: function set(rev) {
          this.buffer.reverse = rev;
        }
        /**
         * The size of each chunk of audio that the
         * buffer is chopped into and played back at.
         */

      }, {
        key: "grainSize",
        get: function get() {
          return this._grainSize;
        },
        set: function set(size) {
          this._grainSize = this.toSeconds(size);

          this._clock.frequency.setValueAtTime(this._playbackRate / this._grainSize, this.now());
        }
        /**
         * The duration of the cross-fade between successive grains.
         */

      }, {
        key: "overlap",
        get: function get() {
          return this._overlap;
        },
        set: function set(time) {
          this._overlap = this.toSeconds(time);
        }
        /**
         * If all the buffer is loaded
         */

      }, {
        key: "loaded",
        get: function get() {
          return this.buffer.loaded;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_0__["Source"].getDefaults(), {
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__["noOp"],
            onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_1__["noOp"],
            overlap: 0.1,
            grainSize: 0.2,
            playbackRate: 1,
            detune: 0,
            loop: false,
            loopStart: 0,
            loopEnd: 0,
            reverse: false
          });
        }
      }]);

      return GrainPlayer;
    }(_Source__WEBPACK_IMPORTED_MODULE_0__["Source"]); //# sourceMappingURL=GrainPlayer.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/buffer/Player.js":
  /*!*************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/buffer/Player.js ***!
    \*************************************************************/

  /*! exports provided: Player */

  /***/
  function node_modulesToneBuildEsmSourceBufferPlayerJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Player", function () {
      return Player;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioBuffer */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _Source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _ToneBufferSource__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./ToneBufferSource */
    "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _core_util_Decorator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../core/util/Decorator */
    "./node_modules/tone/build/esm/core/util/Decorator.js");
    /**
     * Player is an audio file player with start, loop, and stop functions.
     * @example
     * const player = new Tone.Player("https://tonejs.github.io/examples/audio/FWDL.mp3").toDestination();
     * // play as soon as the buffer is loaded
     * player.autostart = true;
     * @category Source
     */


    var Player = /*#__PURE__*/function (_Source__WEBPACK_IMPO2) {
      _inherits(Player, _Source__WEBPACK_IMPO2);

      var _super164 = _createSuper(Player);

      function Player() {
        var _this237;

        _classCallCheck2(this, Player);

        _this237 = _super164.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Player.getDefaults(), arguments, ["url", "onload"]));
        _this237.name = "Player";
        /**
         * All of the active buffer source nodes
         */

        _this237._activeSources = new Set();
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(Player.getDefaults(), arguments, ["url", "onload"]);
        _this237._buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_1__["ToneAudioBuffer"]({
          onload: _this237._onload.bind(_assertThisInitialized(_this237), options.onload),
          onerror: options.onerror,
          reverse: options.reverse,
          url: options.url
        });
        _this237.autostart = options.autostart;
        _this237._loop = options.loop;
        _this237._loopStart = options.loopStart;
        _this237._loopEnd = options.loopEnd;
        _this237._playbackRate = options.playbackRate;
        _this237.fadeIn = options.fadeIn;
        _this237.fadeOut = options.fadeOut;
        return _this237;
      }

      _createClass2(Player, [{
        key: "load",

        /**
         * Load the audio file as an audio buffer.
         * Decodes the audio asynchronously and invokes
         * the callback once the audio buffer loads.
         * Note: this does not need to be called if a url
         * was passed in to the constructor. Only use this
         * if you want to manually load a new url.
         * @param url The url of the buffer to load. Filetype support depends on the browser.
         */
        value: function load(url) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee51() {
            return regeneratorRuntime.wrap(function _callee51$(_context61) {
              while (1) {
                switch (_context61.prev = _context61.next) {
                  case 0:
                    _context61.next = 2;
                    return this._buffer.load(url);

                  case 2:
                    this._onload();

                    return _context61.abrupt("return", this);

                  case 4:
                  case "end":
                    return _context61.stop();
                }
              }
            }, _callee51, this);
          }));
        }
        /**
         * Internal callback when the buffer is loaded.
         */

      }, {
        key: "_onload",
        value: function _onload() {
          var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"];
          callback();

          if (this.autostart) {
            this.start();
          }
        }
        /**
         * Internal callback when the buffer is done playing.
         */

      }, {
        key: "_onSourceEnd",
        value: function _onSourceEnd(source) {
          // invoke the onstop function
          this.onstop(this); // delete the source from the active sources

          this._activeSources["delete"](source);

          if (this._activeSources.size === 0 && !this._synced && this._state.getValueAtTime(this.now()) === "started") {
            this._state.setStateAtTime("stopped", this.now());
          }
        }
        /**
         * Play the buffer at the given startTime. Optionally add an offset
         * and/or duration which will play the buffer from a position
         * within the buffer for the given duration.
         *
         * @param  time When the player should start.
         * @param  offset The offset from the beginning of the sample to start at.
         * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)
         */

      }, {
        key: "start",
        value: function start(time, offset, duration) {
          _get(_getPrototypeOf(Player.prototype), "start", this).call(this, time, offset, duration);

          return this;
        }
        /**
         * Internal start method
         */

      }, {
        key: "_start",
        value: function _start(startTime, offset, duration) {
          // if it's a loop the default offset is the loopStart point
          if (this._loop) {
            offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["defaultArg"])(offset, this._loopStart);
          } else {
            // otherwise the default offset is 0
            offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["defaultArg"])(offset, 0);
          } // compute the values in seconds


          var computedOffset = this.toSeconds(offset); // if it's synced, it should factor in the playback rate for computing the offset

          if (this._synced) {
            computedOffset *= this._playbackRate;
          } // compute the duration which is either the passed in duration of the buffer.duration - offset


          var origDuration = duration;
          duration = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["defaultArg"])(duration, Math.max(this._buffer.duration - computedOffset, 0));
          var computedDuration = this.toSeconds(duration); // scale it by the playback rate

          computedDuration = computedDuration / this._playbackRate; // get the start time

          startTime = this.toSeconds(startTime); // make the source

          var source = new _ToneBufferSource__WEBPACK_IMPORTED_MODULE_6__["ToneBufferSource"]({
            url: this._buffer,
            context: this.context,
            fadeIn: this.fadeIn,
            fadeOut: this.fadeOut,
            loop: this._loop,
            loopEnd: this._loopEnd,
            loopStart: this._loopStart,
            onended: this._onSourceEnd.bind(this),
            playbackRate: this._playbackRate
          }).connect(this.output); // set the looping properties

          if (!this._loop && !this._synced) {
            // cancel the previous stop
            this._state.cancel(startTime + computedDuration); // if it's not looping, set the state change at the end of the sample


            this._state.setStateAtTime("stopped", startTime + computedDuration, {
              implicitEnd: true
            });
          } // add it to the array of active sources


          this._activeSources.add(source); // start it


          if (this._loop && Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_4__["isUndef"])(origDuration)) {
            source.start(startTime, computedOffset);
          } else {
            // subtract the fade out time
            source.start(startTime, computedOffset, computedDuration - this.toSeconds(this.fadeOut));
          }
        }
        /**
         * Stop playback.
         */

      }, {
        key: "_stop",
        value: function _stop(time) {
          var computedTime = this.toSeconds(time);

          this._activeSources.forEach(function (source) {
            return source.stop(computedTime);
          });
        }
        /**
         * Stop and then restart the player from the beginning (or offset)
         * @param  time When the player should start.
         * @param  offset The offset from the beginning of the sample to start at.
         * @param  duration How long the sample should play. If no duration is given,
         * 					it will default to the full length of the sample (minus any offset)
         */

      }, {
        key: "restart",
        value: function restart(time, offset, duration) {
          _get(_getPrototypeOf(Player.prototype), "restart", this).call(this, time, offset, duration);

          return this;
        }
      }, {
        key: "_restart",
        value: function _restart(time, offset, duration) {
          this._stop(time);

          this._start(time, offset, duration);
        }
        /**
         * Seek to a specific time in the player's buffer. If the
         * source is no longer playing at that time, it will stop.
         * @param offset The time to seek to.
         * @param when The time for the seek event to occur.
         * @example
         * const player = new Tone.Player("https://tonejs.github.io/examples/audio/FWDL.mp3", () => {
         * 	player.start();
         * 	// seek to the offset in 1 second from now
         * 	player.seek(0.4, "+1");
         * }).toDestination();
         */

      }, {
        key: "seek",
        value: function seek(offset, when) {
          var computedTime = this.toSeconds(when);

          if (this._state.getValueAtTime(computedTime) === "started") {
            var computedOffset = this.toSeconds(offset); // if it's currently playing, stop it

            this._stop(computedTime); // restart it at the given time


            this._start(computedTime, computedOffset);
          }

          return this;
        }
        /**
         * Set the loop start and end. Will only loop if loop is set to true.
         * @param loopStart The loop start time
         * @param loopEnd The loop end time
         * @example
         * const player = new Tone.Player("https://tonejs.github.io/examples/audio/FWDL.mp3").toDestination();
         * // loop between the given points
         * player.setLoopPoints(0.2, 0.3);
         * player.loop = true;
         * player.autostart = true;
         */

      }, {
        key: "setLoopPoints",
        value: function setLoopPoints(loopStart, loopEnd) {
          this.loopStart = loopStart;
          this.loopEnd = loopEnd;
          return this;
        }
        /**
         * If loop is true, the loop will start at this position.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Player.prototype), "dispose", this).call(this); // disconnect all of the players


          this._activeSources.forEach(function (source) {
            return source.dispose();
          });

          this._activeSources.clear();

          this._buffer.dispose();

          return this;
        }
      }, {
        key: "loopStart",
        get: function get() {
          return this._loopStart;
        },
        set: function set(loopStart) {
          this._loopStart = loopStart;

          if (this.buffer.loaded) {
            Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(this.toSeconds(loopStart), 0, this.buffer.duration);
          } // get the current source


          this._activeSources.forEach(function (source) {
            source.loopStart = loopStart;
          });
        }
        /**
         * If loop is true, the loop will end at this position.
         */

      }, {
        key: "loopEnd",
        get: function get() {
          return this._loopEnd;
        },
        set: function set(loopEnd) {
          this._loopEnd = loopEnd;

          if (this.buffer.loaded) {
            Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(this.toSeconds(loopEnd), 0, this.buffer.duration);
          } // get the current source


          this._activeSources.forEach(function (source) {
            source.loopEnd = loopEnd;
          });
        }
        /**
         * The audio buffer belonging to the player.
         */

      }, {
        key: "buffer",
        get: function get() {
          return this._buffer;
        },
        set: function set(buffer) {
          this._buffer.set(buffer);
        }
        /**
         * If the buffer should loop once it's over.
         */

      }, {
        key: "loop",
        get: function get() {
          return this._loop;
        },
        set: function set(loop) {
          // if no change, do nothing
          if (this._loop === loop) {
            return;
          }

          this._loop = loop; // set the loop of all of the sources

          this._activeSources.forEach(function (source) {
            source.loop = loop;
          });

          if (loop) {
            // remove the next stopEvent
            var stopEvent = this._state.getNextState("stopped", this.now());

            if (stopEvent) {
              this._state.cancel(stopEvent.time);
            }
          }
        }
        /**
         * The playback speed. 1 is normal speed. This is not a signal because
         * Safari and iOS currently don't support playbackRate as a signal.
         */

      }, {
        key: "playbackRate",
        get: function get() {
          return this._playbackRate;
        },
        set: function set(rate) {
          this._playbackRate = rate;
          var now = this.now(); // cancel the stop event since it's at a different time now

          var stopEvent = this._state.getNextState("stopped", now);

          if (stopEvent && stopEvent.implicitEnd) {
            this._state.cancel(stopEvent.time);

            this._activeSources.forEach(function (source) {
              return source.cancelStop();
            });
          } // set all the sources


          this._activeSources.forEach(function (source) {
            source.playbackRate.setValueAtTime(rate, now);
          });
        }
        /**
         * The direction the buffer should play in
         */

      }, {
        key: "reverse",
        get: function get() {
          return this._buffer.reverse;
        },
        set: function set(rev) {
          this._buffer.reverse = rev;
        }
        /**
         * If the buffer is loaded
         */

      }, {
        key: "loaded",
        get: function get() {
          return this._buffer.loaded;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_5__["Source"].getDefaults(), {
            autostart: false,
            fadeIn: 0,
            fadeOut: 0,
            loop: false,
            loopEnd: 0,
            loopStart: 0,
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"],
            onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["noOp"],
            playbackRate: 1,
            reverse: false
          });
        }
      }]);

      return Player;
    }(_Source__WEBPACK_IMPORTED_MODULE_5__["Source"]);

    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_8__["timeRange"])(0)], Player.prototype, "fadeIn", void 0);
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"])([Object(_core_util_Decorator__WEBPACK_IMPORTED_MODULE_8__["timeRange"])(0)], Player.prototype, "fadeOut", void 0); //# sourceMappingURL=Player.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/source/buffer/Players.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/buffer/Players.js ***!
    \**************************************************************/

  /*! exports provided: Players */

  /***/
  function node_modulesToneBuildEsmSourceBufferPlayersJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Players", function () {
      return Players;
    });
    /* harmony import */


    var _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../component/channel/Volume */
    "./node_modules/tone/build/esm/component/channel/Volume.js");
    /* harmony import */


    var _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/ToneAudioBuffers */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffers.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _Player__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./Player */
    "./node_modules/tone/build/esm/source/buffer/Player.js");
    /**
     * Players combines multiple [[Player]] objects.
     * @category Source
     */


    var Players = /*#__PURE__*/function (_core_context_ToneAud37) {
      _inherits(Players, _core_context_ToneAud37);

      var _super165 = _createSuper(Players);

      function Players() {
        var _this238;

        _classCallCheck2(this, Players);

        _this238 = _super165.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Players.getDefaults(), arguments, ["urls", "onload"], "urls"));
        _this238.name = "Players";
        /**
         * Players has no input.
         */

        _this238.input = undefined;
        /**
         * The container of all of the players
         */

        _this238._players = new Map();
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(Players.getDefaults(), arguments, ["urls", "onload"], "urls");
        /**
         * The output volume node
         */

        _this238._volume = _this238.output = new _component_channel_Volume__WEBPACK_IMPORTED_MODULE_0__["Volume"]({
          context: _this238.context,
          volume: options.volume
        });
        _this238.volume = _this238._volume.volume;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["readOnly"])(_assertThisInitialized(_this238), "volume");
        _this238._buffers = new _core_context_ToneAudioBuffers__WEBPACK_IMPORTED_MODULE_1__["ToneAudioBuffers"]({
          urls: options.urls,
          onload: options.onload,
          baseUrl: options.baseUrl,
          onerror: options.onerror
        }); // mute initially

        _this238.mute = options.mute;
        _this238._fadeIn = options.fadeIn;
        _this238._fadeOut = options.fadeOut;
        return _this238;
      }

      _createClass2(Players, [{
        key: "has",

        /**
         * True if the buffers object has a buffer by that name.
         * @param name  The key or index of the buffer.
         */
        value: function has(name) {
          return this._buffers.has(name);
        }
        /**
         * Get a player by name.
         * @param  name  The players name as defined in the constructor object or `add` method.
         */

      }, {
        key: "player",
        value: function player(name) {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(this.has(name), "No Player with the name ".concat(name, " exists on this object"));

          if (!this._players.has(name)) {
            var player = new _Player__WEBPACK_IMPORTED_MODULE_7__["Player"]({
              context: this.context,
              fadeIn: this._fadeIn,
              fadeOut: this._fadeOut,
              url: this._buffers.get(name)
            }).connect(this.output);

            this._players.set(name, player);
          }

          return this._players.get(name);
        }
        /**
         * If all the buffers are loaded or not
         */

      }, {
        key: "add",

        /**
         * Add a player by name and url to the Players
         * @param  name A unique name to give the player
         * @param  url  Either the url of the bufer or a buffer which will be added with the given name.
         * @param callback  The callback to invoke when the url is loaded.
         */
        value: function add(name, url, callback) {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_4__["assert"])(!this._buffers.has(name), "A buffer with that name already exists on this object");

          this._buffers.add(name, url, callback);

          return this;
        }
        /**
         * Stop all of the players at the given time
         * @param time The time to stop all of the players.
         */

      }, {
        key: "stopAll",
        value: function stopAll(time) {
          this._players.forEach(function (player) {
            return player.stop(time);
          });

          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Players.prototype), "dispose", this).call(this);

          this._volume.dispose();

          this.volume.dispose();

          this._players.forEach(function (player) {
            return player.dispose();
          });

          this._buffers.dispose();

          return this;
        }
      }, {
        key: "mute",

        /**
         * Mute the output.
         */
        get: function get() {
          return this._volume.mute;
        },
        set: function set(mute) {
          this._volume.mute = mute;
        }
        /**
         * The fadeIn time of the envelope applied to the source.
         */

      }, {
        key: "fadeIn",
        get: function get() {
          return this._fadeIn;
        },
        set: function set(fadeIn) {
          this._fadeIn = fadeIn;

          this._players.forEach(function (player) {
            player.fadeIn = fadeIn;
          });
        }
        /**
         * The fadeOut time of the each of the sources.
         */

      }, {
        key: "fadeOut",
        get: function get() {
          return this._fadeOut;
        },
        set: function set(fadeOut) {
          this._fadeOut = fadeOut;

          this._players.forEach(function (player) {
            player.fadeOut = fadeOut;
          });
        }
        /**
         * The state of the players object. Returns "started" if any of the players are playing.
         */

      }, {
        key: "state",
        get: function get() {
          var playing = Array.from(this._players).some(function (_ref74) {
            var _ref75 = _slicedToArray2(_ref74, 2),
                _ = _ref75[0],
                player = _ref75[1];

            return player.state === "started";
          });
          return playing ? "started" : "stopped";
        }
      }, {
        key: "loaded",
        get: function get() {
          return this._buffers.loaded;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_6__["Source"].getDefaults(), {
            baseUrl: "",
            fadeIn: 0,
            fadeOut: 0,
            mute: false,
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
            onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_5__["noOp"],
            urls: {},
            volume: 0
          });
        }
      }]);

      return Players;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"]); //# sourceMappingURL=Players.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js ***!
    \***********************************************************************/

  /*! exports provided: ToneBufferSource */

  /***/
  function node_modulesToneBuildEsmSourceBufferToneBufferSourceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ToneBufferSource", function () {
      return ToneBufferSource;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/context/ToneAudioBuffer */
    "./node_modules/tone/build/esm/core/context/ToneAudioBuffer.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _OneShotSource__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../OneShotSource */
    "./node_modules/tone/build/esm/source/OneShotSource.js");
    /* harmony import */


    var _core_util_Math__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../core/util/Math */
    "./node_modules/tone/build/esm/core/util/Math.js");
    /**
     * Wrapper around the native BufferSourceNode.
     * @category Source
     */


    var ToneBufferSource = /*#__PURE__*/function (_OneShotSource__WEBPA) {
      _inherits(ToneBufferSource, _OneShotSource__WEBPA);

      var _super166 = _createSuper(ToneBufferSource);

      function ToneBufferSource() {
        var _this239;

        _classCallCheck2(this, ToneBufferSource);

        _this239 = _super166.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(ToneBufferSource.getDefaults(), arguments, ["url", "onload"]));
        _this239.name = "ToneBufferSource";
        /**
         * The oscillator
         */

        _this239._source = _this239.context.createBufferSource();
        _this239._internalChannels = [_this239._source];
        /**
         * indicators if the source has started/stopped
         */

        _this239._sourceStarted = false;
        _this239._sourceStopped = false;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(ToneBufferSource.getDefaults(), arguments, ["url", "onload"]);
        Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connect"])(_this239._source, _this239._gainNode);

        _this239._source.onended = function () {
          return _this239._stopSource();
        };
        /**
         * The playbackRate of the buffer
         */


        _this239.playbackRate = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this239.context,
          param: _this239._source.playbackRate,
          units: "positive",
          value: options.playbackRate
        }); // set some values initially

        _this239.loop = options.loop;
        _this239.loopStart = options.loopStart;
        _this239.loopEnd = options.loopEnd;
        _this239._buffer = new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__["ToneAudioBuffer"](options.url, options.onload, options.onerror);

        _this239._internalChannels.push(_this239._source);

        return _this239;
      }

      _createClass2(ToneBufferSource, [{
        key: "start",

        /**
         * Start the buffer
         * @param  time When the player should start.
         * @param  offset The offset from the beginning of the sample to start at.
         * @param  duration How long the sample should play. If no duration is given, it will default to the full length of the sample (minus any offset)
         * @param  gain  The gain to play the buffer back at.
         */
        value: function start(time, offset, duration) {
          var gain = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_6__["assert"])(this.buffer.loaded, "buffer is either not set or not loaded");
          var computedTime = this.toSeconds(time); // apply the gain envelope

          this._startGain(computedTime, gain); // if it's a loop the default offset is the loopstart point


          if (this.loop) {
            offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["defaultArg"])(offset, this.loopStart);
          } else {
            // otherwise the default offset is 0
            offset = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["defaultArg"])(offset, 0);
          } // make sure the offset is not less than 0


          var computedOffset = Math.max(this.toSeconds(offset), 0); // start the buffer source

          if (this.loop) {
            // modify the offset if it's greater than the loop time
            var loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;
            var loopStart = this.toSeconds(this.loopStart);
            var loopDuration = loopEnd - loopStart; // move the offset back

            if (Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_8__["GTE"])(computedOffset, loopEnd)) {
              computedOffset = (computedOffset - loopStart) % loopDuration + loopStart;
            } // when the offset is very close to the duration, set it to 0


            if (Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_8__["EQ"])(computedOffset, this.buffer.duration)) {
              computedOffset = 0;
            }
          } // this.buffer.loaded would have return false if the AudioBuffer was undefined


          this._source.buffer = this.buffer.get();
          this._source.loopEnd = this.toSeconds(this.loopEnd) || this.buffer.duration;

          if (Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_8__["LT"])(computedOffset, this.buffer.duration)) {
            this._sourceStarted = true;

            this._source.start(computedTime, computedOffset);
          } // if a duration is given, schedule a stop


          if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_5__["isDefined"])(duration)) {
            var computedDur = this.toSeconds(duration); // make sure it's never negative

            computedDur = Math.max(computedDur, 0);
            this.stop(computedTime + computedDur);
          }

          return this;
        }
      }, {
        key: "_stopSource",
        value: function _stopSource(time) {
          if (!this._sourceStopped && this._sourceStarted) {
            this._sourceStopped = true;

            this._source.stop(this.toSeconds(time));

            this._onended();
          }
        }
        /**
         * If loop is true, the loop will start at this position.
         */

      }, {
        key: "dispose",

        /**
         * Clean up.
         */
        value: function dispose() {
          _get(_getPrototypeOf(ToneBufferSource.prototype), "dispose", this).call(this);

          this._source.onended = null;

          this._source.disconnect();

          this._buffer.dispose();

          this.playbackRate.dispose();
          return this;
        }
      }, {
        key: "fadeIn",

        /**
         * The fadeIn time of the amplitude envelope.
         */
        get: function get() {
          return this._fadeIn;
        },
        set: function set(t) {
          this._fadeIn = t;
        }
        /**
         * The fadeOut time of the amplitude envelope.
         */

      }, {
        key: "fadeOut",
        get: function get() {
          return this._fadeOut;
        },
        set: function set(t) {
          this._fadeOut = t;
        }
        /**
         * The curve applied to the fades, either "linear" or "exponential"
         */

      }, {
        key: "curve",
        get: function get() {
          return this._curve;
        },
        set: function set(t) {
          this._curve = t;
        }
      }, {
        key: "loopStart",
        get: function get() {
          return this._source.loopStart;
        },
        set: function set(loopStart) {
          this._source.loopStart = this.toSeconds(loopStart);
        }
        /**
         * If loop is true, the loop will end at this position.
         */

      }, {
        key: "loopEnd",
        get: function get() {
          return this._source.loopEnd;
        },
        set: function set(loopEnd) {
          this._source.loopEnd = this.toSeconds(loopEnd);
        }
        /**
         * The audio buffer belonging to the player.
         */

      }, {
        key: "buffer",
        get: function get() {
          return this._buffer;
        },
        set: function set(buffer) {
          this._buffer.set(buffer);
        }
        /**
         * If the buffer should loop once it's over.
         */

      }, {
        key: "loop",
        get: function get() {
          return this._source.loop;
        },
        set: function set(loop) {
          this._source.loop = loop;

          if (this._sourceStarted) {
            this.cancelStop();
          }
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_OneShotSource__WEBPACK_IMPORTED_MODULE_7__["OneShotSource"].getDefaults(), {
            url: new _core_context_ToneAudioBuffer__WEBPACK_IMPORTED_MODULE_2__["ToneAudioBuffer"](),
            loop: false,
            loopEnd: 0,
            loopStart: 0,
            onload: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["noOp"],
            onerror: _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["noOp"],
            playbackRate: 1
          });
        }
      }]);

      return ToneBufferSource;
    }(_OneShotSource__WEBPACK_IMPORTED_MODULE_7__["OneShotSource"]); //# sourceMappingURL=ToneBufferSource.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/index.js":
  /*!*****************************************************!*\
    !*** ./node_modules/tone/build/esm/source/index.js ***!
    \*****************************************************/

  /*! exports provided: Noise, UserMedia, Oscillator, AMOscillator, FMOscillator, PulseOscillator, FatOscillator, PWMOscillator, OmniOscillator, ToneOscillatorNode, LFO, ToneBufferSource, Player, Players, GrainPlayer */

  /***/
  function node_modulesToneBuildEsmSourceIndexJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony import */


    var _Noise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ./Noise */
    "./node_modules/tone/build/esm/source/Noise.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Noise", function () {
      return _Noise__WEBPACK_IMPORTED_MODULE_0__["Noise"];
    });
    /* harmony import */


    var _UserMedia__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./UserMedia */
    "./node_modules/tone/build/esm/source/UserMedia.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "UserMedia", function () {
      return _UserMedia__WEBPACK_IMPORTED_MODULE_1__["UserMedia"];
    });
    /* harmony import */


    var _oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ./oscillator/Oscillator */
    "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Oscillator", function () {
      return _oscillator_Oscillator__WEBPACK_IMPORTED_MODULE_2__["Oscillator"];
    });
    /* harmony import */


    var _oscillator_AMOscillator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ./oscillator/AMOscillator */
    "./node_modules/tone/build/esm/source/oscillator/AMOscillator.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "AMOscillator", function () {
      return _oscillator_AMOscillator__WEBPACK_IMPORTED_MODULE_3__["AMOscillator"];
    });
    /* harmony import */


    var _oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ./oscillator/FMOscillator */
    "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FMOscillator", function () {
      return _oscillator_FMOscillator__WEBPACK_IMPORTED_MODULE_4__["FMOscillator"];
    });
    /* harmony import */


    var _oscillator_PulseOscillator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./oscillator/PulseOscillator */
    "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PulseOscillator", function () {
      return _oscillator_PulseOscillator__WEBPACK_IMPORTED_MODULE_5__["PulseOscillator"];
    });
    /* harmony import */


    var _oscillator_FatOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./oscillator/FatOscillator */
    "./node_modules/tone/build/esm/source/oscillator/FatOscillator.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "FatOscillator", function () {
      return _oscillator_FatOscillator__WEBPACK_IMPORTED_MODULE_6__["FatOscillator"];
    });
    /* harmony import */


    var _oscillator_PWMOscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./oscillator/PWMOscillator */
    "./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "PWMOscillator", function () {
      return _oscillator_PWMOscillator__WEBPACK_IMPORTED_MODULE_7__["PWMOscillator"];
    });
    /* harmony import */


    var _oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./oscillator/OmniOscillator */
    "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "OmniOscillator", function () {
      return _oscillator_OmniOscillator__WEBPACK_IMPORTED_MODULE_8__["OmniOscillator"];
    });
    /* harmony import */


    var _oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./oscillator/ToneOscillatorNode */
    "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneOscillatorNode", function () {
      return _oscillator_ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_9__["ToneOscillatorNode"];
    });
    /* harmony import */


    var _oscillator_LFO__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./oscillator/LFO */
    "./node_modules/tone/build/esm/source/oscillator/LFO.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "LFO", function () {
      return _oscillator_LFO__WEBPACK_IMPORTED_MODULE_10__["LFO"];
    });
    /* harmony import */


    var _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./buffer/ToneBufferSource */
    "./node_modules/tone/build/esm/source/buffer/ToneBufferSource.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "ToneBufferSource", function () {
      return _buffer_ToneBufferSource__WEBPACK_IMPORTED_MODULE_11__["ToneBufferSource"];
    });
    /* harmony import */


    var _buffer_Player__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./buffer/Player */
    "./node_modules/tone/build/esm/source/buffer/Player.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Player", function () {
      return _buffer_Player__WEBPACK_IMPORTED_MODULE_12__["Player"];
    });
    /* harmony import */


    var _buffer_Players__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
    /*! ./buffer/Players */
    "./node_modules/tone/build/esm/source/buffer/Players.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "Players", function () {
      return _buffer_Players__WEBPACK_IMPORTED_MODULE_13__["Players"];
    });
    /* harmony import */


    var _buffer_GrainPlayer__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
    /*! ./buffer/GrainPlayer */
    "./node_modules/tone/build/esm/source/buffer/GrainPlayer.js");
    /* harmony reexport (safe) */


    __webpack_require__.d(__webpack_exports__, "GrainPlayer", function () {
      return _buffer_GrainPlayer__WEBPACK_IMPORTED_MODULE_14__["GrainPlayer"];
    }); //# sourceMappingURL=index.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/oscillator/AMOscillator.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/oscillator/AMOscillator.js ***!
    \***********************************************************************/

  /*! exports provided: AMOscillator */

  /***/
  function node_modulesToneBuildEsmSourceOscillatorAMOscillatorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "AMOscillator", function () {
      return AMOscillator;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../signal/AudioToGain */
    "./node_modules/tone/build/esm/signal/AudioToGain.js");
    /* harmony import */


    var _signal_Multiply__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../signal/Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _Oscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./Oscillator */
    "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
    /* harmony import */


    var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./OscillatorInterface */
    "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
    /**
     * An amplitude modulated oscillator node. It is implemented with
     * two oscillators, one which modulators the other's amplitude
     * through a gain node.
     * ```
     *    +-------------+       +----------+
     *    | Carrier Osc +>------> GainNode |
     *    +-------------+       |          +--->Output
     *                      +---> gain     |
     * +---------------+    |   +----------+
     * | Modulator Osc +>---+
     * +---------------+
     * ```
     * @offline 0.2 1
     * @example
     * const amOsc = new Tone.AMOscillator(30, "sine", "square").toDestination().start();
     * @category Source
     */


    var AMOscillator = /*#__PURE__*/function (_Source__WEBPACK_IMPO3) {
      _inherits(AMOscillator, _Source__WEBPACK_IMPO3);

      var _super167 = _createSuper(AMOscillator);

      function AMOscillator() {
        var _this240;

        _classCallCheck2(this, AMOscillator);

        _this240 = _super167.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(AMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]));
        _this240.name = "AMOscillator";
        /**
         * convert the -1,1 output to 0,1
         */

        _this240._modulationScale = new _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_4__["AudioToGain"]({
          context: _this240.context
        });
        /**
         * the node where the modulation happens
         */

        _this240._modulationNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
          context: _this240.context
        });
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(AMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]);
        _this240._carrier = new _Oscillator__WEBPACK_IMPORTED_MODULE_7__["Oscillator"]({
          context: _this240.context,
          detune: options.detune,
          frequency: options.frequency,
          onstop: function onstop() {
            return _this240.onstop(_assertThisInitialized(_this240));
          },
          phase: options.phase,
          type: options.type
        });
        _this240.frequency = _this240._carrier.frequency, _this240.detune = _this240._carrier.detune;
        _this240._modulator = new _Oscillator__WEBPACK_IMPORTED_MODULE_7__["Oscillator"]({
          context: _this240.context,
          phase: options.phase,
          type: options.modulationType
        });
        _this240.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_5__["Multiply"]({
          context: _this240.context,
          units: "positive",
          value: options.harmonicity
        }); // connections

        _this240.frequency.chain(_this240.harmonicity, _this240._modulator.frequency);

        _this240._modulator.chain(_this240._modulationScale, _this240._modulationNode.gain);

        _this240._carrier.chain(_this240._modulationNode, _this240.output);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this240), ["frequency", "detune", "harmonicity"]);
        return _this240;
      }

      _createClass2(AMOscillator, [{
        key: "_start",

        /**
         * start the oscillator
         */
        value: function _start(time) {
          this._modulator.start(time);

          this._carrier.start(time);
        }
        /**
         * stop the oscillator
         */

      }, {
        key: "_stop",
        value: function _stop(time) {
          this._modulator.stop(time);

          this._carrier.stop(time);
        }
      }, {
        key: "_restart",
        value: function _restart(time) {
          this._modulator.restart(time);

          this._carrier.restart(time);
        }
        /**
         * The type of the carrier oscillator
         */

      }, {
        key: "asArray",
        value: function asArray() {
          var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee52() {
            return regeneratorRuntime.wrap(function _callee52$(_context62) {
              while (1) {
                switch (_context62.prev = _context62.next) {
                  case 0:
                    return _context62.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_8__["generateWaveform"])(this, length));

                  case 1:
                  case "end":
                    return _context62.stop();
                }
              }
            }, _callee52, this);
          }));
        }
        /**
         * Clean up.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(AMOscillator.prototype), "dispose", this).call(this);

          this.frequency.dispose();
          this.detune.dispose();
          this.harmonicity.dispose();

          this._carrier.dispose();

          this._modulator.dispose();

          this._modulationNode.dispose();

          this._modulationScale.dispose();

          return this;
        }
      }, {
        key: "type",
        get: function get() {
          return this._carrier.type;
        },
        set: function set(type) {
          this._carrier.type = type;
        }
      }, {
        key: "baseType",
        get: function get() {
          return this._carrier.baseType;
        },
        set: function set(baseType) {
          this._carrier.baseType = baseType;
        }
      }, {
        key: "partialCount",
        get: function get() {
          return this._carrier.partialCount;
        },
        set: function set(partialCount) {
          this._carrier.partialCount = partialCount;
        }
        /**
         * The type of the modulator oscillator
         */

      }, {
        key: "modulationType",
        get: function get() {
          return this._modulator.type;
        },
        set: function set(type) {
          this._modulator.type = type;
        }
      }, {
        key: "phase",
        get: function get() {
          return this._carrier.phase;
        },
        set: function set(phase) {
          this._carrier.phase = phase;
          this._modulator.phase = phase;
        }
      }, {
        key: "partials",
        get: function get() {
          return this._carrier.partials;
        },
        set: function set(partials) {
          this._carrier.partials = partials;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_7__["Oscillator"].getDefaults(), {
            harmonicity: 1,
            modulationType: "square"
          });
        }
      }]);

      return AMOscillator;
    }(_Source__WEBPACK_IMPORTED_MODULE_6__["Source"]); //# sourceMappingURL=AMOscillator.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js":
  /*!***********************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/oscillator/FMOscillator.js ***!
    \***********************************************************************/

  /*! exports provided: FMOscillator */

  /***/
  function node_modulesToneBuildEsmSourceOscillatorFMOscillatorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FMOscillator", function () {
      return FMOscillator;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../signal/Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _Oscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./Oscillator */
    "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
    /* harmony import */


    var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./OscillatorInterface */
    "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
    /**
     * FMOscillator implements a frequency modulation synthesis
     * ```
     *                                              +-------------+
     * +---------------+        +-------------+     | Carrier Osc |
     * | Modulator Osc +>-------> GainNode    |     |             +--->Output
     * +---------------+        |             +>----> frequency   |
     *                       +--> gain        |     +-------------+
     *                       |  +-------------+
     * +-----------------+   |
     * | modulationIndex +>--+
     * +-----------------+
     * ```
     *
     * @offline 0.1 1
     * @example
     * const fmOsc = new Tone.FMOscillator({
     * 	frequency: 200,
     * 	type: "square",
     * 	modulationType: "triangle",
     * 	harmonicity: 0.2,
     * 	modulationIndex: 3
     * }).toDestination().start();
     * @category Source
     */


    var FMOscillator = /*#__PURE__*/function (_Source__WEBPACK_IMPO4) {
      _inherits(FMOscillator, _Source__WEBPACK_IMPO4);

      var _super168 = _createSuper(FMOscillator);

      function FMOscillator() {
        var _this241;

        _classCallCheck2(this, FMOscillator);

        _this241 = _super168.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(FMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]));
        _this241.name = "FMOscillator";
        /**
         * the node where the modulation happens
         */

        _this241._modulationNode = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
          context: _this241.context,
          gain: 0
        });
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(FMOscillator.getDefaults(), arguments, ["frequency", "type", "modulationType"]);
        _this241._carrier = new _Oscillator__WEBPACK_IMPORTED_MODULE_7__["Oscillator"]({
          context: _this241.context,
          detune: options.detune,
          frequency: 0,
          onstop: function onstop() {
            return _this241.onstop(_assertThisInitialized(_this241));
          },
          phase: options.phase,
          type: options.type
        });
        _this241.detune = _this241._carrier.detune;
        _this241.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_5__["Signal"]({
          context: _this241.context,
          units: "frequency",
          value: options.frequency
        });
        _this241._modulator = new _Oscillator__WEBPACK_IMPORTED_MODULE_7__["Oscillator"]({
          context: _this241.context,
          phase: options.phase,
          type: options.modulationType
        });
        _this241.harmonicity = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__["Multiply"]({
          context: _this241.context,
          units: "positive",
          value: options.harmonicity
        });
        _this241.modulationIndex = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_4__["Multiply"]({
          context: _this241.context,
          units: "positive",
          value: options.modulationIndex
        }); // connections

        _this241.frequency.connect(_this241._carrier.frequency);

        _this241.frequency.chain(_this241.harmonicity, _this241._modulator.frequency);

        _this241.frequency.chain(_this241.modulationIndex, _this241._modulationNode);

        _this241._modulator.connect(_this241._modulationNode.gain);

        _this241._modulationNode.connect(_this241._carrier.frequency);

        _this241._carrier.connect(_this241.output);

        _this241.detune.connect(_this241._modulator.detune);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this241), ["modulationIndex", "frequency", "detune", "harmonicity"]);
        return _this241;
      }

      _createClass2(FMOscillator, [{
        key: "_start",

        /**
         * start the oscillator
         */
        value: function _start(time) {
          this._modulator.start(time);

          this._carrier.start(time);
        }
        /**
         * stop the oscillator
         */

      }, {
        key: "_stop",
        value: function _stop(time) {
          this._modulator.stop(time);

          this._carrier.stop(time);
        }
      }, {
        key: "_restart",
        value: function _restart(time) {
          this._modulator.restart(time);

          this._carrier.restart(time);

          return this;
        }
      }, {
        key: "asArray",
        value: function asArray() {
          var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee53() {
            return regeneratorRuntime.wrap(function _callee53$(_context63) {
              while (1) {
                switch (_context63.prev = _context63.next) {
                  case 0:
                    return _context63.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_8__["generateWaveform"])(this, length));

                  case 1:
                  case "end":
                    return _context63.stop();
                }
              }
            }, _callee53, this);
          }));
        }
        /**
         * Clean up.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(FMOscillator.prototype), "dispose", this).call(this);

          this.frequency.dispose();
          this.harmonicity.dispose();

          this._carrier.dispose();

          this._modulator.dispose();

          this._modulationNode.dispose();

          this.modulationIndex.dispose();
          return this;
        }
      }, {
        key: "type",
        get: function get() {
          return this._carrier.type;
        },
        set: function set(type) {
          this._carrier.type = type;
        }
      }, {
        key: "baseType",
        get: function get() {
          return this._carrier.baseType;
        },
        set: function set(baseType) {
          this._carrier.baseType = baseType;
        }
      }, {
        key: "partialCount",
        get: function get() {
          return this._carrier.partialCount;
        },
        set: function set(partialCount) {
          this._carrier.partialCount = partialCount;
        }
        /**
         * The type of the modulator oscillator
         */

      }, {
        key: "modulationType",
        get: function get() {
          return this._modulator.type;
        },
        set: function set(type) {
          this._modulator.type = type;
        }
      }, {
        key: "phase",
        get: function get() {
          return this._carrier.phase;
        },
        set: function set(phase) {
          this._carrier.phase = phase;
          this._modulator.phase = phase;
        }
      }, {
        key: "partials",
        get: function get() {
          return this._carrier.partials;
        },
        set: function set(partials) {
          this._carrier.partials = partials;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_7__["Oscillator"].getDefaults(), {
            harmonicity: 1,
            modulationIndex: 2,
            modulationType: "square"
          });
        }
      }]);

      return FMOscillator;
    }(_Source__WEBPACK_IMPORTED_MODULE_6__["Source"]); //# sourceMappingURL=FMOscillator.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/oscillator/FatOscillator.js":
  /*!************************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/oscillator/FatOscillator.js ***!
    \************************************************************************/

  /*! exports provided: FatOscillator */

  /***/
  function node_modulesToneBuildEsmSourceOscillatorFatOscillatorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "FatOscillator", function () {
      return FatOscillator;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _Source__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _Oscillator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./Oscillator */
    "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
    /* harmony import */


    var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./OscillatorInterface */
    "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /**
     * FatOscillator is an array of oscillators with detune spread between the oscillators
     * @example
     * const fatOsc = new Tone.FatOscillator("Ab3", "sawtooth", 40).toDestination().start();
     * @category Source
     */


    var FatOscillator = /*#__PURE__*/function (_Source__WEBPACK_IMPO5) {
      _inherits(FatOscillator, _Source__WEBPACK_IMPO5);

      var _super169 = _createSuper(FatOscillator);

      function FatOscillator() {
        var _this242;

        _classCallCheck2(this, FatOscillator);

        _this242 = _super169.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(FatOscillator.getDefaults(), arguments, ["frequency", "type", "spread"]));
        _this242.name = "FatOscillator";
        /**
         * The array of oscillators
         */

        _this242._oscillators = [];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(FatOscillator.getDefaults(), arguments, ["frequency", "type", "spread"]);
        _this242.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
          context: _this242.context,
          units: "frequency",
          value: options.frequency
        });
        _this242.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_3__["Signal"]({
          context: _this242.context,
          units: "cents",
          value: options.detune
        });
        _this242._spread = options.spread;
        _this242._type = options.type;
        _this242._phase = options.phase;
        _this242._partials = options.partials;
        _this242._partialCount = options.partialCount; // set the count initially

        _this242.count = options.count;
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this242), ["frequency", "detune"]);
        return _this242;
      }

      _createClass2(FatOscillator, [{
        key: "_start",

        /**
         * start the oscillator
         */
        value: function _start(time) {
          time = this.toSeconds(time);

          this._forEach(function (osc) {
            return osc.start(time);
          });
        }
        /**
         * stop the oscillator
         */

      }, {
        key: "_stop",
        value: function _stop(time) {
          time = this.toSeconds(time);

          this._forEach(function (osc) {
            return osc.stop(time);
          });
        }
      }, {
        key: "_restart",
        value: function _restart(time) {
          this._forEach(function (osc) {
            return osc.restart(time);
          });
        }
        /**
         * Iterate over all of the oscillators
         */

      }, {
        key: "_forEach",
        value: function _forEach(iterator) {
          for (var i = 0; i < this._oscillators.length; i++) {
            iterator(this._oscillators[i], i);
          }
        }
        /**
         * The type of the oscillator
         */

      }, {
        key: "asArray",
        value: function asArray() {
          var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee54() {
            return regeneratorRuntime.wrap(function _callee54$(_context64) {
              while (1) {
                switch (_context64.prev = _context64.next) {
                  case 0:
                    return _context64.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_6__["generateWaveform"])(this, length));

                  case 1:
                  case "end":
                    return _context64.stop();
                }
              }
            }, _callee54, this);
          }));
        }
        /**
         * Clean up.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(FatOscillator.prototype), "dispose", this).call(this);

          this.frequency.dispose();
          this.detune.dispose();

          this._forEach(function (osc) {
            return osc.dispose();
          });

          return this;
        }
      }, {
        key: "type",
        get: function get() {
          return this._type;
        },
        set: function set(type) {
          this._type = type;

          this._forEach(function (osc) {
            return osc.type = type;
          });
        }
        /**
         * The detune spread between the oscillators. If "count" is
         * set to 3 oscillators and the "spread" is set to 40,
         * the three oscillators would be detuned like this: [-20, 0, 20]
         * for a total detune spread of 40 cents.
         * @example
         * const fatOsc = new Tone.FatOscillator().toDestination().start();
         * fatOsc.spread = 70;
         */

      }, {
        key: "spread",
        get: function get() {
          return this._spread;
        },
        set: function set(spread) {
          this._spread = spread;

          if (this._oscillators.length > 1) {
            var start = -spread / 2;
            var step = spread / (this._oscillators.length - 1);

            this._forEach(function (osc, i) {
              return osc.detune.value = start + step * i;
            });
          }
        }
        /**
         * The number of detuned oscillators. Must be an integer greater than 1.
         * @example
         * const fatOsc = new Tone.FatOscillator("C#3", "sawtooth").toDestination().start();
         * // use 4 sawtooth oscillators
         * fatOsc.count = 4;
         */

      }, {
        key: "count",
        get: function get() {
          return this._oscillators.length;
        },
        set: function set(count) {
          var _this243 = this;

          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_7__["assertRange"])(count, 1);

          if (this._oscillators.length !== count) {
            // dispose the previous oscillators
            this._forEach(function (osc) {
              return osc.dispose();
            });

            this._oscillators = [];

            for (var i = 0; i < count; i++) {
              var osc = new _Oscillator__WEBPACK_IMPORTED_MODULE_5__["Oscillator"]({
                context: this.context,
                volume: -6 - count * 1.1,
                type: this._type,
                phase: this._phase + i / count * 360,
                partialCount: this._partialCount,
                onstop: i === 0 ? function () {
                  return _this243.onstop(_this243);
                } : _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["noOp"]
              });

              if (this.type === "custom") {
                osc.partials = this._partials;
              }

              this.frequency.connect(osc.frequency);
              this.detune.connect(osc.detune);
              osc.detune.overridden = false;
              osc.connect(this.output);
              this._oscillators[i] = osc;
            } // set the spread


            this.spread = this._spread;

            if (this.state === "started") {
              this._forEach(function (osc) {
                return osc.start();
              });
            }
          }
        }
      }, {
        key: "phase",
        get: function get() {
          return this._phase;
        },
        set: function set(phase) {
          this._phase = phase;

          this._forEach(function (osc) {
            return osc.phase = phase;
          });
        }
      }, {
        key: "baseType",
        get: function get() {
          return this._oscillators[0].baseType;
        },
        set: function set(baseType) {
          this._forEach(function (osc) {
            return osc.baseType = baseType;
          });

          this._type = this._oscillators[0].type;
        }
      }, {
        key: "partials",
        get: function get() {
          return this._oscillators[0].partials;
        },
        set: function set(partials) {
          this._partials = partials;
          this._partialCount = this._partials.length;

          if (partials.length) {
            this._type = "custom";

            this._forEach(function (osc) {
              return osc.partials = partials;
            });
          }
        }
      }, {
        key: "partialCount",
        get: function get() {
          return this._oscillators[0].partialCount;
        },
        set: function set(partialCount) {
          this._partialCount = partialCount;

          this._forEach(function (osc) {
            return osc.partialCount = partialCount;
          });

          this._type = this._oscillators[0].type;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_5__["Oscillator"].getDefaults(), {
            count: 3,
            spread: 20,
            type: "sawtooth"
          });
        }
      }]);

      return FatOscillator;
    }(_Source__WEBPACK_IMPORTED_MODULE_4__["Source"]); //# sourceMappingURL=FatOscillator.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/oscillator/LFO.js":
  /*!**************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/oscillator/LFO.js ***!
    \**************************************************************/

  /*! exports provided: LFO */

  /***/
  function node_modulesToneBuildEsmSourceOscillatorLFOJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LFO", function () {
      return LFO;
    });
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../signal/AudioToGain */
    "./node_modules/tone/build/esm/signal/AudioToGain.js");
    /* harmony import */


    var _signal_Scale__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../../signal/Scale */
    "./node_modules/tone/build/esm/signal/Scale.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _signal_Zero__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../signal/Zero */
    "./node_modules/tone/build/esm/signal/Zero.js");
    /* harmony import */


    var _Oscillator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./Oscillator */
    "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
    /**
     * LFO stands for low frequency oscillator. LFO produces an output signal
     * which can be attached to an AudioParam or Tone.Signal
     * in order to modulate that parameter with an oscillator. The LFO can
     * also be synced to the transport to start/stop and change when the tempo changes.
     * @offline 0.5 1
     * @example
     * const lfo = new Tone.LFO("4n", 400, 4000).start().toDestination();
     * @category Source
     */


    var LFO = /*#__PURE__*/function (_core_context_ToneAud38) {
      _inherits(LFO, _core_context_ToneAud38);

      var _super170 = _createSuper(LFO);

      function LFO() {
        var _this244;

        _classCallCheck2(this, LFO);

        _this244 = _super170.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(LFO.getDefaults(), arguments, ["frequency", "min", "max"]));
        _this244.name = "LFO";
        /**
         * The value that the LFO outputs when it's stopped
         */

        _this244._stoppedValue = 0;
        /**
         * A private placeholder for the units
         */

        _this244._units = "number";
        /**
         * If the input value is converted using the [[units]]
         */

        _this244.convert = true;
        /**
         * Private methods borrowed from Param
         */
        // @ts-ignore

        _this244._fromType = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"].prototype._fromType; // @ts-ignore

        _this244._toType = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"].prototype._toType; // @ts-ignore

        _this244._is = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"].prototype._is; // @ts-ignore

        _this244._clampValue = _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"].prototype._clampValue;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_3__["optionsFromArguments"])(LFO.getDefaults(), arguments, ["frequency", "min", "max"]); // @ts-ignore

        _this244._oscillator = new _Oscillator__WEBPACK_IMPORTED_MODULE_9__["Oscillator"]({
          context: _this244.context,
          frequency: options.frequency,
          type: options.type
        });
        _this244.frequency = _this244._oscillator.frequency;
        _this244._amplitudeGain = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_0__["Gain"]({
          context: _this244.context,
          gain: options.amplitude,
          units: "normalRange"
        });
        _this244.amplitude = _this244._amplitudeGain.gain;
        _this244._stoppedSignal = new _signal_Signal__WEBPACK_IMPORTED_MODULE_7__["Signal"]({
          context: _this244.context,
          units: "audioRange",
          value: 0
        });
        _this244._zeros = new _signal_Zero__WEBPACK_IMPORTED_MODULE_8__["Zero"]({
          context: _this244.context
        });
        _this244._a2g = new _signal_AudioToGain__WEBPACK_IMPORTED_MODULE_5__["AudioToGain"]({
          context: _this244.context
        });
        _this244._scaler = _this244.output = new _signal_Scale__WEBPACK_IMPORTED_MODULE_6__["Scale"]({
          context: _this244.context,
          max: options.max,
          min: options.min
        });
        _this244.units = options.units;
        _this244.min = options.min;
        _this244.max = options.max; // connect it up

        _this244._oscillator.chain(_this244._a2g, _this244._amplitudeGain, _this244._scaler);

        _this244._zeros.connect(_this244._a2g);

        _this244._stoppedSignal.connect(_this244._a2g);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this244), ["amplitude", "frequency"]);
        _this244.phase = options.phase;
        return _this244;
      }

      _createClass2(LFO, [{
        key: "start",

        /**
         * Start the LFO.
         * @param time The time the LFO will start
         */
        value: function start(time) {
          time = this.toSeconds(time);

          this._stoppedSignal.setValueAtTime(0, time);

          this._oscillator.start(time);

          return this;
        }
        /**
         * Stop the LFO.
         * @param  time The time the LFO will stop
         */

      }, {
        key: "stop",
        value: function stop(time) {
          time = this.toSeconds(time);

          this._stoppedSignal.setValueAtTime(this._stoppedValue, time);

          this._oscillator.stop(time);

          return this;
        }
        /**
         * Sync the start/stop/pause to the transport
         * and the frequency to the bpm of the transport
         * @example
         * const lfo = new Tone.LFO("8n");
         * lfo.sync().start(0);
         * // the rate of the LFO will always be an eighth note, even as the tempo changes
         */

      }, {
        key: "sync",
        value: function sync() {
          this._oscillator.sync();

          this._oscillator.syncFrequency();

          return this;
        }
        /**
         * unsync the LFO from transport control
         */

      }, {
        key: "unsync",
        value: function unsync() {
          this._oscillator.unsync();

          this._oscillator.unsyncFrequency();

          return this;
        }
        /**
         * The minimum output of the LFO.
         */

      }, {
        key: "connect",

        /**
         * @param node the destination to connect to
         * @param outputNum the optional output number
         * @param inputNum the input number
         */
        value: function connect(node, outputNum, inputNum) {
          if (node instanceof _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"] || node instanceof _signal_Signal__WEBPACK_IMPORTED_MODULE_7__["Signal"]) {
            this.convert = node.convert;
            this.units = node.units;
          }

          Object(_signal_Signal__WEBPACK_IMPORTED_MODULE_7__["connectSignal"])(this, node, outputNum, inputNum);
          return this;
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(LFO.prototype), "dispose", this).call(this);

          this._oscillator.dispose();

          this._stoppedSignal.dispose();

          this._zeros.dispose();

          this._scaler.dispose();

          this._a2g.dispose();

          this._amplitudeGain.dispose();

          this.amplitude.dispose();
          return this;
        }
      }, {
        key: "min",
        get: function get() {
          return this._toType(this._scaler.min);
        },
        set: function set(min) {
          min = this._fromType(min);
          this._scaler.min = min;
        }
        /**
         * The maximum output of the LFO.
         */

      }, {
        key: "max",
        get: function get() {
          return this._toType(this._scaler.max);
        },
        set: function set(max) {
          max = this._fromType(max);
          this._scaler.max = max;
        }
        /**
         * The type of the oscillator: See [[Oscillator.type]]
         */

      }, {
        key: "type",
        get: function get() {
          return this._oscillator.type;
        },
        set: function set(type) {
          this._oscillator.type = type;
          this._stoppedValue = this._oscillator.getInitialValue();
          this._stoppedSignal.value = this._stoppedValue;
        }
        /**
         * The phase of the LFO.
         */

      }, {
        key: "phase",
        get: function get() {
          return this._oscillator.phase;
        },
        set: function set(phase) {
          this._oscillator.phase = phase;
          this._stoppedValue = this._oscillator.getInitialValue();
          this._stoppedSignal.value = this._stoppedValue;
        }
        /**
         * The output units of the LFO.
         */

      }, {
        key: "units",
        get: function get() {
          return this._units;
        },
        set: function set(val) {
          var currentMin = this.min;
          var currentMax = this.max; // convert the min and the max

          this._units = val;
          this.min = currentMin;
          this.max = currentMax;
        }
        /**
         * Returns the playback state of the source, either "started" or "stopped".
         */

      }, {
        key: "state",
        get: function get() {
          return this._oscillator.state;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"].getDefaults(), {
            amplitude: 1,
            frequency: "4n",
            max: 1,
            min: 0,
            phase: 0,
            type: "sine",
            units: "number"
          });
        }
      }]);

      return LFO;
    }(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_2__["ToneAudioNode"]); //# sourceMappingURL=LFO.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js":
  /*!*************************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/oscillator/OmniOscillator.js ***!
    \*************************************************************************/

  /*! exports provided: OmniOscillator */

  /***/
  function node_modulesToneBuildEsmSourceOscillatorOmniOscillatorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "OmniOscillator", function () {
      return OmniOscillator;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _Source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _AMOscillator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./AMOscillator */
    "./node_modules/tone/build/esm/source/oscillator/AMOscillator.js");
    /* harmony import */


    var _FatOscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./FatOscillator */
    "./node_modules/tone/build/esm/source/oscillator/FatOscillator.js");
    /* harmony import */


    var _FMOscillator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./FMOscillator */
    "./node_modules/tone/build/esm/source/oscillator/FMOscillator.js");
    /* harmony import */


    var _Oscillator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ./Oscillator */
    "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
    /* harmony import */


    var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
    /*! ./OscillatorInterface */
    "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
    /* harmony import */


    var _PulseOscillator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
    /*! ./PulseOscillator */
    "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js");
    /* harmony import */


    var _PWMOscillator__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
    /*! ./PWMOscillator */
    "./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js");

    var OmniOscillatorSourceMap = {
      am: _AMOscillator__WEBPACK_IMPORTED_MODULE_6__["AMOscillator"],
      fat: _FatOscillator__WEBPACK_IMPORTED_MODULE_7__["FatOscillator"],
      fm: _FMOscillator__WEBPACK_IMPORTED_MODULE_8__["FMOscillator"],
      oscillator: _Oscillator__WEBPACK_IMPORTED_MODULE_9__["Oscillator"],
      pulse: _PulseOscillator__WEBPACK_IMPORTED_MODULE_11__["PulseOscillator"],
      pwm: _PWMOscillator__WEBPACK_IMPORTED_MODULE_12__["PWMOscillator"]
    };
    /**
     * OmniOscillator aggregates all of the oscillator types into one.
     * @offline 0.1 1
     * @example
     * const omniOsc = new Tone.OmniOscillator("C#4", "pwm").toDestination().start();
     * @category Source
     */

    var OmniOscillator = /*#__PURE__*/function (_Source__WEBPACK_IMPO6) {
      _inherits(OmniOscillator, _Source__WEBPACK_IMPO6);

      var _super171 = _createSuper(OmniOscillator);

      function OmniOscillator() {
        var _this245;

        _classCallCheck2(this, OmniOscillator);

        _this245 = _super171.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(OmniOscillator.getDefaults(), arguments, ["frequency", "type"]));
        _this245.name = "OmniOscillator";
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(OmniOscillator.getDefaults(), arguments, ["frequency", "type"]);
        _this245.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
          context: _this245.context,
          units: "frequency",
          value: options.frequency
        });
        _this245.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
          context: _this245.context,
          units: "cents",
          value: options.detune
        });
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this245), ["frequency", "detune"]); // set the options

        _this245.set(options);

        return _this245;
      }

      _createClass2(OmniOscillator, [{
        key: "_start",

        /**
         * start the oscillator
         */
        value: function _start(time) {
          this._oscillator.start(time);
        }
        /**
         * start the oscillator
         */

      }, {
        key: "_stop",
        value: function _stop(time) {
          this._oscillator.stop(time);
        }
      }, {
        key: "_restart",
        value: function _restart(time) {
          this._oscillator.restart(time);

          return this;
        }
        /**
         * The type of the oscillator. Can be any of the basic types: sine, square, triangle, sawtooth. Or
         * prefix the basic types with "fm", "am", or "fat" to use the FMOscillator, AMOscillator or FatOscillator
         * types. The oscillator could also be set to "pwm" or "pulse". All of the parameters of the
         * oscillator's class are accessible when the oscillator is set to that type, but throws an error
         * when it's not.
         * @example
         * const omniOsc = new Tone.OmniOscillator().toDestination().start();
         * omniOsc.type = "pwm";
         * // modulationFrequency is parameter which is available
         * // only when the type is "pwm".
         * omniOsc.modulationFrequency.value = 0.5;
         */

      }, {
        key: "set",
        value: function set(props) {
          // make sure the type is set first
          if (Reflect.has(props, "type") && props.type) {
            this.type = props.type;
          } // then set the rest


          _get(_getPrototypeOf(OmniOscillator.prototype), "set", this).call(this, props);

          return this;
        }
        /**
         * connect the oscillator to the frequency and detune signals
         */

      }, {
        key: "_createNewOscillator",
        value: function _createNewOscillator(oscType) {
          var _this246 = this;

          if (oscType !== this._sourceType) {
            this._sourceType = oscType;
            var OscConstructor = OmniOscillatorSourceMap[oscType]; // short delay to avoid clicks on the change

            var now = this.now();

            if (this._oscillator) {
              var oldOsc = this._oscillator;
              oldOsc.stop(now); // dispose the old one

              this.context.setTimeout(function () {
                return oldOsc.dispose();
              }, this.blockTime);
            }

            this._oscillator = new OscConstructor({
              context: this.context
            });
            this.frequency.connect(this._oscillator.frequency);
            this.detune.connect(this._oscillator.detune);

            this._oscillator.connect(this.output);

            this._oscillator.onstop = function () {
              return _this246.onstop(_this246);
            };

            if (this.state === "started") {
              this._oscillator.start(now);
            }
          }
        }
      }, {
        key: "_getOscType",
        value: function _getOscType(osc, sourceType) {
          return osc instanceof OmniOscillatorSourceMap[sourceType];
        }
        /**
         * The base type of the oscillator. See [[Oscillator.baseType]]
         * @example
         * const omniOsc = new Tone.OmniOscillator(440, "fmsquare4");
         * console.log(omniOsc.sourceType, omniOsc.baseType, omniOsc.partialCount);
         */

      }, {
        key: "asArray",
        value: function asArray() {
          var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee55() {
            return regeneratorRuntime.wrap(function _callee55$(_context65) {
              while (1) {
                switch (_context65.prev = _context65.next) {
                  case 0:
                    return _context65.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_10__["generateWaveform"])(this, length));

                  case 1:
                  case "end":
                    return _context65.stop();
                }
              }
            }, _callee55, this);
          }));
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(OmniOscillator.prototype), "dispose", this).call(this);

          this.detune.dispose();
          this.frequency.dispose();

          this._oscillator.dispose();

          return this;
        }
      }, {
        key: "type",
        get: function get() {
          var _this247 = this;

          var prefix = "";

          if (["am", "fm", "fat"].some(function (p) {
            return _this247._sourceType === p;
          })) {
            prefix = this._sourceType;
          }

          return prefix + this._oscillator.type;
        },
        set: function set(type) {
          if (type.substr(0, 2) === "fm") {
            this._createNewOscillator("fm");

            this._oscillator = this._oscillator;
            this._oscillator.type = type.substr(2);
          } else if (type.substr(0, 2) === "am") {
            this._createNewOscillator("am");

            this._oscillator = this._oscillator;
            this._oscillator.type = type.substr(2);
          } else if (type.substr(0, 3) === "fat") {
            this._createNewOscillator("fat");

            this._oscillator = this._oscillator;
            this._oscillator.type = type.substr(3);
          } else if (type === "pwm") {
            this._createNewOscillator("pwm");

            this._oscillator = this._oscillator;
          } else if (type === "pulse") {
            this._createNewOscillator("pulse");
          } else {
            this._createNewOscillator("oscillator");

            this._oscillator = this._oscillator;
            this._oscillator.type = type;
          }
        }
        /**
         * The value is an empty array when the type is not "custom".
         * This is not available on "pwm" and "pulse" oscillator types.
         * See [[Oscillator.partials]]
         */

      }, {
        key: "partials",
        get: function get() {
          return this._oscillator.partials;
        },
        set: function set(partials) {
          if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm")) {
            this._oscillator.partials = partials;
          }
        }
      }, {
        key: "partialCount",
        get: function get() {
          return this._oscillator.partialCount;
        },
        set: function set(partialCount) {
          if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm")) {
            this._oscillator.partialCount = partialCount;
          }
        }
      }, {
        key: "phase",
        get: function get() {
          return this._oscillator.phase;
        },
        set: function set(phase) {
          this._oscillator.phase = phase;
        }
        /**
         * The source type of the oscillator.
         * @example
         * const omniOsc = new Tone.OmniOscillator(440, "fmsquare");
         * console.log(omniOsc.sourceType); // 'fm'
         */

      }, {
        key: "sourceType",
        get: function get() {
          return this._sourceType;
        },
        set: function set(sType) {
          // the basetype defaults to sine
          var baseType = "sine";

          if (this._oscillator.type !== "pwm" && this._oscillator.type !== "pulse") {
            baseType = this._oscillator.type;
          } // set the type


          if (sType === "fm") {
            this.type = "fm" + baseType;
          } else if (sType === "am") {
            this.type = "am" + baseType;
          } else if (sType === "fat") {
            this.type = "fat" + baseType;
          } else if (sType === "oscillator") {
            this.type = baseType;
          } else if (sType === "pulse") {
            this.type = "pulse";
          } else if (sType === "pwm") {
            this.type = "pwm";
          }
        }
      }, {
        key: "baseType",
        get: function get() {
          return this._oscillator.baseType;
        },
        set: function set(baseType) {
          if (!this._getOscType(this._oscillator, "pulse") && !this._getOscType(this._oscillator, "pwm") && baseType !== "pulse" && baseType !== "pwm") {
            this._oscillator.baseType = baseType;
          }
        }
        /**
         * The width of the oscillator when sourceType === "pulse".
         * See [[PWMOscillator.width]]
         */

      }, {
        key: "width",
        get: function get() {
          if (this._getOscType(this._oscillator, "pulse")) {
            return this._oscillator.width;
          } else {
            return undefined;
          }
        }
        /**
         * The number of detuned oscillators when sourceType === "fat".
         * See [[FatOscillator.count]]
         */

      }, {
        key: "count",
        get: function get() {
          if (this._getOscType(this._oscillator, "fat")) {
            return this._oscillator.count;
          } else {
            return undefined;
          }
        },
        set: function set(count) {
          if (this._getOscType(this._oscillator, "fat") && Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isNumber"])(count)) {
            this._oscillator.count = count;
          }
        }
        /**
         * The detune spread between the oscillators when sourceType === "fat".
         * See [[FatOscillator.count]]
         */

      }, {
        key: "spread",
        get: function get() {
          if (this._getOscType(this._oscillator, "fat")) {
            return this._oscillator.spread;
          } else {
            return undefined;
          }
        },
        set: function set(spread) {
          if (this._getOscType(this._oscillator, "fat") && Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isNumber"])(spread)) {
            this._oscillator.spread = spread;
          }
        }
        /**
         * The type of the modulator oscillator. Only if the oscillator is set to "am" or "fm" types.
         * See [[AMOscillator]] or [[FMOscillator]]
         */

      }, {
        key: "modulationType",
        get: function get() {
          if (this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) {
            return this._oscillator.modulationType;
          } else {
            return undefined;
          }
        },
        set: function set(mType) {
          if ((this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) && Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isString"])(mType)) {
            this._oscillator.modulationType = mType;
          }
        }
        /**
         * The modulation index when the sourceType === "fm"
         * See [[FMOscillator]].
         */

      }, {
        key: "modulationIndex",
        get: function get() {
          if (this._getOscType(this._oscillator, "fm")) {
            return this._oscillator.modulationIndex;
          } else {
            return undefined;
          }
        }
        /**
         * Harmonicity is the frequency ratio between the carrier and the modulator oscillators.
         * See [[AMOscillator]] or [[FMOscillator]]
         */

      }, {
        key: "harmonicity",
        get: function get() {
          if (this._getOscType(this._oscillator, "fm") || this._getOscType(this._oscillator, "am")) {
            return this._oscillator.harmonicity;
          } else {
            return undefined;
          }
        }
        /**
         * The modulationFrequency Signal of the oscillator when sourceType === "pwm"
         * see [[PWMOscillator]]
         * @min 0.1
         * @max 5
         */

      }, {
        key: "modulationFrequency",
        get: function get() {
          if (this._getOscType(this._oscillator, "pwm")) {
            return this._oscillator.modulationFrequency;
          } else {
            return undefined;
          }
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Oscillator__WEBPACK_IMPORTED_MODULE_9__["Oscillator"].getDefaults(), _FMOscillator__WEBPACK_IMPORTED_MODULE_8__["FMOscillator"].getDefaults(), _AMOscillator__WEBPACK_IMPORTED_MODULE_6__["AMOscillator"].getDefaults(), _FatOscillator__WEBPACK_IMPORTED_MODULE_7__["FatOscillator"].getDefaults(), _PulseOscillator__WEBPACK_IMPORTED_MODULE_11__["PulseOscillator"].getDefaults(), _PWMOscillator__WEBPACK_IMPORTED_MODULE_12__["PWMOscillator"].getDefaults());
        }
      }]);

      return OmniOscillator;
    }(_Source__WEBPACK_IMPORTED_MODULE_5__["Source"]); //# sourceMappingURL=OmniOscillator.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/oscillator/Oscillator.js":
  /*!*********************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/oscillator/Oscillator.js ***!
    \*********************************************************************/

  /*! exports provided: Oscillator */

  /***/
  function node_modulesToneBuildEsmSourceOscillatorOscillatorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Oscillator", function () {
      return Oscillator;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/TypeCheck */
    "./node_modules/tone/build/esm/core/util/TypeCheck.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _Source__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./OscillatorInterface */
    "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
    /* harmony import */


    var _ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./ToneOscillatorNode */
    "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js");
    /* harmony import */


    var _core_util_Debug__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../../core/util/Debug */
    "./node_modules/tone/build/esm/core/util/Debug.js");
    /* harmony import */


    var _core_util_Math__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../../core/util/Math */
    "./node_modules/tone/build/esm/core/util/Math.js");
    /**
     * Oscillator supports a number of features including
     * phase rotation, multiple oscillator types (see Oscillator.type),
     * and Transport syncing (see Oscillator.syncFrequency).
     *
     * @example
     * // make and start a 440hz sine tone
     * const osc = new Tone.Oscillator(440, "sine").toDestination().start();
     * @category Source
     */


    var Oscillator = /*#__PURE__*/function (_Source__WEBPACK_IMPO7) {
      _inherits(Oscillator, _Source__WEBPACK_IMPO7);

      var _super172 = _createSuper(Oscillator);

      function Oscillator() {
        var _this248;

        _classCallCheck2(this, Oscillator);

        _this248 = _super172.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Oscillator.getDefaults(), arguments, ["frequency", "type"]));
        _this248.name = "Oscillator";
        /**
         * the main oscillator
         */

        _this248._oscillator = null;
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(Oscillator.getDefaults(), arguments, ["frequency", "type"]);
        _this248.frequency = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
          context: _this248.context,
          units: "frequency",
          value: options.frequency
        });
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this248), "frequency");
        _this248.detune = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
          context: _this248.context,
          units: "cents",
          value: options.detune
        });
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this248), "detune");
        _this248._partials = options.partials;
        _this248._partialCount = options.partialCount;
        _this248._type = options.type;

        if (options.partialCount && options.type !== "custom") {
          _this248._type = _this248.baseType + options.partialCount.toString();
        }

        _this248.phase = options.phase;
        return _this248;
      }

      _createClass2(Oscillator, [{
        key: "_start",

        /**
         * start the oscillator
         */
        value: function _start(time) {
          var _this249 = this;

          var computedTime = this.toSeconds(time); // new oscillator with previous values

          var oscillator = new _ToneOscillatorNode__WEBPACK_IMPORTED_MODULE_7__["ToneOscillatorNode"]({
            context: this.context,
            onended: function onended() {
              return _this249.onstop(_this249);
            }
          });
          this._oscillator = oscillator;

          if (this._wave) {
            this._oscillator.setPeriodicWave(this._wave);
          } else {
            this._oscillator.type = this._type;
          } // connect the control signal to the oscillator frequency & detune


          this._oscillator.connect(this.output);

          this.frequency.connect(this._oscillator.frequency);
          this.detune.connect(this._oscillator.detune); // start the oscillator

          this._oscillator.start(computedTime);
        }
        /**
         * stop the oscillator
         */

      }, {
        key: "_stop",
        value: function _stop(time) {
          var computedTime = this.toSeconds(time);

          if (this._oscillator) {
            this._oscillator.stop(computedTime);
          }
        }
        /**
         * Restart the oscillator. Does not stop the oscillator, but instead
         * just cancels any scheduled 'stop' from being invoked.
         */

      }, {
        key: "_restart",
        value: function _restart(time) {
          var computedTime = this.toSeconds(time);
          this.log("restart", computedTime);

          if (this._oscillator) {
            this._oscillator.cancelStop();
          }

          this._state.cancel(computedTime);

          return this;
        }
        /**
         * Sync the signal to the Transport's bpm. Any changes to the transports bpm,
         * will also affect the oscillators frequency.
         * @example
         * const osc = new Tone.Oscillator().toDestination().start();
         * osc.frequency.value = 440;
         * // the ratio between the bpm and the frequency will be maintained
         * osc.syncFrequency();
         * // double the tempo
         * Tone.Transport.bpm.value *= 2;
         * // the frequency of the oscillator is doubled to 880
         */

      }, {
        key: "syncFrequency",
        value: function syncFrequency() {
          this.context.transport.syncSignal(this.frequency);
          return this;
        }
        /**
         * Unsync the oscillator's frequency from the Transport.
         * See Oscillator.syncFrequency
         */

      }, {
        key: "unsyncFrequency",
        value: function unsyncFrequency() {
          this.context.transport.unsyncSignal(this.frequency);
          return this;
        }
        /**
         * Get a cached periodic wave. Avoids having to recompute
         * the oscillator values when they have already been computed
         * with the same values.
         */

      }, {
        key: "_getCachedPeriodicWave",
        value: function _getCachedPeriodicWave() {
          var _this250 = this;

          if (this._type === "custom") {
            var oscProps = Oscillator._periodicWaveCache.find(function (description) {
              return description.phase === _this250._phase && Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["deepEquals"])(description.partials, _this250._partials);
            });

            return oscProps;
          } else {
            var _oscProps = Oscillator._periodicWaveCache.find(function (description) {
              return description.type === _this250._type && description.phase === _this250._phase;
            });

            this._partialCount = _oscProps ? _oscProps.partialCount : this._partialCount;
            return _oscProps;
          }
        }
      }, {
        key: "_getRealImaginary",

        /**
         * Returns the real and imaginary components based
         * on the oscillator type.
         * @returns [real: Float32Array, imaginary: Float32Array]
         */
        value: function _getRealImaginary(type, phase) {
          var fftSize = 4096;
          var periodicWaveSize = fftSize / 2;
          var real = new Float32Array(periodicWaveSize);
          var imag = new Float32Array(periodicWaveSize);
          var partialCount = 1;

          if (type === "custom") {
            partialCount = this._partials.length + 1;
            this._partialCount = this._partials.length;
            periodicWaveSize = partialCount; // if the partial count is 0, don't bother doing any computation

            if (this._partials.length === 0) {
              return [real, imag];
            }
          } else {
            var partial = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(type);

            if (partial) {
              partialCount = parseInt(partial[2], 10) + 1;
              this._partialCount = parseInt(partial[2], 10);
              type = partial[1];
              partialCount = Math.max(partialCount, 2);
              periodicWaveSize = partialCount;
            } else {
              this._partialCount = 0;
            }

            this._partials = [];
          }

          for (var n = 1; n < periodicWaveSize; ++n) {
            var piFactor = 2 / (n * Math.PI);
            var b = void 0;

            switch (type) {
              case "sine":
                b = n <= partialCount ? 1 : 0;
                this._partials[n - 1] = b;
                break;

              case "square":
                b = n & 1 ? 2 * piFactor : 0;
                this._partials[n - 1] = b;
                break;

              case "sawtooth":
                b = piFactor * (n & 1 ? 1 : -1);
                this._partials[n - 1] = b;
                break;

              case "triangle":
                if (n & 1) {
                  b = 2 * (piFactor * piFactor) * (n - 1 >> 1 & 1 ? -1 : 1);
                } else {
                  b = 0;
                }

                this._partials[n - 1] = b;
                break;

              case "custom":
                b = this._partials[n - 1];
                break;

              default:
                throw new TypeError("Oscillator: invalid type: " + type);
            }

            if (b !== 0) {
              real[n] = -b * Math.sin(phase * n);
              imag[n] = b * Math.cos(phase * n);
            } else {
              real[n] = 0;
              imag[n] = 0;
            }
          }

          return [real, imag];
        }
        /**
         * Compute the inverse FFT for a given phase.
         */

      }, {
        key: "_inverseFFT",
        value: function _inverseFFT(real, imag, phase) {
          var sum = 0;
          var len = real.length;

          for (var i = 0; i < len; i++) {
            sum += real[i] * Math.cos(i * phase) + imag[i] * Math.sin(i * phase);
          }

          return sum;
        }
        /**
         * Returns the initial value of the oscillator when stopped.
         * E.g. a "sine" oscillator with phase = 90 would return an initial value of -1.
         */

      }, {
        key: "getInitialValue",
        value: function getInitialValue() {
          var _this$_getRealImagina = this._getRealImaginary(this._type, 0),
              _this$_getRealImagina2 = _slicedToArray2(_this$_getRealImagina, 2),
              real = _this$_getRealImagina2[0],
              imag = _this$_getRealImagina2[1];

          var maxValue = 0;
          var twoPi = Math.PI * 2;
          var testPositions = 32; // check for peaks in 16 places

          for (var i = 0; i < testPositions; i++) {
            maxValue = Math.max(this._inverseFFT(real, imag, i / testPositions * twoPi), maxValue);
          }

          return Object(_core_util_Math__WEBPACK_IMPORTED_MODULE_9__["clamp"])(-this._inverseFFT(real, imag, this._phase) / maxValue, -1, 1);
        }
      }, {
        key: "asArray",
        value: function asArray() {
          var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee56() {
            return regeneratorRuntime.wrap(function _callee56$(_context66) {
              while (1) {
                switch (_context66.prev = _context66.next) {
                  case 0:
                    return _context66.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_6__["generateWaveform"])(this, length));

                  case 1:
                  case "end":
                    return _context66.stop();
                }
              }
            }, _callee56, this);
          }));
        }
      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(Oscillator.prototype), "dispose", this).call(this);

          if (this._oscillator !== null) {
            this._oscillator.dispose();
          }

          this._wave = undefined;
          this.frequency.dispose();
          this.detune.dispose();
          return this;
        }
      }, {
        key: "type",
        get: function get() {
          return this._type;
        },
        set: function set(type) {
          this._type = type;
          var isBasicType = ["sine", "square", "sawtooth", "triangle"].indexOf(type) !== -1;

          if (this._phase === 0 && isBasicType) {
            this._wave = undefined;
            this._partialCount = 0; // just go with the basic approach

            if (this._oscillator !== null) {
              // already tested that it's a basic type
              this._oscillator.type = type;
            }
          } else {
            // first check if the value is cached
            var cache = this._getCachedPeriodicWave();

            if (Object(_core_util_TypeCheck__WEBPACK_IMPORTED_MODULE_3__["isDefined"])(cache)) {
              var partials = cache.partials,
                  wave = cache.wave;
              this._wave = wave;
              this._partials = partials;

              if (this._oscillator !== null) {
                this._oscillator.setPeriodicWave(this._wave);
              }
            } else {
              var _this$_getRealImagina3 = this._getRealImaginary(type, this._phase),
                  _this$_getRealImagina4 = _slicedToArray2(_this$_getRealImagina3, 2),
                  real = _this$_getRealImagina4[0],
                  imag = _this$_getRealImagina4[1];

              var periodicWave = this.context.createPeriodicWave(real, imag);
              this._wave = periodicWave;

              if (this._oscillator !== null) {
                this._oscillator.setPeriodicWave(this._wave);
              } // set the cache


              Oscillator._periodicWaveCache.push({
                imag: imag,
                partialCount: this._partialCount,
                partials: this._partials,
                phase: this._phase,
                real: real,
                type: this._type,
                wave: this._wave
              });

              if (Oscillator._periodicWaveCache.length > 100) {
                Oscillator._periodicWaveCache.shift();
              }
            }
          }
        }
      }, {
        key: "baseType",
        get: function get() {
          return this._type.replace(this.partialCount.toString(), "");
        },
        set: function set(baseType) {
          if (this.partialCount && this._type !== "custom" && baseType !== "custom") {
            this.type = baseType + this.partialCount;
          } else {
            this.type = baseType;
          }
        }
      }, {
        key: "partialCount",
        get: function get() {
          return this._partialCount;
        },
        set: function set(p) {
          Object(_core_util_Debug__WEBPACK_IMPORTED_MODULE_8__["assertRange"])(p, 0);
          var type = this._type;
          var partial = /^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);

          if (partial) {
            type = partial[1];
          }

          if (this._type !== "custom") {
            if (p === 0) {
              this.type = type;
            } else {
              this.type = type + p.toString();
            }
          } else {
            // extend or shorten the partials array
            var fullPartials = new Float32Array(p); // copy over the partials array

            this._partials.forEach(function (v, i) {
              return fullPartials[i] = v;
            });

            this._partials = Array.from(fullPartials);
            this.type = this._type;
          }
        }
      }, {
        key: "partials",
        get: function get() {
          return this._partials.slice(0, this.partialCount);
        },
        set: function set(partials) {
          this._partials = partials;
          this._partialCount = this._partials.length;

          if (partials.length) {
            this.type = "custom";
          }
        }
      }, {
        key: "phase",
        get: function get() {
          return this._phase * (180 / Math.PI);
        },
        set: function set(phase) {
          this._phase = phase * Math.PI / 180; // reset the type

          this.type = this._type;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_5__["Source"].getDefaults(), {
            detune: 0,
            frequency: 440,
            partialCount: 0,
            partials: [],
            phase: 0,
            type: "sine"
          });
        }
      }]);

      return Oscillator;
    }(_Source__WEBPACK_IMPORTED_MODULE_5__["Source"]);
    /**
     * Cache the periodic waves to avoid having to redo computations
     */


    Oscillator._periodicWaveCache = []; //# sourceMappingURL=Oscillator.js.map

    /***/
  },

  /***/
  "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js":
  /*!******************************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js ***!
    \******************************************************************************/

  /*! exports provided: generateWaveform */

  /***/
  function node_modulesToneBuildEsmSourceOscillatorOscillatorInterfaceJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "generateWaveform", function () {
      return generateWaveform;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/OfflineContext */
    "./node_modules/tone/build/esm/core/context/OfflineContext.js");
    /**
     * Render a segment of the oscillator to an offline context and return the results as an array
     */


    function generateWaveform(instance, length) {
      return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee57() {
        var duration, context, clone, buffer;
        return regeneratorRuntime.wrap(function _callee57$(_context67) {
          while (1) {
            switch (_context67.prev = _context67.next) {
              case 0:
                duration = length / instance.context.sampleRate;
                context = new _core_context_OfflineContext__WEBPACK_IMPORTED_MODULE_1__["OfflineContext"](1, duration, instance.context.sampleRate);
                clone = new instance.constructor(Object.assign(instance.get(), {
                  // should do 2 iterations
                  frequency: 2 / duration,
                  // zero out the detune
                  detune: 0,
                  context: context
                })).toDestination();
                clone.start(0);
                _context67.next = 6;
                return context.render();

              case 6:
                buffer = _context67.sent;
                return _context67.abrupt("return", buffer.getChannelData(0));

              case 8:
              case "end":
                return _context67.stop();
            }
          }
        }, _callee57);
      }));
    } //# sourceMappingURL=OscillatorInterface.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js":
  /*!************************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/oscillator/PWMOscillator.js ***!
    \************************************************************************/

  /*! exports provided: PWMOscillator */

  /***/
  function node_modulesToneBuildEsmSourceOscillatorPWMOscillatorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PWMOscillator", function () {
      return PWMOscillator;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../signal/Multiply */
    "./node_modules/tone/build/esm/signal/Multiply.js");
    /* harmony import */


    var _Source__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _Oscillator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ./Oscillator */
    "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
    /* harmony import */


    var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ./OscillatorInterface */
    "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
    /* harmony import */


    var _PulseOscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./PulseOscillator */
    "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js");
    /**
     * PWMOscillator modulates the width of a Tone.PulseOscillator
     * at the modulationFrequency. This has the effect of continuously
     * changing the timbre of the oscillator by altering the harmonics
     * generated.
     * @offline 0.1 1
     * @example
     * const pwm = new Tone.PWMOscillator(60, 0.3).toDestination().start();
     * @category Source
     */


    var PWMOscillator = /*#__PURE__*/function (_Source__WEBPACK_IMPO8) {
      _inherits(PWMOscillator, _Source__WEBPACK_IMPO8);

      var _super173 = _createSuper(PWMOscillator);

      function PWMOscillator() {
        var _this251;

        _classCallCheck2(this, PWMOscillator);

        _this251 = _super173.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PWMOscillator.getDefaults(), arguments, ["frequency", "modulationFrequency"]));
        _this251.name = "PWMOscillator";
        _this251.sourceType = "pwm";
        /**
         * Scale the oscillator so it doesn't go silent
         * at the extreme values.
         */

        _this251._scale = new _signal_Multiply__WEBPACK_IMPORTED_MODULE_3__["Multiply"]({
          context: _this251.context,
          value: 2
        });
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_1__["optionsFromArguments"])(PWMOscillator.getDefaults(), arguments, ["frequency", "modulationFrequency"]);
        _this251._pulse = new _PulseOscillator__WEBPACK_IMPORTED_MODULE_7__["PulseOscillator"]({
          context: _this251.context,
          frequency: options.modulationFrequency
        }); // change the pulse oscillator type

        _this251._pulse.carrierType = "sine";
        _this251.modulationFrequency = _this251._pulse.frequency;
        _this251._modulator = new _Oscillator__WEBPACK_IMPORTED_MODULE_5__["Oscillator"]({
          context: _this251.context,
          detune: options.detune,
          frequency: options.frequency,
          onstop: function onstop() {
            return _this251.onstop(_assertThisInitialized(_this251));
          },
          phase: options.phase
        });
        _this251.frequency = _this251._modulator.frequency;
        _this251.detune = _this251._modulator.detune; // connections

        _this251._modulator.chain(_this251._scale, _this251._pulse.width);

        _this251._pulse.connect(_this251.output);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_2__["readOnly"])(_assertThisInitialized(_this251), ["modulationFrequency", "frequency", "detune"]);
        return _this251;
      }

      _createClass2(PWMOscillator, [{
        key: "_start",

        /**
         * start the oscillator
         */
        value: function _start(time) {
          time = this.toSeconds(time);

          this._modulator.start(time);

          this._pulse.start(time);
        }
        /**
         * stop the oscillator
         */

      }, {
        key: "_stop",
        value: function _stop(time) {
          time = this.toSeconds(time);

          this._modulator.stop(time);

          this._pulse.stop(time);
        }
        /**
         * restart the oscillator
         */

      }, {
        key: "_restart",
        value: function _restart(time) {
          this._modulator.restart(time);

          this._pulse.restart(time);
        }
        /**
         * The type of the oscillator. Always returns "pwm".
         */

      }, {
        key: "asArray",
        value: function asArray() {
          var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee58() {
            return regeneratorRuntime.wrap(function _callee58$(_context68) {
              while (1) {
                switch (_context68.prev = _context68.next) {
                  case 0:
                    return _context68.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_6__["generateWaveform"])(this, length));

                  case 1:
                  case "end":
                    return _context68.stop();
                }
              }
            }, _callee58, this);
          }));
        }
        /**
         * Clean up.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(PWMOscillator.prototype), "dispose", this).call(this);

          this._pulse.dispose();

          this._scale.dispose();

          this._modulator.dispose();

          return this;
        }
      }, {
        key: "type",
        get: function get() {
          return "pwm";
        }
        /**
         * The baseType of the oscillator. Always returns "pwm".
         */

      }, {
        key: "baseType",
        get: function get() {
          return "pwm";
        }
        /**
         * The partials of the waveform. Cannot set partials for this waveform type
         */

      }, {
        key: "partials",
        get: function get() {
          return [];
        }
        /**
         * No partials for this waveform type.
         */

      }, {
        key: "partialCount",
        get: function get() {
          return 0;
        }
        /**
         * The phase of the oscillator in degrees.
         */

      }, {
        key: "phase",
        get: function get() {
          return this._modulator.phase;
        },
        set: function set(phase) {
          this._modulator.phase = phase;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_4__["Source"].getDefaults(), {
            detune: 0,
            frequency: 440,
            modulationFrequency: 0.4,
            phase: 0,
            type: "pwm"
          });
        }
      }]);

      return PWMOscillator;
    }(_Source__WEBPACK_IMPORTED_MODULE_4__["Source"]); //# sourceMappingURL=PWMOscillator.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js":
  /*!**************************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/oscillator/PulseOscillator.js ***!
    \**************************************************************************/

  /*! exports provided: PulseOscillator */

  /***/
  function node_modulesToneBuildEsmSourceOscillatorPulseOscillatorJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "PulseOscillator", function () {
      return PulseOscillator;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/Gain */
    "./node_modules/tone/build/esm/core/context/Gain.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /* harmony import */


    var _signal_Signal__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../signal/Signal */
    "./node_modules/tone/build/esm/signal/Signal.js");
    /* harmony import */


    var _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! ../../signal/WaveShaper */
    "./node_modules/tone/build/esm/signal/WaveShaper.js");
    /* harmony import */


    var _Source__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! ../Source */
    "./node_modules/tone/build/esm/source/Source.js");
    /* harmony import */


    var _Oscillator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ./Oscillator */
    "./node_modules/tone/build/esm/source/oscillator/Oscillator.js");
    /* harmony import */


    var _OscillatorInterface__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ./OscillatorInterface */
    "./node_modules/tone/build/esm/source/oscillator/OscillatorInterface.js");
    /**
     * PulseOscillator is an oscillator with control over pulse width,
     * also known as the duty cycle. At 50% duty cycle (width = 0) the wave is
     * a square wave.
     * [Read more](https://wigglewave.wordpress.com/2014/08/16/pulse-waveforms-and-harmonics/).
     * ```
     *    width = -0.25        width = 0.0          width = 0.25
     *
     *   +-----+            +-------+       +    +-------+     +-+
     *   |     |            |       |       |            |     |
     *   |     |            |       |       |            |     |
     * +-+     +-------+    +       +-------+            +-----+
     *
     *
     *    width = -0.5                              width = 0.5
     *
     *     +---+                                 +-------+   +---+
     *     |   |                                         |   |
     *     |   |                                         |   |
     * +---+   +-------+                                 +---+
     *
     *
     *    width = -0.75                             width = 0.75
     *
     *       +-+                                 +-------+ +-----+
     *       | |                                         | |
     *       | |                                         | |
     * +-----+ +-------+                                 +-+
     * ```
     * @offline 0.1 1
     * @example
     * const pulse = new Tone.PulseOscillator(50, 0.4).toDestination().start();
     * @category Source
     */


    var PulseOscillator = /*#__PURE__*/function (_Source__WEBPACK_IMPO9) {
      _inherits(PulseOscillator, _Source__WEBPACK_IMPO9);

      var _super174 = _createSuper(PulseOscillator);

      function PulseOscillator() {
        var _this252;

        _classCallCheck2(this, PulseOscillator);

        _this252 = _super174.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(PulseOscillator.getDefaults(), arguments, ["frequency", "width"]));
        _this252.name = "PulseOscillator";
        /**
         * gate the width amount
         */

        _this252._widthGate = new _core_context_Gain__WEBPACK_IMPORTED_MODULE_1__["Gain"]({
          context: _this252.context,
          gain: 0
        });
        /**
         * Threshold the signal to turn it into a square
         */

        _this252._thresh = new _signal_WaveShaper__WEBPACK_IMPORTED_MODULE_5__["WaveShaper"]({
          context: _this252.context,
          mapping: function mapping(val) {
            return val <= 0 ? -1 : 1;
          }
        });
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(PulseOscillator.getDefaults(), arguments, ["frequency", "width"]);
        _this252.width = new _signal_Signal__WEBPACK_IMPORTED_MODULE_4__["Signal"]({
          context: _this252.context,
          units: "audioRange",
          value: options.width
        });
        _this252._triangle = new _Oscillator__WEBPACK_IMPORTED_MODULE_7__["Oscillator"]({
          context: _this252.context,
          detune: options.detune,
          frequency: options.frequency,
          onstop: function onstop() {
            return _this252.onstop(_assertThisInitialized(_this252));
          },
          phase: options.phase,
          type: "triangle"
        });
        _this252.frequency = _this252._triangle.frequency;
        _this252.detune = _this252._triangle.detune; // connections

        _this252._triangle.chain(_this252._thresh, _this252.output);

        _this252.width.chain(_this252._widthGate, _this252._thresh);

        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_3__["readOnly"])(_assertThisInitialized(_this252), ["width", "frequency", "detune"]);
        return _this252;
      }

      _createClass2(PulseOscillator, [{
        key: "_start",

        /**
         * start the oscillator
         */
        value: function _start(time) {
          time = this.toSeconds(time);

          this._triangle.start(time);

          this._widthGate.gain.setValueAtTime(1, time);
        }
        /**
         * stop the oscillator
         */

      }, {
        key: "_stop",
        value: function _stop(time) {
          time = this.toSeconds(time);

          this._triangle.stop(time); // the width is still connected to the output.
          // that needs to be stopped also


          this._widthGate.gain.cancelScheduledValues(time);

          this._widthGate.gain.setValueAtTime(0, time);
        }
      }, {
        key: "_restart",
        value: function _restart(time) {
          this._triangle.restart(time);

          this._widthGate.gain.cancelScheduledValues(time);

          this._widthGate.gain.setValueAtTime(1, time);
        }
        /**
         * The phase of the oscillator in degrees.
         */

      }, {
        key: "asArray",
        value: function asArray() {
          var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1024;
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee59() {
            return regeneratorRuntime.wrap(function _callee59$(_context69) {
              while (1) {
                switch (_context69.prev = _context69.next) {
                  case 0:
                    return _context69.abrupt("return", Object(_OscillatorInterface__WEBPACK_IMPORTED_MODULE_8__["generateWaveform"])(this, length));

                  case 1:
                  case "end":
                    return _context69.stop();
                }
              }
            }, _callee59, this);
          }));
        }
        /**
         * Clean up method.
         */

      }, {
        key: "dispose",
        value: function dispose() {
          _get(_getPrototypeOf(PulseOscillator.prototype), "dispose", this).call(this);

          this._triangle.dispose();

          this.width.dispose();

          this._widthGate.dispose();

          this._thresh.dispose();

          return this;
        }
      }, {
        key: "phase",
        get: function get() {
          return this._triangle.phase;
        },
        set: function set(phase) {
          this._triangle.phase = phase;
        }
        /**
         * The type of the oscillator. Always returns "pulse".
         */

      }, {
        key: "type",
        get: function get() {
          return "pulse";
        }
        /**
         * The baseType of the oscillator. Always returns "pulse".
         */

      }, {
        key: "baseType",
        get: function get() {
          return "pulse";
        }
        /**
         * The partials of the waveform. Cannot set partials for this waveform type
         */

      }, {
        key: "partials",
        get: function get() {
          return [];
        }
        /**
         * No partials for this waveform type.
         */

      }, {
        key: "partialCount",
        get: function get() {
          return 0;
        }
        /**
         * *Internal use* The carrier oscillator type is fed through the
         * waveshaper node to create the pulse. Using different carrier oscillators
         * changes oscillator's behavior.
         */

      }, {
        key: "carrierType",
        set: function set(type) {
          this._triangle.type = type;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_Source__WEBPACK_IMPORTED_MODULE_6__["Source"].getDefaults(), {
            detune: 0,
            frequency: 440,
            phase: 0,
            type: "pulse",
            width: 0.2
          });
        }
      }]);

      return PulseOscillator;
    }(_Source__WEBPACK_IMPORTED_MODULE_6__["Source"]); //# sourceMappingURL=PulseOscillator.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js":
  /*!*****************************************************************************!*\
    !*** ./node_modules/tone/build/esm/source/oscillator/ToneOscillatorNode.js ***!
    \*****************************************************************************/

  /*! exports provided: ToneOscillatorNode */

  /***/
  function node_modulesToneBuildEsmSourceOscillatorToneOscillatorNodeJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ToneOscillatorNode", function () {
      return ToneOscillatorNode;
    });
    /* harmony import */


    var _core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! ../../core/context/ToneAudioNode */
    "./node_modules/tone/build/esm/core/context/ToneAudioNode.js");
    /* harmony import */


    var _core_context_Param__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ../../core/context/Param */
    "./node_modules/tone/build/esm/core/context/Param.js");
    /* harmony import */


    var _core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../core/util/Defaults */
    "./node_modules/tone/build/esm/core/util/Defaults.js");
    /* harmony import */


    var _OneShotSource__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../OneShotSource */
    "./node_modules/tone/build/esm/source/OneShotSource.js");
    /* harmony import */


    var _core_util_Interface__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../core/util/Interface */
    "./node_modules/tone/build/esm/core/util/Interface.js");
    /**
     * Wrapper around the native fire-and-forget OscillatorNode.
     * Adds the ability to reschedule the stop method.
     * ***[[Oscillator]] is better for most use-cases***
     * @category Source
     */


    var ToneOscillatorNode = /*#__PURE__*/function (_OneShotSource__WEBPA2) {
      _inherits(ToneOscillatorNode, _OneShotSource__WEBPA2);

      var _super175 = _createSuper(ToneOscillatorNode);

      function ToneOscillatorNode() {
        var _this253;

        _classCallCheck2(this, ToneOscillatorNode);

        _this253 = _super175.call(this, Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(ToneOscillatorNode.getDefaults(), arguments, ["frequency", "type"]));
        _this253.name = "ToneOscillatorNode";
        /**
         * The oscillator
         */

        _this253._oscillator = _this253.context.createOscillator();
        _this253._internalChannels = [_this253._oscillator];
        var options = Object(_core_util_Defaults__WEBPACK_IMPORTED_MODULE_2__["optionsFromArguments"])(ToneOscillatorNode.getDefaults(), arguments, ["frequency", "type"]);
        Object(_core_context_ToneAudioNode__WEBPACK_IMPORTED_MODULE_0__["connect"])(_this253._oscillator, _this253._gainNode);
        _this253.type = options.type;
        _this253.frequency = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this253.context,
          param: _this253._oscillator.frequency,
          units: "frequency",
          value: options.frequency
        });
        _this253.detune = new _core_context_Param__WEBPACK_IMPORTED_MODULE_1__["Param"]({
          context: _this253.context,
          param: _this253._oscillator.detune,
          units: "cents",
          value: options.detune
        });
        Object(_core_util_Interface__WEBPACK_IMPORTED_MODULE_4__["readOnly"])(_assertThisInitialized(_this253), ["frequency", "detune"]);
        return _this253;
      }

      _createClass2(ToneOscillatorNode, [{
        key: "start",

        /**
         * Start the oscillator node at the given time
         * @param  time When to start the oscillator
         */
        value: function start(time) {
          var computedTime = this.toSeconds(time);
          this.log("start", computedTime);

          this._startGain(computedTime);

          this._oscillator.start(computedTime);

          return this;
        }
      }, {
        key: "_stopSource",
        value: function _stopSource(time) {
          this._oscillator.stop(time);
        }
        /**
         * Sets an arbitrary custom periodic waveform given a PeriodicWave.
         * @param  periodicWave PeriodicWave should be created with context.createPeriodicWave
         */

      }, {
        key: "setPeriodicWave",
        value: function setPeriodicWave(periodicWave) {
          this._oscillator.setPeriodicWave(periodicWave);

          return this;
        }
        /**
         * The oscillator type. Either 'sine', 'sawtooth', 'square', or 'triangle'
         */

      }, {
        key: "dispose",

        /**
         * Clean up.
         */
        value: function dispose() {
          _get(_getPrototypeOf(ToneOscillatorNode.prototype), "dispose", this).call(this);

          if (this.state === "started") {
            this.stop();
          }

          this._oscillator.disconnect();

          this.frequency.dispose();
          this.detune.dispose();
          return this;
        }
      }, {
        key: "type",
        get: function get() {
          return this._oscillator.type;
        },
        set: function set(type) {
          this._oscillator.type = type;
        }
      }], [{
        key: "getDefaults",
        value: function getDefaults() {
          return Object.assign(_OneShotSource__WEBPACK_IMPORTED_MODULE_3__["OneShotSource"].getDefaults(), {
            detune: 0,
            frequency: 440,
            type: "sine"
          });
        }
      }]);

      return ToneOscillatorNode;
    }(_OneShotSource__WEBPACK_IMPORTED_MODULE_3__["OneShotSource"]); //# sourceMappingURL=ToneOscillatorNode.js.map

    /***/

  },

  /***/
  "./node_modules/tone/build/esm/version.js":
  /*!************************************************!*\
    !*** ./node_modules/tone/build/esm/version.js ***!
    \************************************************/

  /*! exports provided: version */

  /***/
  function node_modulesToneBuildEsmVersionJs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "version", function () {
      return version;
    });

    var version = "14.7.2"; //# sourceMappingURL=version.js.map

    /***/
  },

  /***/
  "./src/components/line-chart-audification/line-chart-audification.component.ts":
  /*!*************************************************************************************!*\
    !*** ./src/components/line-chart-audification/line-chart-audification.component.ts ***!
    \*************************************************************************************/

  /*! exports provided: LineChartAudificationComponent */

  /***/
  function srcComponentsLineChartAudificationLineChartAudificationComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LineChartAudificationComponent", function () {
      return LineChartAudificationComponent;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _models_melody_melody_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! ../../models/melody/melody.model */
    "./src/models/melody/melody.model.ts");
    /* harmony import */


    var _i18n__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../../i18n */
    "./src/i18n/index.ts");
    /* harmony import */


    var _utils_formatters__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
    /*! ../../utils/formatters */
    "./src/utils/formatters.ts");
    /* harmony import */


    var rxjs_operators__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
    /*! rxjs/operators */
    "./node_modules/rxjs/_esm2015/operators/index.js");
    /* harmony import */


    var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
    /*! rxjs */
    "./node_modules/rxjs/_esm2015/index.js");
    /* harmony import */


    var _utils_comparators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
    /*! ../../utils/comparators */
    "./src/utils/comparators.ts");
    /* harmony import */


    var _screen_reader_screen_reader_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
    /*! ../screen-reader/screen-reader.component */
    "./src/components/screen-reader/screen-reader.component.ts");
    /* harmony import */


    var _line_chart_line_chart_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
    /*! ../line-chart/line-chart.component */
    "./src/components/line-chart/line-chart.component.ts");

    var LineChartAudificationComponent = /*#__PURE__*/function () {
      function LineChartAudificationComponent(host, zone) {
        _classCallCheck2(this, LineChartAudificationComponent);

        this.host = host;
        this.zone = zone;
        this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_6__["Subject"]();
        this.tabindex = 0;
        this.resumeTimeoutId = null;
        this.handleSeek = this.handleSeek.bind(this);
      }

      _createClass2(LineChartAudificationComponent, [{
        key: "ngOnInit",
        value: function ngOnInit() {
          var _this254 = this;

          this.host.data$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_5__["takeUntil"])(this.destroy$)).subscribe(function (data) {
            var _a;

            var values = data.map(function (datum) {
              return datum.value;
            });
            _this254.domain = data.map(function (d) {
              return d.date;
            }).sort(_utils_comparators__WEBPACK_IMPORTED_MODULE_7__["ascendingDate"]);
            _this254.range = data.map(function (d) {
              return d.value;
            }).sort(_utils_comparators__WEBPACK_IMPORTED_MODULE_7__["ascendingNumber"]);
            (_a = _this254.melody) === null || _a === void 0 ? void 0 : _a.dispose();
            _this254.melody = new _models_melody_melody_model__WEBPACK_IMPORTED_MODULE_2__["Melody"](values, [_this254.lowestPitch, _this254.highestPitch], _this254.noteDuration, _this254.handleSeek);
          });
        }
      }, {
        key: "ngOnDestroy",
        value: function ngOnDestroy() {
          var _a;

          this.destroy$.next();
          this.destroy$.complete();
          (_a = this.melody) === null || _a === void 0 ? void 0 : _a.dispose();
        }
      }, {
        key: "handleSeek",
        value: function handleSeek(index) {
          var _this255 = this;

          this.zone.run(function () {
            _this255.activeDatum = _this255.data[index];
          });
        }
      }, {
        key: "handleKeyDown",
        value: function handleKeyDown($event) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee60() {
            var key, shiftKey, repeat, datumIndex;
            return regeneratorRuntime.wrap(function _callee60$(_context70) {
              while (1) {
                switch (_context70.prev = _context70.next) {
                  case 0:
                    $event.preventDefault();
                    $event.stopPropagation();
                    key = $event.key, shiftKey = $event.shiftKey, repeat = $event.repeat;

                    if (!(!this.melody || repeat)) {
                      _context70.next = 5;
                      break;
                    }

                    return _context70.abrupt("return");

                  case 5:
                    if (key === ' ') {
                      this.resumeMelody(shiftKey);
                    } else if (key === 'x') {
                      this.readOutDomain();
                    } else if (key === 'y') {
                      this.readOutRange();
                    } else if (key === 'l') {
                      this.readOutMeasure();
                    } else if ('0' <= key && key <= '9') {
                      datumIndex = Math.floor(+key / 10 * this.data.length);
                      this.melody.seekTo(datumIndex, true);
                      this.readOutCurrentDatum();
                    }

                  case 6:
                  case "end":
                    return _context70.stop();
                }
              }
            }, _callee60, this);
          }));
        }
      }, {
        key: "handleKeyUp",
        value: function handleKeyUp($event) {
          if (!this.melody) {
            return;
          }

          $event.preventDefault();
          $event.stopPropagation();
          var key = $event.key;

          if (key === ' ') {
            this.pauseMelody();
          }
        }
      }, {
        key: "handleBlur",
        value: function handleBlur() {
          var _a;

          (_a = this.melody) === null || _a === void 0 ? void 0 : _a.pause();
        }
      }, {
        key: "resumeMelody",
        value: function resumeMelody(reversed) {
          var _this256 = this;

          var _a;

          if (this.readBefore) {
            var delay = this.readOutCurrentDatum();
            var duration = 2000;
            this.resumeTimeoutId = window.setTimeout(function () {
              return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(_this256, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee61() {
                var _b;

                return regeneratorRuntime.wrap(function _callee61$(_context71) {
                  while (1) {
                    switch (_context71.prev = _context71.next) {
                      case 0:
                        this.resumeTimeoutId = null;
                        (_b = this.melody) === null || _b === void 0 ? void 0 : _b.resume(reversed);

                      case 2:
                      case "end":
                        return _context71.stop();
                    }
                  }
                }, _callee61, this);
              }));
            }, delay + duration);
          } else {
            (_a = this.melody) === null || _a === void 0 ? void 0 : _a.resume(reversed);
          }
        }
      }, {
        key: "pauseMelody",
        value: function pauseMelody() {
          var _a;

          if (this.resumeTimeoutId !== null) {
            window.clearTimeout(this.resumeTimeoutId);
            this.resumeTimeoutId = null;
          } else {
            (_a = this.melody) === null || _a === void 0 ? void 0 : _a.pause();

            if (this.readAfter) {
              this.readOutCurrentDatum();
            }
          }
        }
      }, {
        key: "readOutDomain",
        value: function readOutDomain() {
          return this.screenReaderComponent.readOut(Object(_i18n__WEBPACK_IMPORTED_MODULE_3__["t"])(_i18n__WEBPACK_IMPORTED_MODULE_3__["AUDIFICATION"].DOMAIN, {
            min: Object(_utils_formatters__WEBPACK_IMPORTED_MODULE_4__["formatX"])(this.domain[0]),
            max: Object(_utils_formatters__WEBPACK_IMPORTED_MODULE_4__["formatX"])(this.domain[this.domain.length - 1])
          }));
        }
      }, {
        key: "readOutRange",
        value: function readOutRange() {
          return this.screenReaderComponent.readOut(Object(_i18n__WEBPACK_IMPORTED_MODULE_3__["t"])(_i18n__WEBPACK_IMPORTED_MODULE_3__["AUDIFICATION"].RANGE, {
            min: Object(_utils_formatters__WEBPACK_IMPORTED_MODULE_4__["formatY"])(this.range[0]),
            max: Object(_utils_formatters__WEBPACK_IMPORTED_MODULE_4__["formatY"])(this.range[this.range.length - 1])
          }));
        }
      }, {
        key: "readOutMeasure",
        value: function readOutMeasure() {
          return this.screenReaderComponent.readOut(Object(_utils_formatters__WEBPACK_IMPORTED_MODULE_4__["humanizeMeasureName"])(this.measureName));
        }
      }, {
        key: "readOutCurrentDatum",
        value: function readOutCurrentDatum() {
          if (!this.melody) {
            return 0;
          }

          var _this$data$this$melod = this.data[this.melody.currentDatumIndex],
              date = _this$data$this$melod.date,
              value = _this$data$this$melod.value;
          return this.screenReaderComponent.readOut(Object(_i18n__WEBPACK_IMPORTED_MODULE_3__["t"])(_i18n__WEBPACK_IMPORTED_MODULE_3__["AUDIFICATION"].ACTIVE_DATUM, {
            x: Object(_utils_formatters__WEBPACK_IMPORTED_MODULE_4__["formatX"])(date),
            y: Object(_utils_formatters__WEBPACK_IMPORTED_MODULE_4__["formatY"])(value)
          }));
        }
      }, {
        key: "INSTRUCTIONS",
        get: function get() {
          return Object(_i18n__WEBPACK_IMPORTED_MODULE_3__["t"])(_i18n__WEBPACK_IMPORTED_MODULE_3__["AUDIFICATION"].INSTRUCTIONS);
        }
      }, {
        key: "INSTRUCTIONS_A11Y",
        get: function get() {
          return Object(_i18n__WEBPACK_IMPORTED_MODULE_3__["tA11y"])(_i18n__WEBPACK_IMPORTED_MODULE_3__["AUDIFICATION"].INSTRUCTIONS);
        }
      }, {
        key: "data",
        get: function get() {
          return this.host.data;
        }
      }, {
        key: "measureName",
        get: function get() {
          return this.host.measureName;
        }
      }, {
        key: "activeDatum",
        set: function set(activeDatum) {
          this.host.activeDatum = activeDatum;
        }
      }]);

      return LineChartAudificationComponent;
    }();

    LineChartAudificationComponent.ɵfac = function LineChartAudificationComponent_Factory(t) {
      return new (t || LineChartAudificationComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"]('host'), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]));
    };

    LineChartAudificationComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
      type: LineChartAudificationComponent,
      selectors: [["app-line-chart-audification"]],
      viewQuery: function LineChartAudificationComponent_Query(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵstaticViewQuery"](_screen_reader_screen_reader_component__WEBPACK_IMPORTED_MODULE_8__["ScreenReaderComponent"], true);
        }

        if (rf & 2) {
          var _t;

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.screenReaderComponent = _t.first);
        }
      },
      hostVars: 1,
      hostBindings: function LineChartAudificationComponent_HostBindings(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("keydown", function LineChartAudificationComponent_keydown_HostBindingHandler($event) {
            return ctx.handleKeyDown($event);
          })("keyup", function LineChartAudificationComponent_keyup_HostBindingHandler($event) {
            return ctx.handleKeyUp($event);
          })("blur", function LineChartAudificationComponent_blur_HostBindingHandler($event) {
            return ctx.handleBlur($event);
          });
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("tabindex", ctx.tabindex);
        }
      },
      inputs: {
        enabled: "enabled",
        lowestPitch: "lowestPitch",
        highestPitch: "highestPitch",
        noteDuration: "noteDuration",
        readBefore: "readBefore",
        readAfter: "readAfter"
      },
      decls: 2,
      vars: 2,
      consts: [["role", "img", 1, "instructions", 3, "innerHTML"]],
      template: function LineChartAudificationComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", 0);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](1, "app-screen-reader");
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵproperty"]("innerHTML", ctx.INSTRUCTIONS, _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsanitizeHtml"]);

          _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵattribute"]("aria-label", ctx.INSTRUCTIONS_A11Y);
        }
      },
      directives: [_screen_reader_screen_reader_component__WEBPACK_IMPORTED_MODULE_8__["ScreenReaderComponent"]],
      styles: ["[_nghost-%COMP%] {\n  display: block;\n  padding: 1.5rem;\n  border-top: 1px solid #dadce0;\n}\n[_nghost-%COMP%]   .instructions[_ngcontent-%COMP%] {\n  font-size: 12px;\n  line-height: 2em;\n  margin-bottom: 0.5rem;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2d1aWRlLWRvZ2UvZ3VpZGUtZG9nZS9zcmMvY29tcG9uZW50cy9saW5lLWNoYXJ0LWF1ZGlmaWNhdGlvbi9saW5lLWNoYXJ0LWF1ZGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNyYy9jb21wb25lbnRzL2xpbmUtY2hhcnQtYXVkaWZpY2F0aW9uL2xpbmUtY2hhcnQtYXVkaWZpY2F0aW9uLmNvbXBvbmVudC5zY3NzIiwiL2hvbWUvcnVubmVyL3dvcmsvZ3VpZGUtZG9nZS9ndWlkZS1kb2dlL3NyYy91dGlscy9jb25zdGFudHMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLGNBQUE7RUFDQSxlQUFBO0VBQ0EsNkJBQUE7QUNERjtBREdFO0VBQ0UsZUVDYztFRkFkLGdCQUFBO0VBQ0EscUJBQUE7QUNESiIsImZpbGUiOiJzcmMvY29tcG9uZW50cy9saW5lLWNoYXJ0LWF1ZGlmaWNhdGlvbi9saW5lLWNoYXJ0LWF1ZGlmaWNhdGlvbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgXCIuLi8uLi91dGlscy9jb25zdGFudHNcIjtcblxuOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMS41cmVtO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgJGNvbG9yLWJvcmRlcjtcblxuICAuaW5zdHJ1Y3Rpb25zIHtcbiAgICBmb250LXNpemU6ICRmb250LXNpemUtc21hbGw7XG4gICAgbGluZS1oZWlnaHQ6IDJlbTtcbiAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcbiAgfVxufVxuIiwiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbiAgcGFkZGluZzogMS41cmVtO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2RhZGNlMDtcbn1cbjpob3N0IC5pbnN0cnVjdGlvbnMge1xuICBmb250LXNpemU6IDEycHg7XG4gIGxpbmUtaGVpZ2h0OiAyZW07XG4gIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbn0iLCIkY29sb3ItYmFja2dyb3VuZDogcmdiKDI0OCwgMjQ5LCAyNTApO1xuJGNvbG9yLWJvcmRlcjogcmdiKDIxOCwgMjIwLCAyMjQpO1xuJGNvbG9yLWZvbnQ6IHJnYigzNCwgMzQsIDM0KTtcbiRjb2xvci1oaWdobGlnaHQ6IHJnYig2NiwgMTMzLCAyNDQpO1xuJGNvbG9yLXBvc2l0aXZlOiByZ2IoMTUsIDE1NywgODgpO1xuJGNvbG9yLW5lZ2F0aXZlOiByZ2IoMjE5LCA2OCwgNTUpO1xuXG4kZm9udC1zaXplLWxhcmdlOiAyNHB4O1xuJGZvbnQtc2l6ZS1tZWRpdW06IDE2cHg7XG4kZm9udC1zaXplLXNtYWxsOiAxMnB4O1xuXG5AbWl4aW4gY2FyZC1zaGFkb3cge1xuICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMikgMCAxcHggM3B4IDAsIHJnYmEoMCwgMCwgMCwgMC4xNCkgMCAxcHggMXB4IDAsIHJnYmEoMCwgMCwgMCwgMC4xMikgMCAycHggMXB4IC0xcHg7XG59XG4iXX0= */"]
    });

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](LineChartAudificationComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
        args: [{
          selector: 'app-line-chart-audification',
          templateUrl: './line-chart-audification.component.html',
          styleUrls: ['./line-chart-audification.component.scss']
        }]
      }], function () {
        return [{
          type: _line_chart_line_chart_component__WEBPACK_IMPORTED_MODULE_9__["LineChartComponent"],
          decorators: [{
            type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
            args: ['host']
          }]
        }, {
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgZone"]
        }];
      }, {
        screenReaderComponent: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewChild"],
          args: [_screen_reader_screen_reader_component__WEBPACK_IMPORTED_MODULE_8__["ScreenReaderComponent"], {
            "static": true
          }]
        }],
        enabled: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        lowestPitch: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        highestPitch: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        noteDuration: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        readBefore: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        readAfter: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
        }],
        tabindex: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["HostBinding"],
          args: ['attr.tabindex']
        }],
        handleKeyDown: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"],
          args: ['keydown', ['$event']]
        }],
        handleKeyUp: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"],
          args: ['keyup', ['$event']]
        }],
        handleBlur: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["HostListener"],
          args: ['blur', ['$event']]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/components/line-chart-audification/line-chart-audification.module.ts":
  /*!**********************************************************************************!*\
    !*** ./src/components/line-chart-audification/line-chart-audification.module.ts ***!
    \**********************************************************************************/

  /*! exports provided: LineChartAudificationModule */

  /***/
  function srcComponentsLineChartAudificationLineChartAudificationModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "LineChartAudificationModule", function () {
      return LineChartAudificationModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _line_chart_audification_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./line-chart-audification.component */
    "./src/components/line-chart-audification/line-chart-audification.component.ts");
    /* harmony import */


    var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
    /*! @angular/common */
    "./node_modules/@angular/common/__ivy_ngcc__/fesm2015/common.js");
    /* harmony import */


    var _screen_reader_screen_reader_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
    /*! ../screen-reader/screen-reader.module */
    "./src/components/screen-reader/screen-reader.module.ts");

    var LineChartAudificationModule = function LineChartAudificationModule() {
      _classCallCheck2(this, LineChartAudificationModule);

      this.A11yComponent = _line_chart_audification_component__WEBPACK_IMPORTED_MODULE_1__["LineChartAudificationComponent"];
    };

    LineChartAudificationModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
      type: LineChartAudificationModule
    });
    LineChartAudificationModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
      factory: function LineChartAudificationModule_Factory(t) {
        return new (t || LineChartAudificationModule)();
      },
      imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _screen_reader_screen_reader_module__WEBPACK_IMPORTED_MODULE_3__["ScreenReaderModule"]]]
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](LineChartAudificationModule, {
        declarations: [_line_chart_audification_component__WEBPACK_IMPORTED_MODULE_1__["LineChartAudificationComponent"]],
        imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _screen_reader_screen_reader_module__WEBPACK_IMPORTED_MODULE_3__["ScreenReaderModule"]],
        exports: [_line_chart_audification_component__WEBPACK_IMPORTED_MODULE_1__["LineChartAudificationComponent"]]
      });
    })();

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LineChartAudificationModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
          declarations: [_line_chart_audification_component__WEBPACK_IMPORTED_MODULE_1__["LineChartAudificationComponent"]],
          imports: [_angular_common__WEBPACK_IMPORTED_MODULE_2__["CommonModule"], _screen_reader_screen_reader_module__WEBPACK_IMPORTED_MODULE_3__["ScreenReaderModule"]],
          exports: [_line_chart_audification_component__WEBPACK_IMPORTED_MODULE_1__["LineChartAudificationComponent"]]
        }]
      }], null, null);
    })();
    /***/

  },

  /***/
  "./src/components/screen-reader/screen-reader.component.ts":
  /*!*****************************************************************!*\
    !*** ./src/components/screen-reader/screen-reader.component.ts ***!
    \*****************************************************************/

  /*! exports provided: ScreenReaderComponent */

  /***/
  function srcComponentsScreenReaderScreenReaderComponentTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ScreenReaderComponent", function () {
      return ScreenReaderComponent;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");

    var ScreenReaderComponent = /*#__PURE__*/function () {
      function ScreenReaderComponent() {
        _classCallCheck2(this, ScreenReaderComponent);

        this.repetitionDelay = 500;
        this.liveText = null;
        this.readOutTimeoutId = null;
      }

      _createClass2(ScreenReaderComponent, [{
        key: "readOut",
        value: function readOut(text) {
          var _this257 = this;

          if (this.readOutTimeoutId !== null) {
            window.clearTimeout(this.readOutTimeoutId);
            this.readOutTimeoutId = null;
          }

          var repetitive = this.liveText === text;

          if (repetitive) {
            this.liveText = null;
            this.readOutTimeoutId = window.setTimeout(function () {
              _this257.readOutTimeoutId = null;

              _this257.readOut(text);
            }, this.repetitionDelay);
          } else {
            this.liveText = text;
          }

          return repetitive ? this.repetitionDelay : 0;
        }
      }]);

      return ScreenReaderComponent;
    }();

    ScreenReaderComponent.ɵfac = function ScreenReaderComponent_Factory(t) {
      return new (t || ScreenReaderComponent)();
    };

    ScreenReaderComponent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
      type: ScreenReaderComponent,
      selectors: [["app-screen-reader"]],
      inputs: {
        repetitionDelay: "repetitionDelay"
      },
      decls: 1,
      vars: 1,
      consts: [["aria-live", "assertive", 1, "live-text", 3, "innerText"]],
      template: function ScreenReaderComponent_Template(rf, ctx) {
        if (rf & 1) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 0);
        }

        if (rf & 2) {
          _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("innerText", ctx.liveText);
        }
      },
      styles: ["@charset \"UTF-8\";\n[_nghost-%COMP%]   .live-text[_ngcontent-%COMP%] {\n  color: #4285f4;\n  font-weight: 500;\n}\n[_nghost-%COMP%]   .live-text[_ngcontent-%COMP%]:before {\n  content: \"\uD83D\uDD0A \";\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL3NjcmVlbi1yZWFkZXIvc2NyZWVuLXJlYWRlci5jb21wb25lbnQuc2NzcyIsIi9ob21lL3J1bm5lci93b3JrL2d1aWRlLWRvZ2UvZ3VpZGUtZG9nZS9zcmMvY29tcG9uZW50cy9zY3JlZW4tcmVhZGVyL3NjcmVlbi1yZWFkZXIuY29tcG9uZW50LnNjc3MiLCIvaG9tZS9ydW5uZXIvd29yay9ndWlkZS1kb2dlL2d1aWRlLWRvZ2Uvc3JjL3V0aWxzL2NvbnN0YW50cy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQ0dkO0VBQ0UsY0NEYztFREVkLGdCQUFBO0FEREo7QUNHSTtFQUNFLGNBQUE7QURETiIsImZpbGUiOiJzcmMvY29tcG9uZW50cy9zY3JlZW4tcmVhZGVyL3NjcmVlbi1yZWFkZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG46aG9zdCAubGl2ZS10ZXh0IHtcbiAgY29sb3I6ICM0Mjg1ZjQ7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG59XG46aG9zdCAubGl2ZS10ZXh0OmJlZm9yZSB7XG4gIGNvbnRlbnQ6IFwi8J+UiiBcIjtcbn0iLCJAaW1wb3J0IFwiLi4vLi4vdXRpbHMvY29uc3RhbnRzXCI7XG5cbjpob3N0IHtcbiAgLmxpdmUtdGV4dCB7XG4gICAgY29sb3I6ICRjb2xvci1oaWdobGlnaHQ7XG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcblxuICAgICY6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6ICfwn5SKICc7XG4gICAgfVxuICB9XG59XG4iLCIkY29sb3ItYmFja2dyb3VuZDogcmdiKDI0OCwgMjQ5LCAyNTApO1xuJGNvbG9yLWJvcmRlcjogcmdiKDIxOCwgMjIwLCAyMjQpO1xuJGNvbG9yLWZvbnQ6IHJnYigzNCwgMzQsIDM0KTtcbiRjb2xvci1oaWdobGlnaHQ6IHJnYig2NiwgMTMzLCAyNDQpO1xuJGNvbG9yLXBvc2l0aXZlOiByZ2IoMTUsIDE1NywgODgpO1xuJGNvbG9yLW5lZ2F0aXZlOiByZ2IoMjE5LCA2OCwgNTUpO1xuXG4kZm9udC1zaXplLWxhcmdlOiAyNHB4O1xuJGZvbnQtc2l6ZS1tZWRpdW06IDE2cHg7XG4kZm9udC1zaXplLXNtYWxsOiAxMnB4O1xuXG5AbWl4aW4gY2FyZC1zaGFkb3cge1xuICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMikgMCAxcHggM3B4IDAsIHJnYmEoMCwgMCwgMCwgMC4xNCkgMCAxcHggMXB4IDAsIHJnYmEoMCwgMCwgMCwgMC4xMikgMCAycHggMXB4IC0xcHg7XG59XG4iXX0= */"]
    });

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ScreenReaderComponent, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"],
        args: [{
          selector: 'app-screen-reader',
          templateUrl: './screen-reader.component.html',
          styleUrls: ['./screen-reader.component.scss']
        }]
      }], null, {
        repetitionDelay: [{
          type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"]
        }]
      });
    })();
    /***/

  },

  /***/
  "./src/components/screen-reader/screen-reader.module.ts":
  /*!**************************************************************!*\
    !*** ./src/components/screen-reader/screen-reader.module.ts ***!
    \**************************************************************/

  /*! exports provided: ScreenReaderModule */

  /***/
  function srcComponentsScreenReaderScreenReaderModuleTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ScreenReaderModule", function () {
      return ScreenReaderModule;
    });
    /* harmony import */


    var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! @angular/core */
    "./node_modules/@angular/core/__ivy_ngcc__/fesm2015/core.js");
    /* harmony import */


    var _screen_reader_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! ./screen-reader.component */
    "./src/components/screen-reader/screen-reader.component.ts");

    var ScreenReaderModule = function ScreenReaderModule() {
      _classCallCheck2(this, ScreenReaderModule);
    };

    ScreenReaderModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
      type: ScreenReaderModule
    });
    ScreenReaderModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
      factory: function ScreenReaderModule_Factory(t) {
        return new (t || ScreenReaderModule)();
      }
    });

    (function () {
      (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](ScreenReaderModule, {
        declarations: [_screen_reader_component__WEBPACK_IMPORTED_MODULE_1__["ScreenReaderComponent"]],
        exports: [_screen_reader_component__WEBPACK_IMPORTED_MODULE_1__["ScreenReaderComponent"]]
      });
    })();

    (function () {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](ScreenReaderModule, [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"],
        args: [{
          declarations: [_screen_reader_component__WEBPACK_IMPORTED_MODULE_1__["ScreenReaderComponent"]],
          exports: [_screen_reader_component__WEBPACK_IMPORTED_MODULE_1__["ScreenReaderComponent"]]
        }]
      }], null, null);
    })();
    /***/

  },

  /***/
  "./src/models/melody/melody.model.ts":
  /*!*******************************************!*\
    !*** ./src/models/melody/melody.model.ts ***!
    \*******************************************/

  /*! exports provided: Melody */

  /***/
  function srcModelsMelodyMelodyModelTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "Melody", function () {
      return Melody;
    });
    /* harmony import */


    var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
    /*! tslib */
    "./node_modules/tslib/tslib.es6.js");
    /* harmony import */


    var tone__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
    /*! tone */
    "./node_modules/tone/build/esm/index.js");

    var Melody = /*#__PURE__*/function () {
      function Melody(values, frequencyRange, noteDuration, onSeek) {
        _classCallCheck2(this, Melody);

        this.values = values;
        this.frequencyRange = frequencyRange;
        this.noteDuration = noteDuration;
        this.onSeek = onSeek;
        this.currentDatumIndex = 0;
        this.synth = new tone__WEBPACK_IMPORTED_MODULE_1__["Synth"]().toDestination();
        this.inclusive = true;
        this.reversed = false;
        this.timeoutId = null;
        var minValue = Math.min.apply(Math, _toConsumableArray(values));
        var maxValue = Math.max.apply(Math, _toConsumableArray(values));

        var _this$frequencyRange = _slicedToArray2(this.frequencyRange, 2),
            minFrequency = _this$frequencyRange[0],
            maxFrequency = _this$frequencyRange[1];

        var minKeyNumber = Melody.getKeyNumber(minFrequency);
        var maxKeyNumber = Melody.getKeyNumber(maxFrequency);
        this.frequencies = values.map(function (value) {
          var keyNumber = (value - minValue) / (maxValue - minValue) * (maxKeyNumber - minKeyNumber) + minKeyNumber;
          return Melody.getFrequency(keyNumber);
        });
      }

      _createClass2(Melody, [{
        key: "resume",
        value: function resume(reversed) {
          return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__awaiter"])(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee62() {
            return regeneratorRuntime.wrap(function _callee62$(_context72) {
              while (1) {
                switch (_context72.prev = _context72.next) {
                  case 0:
                    if (!(tone__WEBPACK_IMPORTED_MODULE_1__["getContext"]().state === 'suspended')) {
                      _context72.next = 3;
                      break;
                    }

                    _context72.next = 3;
                    return tone__WEBPACK_IMPORTED_MODULE_1__["start"]();

                  case 3:
                    if (!this.isPlaying) {
                      this.reversed = reversed;
                      this.playNextNote();
                    }

                  case 4:
                  case "end":
                    return _context72.stop();
                }
              }
            }, _callee62, this);
          }));
        }
      }, {
        key: "pause",
        value: function pause() {
          if (this.timeoutId !== null) {
            window.clearInterval(this.timeoutId);
            this.timeoutId = null;
          }
        }
      }, {
        key: "seekTo",
        value: function seekTo(datumIndex) {
          var inclusive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

          var _a;

          this.currentDatumIndex = datumIndex;
          this.inclusive = this.isEnded || inclusive;
          (_a = this.onSeek) === null || _a === void 0 ? void 0 : _a.call(this, this.currentDatumIndex);
        }
      }, {
        key: "dispose",
        value: function dispose() {
          this.pause();
          this.synth.dispose();
        }
      }, {
        key: "playNextNote",
        value: function playNextNote() {
          var _this258 = this;

          this.seekTo(this.nextDatumIndex);
          var frequency = this.frequencies[this.currentDatumIndex];
          this.synth.triggerAttackRelease(frequency, this.noteDuration / 1000);

          if (!this.isEnded) {
            this.timeoutId = window.setTimeout(function () {
              _this258.timeoutId = null;

              _this258.playNextNote();
            }, this.noteDuration);
          }
        }
      }, {
        key: "reverseDatumIndex",
        value: function reverseDatumIndex(index) {
          return this.values.length - 1 - index;
        }
      }, {
        key: "duration",
        get: function get() {
          return this.noteDuration * this.values.length;
        }
      }, {
        key: "isPlaying",
        get: function get() {
          return this.timeoutId !== null;
        }
      }, {
        key: "isEnded",
        get: function get() {
          return this.reversed && this.currentDatumIndex === 0 || !this.reversed && this.currentDatumIndex === this.values.length - 1;
        }
      }, {
        key: "nextDatumIndex",
        get: function get() {
          if (this.isEnded) {
            return this.reverseDatumIndex(this.currentDatumIndex);
          }

          var offset = this.inclusive ? 0 : this.reversed ? -1 : +1;
          return this.currentDatumIndex + offset;
        }
      }], [{
        key: "getKeyNumber",
        value: function getKeyNumber(frequency) {
          return Math.log2(frequency / 440) * 12 + 49;
        }
      }, {
        key: "getFrequency",
        value: function getFrequency(keyNumber) {
          return Math.pow(2, (keyNumber - 49) / 12) * 440;
        }
      }]);

      return Melody;
    }();
    /***/

  },

  /***/
  "./src/utils/comparators.ts":
  /*!**********************************!*\
    !*** ./src/utils/comparators.ts ***!
    \**********************************/

  /*! exports provided: ascendingNumber, descendingNumber, ascendingDate, descendingDate */

  /***/
  function srcUtilsComparatorsTs(module, __webpack_exports__, __webpack_require__) {
    "use strict";

    __webpack_require__.r(__webpack_exports__);
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ascendingNumber", function () {
      return ascendingNumber;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "descendingNumber", function () {
      return descendingNumber;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "ascendingDate", function () {
      return ascendingDate;
    });
    /* harmony export (binding) */


    __webpack_require__.d(__webpack_exports__, "descendingDate", function () {
      return descendingDate;
    });

    function ascendingNumber(a, b) {
      return a - b;
    }

    function descendingNumber(a, b) {
      return -ascendingNumber(a, b);
    }

    function ascendingDate(a, b) {
      return ascendingNumber(a.getTime(), b.getTime());
    }

    function descendingDate(a, b) {
      return -ascendingDate(a, b);
    }
    /***/

  }
}]);
//# sourceMappingURL=components-line-chart-audification-line-chart-audification-module-es5.js.map